{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:////home/simon/git/Viewers/platform/core/src/log.js","webpack:////home/simon/git/Viewers/platform/core/src/utils/sopClassDictionary.js","webpack:////home/simon/git/Viewers/platform/ui/src/components/layoutButton/LayoutChooser.js","webpack:////home/simon/git/Viewers/platform/ui/src/viewer/ToolbarButton.js","webpack:////home/simon/git/Viewers/platform/ui/src/components/layoutButton/LayoutButton.js","webpack:////home/simon/git/Viewers/platform/ui/src/components/tableList/TableListItem.js","webpack:////home/simon/git/Viewers/platform/ui/src/components/measurementTable/MeasurementTableItem.js","webpack:////home/simon/git/Viewers/platform/ui/src/ScrollableArea/ScrollableArea.js","webpack:////home/simon/git/Viewers/platform/ui/src/utils/throttled.js","webpack:////home/simon/git/Viewers/platform/ui/src/utils/getScrollbarSize.js","webpack:////home/simon/git/Viewers/platform/ui/src/components/tableList/TableList.js","webpack:////home/simon/git/Viewers/platform/ui/src/components/measurementTable/MeasurementTable.js","webpack:////home/simon/git/Viewers/platform/ui/src/components/content/aboutContent/AboutContent.js","webpack:////home/simon/git/Viewers/platform/ui/src/components/tabComponents/TabComponents.js","webpack:////home/simon/git/Viewers/platform/ui/src/components/tabComponents/TabFooter.js","webpack:////home/simon/git/Viewers/platform/ui/src/components/customForm/HotkeyField.js","webpack:////home/simon/git/Viewers/platform/ui/src/components/languageSwitcher/LanguageSwitcher.js","webpack:////home/simon/git/Viewers/platform/ui/src/components/checkbox/checkbox.js","webpack:////home/simon/git/Viewers/platform/ui/src/components/cineDialog/CineDialog.js","webpack:////home/simon/git/Viewers/platform/ui/src/components/content/viewportDownloadForm/ViewportDownloadForm.js","webpack:////home/simon/git/Viewers/platform/ui/src/components/quickSwitch/StudiesItem.js","webpack:////home/simon/git/Viewers/platform/ui/src/components/quickSwitch/StudiesList.js","webpack:////home/simon/git/Viewers/platform/ui/src/components/quickSwitch/SeriesList.js","webpack:////home/simon/git/Viewers/platform/ui/src/components/quickSwitch/QuickSwitch.js","webpack:////home/simon/git/Viewers/platform/ui/src/components/roundedButtonGroup/RoundedButtonGroup.js","webpack:////home/simon/git/Viewers/platform/ui/src/components/selectTree/InputRadio.js","webpack:////home/simon/git/Viewers/platform/ui/src/components/selectTree/SelectTreeBreadcrumb.js","webpack:////home/simon/git/Viewers/platform/ui/src/components/selectTree/SelectTree.js","webpack:////home/simon/git/Viewers/platform/ui/src/components/simpleDialog/SimpleDialog.js","webpack:////home/simon/git/Viewers/platform/ui/src/components/ohifModal/OHIFModal.js","webpack:////home/simon/git/Viewers/platform/ui/src/components/contextMenu/ContextMenu.js","webpack:////home/simon/git/Viewers/platform/ui/src/components/errorPage/ErrorPage.js","webpack:////home/simon/git/Viewers/platform/ui/src/components/errorPage/index.js","webpack:////home/simon/git/Viewers/platform/ui/src/components/studyList/CustomDateRangePicker.js","webpack:////home/simon/git/Viewers/platform/ui/src/components/studyList/TableSearchFilter.js","webpack:////home/simon/git/Viewers/platform/ui/src/components/studyList/StudyListLoadingText.js","webpack:////home/simon/git/Viewers/platform/ui/src/components/studyList/StudyList.js","webpack:////home/simon/git/Viewers/platform/ui/src/components/studyList/TablePagination.js","webpack:////home/simon/git/Viewers/platform/ui/src/components/studyList/PageToolbar.js","webpack:////home/simon/git/Viewers/platform/ui/src/viewer/ExpandableToolMenu.js","webpack:////home/simon/git/Viewers/platform/ui/src/components/toolbarSection/ToolbarSection.js","webpack:////home/simon/git/Viewers/platform/ui/src/components/errorBoundary/ErrorBoundary.js","webpack:////home/simon/git/Viewers/platform/ui/src/hooks/useMedia.js","webpack:////home/simon/git/Viewers/platform/ui/src/hooks/useDebounce.js","webpack:////home/simon/git/Viewers/platform/ui/src/elements/form/OldSelect.js","webpack:////home/simon/git/Viewers/platform/ui/src/elements/form/Select.js","webpack:////home/simon/git/Viewers/platform/ui/src/elements/form/Label.js","webpack:////home/simon/git/Viewers/platform/ui/src/elements/form/Range.js","webpack:////home/simon/git/Viewers/platform/ui/src/elements/form/TextArea.js","webpack:////home/simon/git/Viewers/platform/ui/src/elements/form/TextInput.js","webpack:////home/simon/git/Viewers/platform/ui/src/elements/form/DropdownMenu.js","webpack:////home/simon/git/Viewers/platform/ui/src/viewer/PlayClipButton.js","webpack:////home/simon/git/Viewers/platform/ui/src/viewer/SimpleToolbarButton.js","webpack:////home/simon/git/Viewers/platform/ui/src/viewer/Toolbar.js","webpack:////home/simon/git/Viewers/platform/ui/src/utils/viewerbaseDragDropContext.js","webpack:////home/simon/git/Viewers/platform/ui/src/utils/asyncComponent/asyncComponent.js","webpack:////home/simon/git/Viewers/platform/ui/src/index.js","webpack:////home/simon/git/Viewers/platform/core/src/DICOMWeb/index.js","webpack:////home/simon/git/Viewers/platform/core/src/DICOMWeb/getAttribute.js","webpack:////home/simon/git/Viewers/platform/core/src/DICOMWeb/getAuthorizationHeader.js","webpack:////home/simon/git/Viewers/platform/core/src/DICOMWeb/getModalities.js","webpack:////home/simon/git/Viewers/platform/core/src/DICOMWeb/getName.js","webpack:////home/simon/git/Viewers/platform/core/src/DICOMWeb/getNumber.js","webpack:////home/simon/git/Viewers/platform/core/src/DICOMWeb/getString.js","webpack:////home/simon/git/Viewers/platform/core/src/cornerstone.js","webpack:////home/simon/git/Viewers/platform/core/src/lib/cornerstone.js","webpack:////home/simon/git/Viewers/platform/core/src/hanging-protocols/lib/validate.js","webpack:////home/simon/git/Viewers/platform/core/src/hanging-protocols/customAttributes.js","webpack:////home/simon/git/Viewers/platform/core/src/hanging-protocols/HPMatcher.js","webpack:////home/simon/git/Viewers/platform/core/src/hanging-protocols/customViewportSettings.js","webpack:////home/simon/git/Viewers/platform/core/src/hanging-protocols/lib/comparators.js","webpack:////home/simon/git/Viewers/platform/core/src/hanging-protocols/classes/Rule.js","webpack:////home/simon/git/Viewers/platform/core/src/hanging-protocols/classes/rules.js","webpack:////home/simon/git/Viewers/platform/core/src/hanging-protocols/lib/removeFromArray.js","webpack:////home/simon/git/Viewers/platform/core/src/hanging-protocols/classes/ViewportStructure.js","webpack:////home/simon/git/Viewers/platform/core/src/hanging-protocols/classes/Viewport.js","webpack:////home/simon/git/Viewers/platform/core/src/hanging-protocols/classes/Stage.js","webpack:////home/simon/git/Viewers/platform/core/src/hanging-protocols/classes/Protocol.js","webpack:////home/simon/git/Viewers/platform/core/src/hanging-protocols/ProtocolEngine.js","webpack:////home/simon/git/Viewers/platform/core/src/hanging-protocols/lib/sortByScore.js","webpack:////home/simon/git/Viewers/platform/core/src/hanging-protocols/protocolStore/classes/ProtocolStore.js","webpack:////home/simon/git/Viewers/platform/core/src/hanging-protocols/protocolStore/defaultProtocol.js","webpack:////home/simon/git/Viewers/platform/core/src/hanging-protocols/index.js","webpack:////home/simon/git/Viewers/platform/core/src/hanging-protocols/protocolStore/classes/ProtocolStrategy.js","webpack:////home/simon/git/Viewers/platform/core/src/header.js","webpack:////home/simon/git/Viewers/platform/core/src/object.js","webpack:////home/simon/git/Viewers/platform/core/src/string.js","webpack:////home/simon/git/Viewers/platform/core/src/ui/index.js","webpack:////home/simon/git/Viewers/platform/core/src/ui/getScrollbarSize.js","webpack:////home/simon/git/Viewers/platform/core/src/ui/getOffset.js","webpack:////home/simon/git/Viewers/platform/core/src/ui/isCharacterKeyPress.js","webpack:////home/simon/git/Viewers/platform/core/src/ui/handleError.js","webpack:////home/simon/git/Viewers/platform/core/src/index.js","webpack:////home/simon/git/Viewers/platform/ui/src/elements/Icon/getIcon.js","webpack:////home/simon/git/Viewers/platform/ui/src/elements/Icon/Icon.js","webpack:////home/simon/git/Viewers/platform/ui/src/elements/Icon/index.js","webpack:////home/simon/git/Viewers/platform/ui/src/contextProviders/ModalProvider.js","webpack:////home/simon/git/Viewers/platform/ui/src/components/snackbar/SnackbarItem.js","webpack:////home/simon/git/Viewers/platform/ui/src/components/snackbar/SnackbarContainer.js","webpack:////home/simon/git/Viewers/platform/ui/src/components/snackbar/SnackbarTypes.js","webpack:////home/simon/git/Viewers/platform/ui/src/contextProviders/SnackbarProvider.js","webpack:////home/simon/git/Viewers/platform/ui/src/contextProviders/LanguageProvider.js","webpack:////home/simon/git/Viewers/platform/ui/src/contextProviders/DialogProvider.js","webpack:////home/simon/git/Viewers/platform/ui/src/contextProviders/LoggerProvider.js","webpack:////home/simon/git/Viewers/platform/ui/src/contextProviders/index.js","webpack:////home/simon/git/Viewers/platform/core/src/utils/guid.js","webpack:////home/simon/git/Viewers/platform/core/src/errorHandler.js","webpack:////home/simon/git/Viewers/platform/core/src/classes/OHIFError.js","webpack:////home/simon/git/Viewers/platform/core/src/utils/xhrRetryRequestHook.js","webpack:////home/simon/git/Viewers/platform/core/src/user.js","webpack:////home/simon/git/Viewers/platform/core/src/classes/metadata/Metadata.js","webpack:////home/simon/git/Viewers/extensions/cornerstone/src/state.js","webpack:////home/simon/git/Viewers/platform/core/src/classes/metadata/InstanceMetadata.js","webpack:////home/simon/git/Viewers/platform/core/src/classes/metadata/SeriesMetadata.js","webpack:////home/simon/git/Viewers/platform/ui/src/components/overlayTrigger/Fade.js","webpack:////home/simon/git/Viewers/platform/ui/src/components/overlayTrigger/Overlay.js","webpack:////home/simon/git/Viewers/platform/ui/src/components/overlayTrigger/createChainedFunction.js","webpack:////home/simon/git/Viewers/platform/ui/src/components/overlayTrigger/OverlayTrigger.js","webpack:////home/simon/git/Viewers/platform/ui/src/components/overlayTrigger/index.js","webpack:///./context/AppContext.js","webpack:////home/simon/git/Viewers/platform/ui/src/components/tooltip/Tooltip.js","webpack:////home/simon/git/Viewers/platform/ui/src/components/tooltip/index.js","webpack:////home/simon/git/Viewers/platform/core/src/utils/metadataProvider/fetchPaletteColorLookupTableData.js","webpack:////home/simon/git/Viewers/platform/core/src/utils/metadataProvider/unpackOverlay.js","webpack:////home/simon/git/Viewers/platform/core/src/utils/metadataProvider/fetchOverlayData.js","webpack:////home/simon/git/Viewers/platform/core/src/utils/metadataProvider/validNumber.js","webpack:////home/simon/git/Viewers/platform/core/src/classes/MetadataProvider.js","webpack:////home/simon/git/Viewers/platform/core/src/utils/metadataProvider/getPixelSpacingInformation.js","webpack:////home/simon/git/Viewers/platform/core/src/utils/hotkeys/pausePlugin.js","webpack:////home/simon/git/Viewers/platform/core/src/utils/hotkeys/recordPlugin.js","webpack:////home/simon/git/Viewers/platform/core/src/utils/hotkeys/index.js","webpack:////home/simon/git/Viewers/platform/core/src/enums.js","webpack:////home/simon/git/Viewers/platform/core/src/utils/studyMetadataManager.js","webpack:////home/simon/git/Viewers/platform/core/src/classes/metadata/OHIFInstanceMetadata.js","webpack:////home/simon/git/Viewers/platform/core/src/classes/metadata/OHIFSeriesMetadata.js","webpack:////home/simon/git/Viewers/platform/core/src/classes/metadata/OHIFStudyMetadata.js","webpack:////home/simon/git/Viewers/platform/core/src/classes/metadata/index.js","webpack:////home/simon/git/Viewers/platform/core/src/utils/isDisplaySetReconstructable.js","webpack:////home/simon/git/Viewers/platform/core/src/classes/metadata/StudyMetadata.js","webpack:////home/simon/git/Viewers/platform/core/src/utils/naturalizeSOPClassUID.js","webpack:////home/simon/git/Viewers/platform/core/src/classes/ImageSet.js","webpack:////home/simon/git/Viewers/platform/core/src/utils/getImageId.js","webpack:////home/simon/git/Viewers/platform/core/src/classes/StudyMetadataSource.js","webpack:////home/simon/git/Viewers/platform/i18n/src/config.js","webpack:////home/simon/git/Viewers/platform/i18n/src/debugger.js","webpack:////home/simon/git/Viewers/platform/i18n/src/locales/index.js","webpack:////home/simon/git/Viewers/platform/i18n/src/locales/de/index.js","webpack:////home/simon/git/Viewers/platform/i18n/src/locales/en-US/index.js","webpack:////home/simon/git/Viewers/platform/i18n/src/locales/es/index.js","webpack:////home/simon/git/Viewers/platform/i18n/src/locales/fr/index.js","webpack:////home/simon/git/Viewers/platform/i18n/src/locales/ja-JP/index.js","webpack:////home/simon/git/Viewers/platform/i18n/src/locales/nl/index.js","webpack:////home/simon/git/Viewers/platform/i18n/src/locales/pt-BR/index.js","webpack:////home/simon/git/Viewers/platform/i18n/src/locales/ru/index.js","webpack:////home/simon/git/Viewers/platform/i18n/src/locales/vi/index.js","webpack:////home/simon/git/Viewers/platform/i18n/src/locales/zh/index.js","webpack:////home/simon/git/Viewers/platform/i18n/src/getAvailableLanguagesInfo.js","webpack:////home/simon/git/Viewers/platform/i18n/src/index.js","webpack:////home/simon/git/Viewers/platform/core/src/studies/retrieveStudyMetadata.js","webpack:////home/simon/git/Viewers/platform/core/src/utils/str2ab.js","webpack:////home/simon/git/Viewers/platform/core/src/utils/objectPath.js","webpack:////home/simon/git/Viewers/platform/core/src/utils/absoluteUrl.js","webpack:////home/simon/git/Viewers/platform/core/src/utils/addServers.js","webpack:////home/simon/git/Viewers/platform/core/src/utils/dicomLoaderService.js","webpack:////home/simon/git/Viewers/platform/core/src/utils/b64toBlob.js","webpack:////home/simon/git/Viewers/platform/core/src/utils/loadAndCacheDerivedDisplaySets.js","webpack:////home/simon/git/Viewers/platform/core/src/utils/urlUtil.js","webpack:////home/simon/git/Viewers/platform/core/src/utils/makeDeferred.js","webpack:////home/simon/git/Viewers/platform/core/src/utils/Queue.js","webpack:////home/simon/git/Viewers/platform/core/src/utils/hierarchicalListUtils.js","webpack:////home/simon/git/Viewers/platform/core/src/utils/progressTrackingUtils.js","webpack:////home/simon/git/Viewers/platform/core/src/utils/index.js","webpack:////home/simon/git/Viewers/platform/core/src/utils/writeScript.js","webpack:////home/simon/git/Viewers/platform/core/src/utils/makeCancelable.js","webpack:////home/simon/git/Viewers/platform/core/src/utils/isDicomUid.js","webpack:////home/simon/git/Viewers/platform/core/src/utils/resolveObjectPath.js","webpack:////home/simon/git/Viewers/platform/core/src/classes/StudyPrefetcher.js","webpack:////home/simon/git/Viewers/platform/core/src/classes/StudyLoadingListener.js","webpack:////home/simon/git/Viewers/platform/core/src/classes/PubSub.js","webpack:////home/simon/git/Viewers/platform/core/src/classes/LogManager.js","webpack:////home/simon/git/Viewers/platform/core/src/classes/OHIFStudyMetadataSource.js","webpack:////home/simon/git/Viewers/platform/core/src/classes/index.js","webpack:////home/simon/git/Viewers/platform/core/src/utils/isImage.js","webpack:////home/simon/git/Viewers/platform/core/src/utils/isLowPriorityModality.js","webpack:////home/simon/git/Viewers/platform/core/src/utils/sortBy.js","webpack:////home/simon/git/Viewers/platform/core/src/utils/StackManager.js","webpack:////home/simon/git/Viewers/platform/core/src/classes/TypeSafeCollection.js","webpack:////home/simon/git/Viewers/platform/core/src/measurements/tools/arrowAnnotate.js","webpack:////home/simon/git/Viewers/platform/core/src/measurements/tools/bidirectional.js","webpack:////home/simon/git/Viewers/platform/core/src/measurements/tools/ellipticalRoi.js","webpack:////home/simon/git/Viewers/platform/core/src/measurements/tools/circleRoi.js","webpack:////home/simon/git/Viewers/platform/core/src/measurements/tools/freehandMouse.js","webpack:////home/simon/git/Viewers/platform/core/src/measurements/tools/length.js","webpack:////home/simon/git/Viewers/platform/core/src/measurements/tools/nonTarget.js","webpack:////home/simon/git/Viewers/platform/core/src/measurements/tools/rectangleRoi.js","webpack:////home/simon/git/Viewers/platform/core/src/measurements/tools/angle.js","webpack:////home/simon/git/Viewers/platform/core/src/measurements/tools/targetCR.js","webpack:////home/simon/git/Viewers/platform/core/src/measurements/tools/targetNE.js","webpack:////home/simon/git/Viewers/platform/core/src/measurements/tools/targetUN.js","webpack:////home/simon/git/Viewers/platform/core/src/measurements/tools/dicomSRDisplayTool.js","webpack:////home/simon/git/Viewers/platform/core/src/measurements/toolGroups/allTools.js","webpack:////home/simon/git/Viewers/platform/core/src/measurements/configuration.js","webpack:////home/simon/git/Viewers/platform/core/src/measurements/dataExchange.js","webpack:////home/simon/git/Viewers/platform/core/src/measurements/classes/TimepointApi.js","webpack:////home/simon/git/Viewers/platform/core/src/measurements/lib/getLabel.js","webpack:////home/simon/git/Viewers/platform/core/src/measurements/lib/getDescription.js","webpack:////home/simon/git/Viewers/platform/core/src/measurements/lib/getImageIdForImagePath.js","webpack:////home/simon/git/Viewers/platform/core/src/measurements/classes/MeasurementApi.js","webpack:////home/simon/git/Viewers/platform/core/src/measurements/conformance/criteria/BaseCriterion.js","webpack:////home/simon/git/Viewers/platform/core/src/measurements/conformance/criteria/Location.js","webpack:////home/simon/git/Viewers/platform/core/src/measurements/conformance/criteria/MaxTargetsPerOrgan.js","webpack:////home/simon/git/Viewers/platform/core/src/measurements/conformance/criteria/MaxTargets.js","webpack:////home/simon/git/Viewers/platform/core/src/measurements/conformance/criteria/MeasurementsLength.js","webpack:////home/simon/git/Viewers/platform/core/src/measurements/conformance/criteria/Modality.js","webpack:////home/simon/git/Viewers/platform/core/src/measurements/conformance/criteria/NonTargetResponse.js","webpack:////home/simon/git/Viewers/platform/core/src/measurements/conformance/criteria/TargetType.js","webpack:////home/simon/git/Viewers/platform/core/src/measurements/conformance/CriteriaEvaluator.js","webpack:////home/simon/git/Viewers/platform/core/src/measurements/conformance/evaluations/index.js","webpack:////home/simon/git/Viewers/platform/core/src/measurements/conformance/ConformanceCriteria.js","webpack:////home/simon/git/Viewers/platform/core/src/measurements/lib/getImageAttributes.js","webpack:////home/simon/git/Viewers/platform/core/src/measurements/lib/refreshCornerstoneViewports.js","webpack:////home/simon/git/Viewers/platform/core/src/measurements/measurementHandlers/handleSingleMeasurementAdded.js","webpack:////home/simon/git/Viewers/platform/core/src/measurements/measurementHandlers/handleChildMeasurementAdded.js","webpack:////home/simon/git/Viewers/platform/core/src/measurements/measurementHandlers/handleSingleMeasurementModified.js","webpack:////home/simon/git/Viewers/platform/core/src/measurements/measurementHandlers/handleChildMeasurementModified.js","webpack:////home/simon/git/Viewers/platform/core/src/measurements/measurementHandlers/handleSingleMeasurementRemoved.js","webpack:////home/simon/git/Viewers/platform/core/src/measurements/measurementHandlers/handleChildMeasurementRemoved.js","webpack:////home/simon/git/Viewers/platform/core/src/measurements/measurementHandlers/index.js","webpack:////home/simon/git/Viewers/platform/core/src/measurements/toolGroups/targets.js","webpack:////home/simon/git/Viewers/platform/core/src/measurements/toolGroups/nonTargets.js","webpack:////home/simon/git/Viewers/platform/core/src/measurements/toolGroups/temp.js","webpack:////home/simon/git/Viewers/platform/core/src/measurements/ltTools.js","webpack:////home/simon/git/Viewers/platform/core/src/measurements/index.js","webpack:////home/simon/git/Viewers/platform/core/src/studies/services/qido/instances.js","webpack:////home/simon/git/Viewers/platform/core/src/studies/services/qido/studies.js","webpack:////home/simon/git/Viewers/platform/core/src/studies/services/index.js","webpack:////home/simon/git/Viewers/platform/core/src/studies/searchStudies.js","webpack:////home/simon/git/Viewers/platform/core/src/studies/index.js","webpack:////home/simon/git/Viewers/platform/core/src/studies/retrieveStudiesMetadata.js","webpack:////home/simon/git/Viewers/platform/core/src/studies/getStudyBoxData.js","webpack:////home/simon/git/Viewers/platform/core/src/utils/getWADORSImageId.js","webpack:////home/simon/git/Viewers/platform/core/src/studies/getSeriesInfo.js","webpack:////home/simon/git/Viewers/platform/core/src/studies/sortStudy.js","webpack:///./routes/routesUtil.js","webpack:////home/simon/git/Viewers/platform/core/src/studies/services/wado/getReferencedSeriesSequence.js","webpack:////home/simon/git/Viewers/platform/core/src/studies/services/wado/studyInstanceHelpers.js","webpack:////home/simon/git/Viewers/platform/core/src/studies/services/wado/retrieveMetadataLoader.js","webpack:////home/simon/git/Viewers/platform/core/src/studies/services/wado/retrieveMetadataLoaderSync.js","webpack:////home/simon/git/Viewers/platform/core/src/studies/services/wado/retrieveMetadataLoaderAsync.js","webpack:////home/simon/git/Viewers/platform/core/src/studies/services/wado/retrieveMetadata.js","webpack:////home/simon/git/Viewers/platform/ui/src/viewer/ViewportErrorIndicator.js","webpack:////home/simon/git/Viewers/platform/ui/src/viewer/ViewportLoadingIndicator.js","webpack:////home/simon/git/Viewers/platform/ui/src/components/studyBrowser/ImageThumbnail.js","webpack:////home/simon/git/Viewers/platform/ui/src/components/studyBrowser/Thumbnail.js","webpack:////home/simon/git/Viewers/platform/core/src/studies/services/qido/StaticWadoClient.js","webpack:///./store/layout/selectors.js","webpack:///./context/WhiteLabelingContext.js","webpack:////home/simon/git/Viewers/platform/core/src/classes/CommandsManager.js","webpack:////home/simon/git/Viewers/platform/core/src/classes/HotkeysManager.js","webpack:////home/simon/git/Viewers/platform/core/src/DICOMSR/SCOORD3D/enums.js","webpack:////home/simon/git/Viewers/platform/core/src/DICOMSR/SCOORD3D/utils/getSequenceAsArray.js","webpack:////home/simon/git/Viewers/platform/core/src/DICOMSR/SCOORD3D/utils/getLabelFromMeasuredValueSequence.js","webpack:////home/simon/git/Viewers/platform/core/src/DICOMSR/SCOORD3D/utils/getCoordsFromSCOORDOrSCOORD3D.js","webpack:////home/simon/git/Viewers/platform/core/src/DICOMSR/SCOORD3D/utils/processTID1410Measurement.js","webpack:////home/simon/git/Viewers/platform/core/src/DICOMSR/SCOORD3D/constants/scoordTypes.js","webpack:////home/simon/git/Viewers/platform/core/src/DICOMSR/SCOORD3D/utils/processNonGeometricallyDefinedMeasurement.js","webpack:////home/simon/git/Viewers/platform/core/src/DICOMSR/SCOORD3D/utils/processMeasurement.js","webpack:////home/simon/git/Viewers/platform/core/src/DICOMSR/SCOORD3D/utils/getMeasurements.js","webpack:////home/simon/git/Viewers/platform/core/src/DICOMSR/SCOORD3D/utils/getReferencedImagesList.js","webpack:////home/simon/git/Viewers/platform/core/src/DICOMSR/SCOORD3D/utils/isRehydratable.js","webpack:////home/simon/git/Viewers/platform/core/src/DICOMSR/SCOORD3D/constants/toolNames.js","webpack:////home/simon/git/Viewers/platform/core/src/DICOMSR/SCOORD3D/utils/getRenderableData.js","webpack:////home/simon/git/Viewers/platform/core/src/DICOMSR/SCOORD3D/utils/addMeasurement.js","webpack:////home/simon/git/Viewers/platform/core/src/DICOMSR/SCOORD3D/parseSCOORD3D.js","webpack:////home/simon/git/Viewers/platform/core/src/DICOMSR/utils/findInstanceMetadataBySopInstanceUid.js","webpack:////home/simon/git/Viewers/platform/core/src/DICOMSR/parseDicomStructuredReport.js","webpack:////home/simon/git/Viewers/platform/core/src/DICOMSR/utils/isToolSupported.js","webpack:////home/simon/git/Viewers/platform/core/src/DICOMSR/parseMeasurementsData.js","webpack:////home/simon/git/Viewers/platform/core/src/DICOMSR/utils/getAllDisplaySets.js","webpack:////home/simon/git/Viewers/platform/core/src/DICOMSR/handleStructuredReport.js","webpack:////home/simon/git/Viewers/platform/core/src/DICOMSR/utils/findMostRecentStructuredReport.js","webpack:////home/simon/git/Viewers/platform/core/src/DICOMSR/dataExchange.js","webpack:////home/simon/git/Viewers/platform/core/src/DICOMSR/index.js","webpack:////home/simon/git/Viewers/platform/core/src/redux/constants/ActionTypes.js","webpack:////home/simon/git/Viewers/platform/core/src/redux/actions.js","webpack:////home/simon/git/Viewers/platform/core/src/redux/reducers/extensions.js","webpack:////home/simon/git/Viewers/platform/core/src/redux/reducers/preferences.js","webpack:////home/simon/git/Viewers/platform/core/src/redux/reducers/servers.js","webpack:////home/simon/git/Viewers/platform/core/src/redux/reducers/studies.js","webpack:////home/simon/git/Viewers/platform/core/src/redux/reducers/timepointManager.js","webpack:////home/simon/git/Viewers/platform/core/src/redux/reducers/viewports.js","webpack:////home/simon/git/Viewers/platform/core/src/redux/reducers/index.js","webpack:////home/simon/git/Viewers/platform/core/src/redux/localStorage.js","webpack:////home/simon/git/Viewers/platform/core/src/redux/sessionStorage.js","webpack:////home/simon/git/Viewers/platform/core/src/redux/index.js","webpack:////home/simon/git/Viewers/extensions/cornerstone/src/initCornerstoneTools.js","webpack:////home/simon/git/Viewers/extensions/cornerstone/src/utils/measurementServiceMappings/measurementServiceMappingsFactory.js","webpack:////home/simon/git/Viewers/extensions/cornerstone/src/tools/modules/dicomSRModule.js","webpack:////home/simon/git/Viewers/extensions/cornerstone/src/init.js","webpack:////home/simon/git/Viewers/extensions/cornerstone/src/utils/setCornerstoneLayout.js","webpack:////home/simon/git/Viewers/extensions/cornerstone/src/CornerstoneViewportDownloadForm.js","webpack:////home/simon/git/Viewers/extensions/cornerstone/src/commandsModule.js","webpack:////home/simon/git/Viewers/extensions/cornerstone/src/toolbarModule.js","webpack:////home/simon/git/Viewers/extensions/cornerstone/src/index.js","webpack:///./version.js","webpack:///./utils/getUserManagerForOpenIdConnectClient.js","webpack:///./utils/initWebWorkers.js","webpack:///./store/index.js","webpack:///./appExtensions/GenericViewerCommands/commandsModule.js","webpack:///./appExtensions/GenericViewerCommands/index.js","webpack:///./appExtensions/MeasurementsPanel/jumpToRowItem.js","webpack:///./appExtensions/MeasurementsPanel/ConnectedMeasurementTable.js","webpack:///./components/Labelling/LabellingTransition.js","webpack:///./components/Labelling/OHIFLabellingData.js","webpack:///./components/SimpleDialog/SimpleDialog.js","webpack:///./components/EditDescriptionDialog/EditDescriptionDialog.js","webpack:///./components/Labelling/LabellingFlow.js","webpack:///./connectedComponents/ToolContextMenu.js","webpack:///./appExtensions/MeasurementsPanel/init.js","webpack:///./appExtensions/MeasurementsPanel/index.js","webpack:///./components/LoadingBar/Bar.js","webpack:///./components/LoadingBar/Container.js","webpack:///./OHIFStandaloneViewer.js","webpack:///./App.js","webpack:///./config.js","webpack:///./routes/NotFound.js","webpack:////home/simon/git/Viewers/platform/ui/src/components/studyBrowser/StudyBrowser.js","webpack:////home/simon/git/Viewers/extensions/cornerstone/src/tools/id.js","webpack:///./context/UserManagerContext.js","webpack:///./components/OHIFLogo/OHIFLogo.js","webpack:////home/simon/git/Viewers/platform/core/src/extensions/MODULE_TYPES.js","webpack:////home/simon/git/Viewers/extensions/vtk/src/VTKViewport.js","webpack:////home/simon/git/Viewers/extensions/vtk/src/ConnectedVTKViewport.js","webpack:////home/simon/git/Viewers/extensions/vtk/src/LoadingIndicator.js","webpack:////home/simon/git/Viewers/extensions/vtk/src/OHIFVTKViewport.js","webpack:////home/simon/git/Viewers/node_modules/moment/locale sync ^\\.\\/.*$","webpack:////home/simon/git/Viewers/extensions/vtk/src/utils/setLayoutAndViewportData.js","webpack:////home/simon/git/Viewers/extensions/vtk/src/utils/setMPRLayout.js","webpack:////home/simon/git/Viewers/extensions/vtk/src/utils/setViewportToVTK.js","webpack:////home/simon/git/Viewers/extensions/vtk/src/commandsModule.js","webpack:////home/simon/git/Viewers/extensions/vtk/src/toolbarComponents/SlabThicknessToolbarComponent.js","webpack:////home/simon/git/Viewers/extensions/vtk/src/toolbarComponents/VTKMPRToolbarButton.js","webpack:////home/simon/git/Viewers/extensions/vtk/src/toolbarModule.js","webpack:////home/simon/git/Viewers/extensions/vtk/src/withCommandsManager.js","webpack:////home/simon/git/Viewers/extensions/vtk/src/index.js","webpack:////home/simon/git/Viewers/extensions/dicom-html/src/OHIFDicomHtmlSopClassHandler.js","webpack:////home/simon/git/Viewers/extensions/dicom-html/src/index.js","webpack:////home/simon/git/Viewers/extensions/dicom-segmentation/src/utils/drawCanvasCrosshairs.js","webpack:////home/simon/git/Viewers/extensions/dicom-segmentation/src/tools/DICOMSegTempCrosshairsTool.js","webpack:////home/simon/git/Viewers/extensions/dicom-segmentation/src/tools/TOOL_NAMES.js","webpack:////home/simon/git/Viewers/extensions/dicom-segmentation/src/toolbarModule.js","webpack:////home/simon/git/Viewers/extensions/dicom-segmentation/src/loadSegmentation.js","webpack:////home/simon/git/Viewers/extensions/dicom-segmentation/src/utils/refreshViewports.js","webpack:////home/simon/git/Viewers/extensions/dicom-segmentation/src/utils/setActiveLabelMap.js","webpack:////home/simon/git/Viewers/extensions/dicom-segmentation/src/getSourceDisplaySet.js","webpack:////home/simon/git/Viewers/extensions/dicom-segmentation/src/getOHIFDicomSegSopClassHandler.js","webpack:////home/simon/git/Viewers/extensions/dicom-segmentation/src/components/BrushColorSelector/BrushColorSelector.js","webpack:////home/simon/git/Viewers/extensions/dicom-segmentation/src/components/BrushRadius/BrushRadius.js","webpack:////home/simon/git/Viewers/extensions/dicom-segmentation/src/components/SegmentationItem/SegmentationItem.js","webpack:////home/simon/git/Viewers/extensions/dicom-segmentation/src/components/SegmentationSettings/SegmentationSettings.js","webpack:////home/simon/git/Viewers/extensions/dicom-segmentation/src/components/SegmentItem/SegmentItem.js","webpack:////home/simon/git/Viewers/extensions/dicom-segmentation/src/components/SegmentationSelect.js","webpack:////home/simon/git/Viewers/extensions/dicom-segmentation/src/components/SegmentationPanel/SegmentationPanel.js","webpack:////home/simon/git/Viewers/extensions/dicom-segmentation/src/index.js","webpack:////home/simon/git/Viewers/extensions/dicom-segmentation/src/init.js","webpack:////home/simon/git/Viewers/extensions/dicom-rt/src/utils/toolNames.js","webpack:////home/simon/git/Viewers/extensions/dicom-rt/src/utils/drawCanvasCrosshairs.js","webpack:////home/simon/git/Viewers/extensions/dicom-rt/src/tools/RTStructDisplayTool.js","webpack:////home/simon/git/Viewers/extensions/dicom-rt/src/tools/modules/lib/getImageIdOfCenterFrameOfROIContour.js","webpack:////home/simon/git/Viewers/extensions/dicom-rt/src/tools/modules/rtStructModule.js","webpack:////home/simon/git/Viewers/extensions/dicom-rt/src/tools/modules/lib/structureSetReferencesSeriesInstanceUid.js","webpack:////home/simon/git/Viewers/extensions/dicom-rt/src/init.js","webpack:////home/simon/git/Viewers/extensions/dicom-rt/src/utils/transformPointsToImagePlane.js","webpack:////home/simon/git/Viewers/extensions/dicom-rt/src/loadRTStruct.js","webpack:////home/simon/git/Viewers/extensions/dicom-rt/src/getSourceDisplaySet.js","webpack:////home/simon/git/Viewers/extensions/dicom-rt/src/OHIFDicomRTStructSopClassHandler.js","webpack:////home/simon/git/Viewers/extensions/dicom-rt/src/components/StructureSetItem/StructureSetItem.js","webpack:////home/simon/git/Viewers/extensions/dicom-rt/src/components/RTSettings/RTSettings.js","webpack:////home/simon/git/Viewers/extensions/dicom-rt/src/components/LoadingIndicator/LoadingIndicator.js","webpack:////home/simon/git/Viewers/extensions/dicom-rt/src/components/PanelSection/PanelSection.js","webpack:////home/simon/git/Viewers/extensions/dicom-rt/src/components/RTPanel/RTPanel.js","webpack:////home/simon/git/Viewers/extensions/dicom-rt/src/index.js","webpack:////home/simon/git/Viewers/extensions/dicom-rt/src/id.js","webpack:////home/simon/git/Viewers/extensions/dicom-microscopy/src/DicomMicroscopySopClassHandler.js","webpack:////home/simon/git/Viewers/extensions/dicom-microscopy/src/index.js","webpack:////home/simon/git/Viewers/extensions/dicom-pdf/src/OHIFDicomPDFSopClassHandler.js","webpack:////home/simon/git/Viewers/extensions/dicom-pdf/src/index.js","webpack:///./index.js","webpack:////home/simon/git/Viewers/platform/core/src/extensions/ExtensionManager.js","webpack:////home/simon/git/Viewers/platform/core/src/services/ServicesManager.js","webpack:////home/simon/git/Viewers/platform/core/src/services/UINotificationService/index.js","webpack:////home/simon/git/Viewers/platform/core/src/services/UIModalService/index.js","webpack:////home/simon/git/Viewers/platform/core/src/services/UIDialogService/index.js","webpack:////home/simon/git/Viewers/platform/core/src/services/LoggerService/index.js","webpack:////home/simon/git/Viewers/platform/core/src/services/_shared/pubSubServiceInterface.js","webpack:////home/simon/git/Viewers/platform/core/src/services/MeasurementService/MeasurementService.js","webpack:////home/simon/git/Viewers/platform/core/src/services/MeasurementService/index.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","installedCssChunks","8","exports","module","l","e","promises","Promise","resolve","reject","href","fullhref","p","existingLinkTags","document","getElementsByTagName","dataHref","tag","getAttribute","rel","existingStyleTags","linkTag","createElement","type","onload","onerror","event","request","target","src","err","Error","code","parentNode","removeChild","appendChild","then","installedChunkData","promise","onScriptComplete","script","charset","timeout","nc","setAttribute","jsonpScriptSrc","error","clearTimeout","chunk","errorType","realSrc","message","name","undefined","setTimeout","head","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","console","jsonpArray","window","oldJsonpFunction","slice","log","warn","info","trace","debug","time","timeEnd","sopClassDictionary","ComputedRadiographyImageStorage","DigitalXRayImageStorageForPresentation","DigitalXRayImageStorageForProcessing","DigitalMammographyXRayImageStorageForPresentation","DigitalMammographyXRayImageStorageForProcessing","DigitalIntraOralXRayImageStorageForPresentation","DigitalIntraOralXRayImageStorageForProcessing","CTImageStorage","EnhancedCTImageStorage","LegacyConvertedEnhancedCTImageStorage","UltrasoundMultiframeImageStorage","MRImageStorage","EnhancedMRImageStorage","MRSpectroscopyStorage","EnhancedMRColorImageStorage","LegacyConvertedEnhancedMRImageStorage","UltrasoundImageStorage","EnhancedUSVolumeStorage","SecondaryCaptureImageStorage","MultiframeSingleBitSecondaryCaptureImageStorage","MultiframeGrayscaleByteSecondaryCaptureImageStorage","MultiframeGrayscaleWordSecondaryCaptureImageStorage","MultiframeTrueColorSecondaryCaptureImageStorage","Sop12LeadECGWaveformStorage","GeneralECGWaveformStorage","AmbulatoryECGWaveformStorage","HemodynamicWaveformStorage","CardiacElectrophysiologyWaveformStorage","BasicVoiceAudioWaveformStorage","GeneralAudioWaveformStorage","ArterialPulseWaveformStorage","RespiratoryWaveformStorage","GrayscaleSoftcopyPresentationStateStorage","ColorSoftcopyPresentationStateStorage","PseudoColorSoftcopyPresentationStateStorage","BlendingSoftcopyPresentationStateStorage","XAXRFGrayscaleSoftcopyPresentationStateStorage","XRayAngiographicImageStorage","EnhancedXAImageStorage","XRayRadiofluoroscopicImageStorage","EnhancedXRFImageStorage","XRay3DAngiographicImageStorage","XRay3DCraniofacialImageStorage","BreastTomosynthesisImageStorage","BreastProjectionXRayImageStorageForPresentation","BreastProjectionXRayImageStorageForProcessing","IntravascularOpticalCoherenceTomographyImageStorageForPresentation","IntravascularOpticalCoherenceTomographyImageStorageForProcessing","NuclearMedicineImageStorage","RawDataStorage","SpatialRegistrationStorage","SpatialFiducialsStorage","DeformableSpatialRegistrationStorage","SegmentationStorage","SurfaceSegmentationStorage","RealWorldValueMappingStorage","SurfaceScanMeshStorage","SurfaceScanPointCloudStorage","VLEndoscopicImageStorage","VideoEndoscopicImageStorage","VLMicroscopicImageStorage","VideoMicroscopicImageStorage","VLSlideCoordinatesMicroscopicImageStorage","VLPhotographicImageStorage","VideoPhotographicImageStorage","OphthalmicPhotography8BitImageStorage","OphthalmicPhotography16BitImageStorage","StereometricRelationshipStorage","OphthalmicTomographyImageStorage","VLWholeSlideMicroscopyImageStorage","LensometryMeasurementsStorage","AutorefractionMeasurementsStorage","KeratometryMeasurementsStorage","SubjectiveRefractionMeasurementsStorage","VisualAcuityMeasurementsStorage","SpectaclePrescriptionReportStorage","OphthalmicAxialMeasurementsStorage","IntraocularLensCalculationsStorage","MacularGridThicknessandVolumeReport","OphthalmicVisualFieldStaticPerimetryMeasurementsStorage","OphthalmicThicknessMapStorage","CornealTopographyMapStorage","BasicTextSR","EnhancedSR","ComprehensiveSR","Comprehensive3DSR","ProcedureLog","MammographyCADSR","KeyObjectSelection","ChestCADSR","XRayRadiationDoseSR","RadiopharmaceuticalRadiationDoseSR","ColonCADSR","ImplantationPlanSRDocumentStorage","EncapsulatedPDFStorage","EncapsulatedCDAStorage","PositronEmissionTomographyImageStorage","EnhancedPETImageStorage","LegacyConvertedEnhancedPETImageStorage","BasicStructuredDisplayStorage","RTImageStorage","RTDoseStorage","RTStructureSetStorage","RTBeamsTreatmentRecordStorage","RTPlanStorage","RTBrachyTreatmentRecordStorage","RTTreatmentSummaryRecordStorage","RTIonPlanStorage","RTIonBeamsTreatmentRecordStorage","RTBeamsDeliveryInstructionStorage","GenericImplantTemplateStorage","ImplantAssemblyTemplateStorage","ImplantTemplateGroupStorage","LayoutChooser","props","cell","parentCell","row","col","currentCell","table","Rows","newRow","Columns","isRange","className","emptyCell","state","selectedCell","setState","column","this","highlightCells","onClick","onChange","style","display","visible","minWidth","boxSize","cellBorder","role","map","width","height","border","onMouseEnter","onMouseLeave","PureComponent","PropTypes","number","isRequired","bool","func","ToolbarButton","isActive","icon","labelWhenActive","classnames","active","iconProps","label","arrowIconName","isExpanded","arrowIcon","isExpandable","Icon","cypressSelectorId","toLowerCase","data-cy","propTypes","id","string","oneOfType","shape","defaultProps","withTranslation","LayoutButton","dropdownVisible","prevProps","TableListItem","onItemClick","preventDefault","stopPropagation","itemKey","itemClass","itemMetaClass","itemIndex","itemMeta","children","Component","node","ColoredCircle","color","backgroundColor","MeasurementTableItem","btnLabel","onClickCallback","marginRight","hasWarningClass","measurementData","hasWarnings","isReadOnly","actionButtons","onRelabel","relabelButton","getActionButton","onRelabelClick","onEditDescription","descriptionButton","onEditDescriptionClick","onDelete","deleteButton","onDeleteClick","isSRText","labels","Fragment","measurementNumber","keySeparator","nsSeparator","getDataDisplayText","forEach","collapsed","SRLabel","index","displayText","warningList","Array","isArray","listedWarnings","warningTitle","placement","overlay","getWarningContent","getTableListItem","connectedComponent","ScrollableArea","delay","callback","args","context","isThrottled","scrollableElement","currentTop","scrollTop","offsetHeight","limit","scrollHeight","scrollStep","hideScrollbar","x","scrollX","y","scrollY","scrollbarSize","inner","outer","position","top","left","visibility","overflow","body","w1","offsetWidth","h1","w2","h2","clientWidth","clientHeight","getScrollbarSize","marginBottom","scrollAreaClasses","scrollHandlerThrottled","scrollHandler","wrapper","arguments","scrollableClass","class","ref","element","onScroll","onTransitionEnd","scrollNavUp","scrollNavDown","adjustMargins","addEventListener","removeEventListener","TableList","customHeader","headerTitle","headless","onHeaderClick","getHeader","defaultItems","MeasurementTable","selectedKey","saveFunction","onSaveComplete","title","measurementCollection","measureGroup","getCustomHeader","getMeasurements","selectedMeasurementNumber","measurements","measurement","itemNumber","readOnly","groupName","maxMeasurements","timepoints","timepoint","date","overallWarnings","hasOverallWarnings","getTimepointsHeader","getMeasurementsGroups","array","AboutContent","useTranslation","detect","os","version","link","process","substr","toUpperCase","item","renderTableRow","getDataCy","split","join","TabComponents","tabs","customProps","useState","currentTabIndex","setCurrentTabIndex","tab","hidden","tabCustomProps","arrayOf","any","translate","word","TabFooter","onResetPreferences","onSave","onCancel","hasErrors","disabled","formatKeysForInput","keys","getKeys","sequence","modifier_keys","keysArray","modifiers","includes","HotkeyField","handleChange","classNames","inputValue","onKeyDown","hotkeys","record","unpause","onFocus","pause","startRecording","allowed_keys","LanguageSwitcher","language","onLanguageChange","languages","lng","Checkbox","checked","checkbox","CineDialog","parseFloat","onFrameRateChanged","isPlaying","onPlayPauseChanged","onClickNextButton","onClickBackButton","onClickSkipToStart","onClickSkipToEnd","cineFrameRate","data-toggle","onClickPlayPause","min","cineMinFrameRate","max","cineMaxFrameRate","step","cineStepFrameRate","handleInputChange","toFixed","FILE_TYPE_OPTIONS","ViewportDownloadForm","activeViewport","onClose","updateViewportPreview","enableViewport","disableViewport","toggleAnnotations","loadImage","downloadBlob","defaultSize","minimumSize","maximumSize","canvasClass","filename","setFilename","fileType","setFileType","dimensions","setDimensions","showAnnotations","setShowAnnotations","keepAspect","setKeepAspect","aspectMultiplier","setAspectMultiplier","viewportElement","setViewportElement","viewportElementDimensions","setViewportElementDimensions","createRef","downloadCanvas","setDownloadCanvas","viewportPreview","setViewportPreview","setError","hasError","values","refreshViewport","useRef","onDimensionsChange","dimension","oppositeDimension","sanitizedTargetValue","replace","isEmpty","newDimensions","updatedDimension","Math","round","error_messages","renderErrorHandler","validSize","loadAndUpdateViewports","useCallback","scaledWidth","scaledHeight","scaledDimensions","current","dataUrl","viewportElementWidth","viewportElementHeight","useEffect","evt","alt","base","options","htmlFor","StudiesItem","studyData","StudyDate","StudyDescription","modalities","studyAvailable","activeClass","hasDescriptionAndDate","getModalitiesStyle","StudiesList","studyListData","StudyInstanceUID","activeStudyInstanceUID","getBrowserItems","SeriesList","seriesItems","seriesData","Thumbnail","displaySetInstanceUID","activeDisplaySetInstanceUID","getSeriesItems","QuickSwitch","find","study","thumbnails","studyDataSelected","onStudySelected","seriesQuickSwitchOpen","seriesDataSelected","onSeriesSelected","sideClass","side","quickSwitchClass","hideSeriesSwitch","showSeriesSwitch","getSmallListItems","onSeriesClick","onStudyClick","RoundedButtonGroup","badgeNumbers","newValue","onValueChanged","onStateEvent","optionIndex","findIndex","detail","badgeNumber","option","stateEvent","prevState","buttons","roundedButtonWrapper","noselect","optionText","bottomLabel","badgeNumberOverflow","String","onClickOption","InputRadio","onSelected","itemData","labelClass","SelectTreeBreadcrumb","SelectTree","onComponentChange","items","searchTerm","selectTreeFirstTitle","currentNode","selectTreeSecondTitle","searchEnabled","placeholder","autoFocus","searchLocations","currentTarget","isLeafSelected","treeItems","getTreeItems","headerItem","onBreadcrumbSelected","filteredItems","cloneDeep","indexOf","filterItems","getLabelClass","SimpleDialog","onConfirm","isOpen","rootClass","componentRef","componentStyle","onSubmit","defaultValue","setValue","customStyle","zIndex","alignItems","justifyContent","Modal","setAppElement","getElementById","OHIFModal","closeButton","shouldCloseOnEsc","fullscreen","classes","ContextMenu","onContextMenu","ErrorPage","description","onRetry","stack","location","reload","CustomDateRangePicker","moment","locale","i18n","onDatesChange","startDate","endDate","dateRangePickerProps","presets","renderCalendarInfo","text","start","end","isSelected","preset","renderMonthElement","month","onMonthSelect","onYearSelect","containerStyle","margin","months","year","renderYearsOptions","startDatePlaceholderText","endDatePlaceholderText","phrases","closeDatePicker","clearDates","required","instanceOf","Date","getDateEntry","datePicked","rangeDatePicked","getDateEntryFromRange","today","numOfDays","edge","subtract","TableSearchFilter","meta","onSort","onValueChange","sortFieldName","sortDirection","studyListDateFilterNumDays","studyDateTo","studyDateFrom","focusedInput","setFocusedInput","translationsAreReady","ready","sortIcons","sortIconForSortField","lastWeek","lastMonth","defaultStartDate","defaultEndDate","studyDatePresets","field","fieldName","inputType","sortIcon","fontSize","startDateId","endDateId","onFocusChange","updatedVal","numberOfMonths","showClearDates","anchorDirection","hideKeyboardShortcutsPanel","isOutsideRange","day","isInclusivelyBeforeDay","oneOf","size","animation","getContentFromUseMediaValue","displaySize","contentArrayMap","defaultContent","StudyList","isLoading","studies","sort","handleSort","filterValues","handleFilterChange","onFilterChange","handleSelectItem","onSelectItem","largeTableMeta","mediumTableMeta","smallTableMeta","tableMeta","large","medium","small","totalSize","reduce","prev","next","percentWidth","direction","colSpan","TableRow","AccessionNumber","PatientID","PatientName","isHighlighted","handleClick","largeRowTemplate","mediumRowTemplate","whiteSpace","flexGrow","flexDirection","maxWidth","aria-label","textOverflow","textAlign","smallRowTemplate","fontWeight","paddingTop","paddingLeft","patientNameOrId","accessionOrModalityOrDescription","allFields","TablePagination","nextPageFunc","currentPage","prevPageFunc","onRowsPerPageChange","parseInt","prevPage","nextPage","recordCount","rowsPerPage","pageOptions","pageNumber","renderRowsPerPageDropdown","renderPaginationButtons","PageToolbar","onImport","getImportTool","ExpandableToolMenu","random","getButtons","button","activeCommand","btn","onGroupMenuClick","toolbarComponent","activeIcon","trigger","rootClose","handleHide","onOverlayHide","onExpandableToolClick","toolbarMenuOverlay","React","ToolbarSection","activeButton","activeButtons","ErrorFallback","componentStack","resetErrorBoundary","OHIFErrorBoundary","onReset","onError","fallbackComponent","FallbackComponent","getDisplaySize","mediaQueryMap","mediaTypesAliases","defaultDisplaySize","mql","matches","getMediaQueryMap","mediaQueriesStringList","q","matchMedia","useMedia","defaultMediaType","_mediaQueryMap","mount","onMediaQueryChange","mediaQuery","nextDisplaySize","media","originalMediaQuery","getMediaTypeAlias","_mediaQueriesStringList","_mediaTypesAliases","isEqual","updateState","removeListener","addListener","useDebounce","debouncedValue","setDebouncedValue","handler","Select","selected","for","Range","showPercentage","showValue","valueRenderer","cols","TextInput","toTimeString","DropdownMenu","open","list","align","handleOnClick","getListItems","toggleList","contains","titleElement","handleMouseClick","renderTitleElement","renderList","PlayClipButton","iconName","data-container","data-placement","SimpleToolbarButton","Toolbar","maybePlayClipButton","maybeLayoutButton","includePlayClipButton","includeLayoutButton","isTouchDevice","navigator","maxTouchPoints","viewerbaseDragDropContext","DecoratedClass","backend","TouchBackend","HTML5Backend","opts","enableMouseEvents","retryImport","fn","retriesLeft","interval","catch","retry","component","asyncComponent","importComponent","isFunction","default","onLoaded","toString","addDynamicallyLoadedComponentToState","DICOMWeb","Value","input","padFour","output","charCodeAt","convertToInt","getAuthorizationHeader","requestOptions","headers","accessToken","user","getAccessToken","auth","Authorization","btoa","getModalities","Modality","ModalitiesInStudy","vr","getName","Alphabetic","getNumber","getString","cornerstone","metadataProvider","getBoundingBox","textLines","font","cornerstoneTools","textStyle","getFont","getFontSize","save","textBaseline","measureText","boundingBox","padding","centering","restore","pixelToPage","enabledElement","getEnabledElement","canvas","canvasOffset","$","offset","canvasPosition","pixelToCanvas","repositionTextBox","eventData","config","isCreating","image","allowedBorders","OHIF","uiSettings","autoPositionMeasurementsTextCallOuts","allow","T","R","B","L","getRenderingInformation","limits","tool","mid","directions","diffX","cornerAxis","x1","y1","calculateAxisCenter","axis","a","b","lowest","handles","textBox","$canvas","canvasWidth","outerWidth","canvasHeight","outerHeight","canvasDimensions","bounds","getHandlePosition","cornerAxisPosition","availableAreas","labelWidth","labelHeight","topLeft","bottomRight","getAvailableBlankAreas","tempDirections","assign","tempCornerAxis","foundPlace","renderingInformation","pageToPixel","toolAxis","getTextBoxSizeInPixels","textBoxOffset","centerX","centerY","halfBoxSizeX","halfBoxSizeY","offsetY","offsetX","getTextBoxOffset","canvasBorders","x0","y0","pixelPosition","validate","validators","equals","attributes","doesNotEqual","doesNotContain","startsWith","endsWith","CustomAttributeRetrievalCallbacks","InstanceMetadata","metadata","HPMatcher","metadataInstance","rules","OHIFError","format","details","passed","failed","requiredFailed","score","rule","attribute","customAttribute","setCustomAttribute","errorMessages","testConstraint","constraint","attributeMap","customAttributeExists","getCustomAttribute","getTagValue","weight","CustomViewportSettings","comparators","validator","validatorOption","freeze","EQUALS_REGEXP","Rule","guid","_constraintInfo","_validatorAndValue","constraintInfo","ruleConstraint","comparator","isRuleForPrior","ruleValidatorAndValue","getConstraintValidatorAndValue","intValue","test","validatorAndValue","getConstraintInfo","currentValidator","ProtocolMatchingRule","StudyMatchingRule","SeriesMatchingRule","ImageMatchingRule","removeFromArray","indexToRemove","ViewportStructure","properties","Viewport","viewportSettings","imageMatchingRules","seriesMatchingRules","studyMatchingRules","ruleObject","fromObject","Stage","viewportStructure","viewports","createdDate","currentStage","clonedStage","viewportObject","viewport","Protocol","locked","hasUpdatedPriorsInformation","modifiedDate","userLoggedIn","createdBy","getUserId","modifiedBy","availableTo","Set","editableBy","protocolMatchingRules","stages","numberOfPriorsReferenced","skipCache","stage","priorsReferenced","getNumberOfPriorsReferenced","updateNumberOfPriorsReferenced","stageObject","currentProtocol","clonedProtocol","protocolWasModified","StudyMetadata","ProtocolEngine","protocolStore","priorStudies","studyMetadataSource","Map","StudyMetadataSource","every","reset","newStageIds","protocol","getBestProtocolMatch","setHangingProtocol","matched","studyInstance","getFirstInstance","numberOfAvailablePriors","getNumberOfAvailablePriors","getObjectID","getProtocol","matchedProtocols","clear","matchedProtocolScores","_clearMatchedProtocols","findMatchByStudy","matchedDetail","has","set","obj","highestScoringProtocolId","_largestKeyByValue","updateProtocolMatches","bestMatch","_getHighestScoringProtocol","studyObjectID","getAvailableStudyPriors","priors","viewportIndex","instanceMatchingRules","matchingScores","currentStudy","firstInstance","highestStudyMatchingScore","highestSeriesMatchingScore","priorStudy","validatorType","abstractPriorValue","studyIndex","priorStudyObjectID","loadStudy","studyMetadata","updateViewports","studyMatchDetails","forEachSeries","series","seriesMatchDetails","forEachInstance","instance","isImage","instanceMatchDetails","matchDetails","concat","totalMatchScore","currentSOPInstanceUID","getSOPInstanceUID","imageDetails","getStudyInstanceUID","SeriesInstanceUID","getSeriesInstanceUID","SOPInstanceUID","currentImageIdIndex","matchingScore","sortingInfo","displaySet","findDisplaySet","images","getUID","imageId","getImageId","sortingFunction","sortBy","reverse","numRows","numColumns","setLayout","numViewports","getNumProtocolStages","stageModel","getCurrentStageModel","getLayoutTemplateName","layoutProps","viewportData","matchImages","cornerstoneViewportParams","viewportSettingsKeys","currentViewportData","customSettings","renderedCallback","customSetting","currentMatch","currentPosition","scoresLength","setViewportSpecificData","viewportSpecificData","newProtocol","isPrototypeOf","numberOfStages","stageAction","isPreviousStageAvailable","isNextStageAvailable","setCurrentProtocolStage","ProtocolStore","strategy","protocolObject","protocolInstance","onReady","protocolId","getProtocolInstance","addProtocol","updateProtocol","removeProtocol","defaultProtocol","oneByOne","first","getDefaultProtocol","hangingProtocols","ProtocolStrategy","defaultsAdded","from","delete","addCustomAttribute","attributeId","attributeName","addCustomViewportSetting","settingId","settingName","header","getNestedObject","shallowObject","nestedObject","propertyArray","currentObject","currentProperty","getShallowObject","putValues","baseKey","resultObject","currentKey","currentValue","isString","subject","search","query","pattern","RegExp","trim","encodeId","match","ui","getOffset","offsetParent","offsetLeft","offsetTop","isCharacterKeyPress","which","ctrlKey","metaKey","altKey","handleError","hideConfirm","cancelLabel","cancelClass","MODULE_TYPES","CommandsManager","ExtensionManager","HotkeysManager","ServicesManager","utils","redux","errorHandler","DICOMSR","viewer","UINotificationService","UIModalService","UIDialogService","MeasurementService","LoggerService","adjust","angleDoubleDown","angleDoubleUp","angleLeft","arrows","arrowsAltH","arrowsAltV","bars","brain","brush","caretDown","caretUp","check","checkCircle","checkCircleO","chevronDown","circle","circleNotch","circleO","clipboard","cog","createComment","createScreenCapture","crosshairs","cube","d3Rotate","database","dotCircle","edit","ellipseCircle","ellipseH","ellipseV","exclamationCircle","exclamationTriangle","fastBackward","fastForward","stop","inlineEdit","level","linkCircles","liver","lock","lockAlt","lung","measureNonTarget","measureTarget","measureTargetCr","measureTargetNe","measureTargetUn","measureTemp","objectGroup","ohifLogo","ohifTextLogo","oval","palette","play","plus","powerOff","rotate","rotateRight","saveRegular","scissors","searchPlus","softTissue","sortDown","sortUp","sphere","squareO","star","stepBackward","stepForward","sun","th","thLarge","thList","times","trash","unlink","youtube","eye","eyeClosed","envelopeSquare","ICONS","getIcon","ModalContext","createContext","Provider","ModalProvider","modal","service","DEFAULT_OPTIONS","content","contentProps","showScrollbar","customClassName","setOptions","show","hide","setServiceImplementation","ModalContent","noScroll","visibleScrollbar","withModal","useContext","Consumer","SnackbarItem","handleClose","autoClose","duration","action","close","SnackbarContainer","useSnackbarContext","snackbarItems","topCenter","topRight","bottomLeft","bottomCenter","pos","itemId","renderItem","LogManager","SnackbarContext","SnackbarProvider","SnackbarTypes","count","setCount","setSnackbarItems","onLogHandler","notify","subscribe","EVENTS","OnLog","unsubscribe","newItem","filter","hideAll","snackbar","namespace","WrapperI18n","I18NextWithTranslation","DialogContext","DialogProvider","isDragging","setIsDragging","dialogs","setDialogs","lastDialogId","setLastDialogId","lastDialogPosition","setLastDialogPosition","centerPositions","setCenterPositions","dialog","getCenterPosition","root","querySelector","itemBounds","getBoundingClientRect","dialogId","dismiss","dismissAll","_bringToFront","topDialog","_updateLastDialogPosition","draggableItemBounds","validCallback","DialogContent","defaultPosition","centralize","preservePosition","isDraggable","onStart","onStop","onDrag","showOverlay","dragableItem","srcElement","tagName","withDialog","LoggerContext","useLogger","LoggerProvider","errors","infos","onErrorHandler","errorObject","displayOnConsole","getFourRandomValues","floor","substring","getHTTPErrorHandler","constructor","defaultRetryOptions","retries","factor","minTimeout","maxTimeout","randomize","retryableStatusCodes","retryOptions","xhrRetryRequestHook","url","method","originalRequestSend","send","operation","attempt","currentAttempt","originalOnReadyStateChange","onreadystatechange","status","errorMessage","attemptFailedError","getXHRRetryRequestHook","login","logout","getData","setData","Metadata","uid","configurable","writable","_data","propertyName","propertyValue","_uid","_custom","_hasOwn","enabledElements","setEnabledElement","defineProperties","_imageId","_definePublicProperties","hasIndexValues","splitValues","isValidIndex","indexedValue","tagOrProperty","getIndexedValue","val","idx","frame","SeriesMetadata","_seriesInstanceUID","_instances","_firstInstance","getInstanceByUID","found","getInstanceByIndex","isValidUID","isValidCallback","in","mountOnEnter","unmountOnExit","appear","onEnter","onEntering","onEntered","onExit","onExiting","onExited","fadeStyles","ENTERING","ENTERED","Fade","innerProps","cloneElement","onHide","elementType","Overlay","child","transition","createChainedFunction","funcs","f","acc","isOneOf","one","of","triggerType","delayShow","delayHide","defaultOverlayShown","onBlur","onMouseOut","onMouseOver","OverlayTrigger","handleToggle","handleDelayedShow","handleDelayedHide","handleMouseOver","handleMouseOverOut","handleMouseOut","_mountNode","renderOverlay","ReactDOM","unmountComponentAtNode","_hoverShowDelay","_hoverHideDelay","relatedNative","related","relatedTarget","nativeEvent","unstable_renderSubtreeIntoContainer","_overlay","Children","only","childProps","triggerProps","warning","makeOverlay","AppContext","CONTEXTS","CORNERSTONE","VTK","useAppContext","AppProvider","activeContexts","useSelector","getActiveContexts","appConfig","withAppContext","positionTop","positionLeft","arrowOffsetTop","arrowOffsetLeft","Tooltip","outerStyle","arrowStyle","fetchPaletteColorLookupTableData","server","PaletteColorLookupTableUID","RedPaletteColorLookupTableDescriptor","GreenPaletteColorLookupTableDescriptor","BluePaletteColorLookupTableDescriptor","RedPaletteColorLookupTableData","GreenPaletteColorLookupTableData","BluePaletteColorLookupTableData","entry","_paletteColorCache","_getPaletteColor","add","maxAge","entries","now","paletteColorLookupTableData","lutDescriptor","numLutEntries","bits","arrayBufferToPaletteColorLUT","arraybuffer","byteArray","Uint16Array","Uint8Array","lut","BulkDataURI","uri","wadoRoot","errorInterceptor","requestHooks","api","DICOMwebClient","retrieveBulkData","InlineBinary","inlineBinaryData","atob","str2ab","unpackOverlay","arrayBuffer","bitArray","byteIndex","bitIndex","bitByteIndex","fetchOverlayData","OverlayDataPromises","OverlayDataTags","overlayGroup","groupStr","OverlayDataTag","_getOverlayData","ArrayBuffer","results","dicomWeb","validNumber","v","Number","datasets","dicomJSONDatasetOrP10ArrayBuffer","dicomData","DicomMessage","readFile","dicomJSONDataset","dict","naturalizedDataset","dcmjs","DicomMetaDictionary","naturalizeDataset","_getAndCacheStudyDataset","_getAndCacheStudy","_getAndCacheSeriesFromStudy","_getAndCacheInstanceFromStudy","_checkBulkDataAndInlineBinaries","uids","imageIdToUIDs","dataset","instances","PhotometricInterpretation","_getUIDsFromImageID","_getInstanceData","fallback","_getInstance","INSTANCE","getTagFromInstance","naturalizedTagOrWADOImageLoaderTag","_getCornerstoneWADOImageLoaderTag","wadoImageLoaderTag","WADO_IMAGE_LOADER_TAGS","GENERAL_SERIES_MODULE","seriesDate","seriesTime","SeriesDate","SeriesTime","dicomParser","parseDA","parseTM","modality","seriesInstanceUID","seriesNumber","SeriesNumber","studyInstanceUID","PATIENT_STUDY_MODULE","patientAge","PatientAge","patientSize","PatientSize","patientWeight","PatientWeight","IMAGE_PLANE_MODULE","rowPixelSpacing","columnPixelSpacing","rowCosines","columnCosines","ImageOrientationPatient","PixelSpacing","ImagerPixelSpacing","SOPClassUID","PixelSpacingCalibrationType","PixelSpacingCalibrationDescription","EstimatedRadiographicMagnificationFactor","SequenceOfUltrasoundRegions","isProjection","TYPES","CorrectedImagerPixelSpacing","pixelSpacing","PhysicalDeltaX","PhysicalDeltaY","getPixelSpacingInformation","frameOfReferenceUID","FrameOfReferenceUID","rows","columns","imageOrientationPatient","imagePositionPatient","ImagePositionPatient","sliceThickness","SliceThickness","sliceLocation","SliceLocation","IMAGE_PIXEL_MODULE","samplesPerPixel","SamplesPerPixel","photometricInterpretation","bitsAllocated","BitsAllocated","bitsStored","BitsStored","highBit","HighBit","pixelRepresentation","PixelRepresentation","planarConfiguration","PlanarConfiguration","pixelAspectRatio","PixelAspectRatio","smallestPixelValue","SmallestPixelValue","largestPixelValue","LargestPixelValue","redPaletteColorLookupTableDescriptor","greenPaletteColorLookupTableDescriptor","bluePaletteColorLookupTableDescriptor","redPaletteColorLookupTableData","greenPaletteColorLookupTableData","bluePaletteColorLookupTableData","VOI_LUT_MODULE","WindowCenter","WindowWidth","windowCenter","windowWidth","MODALITY_LUT_MODULE","rescaleSlope","RescaleSlope","rescaleIntercept","RescaleIntercept","rescaleType","RescaleType","SOP_COMMON_MODULE","sopClassUID","sopInstanceUID","PET_ISOTOPE_MODULE","RadiopharmaceuticalInformationSequence","RadiopharmaceuticalInformation","RadiopharmaceuticalStartTime","RadionuclideTotalDose","RadionuclideHalfLife","radiopharmaceuticalInfo","radiopharmaceuticalStartTime","radionuclideTotalDose","radionuclideHalfLife","OVERLAY_PLANE_MODULE","overlays","OverlayData","OverlayRowsTag","OverlayColumnsTag","OverlayType","OverlayOriginTag","OverlayDescriptionTag","OverlayLabelTag","ROIAreaTag","ROIMeanTag","ROIStandardDeviationTag","OverlayOrigin","pixelData","roiArea","roiMean","roiStandardDeviation","PATIENT_MODULE","patientName","patientId","GENERAL_IMAGE_MODULE","sopInstanceUid","instanceNumber","InstanceNumber","lossyImageCompression","LossyImageCompression","lossyImageCompressionRatio","LossyImageCompressionRatio","lossyImageCompressionMethod","LossyImageCompressionMethod","GENERAL_STUDY_MODULE","studyDescription","studyDate","studyTime","StudyTime","accessionNumber","CINE_MODULE","frameTime","FrameTime","splitImageId","qs","queryString","parse","studyUID","seriesUID","objectUID","Mousetrap","_originalStopCallback","_recordedSequence","_recordedSequenceCallback","_currentRecordedKeys","_recordedCharacterKey","_origHandleKey","handleKey","_handleKey","character","recording","_recordCurrentCombo","_recordKey","_finishRecording","_normalizeSequence","self","stopRecord","init","recordPlugin","stopCallback","combo","paused","ReconstructionIssues","DATASET_4D","VARYING_IMAGESDIMENSIONS","VARYING_IMAGESCOMPONENTS","VARYING_IMAGESORIENTATION","MISSING_FRAMES","IRREGULAR_SPACING","MULTIFFRAMES","studyMetadataList","TypeSafeCollection","insert","findBy","remove","purge","removeAll","OHIFInstanceMetadata","_sopInstanceUID","_study","_series","_instance","_cache","bypassCache","rawValue","instanceData","thumbnail","OHIFSeriesMetadata","addInstance","OHIFStudyMetadata","addSeries","isDisplaySetReconstructable","isMultiframe","NumberOfFrames","constructableModalities","reconstructionIssues","MULTIFRAMES","firstImage","firstImageRows","firstImageColumns","firstImageSamplesPerPixel","firstImageOrientationPatient","ii","_isSameArray","instanceMetadataControl","jj","instanceMetadata","_isDataset4D","processSingleframe","iop1","iop2","abs","iopTolerance","spacingTolerance","_getSpacingIssue","spacing","averageSpacing","multipleOfAverageSpacing","numberOfSpacings","issue","missingFrames","_getPerpendicularDistance","sqrt","pow","_studyInstanceUID","_displaySets","_derivedDisplaySets","_firstSeries","derivatedDisplaySet","allDisplaySets","displaySets","otherDisplaySets","ds","referencedSeriesInstanceUIDs","SourceImageSequence","firstFunctionalGroups","_toArray","PerFrameFunctionalGroupsSequence","DerivationImageSequence","sourceImageArray","ReferencedSOPInstanceUID","_findReferencedSeriesInstanceUIDsFromSOPInstanceUID","_findReferencedSeriesInstanceUIDsFromSourceImageSequence","noReferencedSeriesAvailable","ReferencedSeriesSequence","ReferencedSeries","_findReferencedSeriesInstanceUIDsFromReferencedSeriesSequence","ReferencedImageSequence","referencedImageArray","_findReferencedSeriesInstanceUIDsFromReferencedImageSequence","sopClassHandlerModules","getInstanceCount","ImageSet","setAttributes","SeriesDescription","sopClassUIDs","uniqueSopClassUIDsInSeries","instanceSopClassUID","getSopClassUIDs","sopClassHandlerExtensions","handlersForSopClassUID","extension","plugin","dicomWebClient","dwc","getDisplaySetFromSeries","_getDisplaySetFromSopClassModule","sopClassModule","isDerived","_addDerivedDisplaySet","stackableInstances","naturalizedName","isMultiFrame","makeDisplaySet","isClip","numImageFrames","AcquisitionDatetime","isSingleImageModality","frameRate","isReconstructable","isSOPClassUIDSupported","SOPClassUIDNaturalized","referencedSeriesInstanceUID","referencedFrameOfReferenceUID","filteredDerivedDisplaySets","referencedDisplaySet","getReferencedDisplaySet","referencedDisplaySets","filteredReferencedDisplaySets","getSeriesCount","_createDisplaySetsForSeries","_insertDisplaySet","containsSeries","addDisplaySet","firstIndexWithSameSeriesNumber","insertIndex","isLowPriorityModality","startingIndex","seriesDateTime","displaySetI","some","getSeriesByUID","sum","getSeriesByIndex","firstSeries","getFirstSeries","findInstance","findSeriesAndInstanceByInstance","imageSet","getImage","displayReconstructableInfo","displaySpacingInfo","sortByImagePositionPatient","datasetIs4D","firstImagePositionPatient","lastIpp","averageSpacingBetweenFrames","previousImagePositionPatient","spacingBetweenFrames","spacingIssue","isUniform","isSpacingUniform","imageSets","arrayOrObject","hasOwn","sortingCallback","referenceImagePositionPatient","_getImagePositionPatient","refIppVec","Vector3","scanAxisNormal","cross","distanceImagePairs","ippVec","distance","clone","sub","dot","sortedImages","regex","separator","renderingAttr","wadorsuri","getWADORSImageId","wadouri","debugMode","detectionOptions","order","lookupQuerystring","lookupCookie","lookupLocalStorage","lookupFromPathIndex","lookupFromSubdomainIndex","caches","excludeCacheFor","htmlTag","documentElement","AboutModal","Buttons","Common","DatePicker","Header","UserPreferencesModal","languagesMap","ar","am","bg","bn","ca","cs","da","de","el","en","es","et","fa","fi","fil","fr","gu","he","hi","hr","hu","it","ja","kn","ko","lt","lv","ml","mr","ms","nl","no","pl","ro","ru","sk","sl","sr","sv","sw","ta","te","tr","uk","vi","zh","locizeOptions","projectId","apiKey","referenceLng","fallbacklng","envUseLocize","envApiKeyAvailable","DEFAULT_LANGUAGE","initI18n","initialized","detection","useLocize","apiKeyAvailable","customDebug","use","Backend","LastUsed","Editor","LanguageDetector","initReactI18next","fallbackLng","saveMissing","interpolation","escapeValue","locizeLastUsed","editor","onEditorSaved","reloadResources","emit","react","useSuspense","wait","bindI18n","resources","locales","pkg","initializing","addLocales","newLocales","resourceBundle","addResourceBundle","defaultLanguage","availableLanguages","availableLanguagesInfo","getAvailableLanguagesInfo","moduleName","StudyMetaDataPromises","retrieveStudyMetadata","filters","separateSeriesInstanceUIDFilters","seriesInstanceUIDs","seriesSpecificFilters","RetrieveMetadata","__separateSeriesRequestToAggregatePromiseateSeriesRequestToAggregatePromise","deleteStudyMetadataPromise","str","strLen","bytes","buffer","ObjectPath","path","components","getPathComponents","isValidObject","last","isValid","absoluteUrl","absolutePath","origin","absoluteUrlParts","rootUrlPrefixIndex","addServers","servers","store","serverType","endpoint","dispatch","imageObj","someInvalidStrings","strings","getImageInstance","getImageInstanceId","imageInstance","fetchIt","fetch","response","cornerstoneRetriever","loadAndCacheImage","wadorsRetriever","retrieveInstance","dicomLoaderService","localFile","seriesInstanceUid","a_series","findImageIdOnStudies","cornerstoneWADOImageLoader","loadFileRequest","getDicomDataMethod","loaderRegExp","loaderType","exec","lastIndex","getImageLoaderType","authorizationHeaders","wadoUri","getLocalData","getDataByImageType","getDataByDatasetType","loaderIterator","getLoaderIterator","loader","b64toBlob","b64Data","contentType","sliceSize","byteCharacters","byteArrays","byteNumbers","blob","Blob","logger","studyMetadataManager","derivedDisplaySets","getDerivedDatasets","displaySetsPerModality","isLoaded","loadError","recentDateTime","recentDisplaySet","dateTime","getSourceDisplaySet","onDisplaySetLoadFailureHandler","activatedLabelmapIndex","activatedLabelmapPromise","selectionFired","CustomEvent","dispatchEvent","lastDateTime","load","loadAndCacheDerivedDisplaySets","toLowerCaseFirstLetter","toParse","lib","getQueryFilters","searchParameters","paramString","isValidPath","paramPatternPiece","parseParam","paramStr","_paramDecoded","strToDecode","decoded","decode","replaceParam","paramKey","paramValue","paramPattern","makeDeferred","res","rej","Queue","awaiting","task","boundTask","queue","cleaner","clean","chain","SEPARATOR","addToList","addValuesToList","isSublist","sublist","toSublist","forEachValue","getItem","indexOrPath","subpath","print","prevLen","repeat","TYPE","TASK","LIST","createList","objectWithType","named","observers","isList","isOfType","createTask","isTask","progress","increaseList","getOverallProgress","update","isValidProgress","finish","seal","total","partial","failures","waitOn","thenable","addDeferred","deferred","setTaskName","getTaskByName","addObserver","observer","removeObserver","writeScript","fileName","StackManager","DicomLoaderService","urlUtil","makeCancelable","isCanceled","cancel","isDicomUid","resolveObjectPath","hierarchicalListUtils","progressTrackingUtils","noop","StudyPrefetcher","displaySetCount","onImageCached","requestType","preventCache","prefetchDisplaySetsTimeout","maxNumPrefetchRequests","includeActiveDisplaySet","stopPrefetching","events","cacheFullHandler","prefetchDisplaySets","imageLoadPoolManager","clearRequestStack","prefetchDisplaySetsHandler","displaySetsToPrefetch","getDisplaySetsToPrefetch","imageIds","getImageIdsFromDisplaySets","prefetchImageIds","requestFn","nonCachedImageIds","filterCachedImageIds","maxNumRequests","prefetch","addRequest","metaData","displaySetImage","getActiveViewportImage","getStudy","getSeries","getInstance","activeDisplaySet","getDisplaySetByUID","getDisplaySetBySOPInstanceUID","prefetchOrder","getDisplaySets","topdown","downward","upward","closest","selectedDisplaySets","activeDisplaySetIndex","begin","right","getImageIdsFromDisplaySet","numFrames","isImageCached","imageCache","sizeInBytes","BaseLoadingListener","getNewId","statsItemsLimit","stats","elapsedTime","speed","_setProgressData","_clearProgressById","_addStatsData","_updateProgress","oldestItem","getTime","progressId","_getProgressId","stopListening","_clearProgress","timeSlice","randomNumber","DICOMFileLoadingListener","dataSetUrl","_convertImageIdToDataSetUrl","bytesDiff","loaded","_lastLoaded","_dataSetUrl","imageLoadProgressEventHandler","_imageLoadProgressEventHandler","_getDataSetUrl","_checkCachedData","startListening","dataSet","dataSetCacheManager","dataSetLength","percentComplete","imageLoadProgressEventName","_getImageLoadProgressEventName","imageLoadProgressEventHandle","progressData","multiFrame","bytesLoaded","bytesTotal","bytesPerSecond","StudyLoadingListenerEvents","OnProgress","promiseState","uniqueValue","race","reason","StackLoadingListener","imageLoadedEventHandler","_imageLoadedEventHandler","imageCachePromiseRemovedEventHandler","_imageCachePromiseRemovedEventHandler","imageDataMap","_convertImageIdsArrayToMap","framesStatus","_createArray","loadedCount","_debouncedSetProgressData","debounce","studyPrefetcher","getElement","imageIdsMap","debounced","imageObject","getImageLoadObject","_updateFrameStatus","IMAGE_LOADED","IMAGE_CACHE_PROMISE_REMOVED","imageLoadedEventName","_getImageLoadedEventName","imageCachePromiseRemovedEventName","_getImageCachePromiseRemoveEventName","imageData","totalFramesCount","loadedFramesCount","loadingFramesCount","ceil","framesPerSecond","progressBar","ch","StudyLoadingListener","listeners","stackMetaData","listener","_createListener","findOrCreateStack","addStack","addStudy","displaySetInstanceUIDs","destroy","_getSchema","colonIndex","_subscriptions","_lastSubscriptionId","PubSub","eventName","subscriptionId","callbacks","payload","LogEvents","OHIFStudyMetadataSource","studyInfo","Studies","_updateStudyCollections","getByInstanceUID","createDisplaySets","MetadataProvider","imagesTypes","LOW_PRIORITY_MODALITIES","fields","n_fields","A","primer","stackMap","configuration","stackUpdatedCallbacks","createAndAddStack","numImages","imageIndex","naturalizedInstance","frameNumber","addImageIdToUIDs","clearStacks","makeAndAddStack","findStack","getAllStacks","addStackUpdatedCallback","getConfiguration","setConfiguration","PROPERTY_SEPARATOR","ORDER_ASC","ORDER_DESC","MIN_COUNT","_operationCount","_elementList","_handlers","silent","_elements","handlers","_isFunction","_elementWithPayload","_invalidate","_elementWithId","_trigger","propertyMap","findAllEntriesBy","foundCount","removed","_isObject","_compareToPropertyMapStrict","_sortListBy","_isString","_hasOwnProperty","_getPropertyValue","targetObject","fragments","fragmentCount","firstFragment","remainingFragments","specifiers","_isValidSortingSpecifier","specifierCount","specifier","aValue","bValue","arrowAnnotate","toolGroup","cornerstoneToolType","measurementTable","displayFunction","caseProgress","include","evaluate","bidirectional","shortestDiameter","longestDiameter","ellipticalRoi","meanValue","cachedStats","mean","isNaN","circleRoi","freehandMouse","meanStdDev","lengthValue","nonTarget","rectangleRoi","angle","rAngle","fromCharCode","targetCR","targetNE","targetUN","dicomSRDisplayTool","TrackingIdentifier","lesionNamingNumber","childTools","tools","measurementApiDefaultConfig","measurementTools","newLesions","toolGroupId","dataExchange","retrieve","timepointIds","timepointData","timepointId","disassociate","TIMEPOINT_TYPE_NAMES","prebaseline","baseline","followup","TimepointApi","currentTimepointId","Instance","initialize","comparisonTimepointKey","onTimepointsUpdated","visitNumber","tp1","tp2","visitDate","tp","timepointType","retrievalFn","timepointIndex","storeFn","JSON","stringify","disassociateFn","retrieveTimepoints","removeFn","tpIndex","updateFn","prior","comparisonTimepoint","comparison","userComparison","nextBaselineAfterCurrent","currentTimepoint","allNextTimepoints","latestInitialBeforeNextFUIndex","timepointToCheck","latestInitialTimepointAfterCurrent","visitDateToCheck","preBaselineTimepointIds","baselineTimepointIds","currentVisitDate","nadir","timepointKey","resultIncludes","studyInstanceUIDs","timepointTypeName","calculateVisitNumber","timepointName","currentIndex","parenthesis","0","1","parenthesisText","toolType","imagePath","frameIndex","MeasurementApi","timepointApi","toolsGroupsMap","getToolsGroupsMap","measurementLabel","getLabel","toolState","globalImageIdSpecificToolStateManager","saveToolState","getToolConfiguration","childToolKey","childMeasurement","_id","syncMeasurementAndToolData","getImageIdForImagePath","currentToolState","toolData","alreadyExists","restoreToolState","toolGroups","toolGroupTools","getToolGroupTools","onMeasurementsUpdated","measurementTypeId","addMeasurement","syncMeasurementsAndToolData","getEnabledElements","updateImage","isToolIncluded","timepointFilter","sortedMeasurements","toolId","toolItemId","includedChildTools","toolConfig","parentTool","currentMeasurement","initialTimepointIds","initialtpid","lesionExistsAtTimepoints","groupId","toolGroupMeasurement","isNewLesionsMeasurement","maxTargetMeasurementNumber","calculateLesionMaxMeasurementNumber","maxNonTargetMeasurementNumber","maxNewTargetMeasurementNumber","calculateNewLesionMaxMeasurementNumber","maxNewNonTargetMeasurementNumber","additionalData","TrialPatientLocationUID","childToolTypes","childToolType","collectionToUpdate","propertyFilter","increment","updateNumbering","groupCollection","collection","relatedMeasurement","emptyItem","groupTool","createdAt","measurementsInTimepoint","calculateLesionNamingNumber","calculateMeasurementNumber","addedMeasurement","updateObject","getPreviousMeasurement","isSplitLesion","isNodal","getDescription","hasDuplicateMeasurementNumber","updateMeasurementNumberForAllMeasurements","toolIndex","groupIndex","group","lesionNamingNumberFilter","tGroup","childTool","filterKeys","groupItems","filterKey","groupItem","measurementsData","measurementEntries","measurementEntry","mEntry","onMeasurementRemoved","syncFilter","syncFilterKeys","syncFilterKey","BaseCriterion","criterionName","isGlobal","baselineMeasurementNumbers","newTargetNumbers","newTarget","targets","LocationSchema","LocationCriterion","nonTargets","generateResponse","MaxTargetsPerOrganSchema","minimum","MaxTargetsPerOrganCriterion","targetsPerOrgan","getNewTargetNumbers","MaxTargetsSchema","locationIn","minItems","uniqueItems","locationNotIn","MaxTargetsCriterion","measurementNumbers","lesionType","plural","amount","MeasurementsLengthSchema","longAxis","shortAxis","longAxisSliceThicknessMultiplier","shortAxisSliceThicknessMultiplier","modalityIn","modalityNotIn","anyOf","MeasurementsLengthCriterion","longMultiplier","shortMultiplier","childToolsCount","ModalitySchema","enum","measurementTypes","ModalityCriterion","modalitiesSet","validationMethod","invalidModalities","measurementType","uniqueModalities","uniqueModalitiesText","modalityText","NonTargetResponseSchema","NonTargetResponseCriterion","TargetTypeSchema","TargetTypeCriterion","Criteria","initialCriteria","CriteriaEvaluator","criteriaObject","criteriaValidator","getCriteriaValidator","criteria","dataPath","criterionkey","optionsObject","Criterion","criterionKey","criterionDefinitions","criterion","newTargetMatch","schema","definitions","criterionDefinition","$ref","Ajv","compile","nonconformities","criterionResult","recist11","evaluations","initialEvaluations","ConformanceCriteria","measurementApi","groupedNonConformities","maxTargets","maxNewTargets","trialCriteriaType","baselinePromise","followupPromise","baselineData","followupData","mergedData","resultBoth","validateTimepoint","resultBaseline","resultFollowup","groupNonConformities","groups","nonConformity","globals","messages","measureNumber","evaluators","getEvaluators","evaluator","getMaxTargets","resultItem","trialCriteriaTypeId","evaluation","evaluationTimepoint","studyPromises","fillData","evaluationKey","evaluationDefinitions","refreshCornerstoneViewports","handleSingleMeasurementAdded","cancelled","imageAttributes","getImageAttributes","userId","additionalProperties","parentMeasurement","updateMeasurement","getViewport","handleSingleMeasurementRemoved","deleteMeasurements","measurementIndex","getEventData","toolName","MeasurementHandlers","handleChildMeasurementAdded","handleSingleMeasurementModified","handleChildMeasurementModified","handleChildMeasurementRemoved","onAdded","params","onModified","onRemoved","temp","ltTools","resultDataToStudyMetadata","resultData","seriesMap","wadoUriRoot","dateToString","getFullYear","getMonth","getDate","resultDataToStudies","referringPhysicianName","PatientBirthdate","patientSex","studyId","numberOfStudyRelatedSeries","numberOfStudyRelatedInstances","staticWado","qidoRoot","StaticWadoClient","qidoSupportsIncludeField","queryParams","serverSupportsQIDOIncludeField","commaSeparatedFields","parameters","fuzzymatching","includefield","dateFrom","dateTo","studyUIDs","getQIDOQueryParams","searchForStudies","WADO","QIDO","Instances","searchForInstances","studySearchPromises","services","loadingDict","retrieveStudiesMetadata","getStudyBoxData","searchStudies","promiseKeyObj","promiseKey","sortStudy","getWADORSImageUrl","INFO","getSeriesInfo","isLowPriority","seriesSortCriteria","seriesInfoSortingCriteria","secondSeries","instancesSortCriteria","sortingCriteria","sortStudySeries","seriesSortingCriteria","sortStudyInstances","instancesList","instancesSortingCriteria","deepSort","UrlUtil","IHEInvokeImageDisplay","ViewerRouting","StudyListRouting","StandaloneRouting","ViewerLocalFileData","ROUTES_DEF","standaloneViewer","condition","showStudyList","local","gcloud","enableGoogleCloudAdapter","getRoutes","routes","keyConfig","routesConfig","routeKey","route","parsePath","_path","_paramsCopy","parseViewerPath","viewerPath","parseStudyListPath","studyListPath","getReferencedSeriesSequence","referencedSeriesSequenceRaw","referencedSeriesSequence","referencedSeries","referencedInstanceSequenceRaw","referencedInstanceSequence","referencedInstance","referencedSOPClassUID","referencedSOPInstanceUID","createStudy","aSopInstance","seriesLoader","NumberOfStudyRelatedInstances","InstitutionName","buildInstanceWadoUrl","buildInstanceWadoRsUri","buildInstanceFrameWadoRsUri","baseWadoRsUri","makeSOPInstance","sopInstance","imageRendering","thumbnailRendering","wadoRSMetadata","wadorsImageId","wadors","metaDataManager","addInstancesToStudy","sopInstanceList","createStudyFromSOPInstanceList","firstSopInstance","RetrieveMetadataLoader","configLoad","preLoad","preLoadData","loadData","posLoad","postLoadData","loaders","done","RetrieveMetadataLoaderSync","client","retrieveSeriesMetadata","getLoaders","runLoaders","attachSeriesLoader","hasNext","sopInstances","makeSeriesAsyncLoader","seriesInstanceUIDList","RetrieveMetadataLoaderAsync","preLoaders","searchForSeries","getPreLoaders","seriesSorted","seriesInstanceUIDsMap","seriesAsyncLoader","asyncLoader","seriesDataFromQIDO","enableStudyLazyLoad","retrieveMetadataLoader","execLoad","ViewportErrorIndicator","bottom","pointerEvents","ViewportLoadingIndicator","ImageThumbnail","loadingOrError","cancelablePromise","imageSrc","stackPercentComplete","propsError","showProgressBar","setLoading","setImage","canvasRef","showStackLoadingProgressBar","shouldRenderToCanvas","fetchImagePromise","setImagePromise","purgeCancelablePromise","renderToCanvas","ThumbnailFooter","hasDerivedDisplaySets","inconsistencyWarnings","inconsistencyWarningsSet","derivedDisplaySetsActive","derivedDisplaySetsActiveSet","unmounted","infoOnly","getInfo","getDerivedInfo","getWarningInfo","getSeriesInformation","altImageText","onDoubleClick","onMouseDown","supportsDrag","setStackPercentComplete","onProgressChange","throttle","percent","useDrag","canDrag","monitor","drag","hasImage","hasAltText","qidoConfig","searchResult","filtered","filterItem","desired","actual","compareValues","actualItem","range","dash","testValue","valueElem","compareDateRange","createSelector","activeViewportIndex","layout","layoutViewports","activeLayoutViewport","activeViewportSpecificData","activeViewportPluginName","activeViewportExtension","defaultContextValues","createLogoComponentFn","OHIFLogo","WhiteLabelingContext","getAppState","contexts","_getAppState","_getActiveContexts","contextName","clearContext","commandName","definition","getContext","foundCommand","activeContext","getCommand","commandFn","storeContexts","definitionOptions","commandParams","appState","commandsManager","servicesManager","hotkeyDefinitions","hotkeyDefaults","isEnabled","_servicesManager","_commandsManager","_getValidDefinitions","registerHotkeys","_parseToArrayLike","hotkeyDefinitionsObj","copy","entryValue","_parseToHotKeyObj","previouslyRegisteredDefinition","previouslyRegisteredKeys","_unbindHotkeys","_bindHotkeys","setHotkeys","combinedKeys","runCommand","unbind","CodeNameCodeSequenceValues","ImagingMeasurementReport","ImageLibrary","ImagingMeasurements","MeasurementGroup","ImageLibraryGroup","TrackingUniqueIdentifier","Finding","FindingSite","CornerstoneFreeText","Score","RELATIONSHIP_TYPE","INFERRED_FROM","SELECTED_FROM","CodingSchemeDesignators","SRT","cornerstoneTools4","getSequenceAsArray","getLabelFromMeasuredValueSequence","ConceptNameCodeSequence","MeasuredValueSequence","CodeMeaning","NumericValue","CodeValue","MeasurementUnitsCodeSequence","formatedNumericValue","getCoordsFromSCOORDOrSCOORD3D","graphicItem","ValueType","coords","GraphicType","GraphicData","ReferencedSOPSequence","ContentSequence","ReferencedFrameOfReferenceUID","ReferencedFrameOfReferenceSequence","processTID1410Measurement","contentSequence","UIDREFContentItem","TrackingIdentifierContentItem","NUMContentItems","UID","TextValue","RelationshipType","coord","processNonGeometricallyDefinedMeasurement","CODEContentItems","IMAGEContentItem","FindingSites","CodingSchemeDesignator","ConceptCodeSequence","cornerstoneFreeTextFindingSite","SCOORD_TYPES","labelCodingSchemeDesignator","valueCodingSchemeDesignator","processMeasurement","ImagingMeasurementReportContentSequence","MeasurementGroups","getReferencedImagesList","referencedImages","ReferencedSOPClassUID","cornerstoneAdapters","adapters","Cornerstone","TOOL_NAMES","DICOM_SR_DISPLAY_TOOL","getRenderableData","imageMetadata","renderableData","orientation","sliceSpacing","M","M1","inv","worldToIJK","point","z","center","onPerimeter","radius","csMath","majorAxis","minorAxis","minorAxisLength","minorAxisDirection","halfMinorAxisLength","corner1","corner2","csTools","imageIdToolState","addToMeasurementApi","checkIfCanAddMeasurementsToDisplaySet","srDisplaySet","imageDisplaySet","sliceNormal","distanceAlongNormal","SOPInstanceUIDs","colors","SRLabels","parseSCOORD3D","srDisplaySets","imageDisplaySets","mappings","getSourceMappings","isHydrated","isRehydratable","mappingDefinitions","adapterKeys","adapterKey","isValidCornerstoneTrackingIdentifier","adapter","findInstanceMetadataBySopInstanceUID","instanceFound","getImagePath","parseDicomStructuredReport","part10SRArrayBuffer","external","seriesDescription","storedMeasurementByToolType","MeasurementReport","generateToolState","isToolSupported","parseMeasurementsData","unsupportedTools","annotation","generateReport","getAllDisplaySets","retrieveMeasurementFromSR","serverUrl","stowSRFromMeasurements","DicomDict","FileMetaInformationVersion","_meta","MediaStorageSOPClassUID","MediaStorageSOPInstanceUID","TransferSyntaxUID","ImplementationClassUID","ImplementationVersionName","denaturalized","denaturalizeDataset","dicomDict","part10Buffer","write","storeInstances","isStructuredReportSeries","compareSeriesDate","series1","series2","findMostRecentStructuredReport","mostRecentStructuredReport","retrieveMeasurements","latestSeries","storeMeasurements","firstMeasurementKey","firstMeasurement","actions","setViewportActive","setViewportLayoutAndData","clearViewportSpecificData","setActiveViewportSpecificData","setUserPreferences","setExtensionData","setTimepoints","setMeasurements","setStudyData","setServers","defaultState","extensions","extensionName","currentData","incomingData","windowLevelData","2","3","4","5","6","7","9","10","generalPreferences","preferences","uniqBy","newServer","newServers","updatedStudyData","timepointManager","setAutoFreeze","DEFAULT_STATE","findActiveViewportSpecificData","currentViewportSpecificData","numberOfViewports","getActiveViewportIndex","currentActiveViewportIndex","reducers","useActiveViewport","produce","draftState","LocalStorageApi","localStorage","saveState","serializedState","setItem","loadState","SessionStorageApi","sessionStorage","Hammer","cornerstoneMath","loadHandlerManager","setErrorLoadingHandler","fontFamily","setFont","toolStyle","setToolWidth","toolColors","setToolColor","setActiveColor","touchProximity","stackPrefetch","maxImagesToPrefetch","preserveExistingPool","maxSimultaneousRequests","SUPPORTED_TOOLS","measurementServiceMappingsFactory","measurementService","_getAttributes","_getValueTypeFromToolType","VALUE_TYPES","POLYLINE","Length","EllipticalRoi","ELLIPSE","RectangleRoi","ArrowAnnotate","POINT","_getPointsFromHandles","points","handle","_getHandlesFromPoints","toAnnotation","unit","referenceSeriesUID","_measurementServiceId","toMeasurement","csToolsAnnotation","area","trackingIdentifiersByEnabledElementUUID","getters","trackingUniqueIdentifiersForElement","uuid","trackingUniqueIdentifiers","setters","activeIndex","activeTrackingUniqueIdentifierForElement","trackingIdentifiersForElement","tuid","register","srModuleId","dicomSRModule","callInputDialog","InputDialog","useLastPosition","csToolsConfig","Infinity","addProvider","initCornerstoneTools","globalToolSyncEnabled","showSVGCursors","autoResizeViewports","toolsGroupedByType","touch","PanMultiTouchTool","ZoomTouchPinchTool","annotations","ArrowAnnotateTool","BidirectionalTool","LengthTool","AngleTool","FreehandRoiTool","EllipticalRoiTool","DragProbeTool","RectangleRoiTool","other","PanTool","ZoomTool","WwwcTool","WwwcRegionTool","MagnifyTool","StackScrollTool","StackScrollMouseWheelTool","OverlayTool","toolsGroup","_connectToolsToMeasurementService","internalToolsConfig","getTextCallback","eventDetails","changeTextCallback","externalToolProps","internalToolProps","merge","toolsWithHideableHandles","parsedProps","hideHandles","drawHandlesOnHover","parseToolProps","addTool","BaseAnnotationTool","importInternal","setToolPassive","setToolActive","mouseButtonMask","pointers","setToolEnabled","csToolsVer4MeasurementSource","createSource","matchingCriteria","valueType","addMapping","_initMeasurementService","sourceId","addOrUpdate","getAnnotation","ELEMENT_ENABLED","MEASUREMENT_ADDED","MEASUREMENT_UPDATED","source","addMeasurementServiceId","MEASUREMENT_MODIFIED","csToolsEvtName","csTool","measurementServiceId","addOrUpdateMeasurement","setCornerstoneLayout","CornerstoneViewportDownloadForm","activeEnabledElement","enable","disable","fitToWindow","updateViewport","toDataURL","newWidth","newHeight","multiplier","scale","translation","displayImage","setViewport","resize","toggle","setToolEnabledForElement","setToolDisabledForElement","file","mimetype","msToBlob","msSaveBlob","toBlob","URLObj","URL","webkitURL","createObjectURL","download","click","scroll","import","commandsModule","rotateViewport","rotation","flipViewportHorizontal","hflip","flipViewportVertical","vflip","scaleViewport","resetViewport","invertViewport","invert","clearAnnotations","measurementsToRemove","nextImage","previousImage","getActiveViewportEnabledElement","showDownloadViewportModal","updateTableWithNewMeasurementData","getNearbyToolData","canvasCoordinates","availableToolTypes","nearbyTool","pointNearTool","elementToolData","getToolState","elementToolInstance","getToolForElement","removeToolState","setWindowLevel","voi","jumpToImage","refreshViewports","rotateViewportCW","rotateViewportCCW","scaleUpViewport","scaleDownViewport","fitViewportToWindow","setZoomTool","defaultContext","TOOLBAR_BUTTON_TYPES","COMMAND","SET_TOOL_ACTIVE","BUILT_IN","TOOLBAR_BUTTON_BEHAVIORS","CINE","DOWNLOAD_SCREEN_SHOT","commandOptions","behavior","togglable","lazy","OHIFCornerstoneViewport","Suspense","preRegistration","getViewportModule","isStackPrefetchEnabled","enabled","onNewImage","jumpData","getToolbarModule","toolbarModule","getCommandsModule","oidcSettings","settings","automaticSilentRenew","revokeAccessTokenOnSignout","filterProtocolClaims","userManager","createUserManager","loadUser","MAX_CONCURRENCY","middleware","thunkMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","oidc","oidcReducer","rootReducer","combineReducers","preloadedState","disableServersCache","createStore","applyMiddleware","getState","updateActiveViewport","maxIndex","newIndex","setWindowLevelPreset","updateViewportDisplaySet","currentDisplaySetIndex","newDisplaySetData","incrementActiveViewport","decrementActiveViewport","windowLevelPreset1","windowLevelPreset2","windowLevelPreset3","windowLevelPreset4","windowLevelPreset5","windowLevelPreset6","windowLevelPreset7","windowLevelPreset8","windowLevelPreset9","nextViewportDisplaySet","previousViewportDisplaySet","getMeasurementText","getDataForEachMeasurementNumber","measurementNumberList","eachData","convertMeasurementsToTableData","toolCollections","getAllTools","tableMeasurements","toolMeasurements","groupedMeasurements","groupedMeasurementsIndex","measurementId","tableMeasurement","tm","m1","m2","convertTimepointsToTableData","latestDate","ConnectedMeasurementTable","connect","getSaveFunction","ownProps","dispatchRelabel","viewportsState","persist","toolForLocation","dispatchEditDescription","dispatchJumpToRowItem","timepointManagerState","invertViewportTimepointsOrder","vtk","numTimepoints","numViewportsToUpdate","measurementsForToolGroup","measurementsToJumpTo","dataAtThisTimepoint","displaySetContainsSopInstance","jumpToRowItem","measurementToActive","propsFromState","propsFromDispatch","LabellingTransition","displayComponent","onTransitionExit","OHIFLabellingData","EditDescriptionDialog","onUpdate","autoComplete","LabellingFlow","editLocation","editDescription","skipAddLabelButton","updateLabelling","labellingDoneCallback","editDescriptionOnDialog","fadeOutTimer","setFadeOutTimer","showComponent","setShowComponent","descriptionInput","newMeasurementData","newEditLocation","focus","relabel","setDescriptionUpdateMode","descriptionCancel","handleKeyPress","descriptionSave","selectTreeSelectCallback","itemSelected","locationLabel","showLabelling","fadeOutAndLeaveFast","onKeyPress","labellingStateFragment","initialTopDistance","toolTypes","ToolContextMenu","onSetLabel","onSetDescription","isTouchEvent","defaultDropdownItems","actionType","nearbyToolData","dropdownItems","currentPoints","getDropdownItems","MEASUREMENT_ACTION_MAP","added","modified","onMeasurementsChanged","onMeasurementAdded","onMeasurementModified","onLabelmapModified","_getDefaultPosition","showLabellingDialog","labellingData","_updateLabellingHandler","onTouchPress","onTouchStart","resetLabelligAndContextMenu","cornerstoneMouseClickEvent","onRightClick","MEASUREMENT_REMOVED","LABELMAP_MODIFIED","TOUCH_PRESS","MOUSE_CLICK","TOUCH_START","ELEMENT_DISABLED","getPanelModule","menuOptions","Bar","animationDuration","background","marginLeft","boxShadow","opacity","transform","Container","isFinished","CallbackPage","OHIFStandaloneViewer","unlisten","history","listen","setContext","pathname","expired","exact","RoutesUtil","render","successCallback","errorCallback","URLSearchParams","iss","loginHint","targetLinkUri","authority","removeUser","ohifRedirectTo","signinRedirect","login_hint","getUser","signinSilent","currentPath","noMatchingRoutes","matchPath","isAnimating","NotFound","ConnectedOHIFStandaloneViewer","ViewerbaseDragDropContext","withRouter","extensionManager","commandsManagerConfig","hotkeysManager","ohif","app","App","defaultExtensions","_appConfig","cornerstoneExtensionConfig","routerBasename","homepage","appConfigHotkeys","env","PUBLIC_URL","access_token","httpErrorHandler","configure","beforeSend","xhr","setRequestHeader","initUserManager","registerServices","hooks","requiredExtensions","GenericViewerCommands","OHIFCornerstoneExtension","disableMeasurementPanel","MeasurementsPanel","mergedExtensions","registerExtensions","_initExtensions","userPreferredHotkeys","setDefaultHotKeys","_initHotkeys","_initServers","maxWebWorkers","hardwareConcurrency","startWebWorkersOnDemand","taskConfiguration","decodeTask","initializeCodecsOnStartup","usePDFJS","strict","webWorkerManager","initWebWorkers","whiteLabeling","_userManager","UserManagerContext","basename","firstOpenIdClient","host","baseUri","redirect_uri","silent_redirect_uri","post_logout_redirect_uri","openIdConnectConfiguration","_makeAbsoluteIfNecessary","getUserManagerForOpenIdConnectClient","base_url","_isAbsoluteUrl","ExportedApp","showGoBackButton","to","StudyBrowser","onThumbnailClick","onThumbnailDoubleClick","showThumbnailProgressBar","thumb","thumbIndex","derivedDisplaySetsNumber","flat","COMMANDS","PANEL","SOP_CLASS_HANDLER","TOOLBAR","VIEWPORT","VTKViewport","setViewportActiveHandler","handleScrollEvent","ConnectedVTKViewport","dataFromStore","pluginDetails","enableStackPrefetch","afterCreation","onCreated","LoadingIndicator","percComplete","segmentationModule","getModule","volumeCache","labelmapCache","OHIFVTKViewport","volumes","paintFilterLabelMapImageData","paintFilterBackgroundImageData","labelmapDataObject","labelmapColorLUT","getCornerstoneStack","imageDataObject","getImageData","firstImageId","brushStackState","activeLabelmapIndex","labelmap3D","labelmaps3D","segmentsDefaultProperties","segmentsHidden","isHidden","vtkLabelmapID","labelmapBuffer","vtkImageData","newInstance","dataArray","vtkDataArray","numberOfComponents","getPointData","setScalars","setSpacing","getSpacing","setOrigin","getOrigin","setDirection","getDirection","colorLutTables","colorLUTIndex","storedStack","imageMetaData0","lower","upper","_getRangeFromWindowLevels","volumeActor","vtkVolume","volumeMapper","vtkVolumeMapper","setMapper","setInputData","getProperty","getRGBTransferFunction","setRange","sampleDistance","setSampleDistance","setMaximumSamplesPerRay","dataDetails","getViewportData","getOrCreateVolume","loadProgressively","setStateFromProps","prevDisplaySet","loadImageData","onPixelDataInserted","numberProcessed","onAllPixelDataInserted","onPixelDataInsertedError","childrenWithProps","labelmapRenderingOptions","colorLUT","globalOpacity","fillAlpha","renderFill","outlineThickness","outlineWidth","renderOutline","onNewSegmentationRequested","webpackContext","req","webpackContextResolve","setLayoutAndViewportData","setMPRLayout","viewportPropsArray","apis","viewportProps","setViewportToVTK","BlendMode","Constants","defaultVOI","_getActiveViewportVTKApi","_setView","viewUp","renderWindow","genericRenderWindow","getRenderWindow","istyle","getInteractor","getInteractorStyle","setSliceNormal","setViewUp","getVOIFromCornerstoneViewport","dom","cornerstoneElement","setVOI","updateVOI","_convertModelToWorldSpace","indexToWorld","getIndexToWorld","vec3","transformMat4","getVtkApis","resetMPRView","resetOrientation","svgWidgets","rotatableCrosshairsWidget","resetCrosshairs","axial","sagittal","coronal","requestNewSegmentation","allViewports","jumpToSlice","segmentNumber","pixelIndex","worldPos","moveCrosshairs","setSegmentationConfiguration","setGlobalOpacity","setVisibility","setOutlineThickness","setOutlineRendering","setSegmentConfiguration","setSegmentVisibility","enableRotateTool","apiIndex","vtkInteractorStyleMPRRotate","setInteractorStyle","enableCrosshairsTool","vtkInteractorStyleRotatableMPRCrosshairs","getReferenceLines","enableLevelTool","throttledUpdateVOIs","trailing","setOnLevelsChanged","vtkInteractorStyleMPRWindowLevel","setSlabThickness","slabThickness","changeSlabThickness","change","getSlabThickness","setBlendModeToComposite","mapper","getMapper","setBlendModeToMaximumIntensity","setBlendMode","blendMode","mpr2d","cornerstoneVOI","addSVGWidget","vtkSVGRotatableCrosshairsWidget","setApiIndex","setApis","firstApi","openGLRenderWindow","getOpenGLRenderWindow","getWebgl2","openGLContext","maxTextureSizeInBytes","getParameter","MAX_TEXTURE_SIZE","maxBufferLengthFloat32","getInputData","getDimensions","vtkActions","COMPOSITE_BLEND","MAXIMUM_INTENSITY_BLEND","setBlendModeToMinimumIntensity","MINIMUM_INTENSITY_BLEND","setBlendModeToAverageIntensity","AVERAGE_INTENSITY_BLEND","increaseSlabThickness","decreaseSlabThickness","getVtkApiForViewportIndex","SLIDER","ToolbarLabel","ToolbarSlider","_getSelectOptions","operationButtons","_getClassNames","_applySlabThickness","modeChecked","toolbarClickCallback","generatedOperation","generateOperation","actionButton","_applyModeOperation","deactivateButton","_operation","_getInitialState","currentSelectedOption","sliderMin","sliderMax","INITIAL_OPTION_INDEX","_getInitialtSelectedOption","SlabThicknessToolbarComponent","parentContext","_className","selectOptions","selectedValue","isVisible","_isDisplaySetReconstructable","VTKMPRToolbarButton","CustomComponent","withCommandsManager","vtkExtension","BASIC_TEXT_SR","ENHANCED_SR","COMPREHENSIVE_SR","COMPREHENSIVE_3D_SR","PROCEDURE_LOG_STORAGE","MAMMOGRAPHY_CAD_SR","CHEST_CAD_SR","X_RAY_RADIATION_DOSE_SR","ACQUISITION_CONTEXT_SR_STORAGE","OHIFDicomHtmlSopClassHandler","sopClassUids","OHIFDicomHtmlViewport","getSopClassHandlerModule","draw","drawLine","getNewContext","_drawCanvasCrosshairs","canvasContext","centerCanvas","DICOM_SEG_TEMP_CROSSHAIRS_TOOL","DICOMSegTempCrosshairsTool","mixins","initialProps","_rtStructModule","drawCanvasCrosshairs","getActiveColor","lineWidth","pop","addCrosshair","stackToolState","imageIdIndex","imgId","labelmaps2D","xCenter","yCenter","globalToolState","imageIdSpecificToolState","loadSegmentation","segDisplaySet","segMetadata","segmentsOnFrame","labelmapSegments","labelmapIndex","_getNextLabelmapIndex","_makeColorLUTAndGetIndex","labelmap3DByFirstImageId","_getNextColorLUTIndex","segment","ROIDisplayColor","RecommendedDisplayCIELabValue","rgb","Colors","dicomlab2RGB","setActiveLabelmap","onDisplaySetLoadFailure","getFirstImageId","hasOverlapping","originLabelMapIndex","segLoadErrorMessagge","activateLabelMap","DICOM_SEG","_parseSeg","tolerance","skipOverlapping","cornerstoneToolsVersion","Segmentation","_getImageIdsForDisplaySet","BrushColorSelector","defaultColor","onNext","onPrev","BrushRadius","SegmentationItem","SegmentationSettings","onBack","disabledFields","shouldRenderInactiveLabelmaps","outlineAlpha","fillAlphaInactive","outlineAlphaInactive","segsTolerance","toFloat","CustomCheck","CustomRange","SegmentItem","onVisibilityChange","setIsVisible","data-tip","data-for","place","newVisibility","computedstyle","getComputedStyle","uiGrayDarker","getPropertyValue","activeColor","uiGrayDark","segmentationSelectStyles","singleValue","control","cursor","borderRadius","isFocused","borderColor","minHeight","menu","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","SegmentationSelect","formatOptionLabel","styles","SegmentationPanel","onSegmentItemClick","onSegmentVisibilityChange","onConfigurationChange","onSelectedSegmentationChange","isVTK","DEFAULT_BRUSH_RADIUS","brushRadius","brushColor","selectedSegment","selectedSegmentation","showSettings","labelMapList","segmentList","segmentNumbers","isDisabled","getActiveViewport","updateSegDisplaySetsTolerance","getActiveLabelMaps3D","getBrushStackState","getActiveSegmentIndex","activeSegmentIndex","getActiveLabelMaps2D","setActiveSegment","segmentIndex","newLabelmapIndex","labelmapModifiedHandler","refreshSegmentations","updateSegmentationComboBox","getLabelMapList","getSegmentList","numbers","_getReferencedSegDisplaysets","segDisplay","dateStr","displayDate","setCurrentSelectedSegment","validIndexList","labelMap2D","segmentsOnLabelmap","average","curr","labelMaps3D","currentDisplaySet","getCurrentDisplaySet","getColorLUTTable","onSegmentVisibilityChangeHandler","segmentationSeriesInstanceUID","uniqueSegmentIndexes","labelmap2D","segmentIndexes","colorLutTable","hasLabelmapMeta","segmentLabel","segmentMeta","SegmentNumber","SegmentLabel","sameSegment","selectedSegmentationOption","newConfiguration","referencedDisplaysets","aNumber","SegmentsSection","defaultVisibility","BrushTool","SphericalBrushTool","CorrectionScissorsTool","alwaysEraseOnClick","triggerSegmentationPanelTabUpdatedEvent","referencedDS","referencedDisplaySetUID","findDicomDataPromise","segArrayBuffer","namifyDataset","labelmapBufferArray","segmentsOnFrameArray","labelmapIndexes","RTSTRUCT_DISPLAY_TOOL","drawCircle","drawJoinedLines","RTStructDisplayTool","rtstructModule","crossHairCenter","highlightOpacity","structureSet","structureSetSeriesInstanceUid","ROIContourData","ROIContour","ROINumber","colorArray","highlight","_renderClosedPlanar","_renderPoint","_renderOpenPlanar","_toolDataContainsROIContour","toolDataI","StructureSets","getStructureSet","getROIContour","ROIContours","_setStructureSetVisible","StructureSet","_setROIContourVisible","structuresSetsWhichReferenceSeriesInstanceUid","structureSetReferencesSeriesInstanceUid","imageIdOfCenterFrameOfROIContour","imageIdsInStack","rtStructDisplayToolName","imageIdIndicies","structureSetData","hideROIContour","showROIContour","toggleROIContour","hideStructureSet","showStructureSet","toggleStructureSet","defaultConfig","RT_STRUCT_DISPLAY_TOOL","transformPointsToImagePlane","imagePlane","deltaI","deltaJ","X","Y","S","ix","iy","largestDirectionCosineMagnitude","ci","directionCosineMagnitude","pointI","rtStructDisplaySet","rtStructModule","rtStructDataset","StructureSetROISequence","ROIContourSequence","RTROIObservationsSequence","StructureSetLabel","imageIdSopInstanceUidPairs","_getImageIdSopInstanceUidPairsForDisplaySet","ReferencedROINumber","ContourSequence","isSupported","objOrArray","ContourSequenceArray","ContourImageSequence","ContourData","NumberOfContourPoints","ContourGeometricType","_getClosestSOPInstanceUID","_getImageId","imageIdSpecificToolData","_getOrCreateImageIdSpecificToolData","_setROIContourMetadata","_setToolEnabledIfNotEnabled","StructureSetROI","structureSetROI","ROIName","ROIGenerationAlgorithm","ROIDescription","colorForSegmentIndexColorLUT","_setROIContourDataColor","RTROIObservations","ObservationNumber","ROIObservationDescription","RTROIInterpretedType","ROIInterpreter","_setROIContourRTROIObservations","imageIdSopInstanceUidPairsEntry","pair","imagePlaneModule","P","Q","N","C","D","distanceFromPointToPlane","DICOM_RT_STRUCT","_getSequenceAsArray","OHIFDicomRTStructSopClassHandler","referencedFrameOfReference","RTReferencedStudySequence","rtReferencedStudy","RTReferencedSeriesSequence","rtReferencedSeries","ReferencedInstanceSequence","contourImage","_deriveReferencedSeriesSequenceFromFrameOfReferenceSequence","loadRTStruct","StructureSetItem","dcmrtClassNames","warningIcon","tableListItem","RTSettings","expand","shapeRendering","viewBox","preserveAspectRatio","rx","ry","fill","keyTimes","dur","repeatCount","PanelSection","expanded","loading","hideVisibleButton","onExpandChange","setIsExpanded","newExpandValue","RTPanel","onContourItemClick","selectedContour","setSelectedContour","sets","selectedSet","isLocked","setShowSettings","updateStructureSets","viewportSets","defaultSet","toContourItem","loadedSet","interpretedType","isSameContour","rtData","conifg","triggerRTPanelUpdatedEvent","contourData","sopClassHandlerModule","DicomMicroscopySopClassHandler","ContentDate","ContentTime","OHIFDicomPDFSopClassHandler","ConnectedOHIFDicomPDFViewer","appProps","OHIFVTKExtension","OHIFDicomHtmlExtension","OHIFDicomMicroscopyExtension","OHIFDicomPDFExtension","OHIFDicomSegmentationExtension","OHIFDicomRtExtension","registeredExtensionIds","registeredExtensionVesions","moduleTypeNames","_api","moduleType","ohifExtension","registerExtension","extensionId","extensionModule","_getExtensionModule","_initSpecialModuleTypes","getModuleFnName","charAt","getModuleFn","ex","_initCommandsModule","commandDefinitions","commandDefinition","registerCommand","registeredServiceNames","ohifService","registerService","serviceShowRequestQueue","publicAPI","serviceImplementation","_hide","_show","hideImplementation","showImplementation","showArguments","_dismiss","_dismissAll","_create","dismissImplementation","dismissAllImplementation","createImplementation","_info","_error","infoImplementation","errorImplementation","_isValidEvent","listenerId","subscription","_unsubscribe","publish","callbackProps","hasListeners","hasCallbacks","MEASUREMENT_SCHEMA_KEYS","INTERNAL_MEASUREMENT_UPDATED","RAW_MEASUREMENT_ADDED","MEASUREMENTS_CLEARED","JUMP_TO_MEASUREMENT","BIDIRECTIONAL","MULTIPOINT","CIRCLE","sources","_jumpToMeasurementCache","pubSubServiceInterface","_arrayOfObjects","_getSourceId","toSourceSchema","toMeasurementSchema","_isValidSource","mapping","_getSourceInfo","_getMappingByMeasurementSource","getMeasurement","matchingMapping","_getMatchingMapping","notYetUpdatedAtSource","updatedMeasurement","modifiedTimestamp","dataSource","sourceInfo","_sourceHasMappings","_isValidMeasurement","internalId","newMeasurement","sourceMeasurement","_addJumpToMeasurement"],"mappings":"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ACAC,E,wTAAAA,E,uHACAC,E,0dAAAA,E,uHACAC,E,mjCAAAA,E,yHACAC,E,69FAAAA,E,8HACAC,E,inDAAAA,E,uHACAC,E,ihBAAAA,E,uHACAC,E,iaAAAA,E,yHACAC,E,knBAAAA,E,yHACAC,E,8RAAAA,E,uHACAC,E,ubAAAA,E,uHACAC,E,2aAAAA,E,sHACAC,E,oLAAAA,E,qJACAC,E,6KAAAA,E,uHACAC,E,0VAAAA,E,yHACAC,E,6VAAAA,E,yHACAC,E,gOAAAA,E,yHACApwC,E,2aAAAA,E,yHACAqwC,E,sNAAAA,E,uHACAC,E,2PAAAA,E,6IACA57B,E,4gCAAAA,E,uHACA67B,E,6RAAAA,E,qIACApe,E,4LAAAA,E,uHACAqe,E,guBAAAA,E,2KACAC,E,mTAAAA,E,uHACAC,E,+RAAAA,E,uHACAC,E,wxBAAAA,E,uJACAC,E,+QAAAA,E,kLACAC,E,4fAAAA,E,uIACAC,G,wOAAAA,G,kLACAC,G,gQAAAA,G,kLACAC,G,wOAAAA,G,kLACAC,G,qWAAAA,G,qIACAC,G,mVAAAA,G,oKACAC,G,+aAAAA,G,uJACAC,G,0mfAAAA,G,uFACAC,G,wRAAAA,G,uHACAC,G,soBAAAA,G,uHACAC,G,+LAAAA,G,yHACAC,G,mQAAAA,G,uHACAC,G,yfAAAA,G,uHACA5O,G,gjBAAAA,G,uHACA6O,G,+hBAAAA,G,uHACAC,G,wiBAAAA,G,uHACAC,G,2mBAAAA,G,+FACAC,G,ytBAAAA,G,yHACAjG,G,oaAAAA,G,uHACAkG,G,2QAAAA,G,yHACAC,G,6xBAAAA,G,uNACA7nB,G,6TAAAA,G,yHACA8nB,G,+NAAAA,G,yHACAC,G,8NAAAA,G,yHACAC,G,k4BAAAA,G,yHACAC,G,iUAAAA,G,yHACAC,G,uXAAAA,G,yHACAC,G,sQAAAA,G,yHACAC,G,uQAAAA,G,yHACAC,G,89BAAAA,G,yHACAC,G,gyCAAAA,G,yHACAC,G,uKAAAA,G,uHACAC,G,8RAAAA,G,uHACAC,G,4IAAAA,G,4IACAC,G,+dAAAA,G,yHACAC,G,wmCAAAA,G,yHACAnd,G,gjBAAAA,G,yHACAod,G,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aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,gBAAiB,IACjB,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IA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","file":"app.bundle.062eb0dbe43df20f10cb.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded CSS chunks\n \tvar installedCssChunks = {\n \t\t8: 0\n \t}\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t8: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"\" + ({\"0\":\"ConnectedStandaloneRouting~IHEInvokeImageDisplay~StudyListRouting~ViewerLocalFileData~ViewerRouting\",\"1\":\"ConnectedStandaloneRouting~IHEInvokeImageDisplay~ViewerLocalFileData~ViewerRouting\",\"2\":\"CallbackPage\",\"3\":\"ConnectedStandaloneRouting\",\"4\":\"IHEInvokeImageDisplay\",\"5\":\"StudyListRouting\",\"6\":\"ViewerLocalFileData\",\"7\":\"ViewerRouting\",\"9\":\"vendors~ViewerLocalFileData\",\"11\":\"vendors~dicom-microscopy-viewer\"}[chunkId]||chunkId) + \".bundle.\" + {\"0\":\"811d7ab9fd09d8fa4c37\",\"1\":\"836b4afd3bced272879e\",\"2\":\"db35e550e7dd9f2287e3\",\"3\":\"30c2138995db0aea66a3\",\"4\":\"43d80a612d2a60d54c99\",\"5\":\"a8093f277e170a176e09\",\"6\":\"f68c51d4c32b8239771c\",\"7\":\"e15f6a8121174d31e94d\",\"9\":\"f161146c8c3cdda0be2c\",\"11\":\"9f1314e253d7302929df\",\"12\":\"f32e58f806b3534b5f85\",\"13\":\"de40da50122e96c88435\",\"14\":\"31439fe71a30d1b127dc\",\"15\":\"c7b1384d4fb06d1c2d42\",\"16\":\"d89a2ca120d7327e2e2f\",\"17\":\"8ec87069563672ffe5ff\",\"18\":\"9b9fcae0bec66cfe3a9e\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// extract-css-chunks-webpack-plugin CSS loading\n \t\tvar cssChunks = {\"0\":1,\"1\":1,\"5\":1,\"6\":1,\"13\":1,\"15\":1,\"16\":1};\n \t\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n \t\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n \t\t\tpromises.push(installedCssChunks[chunkId] = new Promise(function(resolve, reject) {\n \t\t\t\tvar href = \"\" + chunkId + \".\" + \"f6a71554447583549c9e\" + \".css\";\n \t\t\t\tvar fullhref = __webpack_require__.p + href;\n \t\t\t\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n \t\t\t\tfor(var i = 0; i < existingLinkTags.length; i++) {\n \t\t\t\t\tvar tag = existingLinkTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n \t\t\t\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return resolve();\n \t\t\t\t}\n \t\t\t\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n \t\t\t\tfor(var i = 0; i < existingStyleTags.length; i++) {\n \t\t\t\t\tvar tag = existingStyleTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\");\n \t\t\t\t\tif(dataHref === href || dataHref === fullhref) return resolve();\n \t\t\t\t}\n \t\t\t\tvar linkTag = document.createElement(\"link\");\n \t\t\t\tlinkTag.rel = \"stylesheet\";\n \t\t\t\tlinkTag.type = \"text/css\";\n \t\t\t\tlinkTag.onload = resolve;\n \t\t\t\tlinkTag.onerror = function(event) {\n \t\t\t\t\tvar request = event && event.target && event.target.src || fullhref;\n \t\t\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + request + \")\");\n \t\t\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n \t\t\t\t\terr.request = request;\n \t\t\t\t\tdelete installedCssChunks[chunkId]\n \t\t\t\t\tlinkTag.parentNode.removeChild(linkTag)\n \t\t\t\t\treject(err);\n \t\t\t\t};\n \t\t\t\tlinkTag.href = fullhref;\n\n \t\t\t\tvar head = document.getElementsByTagName(\"head\")[0];\n \t\t\t\thead.appendChild(linkTag);\n \t\t\t}).then(function() {\n \t\t\t\tinstalledCssChunks[chunkId] = 0;\n \t\t\t}));\n \t\t}\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([1026,10]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","const log = {\n  error: console.error,\n  warn: console.warn,\n  info: console.log,\n  trace: console.trace,\n  debug: console.debug,\n  time: console.time,\n  timeEnd: console.timeEnd,\n};\n\nexport default log;\n","// TODO: Deprecate since we have the same thing in dcmjs?\nexport const sopClassDictionary = {\n  ComputedRadiographyImageStorage: '1.2.840.10008.5.1.4.1.1.1',\n  DigitalXRayImageStorageForPresentation: '1.2.840.10008.5.1.4.1.1.1.1',\n  DigitalXRayImageStorageForProcessing: '1.2.840.10008.5.1.4.1.1.1.1.1',\n  DigitalMammographyXRayImageStorageForPresentation:\n    '1.2.840.10008.5.1.4.1.1.1.2',\n  DigitalMammographyXRayImageStorageForProcessing:\n    '1.2.840.10008.5.1.4.1.1.1.2.1',\n  DigitalIntraOralXRayImageStorageForPresentation:\n    '1.2.840.10008.5.1.4.1.1.1.3',\n  DigitalIntraOralXRayImageStorageForProcessing:\n    '1.2.840.10008.5.1.4.1.1.1.3.1',\n  CTImageStorage: '1.2.840.10008.5.1.4.1.1.2',\n  EnhancedCTImageStorage: '1.2.840.10008.5.1.4.1.1.2.1',\n  LegacyConvertedEnhancedCTImageStorage: '1.2.840.10008.5.1.4.1.1.2.2',\n  UltrasoundMultiframeImageStorage: '1.2.840.10008.5.1.4.1.1.3.1',\n  MRImageStorage: '1.2.840.10008.5.1.4.1.1.4',\n  EnhancedMRImageStorage: '1.2.840.10008.5.1.4.1.1.4.1',\n  MRSpectroscopyStorage: '1.2.840.10008.5.1.4.1.1.4.2',\n  EnhancedMRColorImageStorage: '1.2.840.10008.5.1.4.1.1.4.3',\n  LegacyConvertedEnhancedMRImageStorage: '1.2.840.10008.5.1.4.1.1.4.4',\n  UltrasoundImageStorage: '1.2.840.10008.5.1.4.1.1.6.1',\n  EnhancedUSVolumeStorage: '1.2.840.10008.5.1.4.1.1.6.2',\n  SecondaryCaptureImageStorage: '1.2.840.10008.5.1.4.1.1.7',\n  MultiframeSingleBitSecondaryCaptureImageStorage:\n    '1.2.840.10008.5.1.4.1.1.7.1',\n  MultiframeGrayscaleByteSecondaryCaptureImageStorage:\n    '1.2.840.10008.5.1.4.1.1.7.2',\n  MultiframeGrayscaleWordSecondaryCaptureImageStorage:\n    '1.2.840.10008.5.1.4.1.1.7.3',\n  MultiframeTrueColorSecondaryCaptureImageStorage:\n    '1.2.840.10008.5.1.4.1.1.7.4',\n  Sop12LeadECGWaveformStorage: '1.2.840.10008.5.1.4.1.1.9.1.1',\n  GeneralECGWaveformStorage: '1.2.840.10008.5.1.4.1.1.9.1.2',\n  AmbulatoryECGWaveformStorage: '1.2.840.10008.5.1.4.1.1.9.1.3',\n  HemodynamicWaveformStorage: '1.2.840.10008.5.1.4.1.1.9.2.1',\n  CardiacElectrophysiologyWaveformStorage: '1.2.840.10008.5.1.4.1.1.9.3.1',\n  BasicVoiceAudioWaveformStorage: '1.2.840.10008.5.1.4.1.1.9.4.1',\n  GeneralAudioWaveformStorage: '1.2.840.10008.5.1.4.1.1.9.4.2',\n  ArterialPulseWaveformStorage: '1.2.840.10008.5.1.4.1.1.9.5.1',\n  RespiratoryWaveformStorage: '1.2.840.10008.5.1.4.1.1.9.6.1',\n  GrayscaleSoftcopyPresentationStateStorage: '1.2.840.10008.5.1.4.1.1.11.1',\n  ColorSoftcopyPresentationStateStorage: '1.2.840.10008.5.1.4.1.1.11.2',\n  PseudoColorSoftcopyPresentationStateStorage: '1.2.840.10008.5.1.4.1.1.11.3',\n  BlendingSoftcopyPresentationStateStorage: '1.2.840.10008.5.1.4.1.1.11.4',\n  XAXRFGrayscaleSoftcopyPresentationStateStorage:\n    '1.2.840.10008.5.1.4.1.1.11.5',\n  XRayAngiographicImageStorage: '1.2.840.10008.5.1.4.1.1.12.1',\n  EnhancedXAImageStorage: '1.2.840.10008.5.1.4.1.1.12.1.1',\n  XRayRadiofluoroscopicImageStorage: '1.2.840.10008.5.1.4.1.1.12.2',\n  EnhancedXRFImageStorage: '1.2.840.10008.5.1.4.1.1.12.2.1',\n  XRay3DAngiographicImageStorage: '1.2.840.10008.5.1.4.1.1.13.1.1',\n  XRay3DCraniofacialImageStorage: '1.2.840.10008.5.1.4.1.1.13.1.2',\n  BreastTomosynthesisImageStorage: '1.2.840.10008.5.1.4.1.1.13.1.3',\n  BreastProjectionXRayImageStorageForPresentation:\n    '1.2.840.10008.5.1.4.1.1.13.1.4',\n  BreastProjectionXRayImageStorageForProcessing:\n    '1.2.840.10008.5.1.4.1.1.13.1.5',\n  IntravascularOpticalCoherenceTomographyImageStorageForPresentation:\n    '1.2.840.10008.5.1.4.1.1.14.1',\n  IntravascularOpticalCoherenceTomographyImageStorageForProcessing:\n    '1.2.840.10008.5.1.4.1.1.14.2',\n  NuclearMedicineImageStorage: '1.2.840.10008.5.1.4.1.1.20',\n  RawDataStorage: '1.2.840.10008.5.1.4.1.1.66',\n  SpatialRegistrationStorage: '1.2.840.10008.5.1.4.1.1.66.1',\n  SpatialFiducialsStorage: '1.2.840.10008.5.1.4.1.1.66.2',\n  DeformableSpatialRegistrationStorage: '1.2.840.10008.5.1.4.1.1.66.3',\n  SegmentationStorage: '1.2.840.10008.5.1.4.1.1.66.4',\n  SurfaceSegmentationStorage: '1.2.840.10008.5.1.4.1.1.66.5',\n  RealWorldValueMappingStorage: '1.2.840.10008.5.1.4.1.1.67',\n  SurfaceScanMeshStorage: '1.2.840.10008.5.1.4.1.1.68.1',\n  SurfaceScanPointCloudStorage: '1.2.840.10008.5.1.4.1.1.68.2',\n  VLEndoscopicImageStorage: '1.2.840.10008.5.1.4.1.1.77.1.1',\n  VideoEndoscopicImageStorage: '1.2.840.10008.5.1.4.1.1.77.1.1.1',\n  VLMicroscopicImageStorage: '1.2.840.10008.5.1.4.1.1.77.1.2',\n  VideoMicroscopicImageStorage: '1.2.840.10008.5.1.4.1.1.77.1.2.1',\n  VLSlideCoordinatesMicroscopicImageStorage: '1.2.840.10008.5.1.4.1.1.77.1.3',\n  VLPhotographicImageStorage: '1.2.840.10008.5.1.4.1.1.77.1.4',\n  VideoPhotographicImageStorage: '1.2.840.10008.5.1.4.1.1.77.1.4.1',\n  OphthalmicPhotography8BitImageStorage: '1.2.840.10008.5.1.4.1.1.77.1.5.1',\n  OphthalmicPhotography16BitImageStorage: '1.2.840.10008.5.1.4.1.1.77.1.5.2',\n  StereometricRelationshipStorage: '1.2.840.10008.5.1.4.1.1.77.1.5.3',\n  OphthalmicTomographyImageStorage: '1.2.840.10008.5.1.4.1.1.77.1.5.4',\n  VLWholeSlideMicroscopyImageStorage: '1.2.840.10008.5.1.4.1.1.77.1.6',\n  LensometryMeasurementsStorage: '1.2.840.10008.5.1.4.1.1.78.1',\n  AutorefractionMeasurementsStorage: '1.2.840.10008.5.1.4.1.1.78.2',\n  KeratometryMeasurementsStorage: '1.2.840.10008.5.1.4.1.1.78.3',\n  SubjectiveRefractionMeasurementsStorage: '1.2.840.10008.5.1.4.1.1.78.4',\n  VisualAcuityMeasurementsStorage: '1.2.840.10008.5.1.4.1.1.78.5',\n  SpectaclePrescriptionReportStorage: '1.2.840.10008.5.1.4.1.1.78.6',\n  OphthalmicAxialMeasurementsStorage: '1.2.840.10008.5.1.4.1.1.78.7',\n  IntraocularLensCalculationsStorage: '1.2.840.10008.5.1.4.1.1.78.8',\n  MacularGridThicknessandVolumeReport: '1.2.840.10008.5.1.4.1.1.79.1',\n  OphthalmicVisualFieldStaticPerimetryMeasurementsStorage:\n    '1.2.840.10008.5.1.4.1.1.80.1',\n  OphthalmicThicknessMapStorage: '1.2.840.10008.5.1.4.1.1.81.1',\n  CornealTopographyMapStorage: '1.2.840.10008.5.1.4.1.1.82.1',\n  BasicTextSR: '1.2.840.10008.5.1.4.1.1.88.11',\n  EnhancedSR: '1.2.840.10008.5.1.4.1.1.88.22',\n  ComprehensiveSR: '1.2.840.10008.5.1.4.1.1.88.33',\n  Comprehensive3DSR: '1.2.840.10008.5.1.4.1.1.88.34',\n  ProcedureLog: '1.2.840.10008.5.1.4.1.1.88.40',\n  MammographyCADSR: '1.2.840.10008.5.1.4.1.1.88.50',\n  KeyObjectSelection: '1.2.840.10008.5.1.4.1.1.88.59',\n  ChestCADSR: '1.2.840.10008.5.1.4.1.1.88.65',\n  XRayRadiationDoseSR: '1.2.840.10008.5.1.4.1.1.88.67',\n  RadiopharmaceuticalRadiationDoseSR: '1.2.840.10008.5.1.4.1.1.88.68',\n  ColonCADSR: '1.2.840.10008.5.1.4.1.1.88.69',\n  ImplantationPlanSRDocumentStorage: '1.2.840.10008.5.1.4.1.1.88.70',\n  EncapsulatedPDFStorage: '1.2.840.10008.5.1.4.1.1.104.1',\n  EncapsulatedCDAStorage: '1.2.840.10008.5.1.4.1.1.104.2',\n  PositronEmissionTomographyImageStorage: '1.2.840.10008.5.1.4.1.1.128',\n  EnhancedPETImageStorage: '1.2.840.10008.5.1.4.1.1.130',\n  LegacyConvertedEnhancedPETImageStorage: '1.2.840.10008.5.1.4.1.1.128.1',\n  BasicStructuredDisplayStorage: '1.2.840.10008.5.1.4.1.1.131',\n  RTImageStorage: '1.2.840.10008.5.1.4.1.1.481.1',\n  RTDoseStorage: '1.2.840.10008.5.1.4.1.1.481.2',\n  RTStructureSetStorage: '1.2.840.10008.5.1.4.1.1.481.3',\n  RTBeamsTreatmentRecordStorage: '1.2.840.10008.5.1.4.1.1.481.4',\n  RTPlanStorage: '1.2.840.10008.5.1.4.1.1.481.5',\n  RTBrachyTreatmentRecordStorage: '1.2.840.10008.5.1.4.1.1.481.6',\n  RTTreatmentSummaryRecordStorage: '1.2.840.10008.5.1.4.1.1.481.7',\n  RTIonPlanStorage: '1.2.840.10008.5.1.4.1.1.481.8',\n  RTIonBeamsTreatmentRecordStorage: '1.2.840.10008.5.1.4.1.1.481.9',\n  RTBeamsDeliveryInstructionStorage: '1.2.840.10008.5.1.4.34.7',\n  GenericImplantTemplateStorage: '1.2.840.10008.5.1.4.43.1',\n  ImplantAssemblyTemplateStorage: '1.2.840.10008.5.1.4.44.1',\n  ImplantTemplateGroupStorage: '1.2.840.10008.5.1.4.45.1',\n};\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport './LayoutChooser.styl';\n\n/**\n * Adds the 'hover' class to cells above and to the left of the current cell\n * This is used to \"fill in\" the grid that the user will change the layout to,\n * if they click on a specific table cell.\n **/\n\nclass LayoutChooser extends PureComponent {\n  static propTypes = {\n    Rows: PropTypes.number.isRequired,\n    Columns: PropTypes.number.isRequired,\n    visible: PropTypes.bool.isRequired,\n    selectedCell: PropTypes.object,\n    boxSize: PropTypes.number.isRequired,\n    cellBorder: PropTypes.number.isRequired,\n    onClick: PropTypes.func,\n    onChange: PropTypes.func,\n  };\n\n  static defaultProps = {\n    Rows: 3,\n    Columns: 3,\n    visible: true,\n    boxSize: 20,\n    cellBorder: 1,\n    selectedCell: {\n      row: -1,\n      col: -1,\n    },\n  };\n\n  constructor(props) {\n    super(props);\n    this.emptyCell = {\n      row: -1,\n      column: -1,\n    };\n    this.state = {\n      table: [[]],\n      selectedCell: this.props.selectedCell,\n    };\n  }\n  componentDidMount() {\n    this.highlightCells(this.emptyCell);\n  }\n  onClick(currentCell) {\n    this.setState({\n      selectedCell: currentCell,\n    });\n    this.highlightCells(currentCell);\n    if (this.props.onClick) {\n      this.props.onClick(currentCell);\n    }\n    if (this.props.onChange) {\n      this.props.onChange(currentCell);\n    }\n  }\n  isRange = (cell, parentCell) => {\n    return cell.row <= parentCell.row && cell.col <= parentCell.col;\n  };\n  highlightCells = currentCell => {\n    let table = [];\n    for (let row = 0; row < this.props.Rows; row++) {\n      let newRow = [];\n      for (let col = 0; col < this.props.Columns; col++) {\n        let cell = { row: row, col: col };\n        if (this.isRange(cell, currentCell)) {\n          cell.className = 'hover';\n        } else if (\n          this.isRange(currentCell, this.emptyCell) &&\n          this.isRange(cell, this.state.selectedCell)\n        ) {\n          cell.className = 'selectedBefore';\n        }\n        newRow.push(cell);\n      }\n      table.push(newRow);\n    }\n    this.setState({ table: table });\n  };\n\n  render() {\n    let Columns = this.props.Columns;\n    const style = {\n      display: this.props.visible ? 'block' : 'none',\n      minWidth:\n        Columns * this.props.boxSize + (Columns + 5) * this.props.cellBorder,\n    };\n    return (\n      <div\n        className=\"layoutChooser layoutChooser-dropdown-menu\"\n        role=\"menu\"\n        style={style}\n      >\n        <table>\n          <tbody>\n            {this.state.table.map((row, i) => {\n              return (\n                <tr key={i}>\n                  {row.map((cell, j) => {\n                    return (\n                      <td\n                        className={cell.className}\n                        style={{\n                          width: this.props.boxSize,\n                          height: this.props.boxSize,\n                          border: 'solid 1px black',\n                        }}\n                        key={j}\n                        onMouseEnter={() => this.highlightCells(cell)}\n                        onMouseLeave={() => this.highlightCells(this.emptyCell)}\n                        onClick={() => this.onClick(cell)}\n                      />\n                    );\n                  })}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport { LayoutChooser };\n","import './toolbar-button.styl';\n\nimport { Icon } from './../elements/Icon';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classnames from 'classnames';\nimport { withTranslation } from '../contextProviders';\n\nexport function ToolbarButton(props) {\n  const { isActive, icon, labelWhenActive, onClick, t } = props;\n  const className = classnames(props.className, { active: isActive });\n  const iconProps = typeof icon === 'string' ? { name: icon } : icon;\n  const label = isActive && labelWhenActive ? labelWhenActive : props.label;\n\n  const arrowIconName = props.isExpanded ? 'caret-up' : 'caret-down';\n  const arrowIcon = props.isExpandable && (\n    <Icon name={arrowIconName} className=\"expand-caret\" />\n  );\n\n  const handleClick = event => {\n    if (onClick) {\n      onClick(event, props);\n    }\n  };\n\n  const cypressSelectorId = props.label.toLowerCase();\n\n  return (\n    <div\n      className={className}\n      onClick={handleClick}\n      data-cy={cypressSelectorId}\n    >\n      {iconProps && <Icon {...iconProps} />}\n      <div className=\"toolbar-button-label\">\n        {t(label)}\n        {arrowIcon}\n      </div>\n    </div>\n  );\n}\n\nToolbarButton.propTypes = {\n  id: PropTypes.string,\n  isActive: PropTypes.bool,\n  /** Display label for button */\n  label: PropTypes.string.isRequired,\n  /** Alternative text to show when button is active */\n  labelWhenActive: PropTypes.string,\n  className: PropTypes.string.isRequired,\n  icon: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n    }),\n  ]),\n  onClick: PropTypes.func,\n  /** Determines if we show expandable 'caret' symbol */\n  isExpandable: PropTypes.bool,\n  /** Direction of expandable 'caret' symbol */\n  isExpanded: PropTypes.bool,\n  t: PropTypes.func.isRequired,\n};\n\nToolbarButton.defaultProps = {\n  isActive: false,\n  className: 'toolbar-button',\n};\n\nexport default withTranslation('Buttons')(ToolbarButton);\n","import React, { PureComponent } from 'react';\n\nimport { LayoutChooser } from './LayoutChooser.js';\nimport PropTypes from 'prop-types';\nimport ToolbarButton from '../../viewer/ToolbarButton';\n\nexport class LayoutButton extends PureComponent {\n  static defaultProps = {\n    dropdownVisible: false,\n  };\n\n  static propTypes = {\n    dropdownVisible: PropTypes.bool.isRequired,\n    /** Called with the selectedCell number when grid sell is selected */\n    onChange: PropTypes.func,\n    /** The cell to show as selected */\n    selectedCell: PropTypes.object,\n  };\n\n  state = {\n    dropdownVisible: this.props.dropdownVisible,\n  };\n\n  componentDidUpdate(prevProps) {\n    if (this.props.dropdownVisible !== prevProps.dropdownVisible) {\n      this.setState({\n        dropdownVisible: this.props.dropdownVisible,\n      });\n    }\n  }\n\n  onClick = () => {\n    this.setState({\n      dropdownVisible: !this.state.dropdownVisible,\n    });\n  };\n\n  onChange = selectedCell => {\n    if (this.props.onChange) {\n      this.props.onChange(selectedCell);\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"btn-group\">\n        <ToolbarButton\n          isActive={this.state.dropdownVisible}\n          label={'Layout'}\n          icon=\"th\"\n          onClick={this.onClick}\n        />\n        <LayoutChooser\n          visible={this.state.dropdownVisible}\n          onChange={this.onChange}\n          onClick={this.onClick}\n          selectedCell={this.props.selectedCell}\n        />\n      </div>\n    );\n  }\n}\n\nexport default LayoutButton;\n","import './TableListItem.styl';\n\nimport { Component } from 'react';\nimport { Icon } from './../../elements/Icon';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nexport class TableListItem extends Component {\n  static propTypes = {\n    children: PropTypes.node,\n    itemClass: PropTypes.string,\n    itemIndex: PropTypes.number,\n    itemMeta: PropTypes.node,\n    itemMetaClass: PropTypes.string,\n    itemKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    onItemClick: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    itemMeta: null,\n    itemMetaClass: '',\n  };\n\n  render() {\n    return (\n      <div\n        className={`tableListItem ${this.props.itemClass}`}\n        onClick={this.onItemClick}\n      >\n        <div className={`itemIndex ${this.props.itemMetaClass}`}>\n          {this.props.itemIndex}\n          {this.props.itemMeta}\n          <span className=\"warning-icon\">\n            <Icon name=\"exclamation-triangle\" />\n          </span>\n        </div>\n        <div className=\"itemContent\">{this.props.children}</div>\n      </div>\n    );\n  }\n\n  onItemClick = event => {\n    if (this.props.onItemClick) {\n      event.preventDefault();\n      event.stopPropagation();\n\n      this.props.onItemClick(event, this.props.itemKey);\n    }\n  };\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from '../../contextProviders';\n\nimport { Icon } from './../../elements/Icon';\nimport { OverlayTrigger } from './../overlayTrigger';\nimport { Tooltip } from './../tooltip';\nimport { TableListItem } from './../tableList/TableListItem.js';\n\nimport './MeasurementTableItem.styl';\n\nconst ColoredCircle = ({ color }) => {\n  return <div className=\"item-color\" style={{ backgroundColor: color }}></div>;\n};\n\nColoredCircle.propTypes = {\n  color: PropTypes.string.isRequired,\n};\n\nclass MeasurementTableItem extends Component {\n  static propTypes = {\n    measurementData: PropTypes.object.isRequired,\n    onItemClick: PropTypes.func.isRequired,\n    onRelabel: PropTypes.func,\n    onDelete: PropTypes.func,\n    onEditDescription: PropTypes.func,\n    itemClass: PropTypes.string,\n    itemIndex: PropTypes.number,\n    t: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapsed: true,\n      visible: true,\n    };\n  }\n\n  render() {\n    const {\n      warningTitle = '',\n      hasWarnings,\n      isReadOnly,\n    } = this.props.measurementData;\n\n    return (\n      <React.Fragment>\n        {hasWarnings && !isReadOnly ? (\n          <OverlayTrigger\n            key={this.props.itemIndex}\n            placement=\"left\"\n            overlay={\n              <Tooltip\n                placement=\"left\"\n                className=\"in tooltip-warning\"\n                id=\"tooltip-left\"\n              >\n                <div className=\"warningTitle\">{this.props.t(warningTitle)}</div>\n                <div className=\"warningContent\">{this.getWarningContent()}</div>\n              </Tooltip>\n            }\n          >\n            <div>{this.getTableListItem()}</div>\n          </OverlayTrigger>\n        ) : (\n          <React.Fragment>{this.getTableListItem()}</React.Fragment>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  getActionButton = (btnLabel, onClickCallback) => {\n    return (\n      <button key={btnLabel} className=\"btnAction\" onClick={onClickCallback}>\n        <span style={{ marginRight: '4px' }}>\n          <Icon name=\"edit\" width=\"14px\" height=\"14px\" />\n        </span>\n        {this.props.t(btnLabel)}\n      </button>\n    );\n  };\n\n  getTableListItem = () => {\n    const hasWarningClass =\n      this.props.measurementData.hasWarnings &&\n      !this.props.measurementData.isReadOnly\n        ? 'hasWarnings'\n        : '';\n\n    const actionButtons = [];\n\n    if (typeof this.props.onRelabel === 'function') {\n      const relabelButton = this.getActionButton(\n        'Relabel',\n        this.onRelabelClick\n      );\n      actionButtons.push(relabelButton);\n    }\n    if (typeof this.props.onEditDescription === 'function') {\n      const descriptionButton = this.getActionButton(\n        'Description',\n        this.onEditDescriptionClick\n      );\n      actionButtons.push(descriptionButton);\n    }\n    if (typeof this.props.onDelete === 'function') {\n      const deleteButton = this.getActionButton('Delete', this.onDeleteClick);\n      actionButtons.push(deleteButton);\n    }\n\n    if (\n      this.props.measurementData.isSRText === true &&\n      this.props.measurementData.labels &&\n      this.props.measurementData.labels.length > 0\n    ) {\n      return (\n        <React.Fragment>\n          <TableListItem\n            key={this.props.measurementData.measurementNumber}\n            itemKey={this.props.measurementData.measurementNumber}\n            itemClass={`measurementItem ${this.props.itemClass} ${hasWarningClass}`}\n            itemIndex={this.props.itemIndex}\n            onItemClick={this.onItemClick}\n          >\n            <div>\n              <div className=\"measurementLocation\">\n                {this.props.t(this.props.measurementData.label, {\n                  keySeparator: '>',\n                  nsSeparator: '|',\n                })}\n              </div>\n            </div>\n            <div className=\"icons\">\n              <div className=\"displayTexts\">{this.getDataDisplayText()}</div>\n              <Icon\n                className={`eye-icon`}\n                name={this.state.visible ? 'eye' : 'eye-closed'}\n                width=\"20px\"\n                height=\"20px\"\n                onClick={() => {\n                  this.props.measurementData.labels.forEach(label => {\n                    label.visible = !this.state.visible;\n                  });\n\n                  this.setState({\n                    visible: !this.state.visible,\n                  });\n                }}\n              />\n              <Icon\n                className={`angle-double-${\n                  this.state.collapsed ? 'down' : 'up'\n                }`}\n                name={`angle-double-${this.state.collapsed ? 'down' : 'up'}`}\n                width=\"20px\"\n                height=\"20px\"\n                onClick={() => {\n                  this.setState({\n                    collapsed: !this.state.collapsed,\n                  });\n                }}\n              />\n            </div>\n          </TableListItem>\n          {this.state.collapsed &&\n            this.props.measurementData.labels.map((SRLabel, index) => {\n              return (\n                <TableListItem\n                  key={index}\n                  itemKey={index}\n                  itemMeta={<ColoredCircle color={SRLabel.color} />}\n                  itemMetaClass=\"item-color-section\"\n                  onItemClick={this.onItemClick}\n                >\n                  <div>\n                    <div className=\"icons\">\n                      <span style={{ width: '90px' }}>\n                        {SRLabel.label + ' : ' + SRLabel.value}\n                      </span>\n                      <Icon\n                        className={`eye-icon`}\n                        name={SRLabel.visible ? 'eye' : 'eye-closed'}\n                        width=\"20px\"\n                        height=\"20px\"\n                        onClick={() => {\n                          SRLabel.visible = !SRLabel.visible;\n                        }}\n                      />\n                    </div>\n                  </div>\n                </TableListItem>\n              );\n            })}\n        </React.Fragment>\n      );\n    } else {\n      return (\n        <TableListItem\n          key={this.props.measurementData.measurementNumber}\n          itemKey={this.props.measurementData.measurementNumber}\n          itemClass={`measurementItem ${this.props.itemClass} ${hasWarningClass}`}\n          itemIndex={this.props.itemIndex}\n          onItemClick={this.onItemClick}\n        >\n          <div>\n            <div className=\"measurementLocation\">\n              {this.props.t(this.props.measurementData.label, {\n                keySeparator: '>',\n                nsSeparator: '|',\n              })}\n            </div>\n            <div className=\"displayTexts\">{this.getDataDisplayText()}</div>\n            {!this.props.measurementData.isReadOnly && (\n              <div className=\"rowActions\">{actionButtons}</div>\n            )}\n          </div>\n        </TableListItem>\n      );\n    }\n  };\n\n  onItemClick = event => {\n    this.props.onItemClick(event, this.props.measurementData);\n  };\n\n  onRelabelClick = event => {\n    // Prevent onItemClick from firing\n    event.stopPropagation();\n\n    this.props.onRelabel(event, this.props.measurementData);\n  };\n\n  onEditDescriptionClick = event => {\n    // Prevent onItemClick from firing\n    event.stopPropagation();\n\n    this.props.onEditDescription(event, this.props.measurementData);\n  };\n\n  onDeleteClick = event => {\n    // Prevent onItemClick from firing\n    event.stopPropagation();\n\n    this.props.onDelete(event, this.props.measurementData);\n  };\n\n  getDataDisplayText = () => {\n    return this.props.measurementData.data.map((data, index) => {\n      return (\n        <div key={`displayText_${index}`} className=\"measurementDisplayText\">\n          {data.displayText ? data.displayText : '...'}\n        </div>\n      );\n    });\n  };\n\n  getWarningContent = () => {\n    const { warningList = '' } = this.props.measurementData;\n\n    if (Array.isArray(warningList)) {\n      const listedWarnings = warningList.map((warn, index) => {\n        return <li key={index}>{warn}</li>;\n      });\n\n      return <ol>{listedWarnings}</ol>;\n    } else {\n      return <React.Fragment>{warningList}</React.Fragment>;\n    }\n  };\n}\n\nconst connectedComponent = withTranslation('MeasurementTable')(\n  MeasurementTableItem\n);\nexport { connectedComponent as MeasurementTableItem };\nexport default connectedComponent;\n","import './ScrollableArea.styl';\n\nimport React, { Component } from 'react';\n\nimport { Icon } from './../elements/Icon';\nimport PropTypes from 'prop-types';\nimport getScrollbarSize from '../utils/getScrollbarSize.js';\nimport throttled from '../utils/throttled.js';\n\nexport class ScrollableArea extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    class: PropTypes.string,\n    scrollableClass: PropTypes.string,\n    scrollX: PropTypes.bool,\n    scrollY: PropTypes.bool,\n    hideScrollbar: PropTypes.bool,\n    scrollStep: PropTypes.number,\n  };\n\n  static defaultProps = {\n    hideScrollbar: true,\n    class: 'flex-grow fit',\n    scrollY: true,\n    scrollX: false,\n    scrollStep: 100,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      scrollAreaClasses: '',\n    };\n\n    this.scrollHandlerThrottled = throttled(150, this.scrollHandler);\n  }\n\n  render() {\n    let scrollableClass = 'scrollable';\n    if (this.props.scrollableClass) {\n      scrollableClass += ` ${this.props.scrollableClass}`;\n    }\n    if (this.props.scrollX) {\n      scrollableClass += ` scrollX`;\n    }\n    if (this.props.scrollY) {\n      scrollableClass += ` scrollY`;\n    }\n\n    return (\n      <div\n        className={`scrollArea ${this.props.class} ${\n          this.state.scrollAreaClasses\n        }`}\n      >\n        <div\n          className={scrollableClass}\n          ref={element => {\n            this.scrollableElement = element;\n          }}\n          onScroll={this.scrollHandlerThrottled}\n          onMouseEnter={this.scrollHandlerThrottled}\n          onTransitionEnd={this.scrollHandlerThrottled}\n        >\n          {this.props.children}\n        </div>\n        <div className=\"scrollNav scrollNavUp\" onClick={this.scrollNavUp}>\n          {/* <svg className=\"scrollNavIcon\"> */}\n          <Icon name=\"angle-double-up\" />\n        </div>\n        <div className=\"scrollNav scrollNavDown\" onClick={this.scrollNavDown}>\n          <Icon name=\"angle-double-down\" />\n        </div>\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    this.adjustMargins();\n    this.scrollHandler();\n    window.addEventListener('resize', this.adjustMargins);\n  }\n\n  componentDidUpdate() {\n    this.adjustMargins();\n    this.scrollHandler();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.adjustMargins);\n  }\n\n  scrollNavDown = event => {\n    const {\n      scrollTop: currentTop,\n      offsetHeight: height,\n      scrollHeight,\n    } = this.scrollableElement;\n\n    const limit = scrollHeight - height;\n    let scrollTop = currentTop + this.props.scrollStep;\n    scrollTop = scrollTop > limit ? limit : scrollTop;\n    this.scrollableElement.scrollTop = scrollTop;\n  };\n\n  scrollNavUp = event => {\n    const { scrollTop: currentTop } = this.scrollableElement;\n\n    let scrollTop = currentTop - this.props.scrollStep;\n    scrollTop = scrollTop < 0 ? 0 : scrollTop;\n\n    this.scrollableElement.scrollTop = scrollTop;\n  };\n\n  adjustMargins = () => {\n    if (this.props.hideScrollbar) {\n      const x = this.props.scrollX ? 1 : 0;\n      const y = this.props.scrollY ? 1 : 0;\n      const scrollbarSize = getScrollbarSize();\n      this.scrollableElement.style.marginRight = `${0 -\n        scrollbarSize[0] * y}px`;\n      this.scrollableElement.style.marginBottom = `${0 -\n        scrollbarSize[1] * x}px`;\n    }\n  };\n\n  scrollHandler = () => {\n    const {\n      offsetHeight: height,\n      scrollTop: scrollTop,\n      scrollHeight,\n    } = this.scrollableElement;\n    let scrollAreaClasses = '';\n\n    // Check if can scroll up\n    if (scrollTop) {\n      scrollAreaClasses += 'canScrollUp';\n    }\n\n    // Check if can scroll down\n    if (scrollTop + height < scrollHeight) {\n      scrollAreaClasses += ' canScrollDown';\n    }\n\n    if (this.state.scrollAreaClasses !== scrollAreaClasses) {\n      this.setState({\n        scrollAreaClasses,\n      });\n    }\n  };\n}\n","export default function throttled(delay, callback) {\n  let isThrottled = false,\n    args,\n    context;\n\n  function wrapper() {\n    if (isThrottled) {\n      args = arguments;\n      context = this;\n      return;\n    }\n\n    isThrottled = true;\n    callback.apply(this, arguments);\n\n    setTimeout(() => {\n      isThrottled = false;\n      if (args) {\n        wrapper.apply(context, args);\n        args = context = null;\n      }\n    }, delay);\n  }\n\n  return wrapper;\n}\n","/**\n * Get the vertical and horizontal scrollbar sizes\n * Got from https://stackoverflow.com/questions/986937/how-can-i-get-the-browsers-scrollbar-sizes\n *\n * @returns {Array} Array containing the scrollbar horizontal and vertical sizes\n */\nexport default function getScrollbarSize() {\n  const inner = document.createElement('p');\n  inner.style.width = '100%';\n  inner.style.height = '100%';\n\n  const outer = document.createElement('div');\n  outer.style.position = 'absolute';\n  outer.style.top = '0px';\n  outer.style.left = '0px';\n  outer.style.visibility = 'hidden';\n  outer.style.width = '100px';\n  outer.style.height = '100px';\n  outer.style.overflow = 'hidden';\n  outer.appendChild(inner);\n\n  document.body.appendChild(outer);\n\n  const w1 = inner.offsetWidth;\n  const h1 = inner.offsetHeight;\n  outer.style.overflow = 'scroll';\n  let w2 = inner.offsetWidth;\n  let h2 = inner.offsetHeight;\n\n  if (w1 === w2) {\n    w2 = outer.clientWidth;\n  }\n\n  if (h1 === h2) {\n    h2 = outer.clientHeight;\n  }\n\n  document.body.removeChild(outer);\n\n  return [w1 - w2, h1 - h2];\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './TableList.styl';\n\nexport class TableList extends Component {\n  static propTypes = {\n    customHeader: PropTypes.node,\n    defaultItems: PropTypes.object,\n    children: PropTypes.node.isRequired,\n    headerTitle: PropTypes.string,\n    headless: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    headless: false,\n  };\n\n  render() {\n    return (\n      <div className=\"tableList\">\n        {!this.props.headless && (\n          <div className=\"tableListHeader\" onClick={this.onHeaderClick}>\n            {this.getHeader()}\n          </div>\n        )}\n        <div className=\"tableListContent\">{this.props.children}</div>\n      </div>\n    );\n  }\n\n  getHeader = () => {\n    if (this.props.customHeader) {\n      return this.props.customHeader;\n    } else {\n      return (\n        <React.Fragment>\n          <div className=\"tableListHeaderTitle\">{this.props.headerTitle}</div>\n          <div className=\"numberOfItems\">{this.props.children.length}</div>\n        </React.Fragment>\n      );\n    }\n  };\n}\n","import './MeasurementTable.styl';\n\nimport React, { Component } from 'react';\nimport { withTranslation } from '../../contextProviders';\n\nimport { Icon } from './../../elements/Icon';\nimport { MeasurementTableItem } from './MeasurementTableItem.js';\nimport { OverlayTrigger } from './../overlayTrigger';\nimport PropTypes from 'prop-types';\nimport { ScrollableArea } from './../../ScrollableArea/ScrollableArea.js';\nimport { TableList } from './../tableList';\nimport { Tooltip } from './../tooltip';\n\nclass MeasurementTable extends Component {\n  static propTypes = {\n    measurementCollection: PropTypes.array.isRequired,\n    timepoints: PropTypes.array.isRequired,\n    overallWarnings: PropTypes.object.isRequired,\n    readOnly: PropTypes.bool,\n    onItemClick: PropTypes.func,\n    onRelabelClick: PropTypes.func,\n    onDeleteClick: PropTypes.func,\n    onEditDescriptionClick: PropTypes.func,\n    selectedMeasurementNumber: PropTypes.number,\n    t: PropTypes.func,\n    saveFunction: PropTypes.func,\n    onSaveComplete: PropTypes.func,\n  };\n\n  static defaultProps = {\n    overallWarnings: {\n      warningList: [],\n    },\n    readOnly: false,\n  };\n\n  state = {\n    selectedKey: null,\n  };\n\n  render() {\n    const { overallWarnings, saveFunction, t } = this.props;\n    const hasOverallWarnings = overallWarnings.warningList.length > 0;\n\n    return (\n      <div className=\"measurementTable\">\n        <div className=\"measurementTableHeader\">\n          {hasOverallWarnings && (\n            <OverlayTrigger\n              key={'overwall-warning'}\n              placement=\"left\"\n              overlay={\n                <Tooltip\n                  placement=\"left\"\n                  className=\"in tooltip-warning\"\n                  id=\"tooltip-left\"\n                  style={{}}\n                >\n                  <div className=\"warningTitle\">\n                    {t('Criteria nonconformities')}\n                  </div>\n                  <div className=\"warningContent\">\n                    {this.getWarningContent()}\n                  </div>\n                </Tooltip>\n              }\n            >\n              <span className=\"warning-status\">\n                <span className=\"warning-border\">\n                  <Icon name=\"exclamation-triangle\" />\n                </span>\n              </span>\n            </OverlayTrigger>\n          )}\n          {this.getTimepointsHeader()}\n        </div>\n        <ScrollableArea>\n          <div>{this.getMeasurementsGroups()}</div>\n        </ScrollableArea>\n        <div className=\"measurementTableFooter\">\n          {saveFunction && (\n            <button\n              onClick={this.saveFunction}\n              className=\"saveBtn\"\n              data-cy=\"save-measurements-btn\"\n            >\n              <Icon name=\"save\" width=\"14px\" height=\"14px\" />\n              Save measurements\n            </button>\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  saveFunction = async event => {\n    const { saveFunction, onSaveComplete } = this.props;\n    if (saveFunction) {\n      try {\n        const result = await saveFunction();\n        if (onSaveComplete) {\n          onSaveComplete({\n            title: 'STOW SR',\n            message: result.message,\n            type: 'success',\n          });\n        }\n      } catch (error) {\n        if (onSaveComplete) {\n          onSaveComplete({\n            title: 'STOW SR',\n            message: error.message,\n            type: 'error',\n          });\n        }\n      }\n    }\n  };\n\n  getMeasurementsGroups = () => {\n    return this.props.measurementCollection.map((measureGroup, index) => {\n      return (\n        <TableList\n          key={index}\n          customHeader={this.getCustomHeader(measureGroup)}\n        >\n          {this.getMeasurements(measureGroup)}\n        </TableList>\n      );\n    });\n  };\n\n  getMeasurements = measureGroup => {\n    const selectedKey = this.props.selectedMeasurementNumber\n      ? this.props.selectedMeasurementNumber\n      : this.state.selectedKey;\n    return measureGroup.measurements.map((measurement, index) => {\n      const key = measurement.measurementNumber;\n      const itemIndex = measurement.itemNumber || index + 1;\n      const itemClass =\n        selectedKey === key && !this.props.readOnly ? 'selected' : '';\n      return (\n        <MeasurementTableItem\n          key={key}\n          itemIndex={itemIndex}\n          itemClass={itemClass}\n          measurementData={measurement}\n          onItemClick={this.onItemClick}\n          onRelabel={this.props.onRelabelClick}\n          onDelete={this.props.onDeleteClick}\n          onEditDescription={this.props.onEditDescriptionClick}\n        />\n      );\n    });\n  };\n\n  onItemClick = (event, measurementData) => {\n    if (this.props.readOnly) return;\n\n    this.setState({\n      selectedKey: measurementData.measurementNumber,\n    });\n\n    if (this.props.onItemClick) {\n      this.props.onItemClick(event, measurementData);\n    }\n  };\n\n  getCustomHeader = measureGroup => {\n    return (\n      <React.Fragment>\n        <div className=\"tableListHeaderTitle\">\n          {this.props.t(measureGroup.groupName)}\n        </div>\n        {measureGroup.maxMeasurements && (\n          <div className=\"maxMeasurements\">\n            {this.props.t('MAX')} {measureGroup.maxMeasurements}\n          </div>\n        )}\n        <div className=\"numberOfItems\">{measureGroup.measurements.length}</div>\n      </React.Fragment>\n    );\n  };\n\n  getTimepointsHeader = () => {\n    const { timepoints, t } = this.props;\n\n    return timepoints.map((timepoint, index) => {\n      return (\n        <div key={index} className=\"measurementTableHeaderItem\">\n          <div className=\"timepointLabel\">{t(timepoint.key)}</div>\n          <div className=\"timepointDate\">{timepoint.date}</div>\n        </div>\n      );\n    });\n  };\n\n  getWarningContent = () => {\n    const { warningList = '' } = this.props.overallWarnings;\n\n    if (Array.isArray(warningList)) {\n      const listedWarnings = warningList.map((warn, index) => {\n        return <li key={index}>{warn}</li>;\n      });\n\n      return <ol>{listedWarnings}</ol>;\n    } else {\n      return <React.Fragment>{warningList}</React.Fragment>;\n    }\n  };\n}\n\nconst connectedComponent = withTranslation(['MeasurementTable', 'Common'])(\n  MeasurementTable\n);\nexport { connectedComponent as MeasurementTable };\nexport default connectedComponent;\n","import React from 'react';\nimport detect from 'browser-detect';\nimport { useTranslation } from 'react-i18next';\n\nimport './AboutContent.styl';\n\nconst AboutContent = () => {\n  const { t } = useTranslation('AboutContent');\n\n  const { os, version, name } = detect();\n  const capitalize = s =>\n    s.substr(0, 1).toUpperCase() + s.substr(1).toLowerCase();\n\n  const itemsPreset = () => {\n    return [\n      {\n        name: t('Repository URL'),\n        value: 'https://github.com/OHIF/Viewers/',\n        link: 'https://github.com/OHIF/Viewers/',\n      },\n      {\n        name: t('Latest Master Commits'),\n        value: 'https://github.com/OHIF/Viewers/commits/master',\n        link: 'https://github.com/OHIF/Viewers/commits/master',\n      },\n      {\n        name: 'Version Number',\n        value: process.env.VERSION_NUMBER,\n      },\n      {\n        name: t('Build Number'),\n        value: process.env.BUILD_NUM,\n      },\n      {\n        name: t('Browser'),\n        value: `${capitalize(name)} ${version}`,\n      },\n      {\n        name: t('OS'),\n        value: os,\n      },\n    ];\n  };\n\n  const renderTableRow = ({ name, value, link }) => (\n    <tr key={name} style={{ backgroundColor: 'transparent' }}>\n      <td>{name}</td>\n      <td>\n        {link ? (\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href={link}>\n            {value}\n          </a>\n        ) : (\n          value\n        )}\n      </td>\n    </tr>\n  );\n\n  return (\n    <div className=\"AboutContent\" data-cy=\"about-modal\">\n      <div className=\"btn-group\">\n        <a\n          className=\"btn btn-default\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"https://groups.google.com/forum/#!forum/cornerstone-platform\"\n        >\n          {t('Visit the forum')}\n        </a>\n        {` `}\n        <a\n          className=\"btn btn-default\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"https://github.com/OHIF/Viewers/issues/new/choose\"\n        >\n          {t('Report an issue')}\n        </a>\n        {` `}\n        <a\n          className=\"btn btn-default\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"http://ohif.org\"\n        >\n          {t('More details')}\n        </a>\n      </div>\n      <div>\n        <h3>{t('Version Information')}</h3>\n        <table className=\"table table-responsive\">\n          <thead>\n            <tr>\n              <th>{t('Name')}</th>\n              <th>{t('Value')}</th>\n            </tr>\n          </thead>\n          <tbody>{itemsPreset().map(item => renderTableRow(item))}</tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport { AboutContent };\nexport default AboutContent;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\n// Style\nimport './TabComponents.styl';\n\n/**\n * Take name of the tab and create the data-cy value for it\n *\n * @param {string} [name=''] tab name\n * @returns {string} data-cy value\n */\nconst getDataCy = (name = '') => {\n  return name\n    .split(' ')\n    .join('-')\n    .toLowerCase();\n};\n\n/**\n * Single tab data information\n *\n * @typedef {Object} tabData\n * @property {string} name - name of the tab\n * @property {Object} Component - tab component to be rendered\n * @property {Object} customProps - tab custom properties\n * @property {bool} hidden - bool to define if tab is hidden of not\n */\n\n/**\n * Take a list of components data and render then into tabs\n *\n * @param {Object} props\n * @param {[tabData]} props.tabs array of tab data\n * @param {Object} props.customProps common custom properties\n */\nfunction TabComponents({ tabs, customProps = {} }) {\n  const [currentTabIndex, setCurrentTabIndex] = useState(0);\n\n  return (\n    tabs.length > 0 && (\n      <div className=\"TabComponents\">\n        <div className=\"TabComponents_tabHeader\">\n          <div className=\"TabComponents_tabHeader_selector\">\n            <div className=\"dialog-separator-after\">\n              <ul className=\"nav nav-tabs\">\n                {tabs.map((tab, index) => {\n                  const { name, hidden = false } = tab;\n                  return (\n                    !hidden && (\n                      <li\n                        key={index}\n                        onClick={() => {\n                          setCurrentTabIndex(index);\n                        }}\n                        className={classnames(\n                          'nav-link',\n                          index === currentTabIndex && 'active'\n                        )}\n                        data-cy={getDataCy(name)}\n                      >\n                        <button>{name}</button>\n                      </li>\n                    )\n                  );\n                })}\n              </ul>\n            </div>\n          </div>\n        </div>\n        {tabs.map((tab, index) => {\n          const {\n            Component,\n            customProps: tabCustomProps,\n            hidden = false,\n          } = tab;\n          return (\n            !hidden && (\n              <div\n                key={index}\n                className={classnames(\n                  'TabComponents_content',\n                  index === currentTabIndex && 'active'\n                )}\n              >\n                <Component {...customProps} {...tabCustomProps} />\n              </div>\n            )\n          );\n        })}\n      </div>\n    )\n  );\n}\n\nTabComponents.propTypes = {\n  tabs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      Component: PropTypes.any,\n      customProps: PropTypes.object,\n      hidden: PropTypes.bool,\n    })\n  ),\n  customProps: PropTypes.object,\n};\n\nexport { TabComponents };\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './TabFooter.styl';\n\n// In case translate is not passed\nconst translate = word => word;\n\nfunction TabFooter({\n  onResetPreferences,\n  onSave,\n  onCancel,\n  hasErrors,\n  t = translate,\n}) {\n  return (\n    <div className=\"footer\">\n      <button\n        className=\"btn btn-danger pull-left\"\n        data-cy=\"reset-default-btn\"\n        onClick={onResetPreferences}\n      >\n        {t('Reset to Defaults')}\n      </button>\n      <div>\n        <div\n          onClick={onCancel}\n          data-cy=\"cancel-btn\"\n          className=\"btn btn-default\"\n        >\n          {t('Cancel')}\n        </div>\n        <button\n          className=\"btn btn-primary\"\n          data-cy=\"save-btn\"\n          disabled={hasErrors}\n          onClick={onSave}\n        >\n          {t('Save')}\n        </button>\n      </div>\n    </div>\n  );\n}\n\nTabFooter.propTypes = {\n  onResetPreferences: PropTypes.func,\n  onSave: PropTypes.func,\n  onCancel: PropTypes.func,\n  hasErrors: PropTypes.bool,\n  t: PropTypes.func,\n};\n\nexport { TabFooter };\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { hotkeys } from '@ohif/core';\n\n/**\n * Take the pressed key array and return the readable string for the keys\n *\n * @param {Array} [keys=[]]\n * @returns {string} string representation of an array of keys\n */\nconst formatKeysForInput = (keys = []) => keys.join('+');\n\n/**\n * formats given keys sequence to insert the modifier keys in the first index of the array\n * @param {string} sequence keys sequence from MouseTrap Record -> \"shift+left\"\n * @returns {Array} keys in array-format -> ['shift','left']\n */\nconst getKeys = ({ sequence, modifier_keys }) => {\n  const keysArray = sequence.join(' ').split('+');\n  let keys = [];\n  let modifiers = [];\n  keysArray.forEach(key => {\n    if (modifier_keys && modifier_keys.includes(key)) {\n      modifiers.push(key);\n    } else {\n      keys.push(key);\n    }\n  });\n  return [...modifiers, ...keys];\n};\n\n/**\n * HotkeyField\n * Renders a hotkey input\n *\n * @param {object} props component props\n * @param {Array[]} props.keys array of keys to be controlled by this field\n * @param {function} props.handleChange Callback function to communicate parent once value is changed\n * @param {string} props.classNames string caontaining classes to be added in the input field\n * @param {Array[]} props.modifier_keys\n */\nfunction HotkeyField({ keys, handleChange, classNames, modifier_keys }) {\n  const inputValue = formatKeysForInput(keys);\n\n  const onInputKeyDown = event => {\n    event.stopPropagation();\n    event.preventDefault();\n\n    hotkeys.record(sequence => {\n      const keys = getKeys({ sequence, modifier_keys });\n      hotkeys.unpause();\n      handleChange(keys);\n    });\n  };\n\n  const onFocus = () => {\n    hotkeys.pause();\n    hotkeys.startRecording();\n  };\n\n  return (\n    <input\n      readOnly={true}\n      type=\"text\"\n      value={inputValue}\n      className={classNames}\n      onKeyDown={onInputKeyDown}\n      onFocus={onFocus}\n    />\n  );\n}\n\nHotkeyField.propTypes = {\n  keys: PropTypes.array.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  classNames: PropTypes.string,\n  modifier_keys: PropTypes.array,\n  allowed_keys: PropTypes.array,\n};\n\nexport { HotkeyField };\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './LanguageSwitcher.styl';\n\nconst LanguageSwitcher = ({ language, onLanguageChange, languages }) => {\n  const onChange = event => {\n    const { value } = event.target;\n    onLanguageChange(value);\n  };\n\n  return (\n    <select\n      name=\"language-select\"\n      id=\"language-select\"\n      className=\"language-select\"\n      value={language}\n      onChange={onChange}\n    >\n      {languages.map(lng => (\n        <option key={lng.value} value={lng.value}>\n          {lng.label}\n        </option>\n      ))}\n    </select>\n  );\n};\n\nLanguageSwitcher.propTypes = {\n  language: PropTypes.string.isRequired,\n  languages: PropTypes.array.isRequired,\n  onLanguageChange: PropTypes.func.isRequired,\n};\n\nexport { LanguageSwitcher };\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './checkbox.css';\n\nexport class Checkbox extends Component {\n  static propTypes = {\n    label: PropTypes.string.isRequired,\n    checked: PropTypes.bool,\n    onChange: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = { checked: !!props.checked, label: props.label };\n  }\n\n  handleChange(e) {\n    const checked = e.target.checked;\n    this.setState({ checked });\n    if (this.props.onChange) this.props.onChange(checked);\n  }\n\n  componentDidUpdate(props) {\n    const { checked = false, label } = props;\n\n    if (this.state.checked !== checked || this.state.label !== label) {\n      this.setState({\n        checked,\n        label,\n      });\n    }\n  }\n\n  render() {\n    let checkbox;\n    if (this.state.checked) {\n      checkbox = <span className=\"ohif-checkbox ohif-checked\" />;\n    } else {\n      checkbox = <span className=\"ohif-checkbox\" />;\n    }\n\n    return (\n      <div className=\"ohif-check-container\">\n        <form>\n          <label className=\"ohif-check-label\">\n            <input\n              type=\"checkbox\"\n              checked={this.state.checked}\n              onChange={this.handleChange.bind(this)}\n            />\n            {checkbox}\n            {this.state.label}\n          </label>\n        </form>\n      </div>\n    );\n  }\n}\n","import './CineDialog.styl';\n\nimport React, { PureComponent } from 'react';\nimport { withTranslation } from '../../contextProviders';\nimport { Icon } from './../../elements/Icon';\nimport PropTypes from 'prop-types';\n\nclass CineDialog extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      cineFrameRate: props.cineFrameRate,\n      isPlaying: props.isPlaying,\n    };\n  }\n\n  static propTypes = {\n    /** Minimum value for range slider */\n    cineMinFrameRate: PropTypes.number.isRequired,\n    /** Maximum value for range slider */\n    cineMaxFrameRate: PropTypes.number.isRequired,\n    /** Increment range slider can \"step\" in either direction. */\n    cineStepFrameRate: PropTypes.number.isRequired,\n    cineFrameRate: PropTypes.number.isRequired,\n    /** 'True' if playing, 'False' if paused. */\n    isPlaying: PropTypes.bool.isRequired,\n    onPlayPauseChanged: PropTypes.func,\n    onFrameRateChanged: PropTypes.func,\n    onClickNextButton: PropTypes.func,\n    onClickBackButton: PropTypes.func,\n    onClickSkipToStart: PropTypes.func,\n    onClickSkipToEnd: PropTypes.func,\n    /** i18next translation function */\n    t: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    cineMinFrameRate: 1,\n    cineMaxFrameRate: 90,\n    cineStepFrameRate: 1,\n    cineFrameRate: 24,\n    isPlaying: false,\n  };\n\n  componentDidUpdate(prevProps) {\n    // TODO: Not sure if we should just switch this to a stateless\n    // fully-controlled component instead\n    if (\n      this.props.isPlaying !== prevProps.isPlaying ||\n      this.props.isPlaying !== this.state.isPlaying\n    ) {\n      this.setState({\n        isPlaying: this.props.isPlaying,\n      });\n    }\n\n    if (\n      this.props.cineFrameRate !== prevProps.cineFrameRate ||\n      this.props.cineFrameRate !== this.state.cineFrameRate\n    ) {\n      this.setState({\n        cineFrameRate: this.props.cineFrameRate,\n      });\n    }\n  }\n\n  handleInputChange = event => {\n    const target = event.target;\n\n    let value = target.value;\n\n    if (target.type === 'range') {\n      value = parseFloat(target.value);\n    }\n\n    const name = target.name;\n\n    this.setState({\n      [name]: value,\n    });\n\n    if (name === 'cineFrameRate' && this.props.onFrameRateChanged) {\n      this.props.onFrameRateChanged(parseFloat(value));\n    }\n  };\n\n  onClickPlayPause = () => {\n    const value = !this.state.isPlaying;\n\n    this.setState({\n      isPlaying: value,\n    });\n\n    if (this.props.onPlayPauseChanged) {\n      this.props.onPlayPauseChanged(value);\n    }\n  };\n\n  onClickNextButton = event => {\n    if (this.props.onClickNextButton) {\n      this.props.onClickNextButton(event);\n    }\n  };\n\n  onClickBackButton = event => {\n    if (this.props.onClickBackButton) {\n      this.props.onClickBackButton(event);\n    }\n  };\n\n  onClickSkipToStart = event => {\n    if (this.props.onClickSkipToStart) {\n      this.props.onClickSkipToStart(event);\n    }\n  };\n\n  onClickSkipToEnd = event => {\n    if (this.props.onClickSkipToEnd) {\n      this.props.onClickSkipToEnd(event);\n    }\n  };\n\n  render() {\n    const { t } = this.props;\n    return (\n      <div className=\"CineDialog\">\n        <div className=\"noselect double-row-style\">\n          <div className=\"cine-controls\">\n            <div className=\"btn-group\">\n              <button\n                title={t('Skip to first image')}\n                className=\"btn\"\n                data-toggle=\"tooltip\"\n                onClick={this.onClickSkipToStart}\n              >\n                <Icon name=\"fast-backward\" />\n              </button>\n              <button\n                title={t('Previous image')}\n                className=\"btn\"\n                data-toggle=\"tooltip\"\n                onClick={this.onClickBackButton}\n              >\n                <Icon name=\"step-backward\" />\n              </button>\n              <button\n                title={t('Play / Stop')}\n                className=\"btn\"\n                data-toggle=\"tooltip\"\n                onClick={this.onClickPlayPause}\n              >\n                <Icon name={this.state.isPlaying ? 'stop' : 'play'} />\n              </button>\n              <button\n                title={t('Next image')}\n                className=\"btn\"\n                data-toggle=\"tooltip\"\n                onClick={this.onClickNextButton}\n              >\n                <Icon name=\"step-forward\" />\n              </button>\n              <button\n                title={t('Skip to last image')}\n                className=\"btn\"\n                data-toggle=\"tooltip\"\n                onClick={this.onClickSkipToEnd}\n              >\n                <Icon name=\"fast-forward\" />\n              </button>\n            </div>\n          </div>\n          <div className=\"cine-options\">\n            <div className=\"fps-section\">\n              <input\n                type=\"range\"\n                name=\"cineFrameRate\"\n                min={this.props.cineMinFrameRate}\n                max={this.props.cineMaxFrameRate}\n                step={this.props.cineStepFrameRate}\n                value={this.state.cineFrameRate}\n                onChange={this.handleInputChange}\n              />\n            </div>\n            <span className=\"fps\">\n              {this.state.cineFrameRate.toFixed(1)} {t('fps')}\n            </span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst connectedComponent = withTranslation('CineDialog')(CineDialog);\nexport { connectedComponent as CineDialog };\nexport default connectedComponent;\n","import React, {\n  useRef,\n  useCallback,\n  useEffect,\n  useState,\n  createRef,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\n\nimport './ViewportDownloadForm.styl';\nimport { TextInput, Select, Icon } from '@ohif/ui';\nimport classnames from 'classnames';\n\nconst FILE_TYPE_OPTIONS = [\n  {\n    key: 'jpg',\n    value: 'jpg',\n  },\n  {\n    key: 'png',\n    value: 'png',\n  },\n];\n\nconst DEFAULT_FILENAME = 'image';\nconst REFRESH_VIEWPORT_TIMEOUT = 1000;\n\nconst ViewportDownloadForm = ({\n  activeViewport,\n  onClose,\n  updateViewportPreview,\n  enableViewport,\n  disableViewport,\n  toggleAnnotations,\n  loadImage,\n  downloadBlob,\n  defaultSize,\n  minimumSize,\n  maximumSize,\n  canvasClass,\n}) => {\n  const [t] = useTranslation('ViewportDownloadForm');\n\n  const [filename, setFilename] = useState(DEFAULT_FILENAME);\n  const [fileType, setFileType] = useState('jpg');\n\n  const [dimensions, setDimensions] = useState({\n    width: defaultSize,\n    height: defaultSize,\n  });\n\n  const [showAnnotations, setShowAnnotations] = useState(true);\n\n  const [keepAspect, setKeepAspect] = useState(true);\n  const [aspectMultiplier, setAspectMultiplier] = useState({\n    width: 1,\n    height: 1,\n  });\n\n  const [viewportElement, setViewportElement] = useState();\n  const [viewportElementDimensions, setViewportElementDimensions] = useState({\n    width: defaultSize,\n    height: defaultSize,\n  });\n\n  const [downloadCanvas, setDownloadCanvas] = useState({\n    ref: createRef(),\n    width: defaultSize,\n    height: defaultSize,\n  });\n\n  const [viewportPreview, setViewportPreview] = useState({\n    src: null,\n    width: defaultSize,\n    height: defaultSize,\n  });\n\n  const [error, setError] = useState({\n    width: false,\n    height: false,\n    filename: false,\n  });\n\n  const hasError = Object.values(error).includes(true);\n\n  const refreshViewport = useRef(null);\n\n  const downloadImage = () => {\n    downloadBlob(\n      filename || DEFAULT_FILENAME,\n      fileType,\n      viewportElement,\n      downloadCanvas.ref.current\n    );\n  };\n\n  /**\n   * @param {object} event - Input change event\n   * @param {string} dimension - \"height\" | \"width\"\n   */\n  const onDimensionsChange = (event, dimension) => {\n    const oppositeDimension = dimension === 'height' ? 'width' : 'height';\n    const sanitizedTargetValue = event.target.value.replace(/\\D/, '');\n    const isEmpty = sanitizedTargetValue === '';\n    const newDimensions = { ...dimensions };\n    const updatedDimension = isEmpty\n      ? ''\n      : Math.min(sanitizedTargetValue, maximumSize);\n\n    if (updatedDimension === dimensions[dimension]) {\n      return;\n    }\n\n    newDimensions[dimension] = updatedDimension;\n\n    if (keepAspect && newDimensions[oppositeDimension] !== '') {\n      newDimensions[oppositeDimension] = Math.round(\n        newDimensions[dimension] * aspectMultiplier[oppositeDimension]\n      );\n    }\n\n    // In current code, keepAspect is always `true`\n    // And we always start w/ a square width/height\n    setDimensions(newDimensions);\n\n    // Only update if value is non-empty\n    if (!isEmpty) {\n      setViewportElementDimensions(newDimensions);\n      setDownloadCanvas(state => ({\n        ...state,\n        ...newDimensions,\n      }));\n    }\n  };\n\n  const error_messages = {\n    width: t('minWidthError'),\n    height: t('minHeightError'),\n    filename: t('emptyFilenameError'),\n  };\n\n  const renderErrorHandler = errorType => {\n    if (!error[errorType]) {\n      return null;\n    }\n\n    return <div className=\"input-error\">{error_messages[errorType]}</div>;\n  };\n\n  const onKeepAspectToggle = () => {\n    const { width, height } = dimensions;\n    const aspectMultiplier = { ...aspectMultiplier };\n    if (!keepAspect) {\n      const base = Math.min(width, height);\n      aspectMultiplier.width = width / base;\n      aspectMultiplier.height = height / base;\n      setAspectMultiplier(aspectMultiplier);\n    }\n\n    setKeepAspect(!keepAspect);\n  };\n\n  const validSize = value => (value >= minimumSize ? value : minimumSize);\n  const loadAndUpdateViewports = useCallback(async () => {\n    const { width: scaledWidth, height: scaledHeight } = await loadImage(\n      activeViewport,\n      viewportElement,\n      dimensions.width,\n      dimensions.height\n    );\n\n    toggleAnnotations(showAnnotations, viewportElement);\n\n    const scaledDimensions = {\n      height: validSize(scaledHeight),\n      width: validSize(scaledWidth),\n    };\n\n    setViewportElementDimensions(scaledDimensions);\n    setDownloadCanvas(state => ({\n      ...state,\n      ...scaledDimensions,\n    }));\n\n    const {\n      dataUrl,\n      width: viewportElementWidth,\n      height: viewportElementHeight,\n    } = await updateViewportPreview(\n      viewportElement,\n      downloadCanvas.ref.current,\n      fileType\n    );\n\n    setViewportPreview(state => ({\n      ...state,\n      src: dataUrl,\n      width: validSize(viewportElementWidth),\n      height: validSize(viewportElementHeight),\n    }));\n  }, [\n    activeViewport,\n    viewportElement,\n    showAnnotations,\n    loadImage,\n    toggleAnnotations,\n    updateViewportPreview,\n    fileType,\n    downloadCanvas.ref,\n    minimumSize,\n    maximumSize,\n    viewportElementDimensions,\n  ]);\n\n  useEffect(() => {\n    enableViewport(viewportElement);\n\n    return () => {\n      disableViewport(viewportElement);\n    };\n  }, [disableViewport, enableViewport, viewportElement]);\n\n  useEffect(() => {\n    if (refreshViewport.current !== null) {\n      clearTimeout(refreshViewport.current);\n    }\n\n    refreshViewport.current = setTimeout(() => {\n      refreshViewport.current = null;\n      loadAndUpdateViewports();\n    }, REFRESH_VIEWPORT_TIMEOUT);\n  }, [\n    activeViewport,\n    viewportElement,\n    showAnnotations,\n    dimensions,\n    loadImage,\n    toggleAnnotations,\n    updateViewportPreview,\n    fileType,\n    downloadCanvas.ref,\n    minimumSize,\n    maximumSize,\n  ]);\n\n  useEffect(() => {\n    const { width, height } = dimensions;\n    const hasError = {\n      width: width < minimumSize,\n      height: height < minimumSize,\n      filename: !filename,\n    };\n\n    setError({ ...hasError });\n  }, [dimensions, filename, minimumSize]);\n\n  return (\n    <div className=\"ViewportDownloadForm\">\n      <div className=\"title\">{t('formTitle')}</div>\n\n      <div className=\"file-info-container\" data-cy=\"file-info-container\">\n        <div className=\"dimension-wrapper\">\n          <div className=\"dimensions\">\n            <div className=\"width\">\n              <TextInput\n                type=\"number\"\n                min={minimumSize}\n                max={maximumSize}\n                value={dimensions.width}\n                label={t('imageWidth')}\n                onChange={evt => onDimensionsChange(evt, 'width')}\n                data-cy=\"image-width\"\n              />\n              {renderErrorHandler('width')}\n            </div>\n            <div className=\"height\">\n              <TextInput\n                type=\"number\"\n                min={minimumSize}\n                max={maximumSize}\n                value={dimensions.height}\n                label={t('imageHeight')}\n                onChange={evt => onDimensionsChange(evt, 'height')}\n                data-cy=\"image-height\"\n              />\n              {renderErrorHandler('height')}\n            </div>\n          </div>\n          <div className=\"keep-aspect-wrapper\">\n            <button\n              id=\"keep-aspect\"\n              className={classnames(\n                'form-button btn',\n                keepAspect ? 'active' : ''\n              )}\n              data-cy=\"keep-aspect\"\n              alt={t('keepAspectRatio')}\n              onClick={onKeepAspectToggle}\n            >\n              <Icon\n                name={keepAspect ? 'link' : 'unlink'}\n                alt={keepAspect ? 'Dismiss Aspect' : 'Keep Aspect'}\n              />\n            </button>\n          </div>\n        </div>\n\n        <div className=\"col\">\n          <div className=\"file-name\">\n            <TextInput\n              type=\"text\"\n              data-cy=\"file-name\"\n              value={filename}\n              onChange={event => setFilename(event.target.value)}\n              label={t('filename')}\n              id=\"file-name\"\n            />\n            {renderErrorHandler('filename')}\n          </div>\n          <div className=\"file-type\">\n            <Select\n              value={fileType}\n              data-cy=\"file-type\"\n              onChange={event => setFileType(event.target.value)}\n              options={FILE_TYPE_OPTIONS}\n              label={t('fileType')}\n            />\n          </div>\n        </div>\n\n        <div className=\"col\">\n          <div className=\"show-annotations\">\n            <label htmlFor=\"show-annotations\" className=\"form-check-label\">\n              <input\n                id=\"show-annotations\"\n                data-cy=\"show-annotations\"\n                type=\"checkbox\"\n                className=\"form-check-input\"\n                checked={showAnnotations}\n                onChange={event => setShowAnnotations(event.target.checked)}\n              />\n              {t('showAnnotations')}\n            </label>\n          </div>\n        </div>\n      </div>\n\n      <div\n        style={{\n          height: viewportElementDimensions.height,\n          width: viewportElementDimensions.width,\n          position: 'absolute',\n          left: '9999px',\n        }}\n        ref={ref => setViewportElement(ref)}\n      >\n        <canvas\n          className={canvasClass}\n          style={{\n            height: downloadCanvas.height,\n            width: downloadCanvas.width,\n            display: 'block',\n          }}\n          width={downloadCanvas.width}\n          height={downloadCanvas.height}\n          ref={downloadCanvas.ref}\n        ></canvas>\n      </div>\n\n      {viewportPreview.src ? (\n        <div className=\"preview\" data-cy=\"image-preview\">\n          <div className=\"preview-header\"> {t('imagePreview')}</div>\n          <img\n            className=\"viewport-preview\"\n            src={viewportPreview.src}\n            alt={t('imagePreview')}\n            data-cy=\"image-preview\"\n            data-cy=\"viewport-preview-img\"\n          />\n        </div>\n      ) : (\n        <div className=\"loading-image\">\n          <Icon name=\"circle-notch\" className=\"icon-spin\" />\n          {t('loadingPreview')}\n        </div>\n      )}\n\n      <div className=\"actions\">\n        <div className=\"action-cancel\">\n          <button\n            type=\"button\"\n            data-cy=\"cancel-btn\"\n            className=\"btn btn-danger\"\n            onClick={onClose}\n          >\n            {t('Buttons:Cancel')}\n          </button>\n        </div>\n        <div className=\"action-save\">\n          <button\n            disabled={hasError}\n            onClick={downloadImage}\n            className=\"btn btn-primary\"\n            data-cy=\"download-btn\"\n          >\n            {t('Buttons:Download')}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nViewportDownloadForm.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  activeViewport: PropTypes.object,\n  updateViewportPreview: PropTypes.func.isRequired,\n  enableViewport: PropTypes.func.isRequired,\n  disableViewport: PropTypes.func.isRequired,\n  toggleAnnotations: PropTypes.func.isRequired,\n  loadImage: PropTypes.func.isRequired,\n  downloadBlob: PropTypes.func.isRequired,\n  /** A default width & height, between the minimum and maximum size */\n  defaultSize: PropTypes.number.isRequired,\n  minimumSize: PropTypes.number.isRequired,\n  maximumSize: PropTypes.number.isRequired,\n  canvasClass: PropTypes.string.isRequired,\n};\n\nexport default ViewportDownloadForm;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './StudiesItem.styl';\n\nexport class StudiesItem extends Component {\n  static propTypes = {\n    onClick: PropTypes.func.isRequired,\n    studyData: PropTypes.object.isRequired,\n    active: PropTypes.bool,\n  };\n\n  render() {\n    const {\n      StudyDate,\n      StudyDescription,\n      modalities,\n      studyAvailable,\n    } = this.props.studyData;\n    const activeClass = this.props.active ? ' active' : '';\n    const hasDescriptionAndDate = StudyDate && StudyDescription;\n    return (\n      <div\n        className={`studyBrowseItem${activeClass}`}\n        onClick={this.props.onClick}\n      >\n        <div className=\"studyItemBox\">\n          <div className=\"studyModality\">\n            <div\n              className=\"studyModalityText\"\n              style={this.getModalitiesStyle()}\n            >\n              {modalities}\n            </div>\n          </div>\n          <div className=\"studyText\">\n            {hasDescriptionAndDate ? (\n              <React.Fragment>\n                <div className=\"studyDate\">{StudyDate}</div>\n                <div className=\"studyDescription\">{StudyDescription}</div>\n              </React.Fragment>\n            ) : (\n              <div className=\"studyAvailability\">\n                {studyAvailable ? (\n                  <React.Fragment>N/A</React.Fragment>\n                ) : (\n                  <React.Fragment>Click to load</React.Fragment>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  getModalitiesStyle = () => {\n    return {};\n  };\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { StudiesItem } from './StudiesItem.js';\nimport './StudiesList.styl';\n\nexport class StudiesList extends Component {\n  static propTypes = {\n    class: PropTypes.string,\n    studyListData: PropTypes.array.isRequired,\n    onClick: PropTypes.func.isRequired,\n    activeStudyInstanceUID: PropTypes.string,\n  };\n\n  render() {\n    return (\n      <div className={`studiesList ${this.props.class}`}>\n        {this.getBrowserItems()}\n      </div>\n    );\n  }\n\n  getBrowserItems = () => {\n    return this.props.studyListData.map((studyData, index) => {\n      return (\n        <StudiesItem\n          key={index}\n          studyData={studyData}\n          active={\n            studyData.StudyInstanceUID === this.props.activeStudyInstanceUID\n          }\n          onClick={event => this.props.onClick(studyData)}\n        />\n      );\n    });\n  };\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Thumbnail } from './../studyBrowser';\nimport './SeriesList.styl';\n\nexport class SeriesList extends Component {\n  static propTypes = {\n    seriesItems: PropTypes.array.isRequired,\n    onClick: PropTypes.func.isRequired,\n    activeDisplaySetInstanceUID: PropTypes.string,\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"study-browser-series clearfix thumbnails-wrapper\">\n          <div className=\"study-series-container\">{this.getSeriesItems()}</div>\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  getSeriesItems = () => {\n    return this.props.seriesItems.map((seriesData, index) => {\n      return (\n        <Thumbnail\n          key={seriesData.displaySetInstanceUID}\n          id={`series_thumb_${index}`}\n          {...seriesData}\n          active={\n            seriesData.displaySetInstanceUID ===\n            this.props.activeDisplaySetInstanceUID\n          }\n          onClick={() => this.props.onClick(seriesData)}\n        />\n      );\n    });\n  };\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { StudiesList } from './StudiesList.js';\nimport { ScrollableArea } from './../../ScrollableArea/ScrollableArea.js';\nimport { SeriesList } from './SeriesList.js';\n\nimport './QuickSwitch.styl';\n\nexport class QuickSwitch extends Component {\n  static propTypes = {\n    side: PropTypes.string,\n    studyListData: PropTypes.array.isRequired,\n    onSeriesSelected: PropTypes.func.isRequired,\n    seriesData: PropTypes.array,\n    onStudySelected: PropTypes.func,\n    activeStudyInstanceUID: PropTypes.string,\n    activeDisplaySetInstanceUID: PropTypes.string,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      seriesQuickSwitchOpen: false,\n      sideClass: this.props.side || '',\n      activeStudyInstanceUID: this.props.activeStudyInstanceUID,\n      activeDisplaySetInstanceUID: this.props.activeDisplaySetInstanceUID,\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const props = this.props;\n\n    if (props.activeStudyInstanceUID !== prevProps.activeStudyInstanceUID) {\n      this.setState({\n        activeStudyInstanceUID: props.activeStudyInstanceUID,\n      });\n    }\n\n    if (\n      props.activeDisplaySetInstanceUID !==\n      prevProps.activeDisplaySetInstanceUID\n    ) {\n      this.setState({\n        activeDisplaySetInstanceUID: props.activeDisplaySetInstanceUID,\n      });\n    }\n  }\n\n  render() {\n    const quickSwitchClass = this.state.seriesQuickSwitchOpen\n      ? 'series-triggered'\n      : '';\n\n    return (\n      <div\n        className={`series-quick-switch clearfix noselect ${this.state.sideClass} ${quickSwitchClass}`}\n        onMouseLeave={this.hideSeriesSwitch}\n      >\n        <div className=\"series-switch\" onMouseEnter={this.showSeriesSwitch}>\n          <div className=\"title-label\">Series</div>\n          <div className=\"series-box\">\n            {this.getSmallListItems()}\n            <ScrollableArea scrollStep={201} class=\"series-browser\">\n              <SeriesList\n                seriesItems={this.getSeriesItems()}\n                onClick={this.onSeriesClick}\n                activeDisplaySetInstanceUID={\n                  this.state.activeDisplaySetInstanceUID\n                }\n              />\n            </ScrollableArea>\n          </div>\n        </div>\n        <div className=\"study-switch\">\n          <div className=\"title-label\">Study</div>\n          <div className=\"study-box\">\n            <ScrollableArea scrollStep={91} class=\"study-browser\">\n              <StudiesList\n                studyListData={this.props.studyListData}\n                onClick={this.onStudyClick}\n                activeStudyInstanceUID={this.state.activeStudyInstanceUID}\n              />\n            </ScrollableArea>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  getSeriesItems = () => {\n    let seriesData;\n\n    if (this.props.seriesData) {\n      seriesData = this.props.seriesData;\n    } else if (this.state.activeStudyInstanceUID) {\n      const study = this.props.studyListData.find(\n        study => study.StudyInstanceUID === this.state.activeStudyInstanceUID\n      );\n\n      seriesData = study.thumbnails;\n    } else {\n      seriesData = this.props.studyListData[0].thumbnails;\n    }\n\n    return seriesData || [];\n  };\n\n  getSmallListItems = () => {\n    const seriesItems = this.getSeriesItems() || [];\n    return seriesItems.map((seriesData, index) => {\n      const active =\n        seriesData.displaySetInstanceUID ===\n        this.state.activeDisplaySetInstanceUID;\n      return (\n        <div key={index} className={`series-item ${active ? 'active' : ''}`} />\n      );\n    });\n  };\n\n  onStudyClick = studyDataSelected => {\n    if (this.props.onStudySelected) {\n      this.props.onStudySelected(studyDataSelected);\n    }\n    this.setState({\n      activeStudyInstanceUID: studyDataSelected.StudyInstanceUID,\n      seriesQuickSwitchOpen: true,\n    });\n  };\n\n  onSeriesClick = seriesDataSelected => {\n    this.setState({\n      activeDisplaySetInstanceUID: seriesDataSelected.displaySetInstanceUID,\n    });\n\n    this.props.onSeriesSelected(seriesDataSelected);\n  };\n\n  showSeriesSwitch = () => {\n    this.setState({\n      seriesQuickSwitchOpen: true,\n    });\n  };\n\n  hideSeriesSwitch = () => {\n    this.setState({\n      seriesQuickSwitchOpen: false,\n    });\n  };\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { Icon } from './../../elements/Icon';\nimport './RoundedButtonGroup.css';\n\n// TODO: Rename to Toggle?\nclass RoundedButtonGroup extends Component {\n  static className = 'RoundedButtonGroup';\n\n  static propTypes = {\n    options: PropTypes.arrayOf(\n      PropTypes.shape({\n        value: PropTypes.any,\n        label: PropTypes.string,\n        stateEvent: PropTypes.string,\n        icon: PropTypes.oneOfType([\n          PropTypes.string,\n          PropTypes.shape({\n            name: PropTypes.string.isRequired,\n          }),\n        ]),\n      })\n    ),\n    value: PropTypes.string,\n    onValueChanged: PropTypes.func,\n  };\n\n  static defaultProps = {\n    options: [],\n    value: null,\n  };\n\n  state = {\n    badgeNumbers: [],\n  };\n\n  constructor() {\n    super();\n    this.onStateEvent = this.onStateEvent.bind(this);\n  }\n\n  onClickOption = value => {\n    let newValue = value;\n    if (this.props.value === value) {\n      newValue = null;\n    }\n\n    if (this.props.onValueChanged) {\n      this.props.onValueChanged(newValue);\n    }\n  };\n\n  onStateEvent(event) {\n    const optionIndex = this.props.options.findIndex(\n      o => o.value === event.detail.target\n    );\n    if (optionIndex > -1) {\n      const badgeNumbers = this.state.badgeNumbers;\n      badgeNumbers[optionIndex] = event.detail.badgeNumber;\n      this.setState({ badgeNumbers });\n    }\n  }\n\n  componentDidMount() {\n    this.props.options.forEach(option => {\n      if (option.stateEvent) {\n        document.addEventListener(option.stateEvent, this.onStateEvent);\n      }\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.props.options.forEach((option, index) => {\n      if (\n        option.stateEvent &&\n        option.stateEvent !==\n          (prevProps.options[index]\n            ? prevProps.options[index].stateEvent\n            : null)\n      ) {\n        document.removeEventListener(option.stateEvent, this.onStateEvent);\n        document.addEventListener(option.stateEvent, this.onStateEvent);\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.options.forEach(option => {\n      if (option.stateEvent) {\n        document.removeEventListener(option.stateEvent, this.onStateEvent);\n      }\n    });\n  }\n\n  render() {\n    let className = classnames(\n      RoundedButtonGroup.className,\n      'clearfix center-table'\n    );\n\n    const buttons = this.props.options.map((option, index) => {\n      const className = classnames({\n        roundedButtonWrapper: true,\n        noselect: true,\n        active: this.props.value === option.value,\n      });\n\n      const optionText = option.label && <span>{option.label}</span>;\n      const iconProps =\n        typeof option.icon === 'string' ? { name: option.icon } : option.icon;\n\n      const bottomLabel = option.bottomLabel && (\n        <div className=\"bottomLabel\">{option.bottomLabel}</div>\n      );\n\n      let badgeNumber = this.state.badgeNumbers[index];\n      const badgeNumberOverflow = String(badgeNumber).length > 2;\n      badgeNumber = badgeNumber\n        ? badgeNumberOverflow\n          ? 99\n          : badgeNumber\n        : null;\n\n      return (\n        <div\n          key={index}\n          className={className}\n          onClick={() => this.onClickOption(option.value)}\n        >\n          <div className=\"roundedButton\">\n            {optionText}\n            {badgeNumber && (\n              <div className=\"badgeNumber-container\">\n                <span className=\"badgeNumber\">\n                  {badgeNumber}\n                  {badgeNumberOverflow && '+'}\n                </span>\n              </div>\n            )}\n            {iconProps && <Icon {...iconProps} />}\n          </div>\n          {bottomLabel}\n        </div>\n      );\n    });\n\n    return <div className={className}>{buttons}</div>;\n  }\n}\n\nexport { RoundedButtonGroup };\n","import { Component } from 'react';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class InputRadio extends Component {\n  static propTypes = {\n    value: PropTypes.string,\n    label: PropTypes.string.isRequired,\n    itemData: PropTypes.object.isRequired,\n    labelClass: PropTypes.string,\n    id: PropTypes.string.isRequired,\n    onSelected: PropTypes.func.isRequired,\n  };\n\n  render() {\n    const labelClass = this.props.labelClass ? this.props.labelClass : '';\n    return (\n      <label\n        className={'wrapperLabel radioLabel ' + labelClass}\n        htmlFor={this.props.id}\n      >\n        <input\n          type=\"radio\"\n          id={this.props.id}\n          className=\"radioInput\"\n          value={this.props.value}\n          onChange={this.onSelected}\n        />\n        <span className=\"wrapperText\">{this.props.label}</span>\n      </label>\n    );\n  }\n\n  onSelected = evt => {\n    this.props.onSelected(evt, this.props.itemData);\n  };\n}\n","import { Component } from 'react';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from './../../elements/Icon';\n\nexport default class SelectTreeBreadcrumb extends Component {\n  static propTypes = {\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    onSelected: PropTypes.func.isRequired,\n  };\n\n  render() {\n    return (\n      <div className=\"selectTreeBreadcrumb\">\n        <label\n          className=\"wrapperLabel radioLabel\"\n          htmlFor=\"selectTreeBreadcrumb\"\n        >\n          <input\n            type=\"radio\"\n            id=\"selectTreeBreadcrumb\"\n            className=\"treeNode radioInput\"\n            value={this.props.value}\n            onChange={this.props.onSelected}\n          />\n          <span className=\"wrapperText\">\n            <span className=\"backIcon\">\n              <Icon name=\"fast-backward\" />\n            </span>\n            {this.props.label}\n          </span>\n        </label>\n      </div>\n    );\n  }\n}\n","import './SelectTree.styl';\n\nimport React, { Component } from 'react';\n\nimport { Icon } from './../../elements/Icon';\nimport InputRadio from './InputRadio.js';\nimport PropTypes from 'prop-types';\nimport SelectTreeBreadcrumb from './SelectTreeBreadcrumb.js';\nimport cloneDeep from 'lodash.clonedeep';\n\nexport class SelectTree extends Component {\n  static propTypes = {\n    autoFocus: PropTypes.bool,\n    searchEnabled: PropTypes.bool,\n    selectTreeFirstTitle: PropTypes.string,\n    selectTreeSecondTitle: PropTypes.string,\n    /** Called when 'componentDidUpdate' is triggered */\n    onComponentChange: PropTypes.func,\n    /** [{ label, value, items[]}] - An array of items than can be expanded to show child items */\n    items: PropTypes.array.isRequired,\n    /** fn(evt, item) - Called when a child item is selected; receives event and selected item */\n    onSelected: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    searchEnabled: true,\n    autoFocus: true,\n    selectTreeFirstTitle: 'First Level itens',\n    items: [],\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      searchTerm: null,\n      currentNode: null,\n      value: null,\n    };\n  }\n\n  render() {\n    const treeItems = this.getTreeItems();\n\n    return (\n      <div className=\"selectTree selectTreeRoot\">\n        <div className=\"treeContent\">\n          {this.headerItem()}\n          <div className=\"treeOptions\">\n            {this.state.currentNode && (\n              <SelectTreeBreadcrumb\n                onSelected={this.onBreadcrumbSelected}\n                label={this.state.currentNode.label}\n                value={this.state.currentNode.value}\n              />\n            )}\n            <div className=\"treeInputsWrapper\">\n              <div className=\"treeInputs\">{treeItems}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  componentDidUpdate = () => {\n    if (this.props.onComponentChange) {\n      this.props.onComponentChange();\n    }\n  };\n\n  isLeafSelected = item => item && !Array.isArray(item.items);\n\n  getLabelClass = item => {\n    let labelClass = 'treeLeaf';\n    if (this.state.searchTerm || Array.isArray(item.items)) {\n      labelClass = 'treeNode';\n    }\n    return labelClass;\n  };\n\n  filterItems() {\n    const filteredItems = [];\n    const rawItems = cloneDeep(this.props.items);\n    rawItems.forEach(item => {\n      if (Array.isArray(item.items)) {\n        item.items.forEach(item => {\n          const label = item.label.toLowerCase();\n          const searchTerm = this.state.searchTerm.toLowerCase();\n          if (label.indexOf(searchTerm) !== -1) {\n            filteredItems.push(item);\n          }\n        });\n      } else {\n        const label = item.label.toLowerCase();\n        const searchTerm = this.state.searchTerm.toLowerCase();\n        if (label.indexOf(searchTerm) !== -1) {\n          filteredItems.push(item);\n        }\n      }\n    });\n    return filteredItems;\n  }\n\n  getTreeItems() {\n    const storageKey = 'SelectTree';\n    let treeItems;\n\n    if (this.state.searchTerm) {\n      treeItems = this.filterItems();\n    } else if (this.state.currentNode) {\n      treeItems = cloneDeep(this.state.currentNode.items);\n    } else {\n      treeItems = cloneDeep(this.props.items);\n    }\n\n    return treeItems.map((item, index) => {\n      let itemKey = index;\n      if (this.state.currentNode) {\n        itemKey += `_${this.state.currentNode.value}`;\n      }\n      return (\n        <InputRadio\n          key={itemKey}\n          id={`${storageKey}_${item.value}`}\n          name={index}\n          itemData={item}\n          value={item.value}\n          label={item.label}\n          labelClass={this.getLabelClass(item)}\n          onSelected={this.onSelected}\n        />\n      );\n    });\n  }\n\n  headerItem = () => {\n    let title = this.props.selectTreeFirstTitle;\n    if (this.state.currentNode && this.props.selectTreeSecondTitle) {\n      title = this.props.selectTreeSecondTitle;\n    }\n\n    return (\n      <div className=\"wrapperLabel treeHeader\">\n        <div className=\"wrapperText\">{title}</div>\n        {this.props.searchEnabled && (\n          <div className=\"wrapperSearch\">\n            <div className=\"searchIcon\">\n              <Icon name=\"search\" />\n            </div>\n            <input\n              type=\"text\"\n              className=\"searchInput\"\n              placeholder=\"Search labels\"\n              autoFocus={this.props.autoFocus}\n              onChange={this.searchLocations}\n              value={this.state.searchTerm ? this.state.searchTerm : ''}\n            />\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  searchLocations = evt => {\n    this.setState({\n      currentNode: null,\n      searchTerm: evt.currentTarget.value,\n    });\n  };\n\n  onSelected = (event, item) => {\n    if (this.isLeafSelected(item)) {\n      this.setState({\n        searchTerm: null,\n        currentNode: null,\n        value: null,\n      });\n    } else {\n      this.setState({\n        currentNode: item,\n      });\n    }\n    return this.props.onSelected(event, item);\n  };\n\n  onBreadcrumbSelected = () => {\n    this.setState({\n      currentNode: null,\n    });\n  };\n}\n","import React, { Component, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { TextInput } from '@ohif/ui';\n\nimport './SimpleDialog.styl';\n\nclass SimpleDialog extends Component {\n  static propTypes = {\n    children: PropTypes.node,\n    componentRef: PropTypes.any,\n    componentStyle: PropTypes.object,\n    rootClass: PropTypes.string,\n    isOpen: PropTypes.bool,\n    headerTitle: PropTypes.string.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onConfirm: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    isOpen: true,\n    componentStyle: {},\n    rootClass: '',\n  };\n\n  static InputDialog = ({ onSubmit, defaultValue, title, label, onClose }) => {\n    const [value, setValue] = useState(defaultValue);\n\n    const onSubmitHandler = () => {\n      onSubmit(value);\n    };\n\n    return (\n      <div className=\"InputDialog\">\n        <SimpleDialog\n          headerTitle={title}\n          onClose={onClose}\n          onConfirm={onSubmitHandler}\n        >\n          <TextInput\n            type=\"text\"\n            value={value}\n            onChange={event => setValue(event.target.value)}\n            label={label}\n          />\n        </SimpleDialog>\n      </div>\n    );\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.props.isOpen && (\n          <div\n            className={`simpleDialog ${this.props.rootClass} `}\n            ref={this.props.componentRef}\n            style={this.props.componentStyle}\n          >\n            <form>\n              <div className=\"header\">\n                <span className=\"closeBtn\" onClick={this.onClose}>\n                  <span className=\"closeIcon\">x</span>\n                </span>\n                <h4 className=\"title\">{this.props.headerTitle}</h4>\n              </div>\n              <div className=\"content\">{this.props.children}</div>\n              <div className=\"footer\">\n                <button className=\"btn btn-default\" onClick={this.onClose}>\n                  Cancel\n                </button>\n                <button className=\"btn btn-primary\" onClick={this.onConfirm}>\n                  Confirm\n                </button>\n              </div>\n            </form>\n          </div>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  onClose = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    this.props.onClose();\n  };\n\n  onConfirm = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    this.props.onConfirm();\n  };\n}\n\nexport { SimpleDialog };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Modal from 'react-modal';\nimport classNames from 'classnames';\n\nimport './OHIFModal.styl';\n\nconst customStyle = {\n  overlay: {\n    zIndex: 1071,\n    backgroundColor: 'rgb(0, 0, 0, 0.5)',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n};\n\nModal.setAppElement(document.getElementById('root'));\n\nconst OHIFModal = ({\n  className,\n  closeButton,\n  shouldCloseOnEsc,\n  isOpen,\n  fullscreen,\n  title,\n  onClose,\n  children,\n}) => {\n  const renderHeader = () => {\n    return (\n      title && (\n        <div className=\"OHIFModal__header\" data-cy=\"modal-header\">\n          <h4>{title}</h4>\n          {closeButton && (\n            <button data-cy=\"close-button\" onClick={onClose}>\n              ×\n            </button>\n          )}\n        </div>\n      )\n    );\n  };\n\n  const classes = fullscreen\n    ? classNames('OHIFModal', className, 'OHIFModal-fullscreen')\n    : classNames('OHIFModal', className);\n\n  return (\n    <Modal\n      className={classes}\n      data-cy=\"modal\"\n      shouldCloseOnEsc={shouldCloseOnEsc}\n      isOpen={isOpen}\n      title={title}\n      style={customStyle}\n    >\n      <>\n        {renderHeader()}\n        <div className=\"OHIFModal__content\" data-cy=\"modal-content\">\n          {children}\n        </div>\n      </>\n    </Modal>\n  );\n};\n\nOHIFModal.propTypes = {\n  className: PropTypes.string,\n  closeButton: PropTypes.bool,\n  shouldCloseOnEsc: PropTypes.bool,\n  isOpen: PropTypes.bool,\n  title: PropTypes.string,\n  onClose: PropTypes.func,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n\nexport default OHIFModal;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport './ContextMenu.css';\n\nconst ContextMenu = ({ items, onClick }) => {\n  return (\n    <div className=\"ContextMenu\" onContextMenu={e => e.preventDefault()}>\n      <ul>\n        {items.map((item, index) => (\n          <li key={index}>\n            <button className=\"form-action\" onClick={() => onClick(item)}>\n              <span key={index}>{item.label}</span>\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nContextMenu.propTypes = {\n  items: PropTypes.array.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default ContextMenu;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from '@ohif/ui';\n\nimport './ErrorPage.css';\n\nconst ErrorPage = ({ error, title, description, onRetry }) => {\n  return (\n    <div className=\"ErrorPage\">\n      {title && <h3>{title}</h3>}\n      <p>{description}</p>\n      <Icon\n        className=\"retry-icon\"\n        name=\"rotate-right\"\n        width=\"25px\"\n        height=\"25px\"\n        onClick={onRetry}\n      />\n      {error && (\n        <div className=\"error-container\">\n          <pre>{error.message}</pre>\n          <pre>{error.stack}</pre>\n        </div>\n      )}\n    </div>\n  );\n};\n\nErrorPage.propTypes = {\n  error: PropTypes.object,\n  title: PropTypes.string,\n  description: PropTypes.string,\n  onRetry: PropTypes.func\n};\n\nErrorPage.defaultProps = {\n  description: 'Oh snap, something went wrong, please try reloading',\n  onRetry: () => window.location.reload()\n};\n\nexport default ErrorPage;\n","import ErrorPage from './ErrorPage';\nexport default ErrorPage;\n","//  If you want to continue using CSS stylesheets and classes...\n//  https://github.com/airbnb/react-dates#initialize\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\nimport './CustomDateRangePicker.css';\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { DateRangePicker } from 'react-dates';\nimport moment from 'moment';\nimport i18n from '@ohif/i18n';\nimport { useTranslation } from 'react-i18next';\n\nfunction CustomDateRangePicker(props) {\n  moment.locale(i18n.language); // using i18n in the date picker\n\n  const { t } = useTranslation('DatePicker');\n\n  const {\n    onDatesChange,\n    startDate,\n    endDate,\n    presets,\n    ...dateRangePickerProps\n  } = props;\n\n  const renderDatePresets = () => {\n    const { presets } = props;\n\n    return (\n      <div className=\"PresetDateRangePicker_panel\">\n        {presets.map(({ text, start, end }) => {\n          const isSelected = startDate === start && endDate === end;\n\n          return (\n            <button\n              key={text}\n              type=\"button\"\n              className={`PresetDateRangePicker_button ${\n                isSelected ? 'PresetDateRangePicker_button__selected' : ''\n              }`}\n              onClick={() =>\n                onDatesChange({\n                  startDate: start,\n                  endDate: end,\n                  preset: true,\n                })\n              }\n            >\n              {text}\n            </button>\n          );\n        })}\n      </div>\n    );\n  };\n  const renderMonthElement = ({ month, onMonthSelect, onYearSelect }) => {\n    const containerStyle = {\n      margin: '0 5px',\n    };\n\n    const renderYearsOptions = () => {\n      const yearsRange = 20;\n      const options = [];\n\n      for (let i = 0; i < yearsRange; i++) {\n        const year = moment().year() - i;\n        options.push(<option value={year}>{year}</option>);\n      }\n\n      return options;\n    };\n\n    renderMonthElement.propTypes = {\n      onMonthSelect: PropTypes.func,\n      onYearSelect: PropTypes.func,\n    };\n\n    return (\n      <div style={{ display: 'flex', justifyContent: 'center' }}>\n        <div style={containerStyle}>\n          <select\n            className=\"DateRangePicker_select\"\n            value={month.month()}\n            onChange={e => onMonthSelect(month, e.target.value)}\n          >\n            {moment.months().map((label, value) => (\n              <option key={value} value={value}>\n                {label}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div style={containerStyle}>\n          {}\n          <select\n            className=\"DateRangePicker_select\"\n            value={month.year()}\n            onChange={e => onYearSelect(month, e.target.value)}\n          >\n            {renderYearsOptions()}\n          </select>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <DateRangePicker\n      {...dateRangePickerProps}\n      startDate={startDate}\n      endDate={endDate}\n      renderCalendarInfo={renderDatePresets}\n      onDatesChange={onDatesChange}\n      renderMonthElement={renderMonthElement}\n      startDatePlaceholderText={t('Start Date')}\n      endDatePlaceholderText={t('End Date')}\n      phrases={{\n        closeDatePicker: t('Common:Close'),\n        clearDates: t('Clear dates'),\n      }}\n    />\n  );\n}\n\nCustomDateRangePicker.propTypes = {\n  presets: PropTypes.arrayOf(\n    PropTypes.shape({\n      text: PropTypes.string,\n      start: PropTypes.required,\n      end: PropTypes.required,\n    })\n  ),\n  onDatesChange: PropTypes.func.isRequired,\n  startDate: PropTypes.instanceOf(Date),\n  endDate: PropTypes.instanceOf(Date),\n  month: PropTypes.instanceOf(Date),\n};\n\nexport default CustomDateRangePicker;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { isInclusivelyBeforeDay } from 'react-dates';\nimport CustomDateRangePicker from './CustomDateRangePicker.js';\nimport { Icon } from './../../elements/Icon';\nimport { useTranslation } from 'react-i18next';\n\nconst getDateEntry = (datePicked, rangeDatePicked) => {\n  return rangeDatePicked || datePicked || null;\n};\n\nconst getDateEntryFromRange = (today, numOfDays, edge = 'start') => {\n  if (typeof numOfDays !== 'number') {\n    return;\n  }\n\n  if (edge === 'end') {\n    return today;\n  } else {\n    today.subtract(numOfDays, 'days');\n  }\n};\n\nfunction TableSearchFilter(props) {\n  const {\n    meta,\n    values,\n    onSort,\n    onValueChange,\n    sortFieldName,\n    sortDirection,\n    // TODO: Rename\n    studyListDateFilterNumDays,\n  } = props;\n\n  const { studyDateTo, studyDateFrom } = values || {};\n  const [focusedInput, setFocusedInput] = useState(null);\n  const { t, ready: translationsAreReady } = useTranslation('Common');\n\n  const sortIcons = ['sort', 'sort-up', 'sort-down'];\n  const sortIconForSortField =\n    sortDirection === 'asc' ? sortIcons[1] : sortIcons[2];\n\n  const today = moment();\n  const lastWeek = moment().subtract(7, 'day');\n  const lastMonth = moment().subtract(1, 'month');\n\n  const defaultStartDate = getDateEntryFromRange(\n    today,\n    studyListDateFilterNumDays,\n    'start'\n  );\n  const defaultEndDate = getDateEntryFromRange(\n    today,\n    studyListDateFilterNumDays,\n    'end'\n  );\n\n  const studyDatePresets = [\n    {\n      text: t('Today'),\n      start: today,\n      end: today,\n    },\n    {\n      text: t('Last 7 days'),\n      start: lastWeek,\n      end: today,\n    },\n    {\n      text: t('Last 30 days'),\n      start: lastMonth,\n      end: today,\n    },\n  ];\n\n  return translationsAreReady\n    ? meta.map((field, i) => {\n        const { displayText, fieldName, inputType } = field;\n        const isSortField = sortFieldName === fieldName;\n        const sortIcon = isSortField ? sortIconForSortField : sortIcons[0];\n\n        return (\n          <th key={`${fieldName}-${i}`}>\n            <label\n              htmlFor={`filter-${fieldName}`}\n              onClick={() => onSort(fieldName)}\n            >\n              {`${displayText}`}\n              <Icon name={sortIcon} style={{ fontSize: '12px' }} />\n            </label>\n            {inputType === 'text' && (\n              <input\n                type=\"text\"\n                id={`filter-${fieldName}`}\n                className=\"form-control studylist-search\"\n                value={values[fieldName]}\n                onChange={e => onValueChange(fieldName, e.target.value)}\n              />\n            )}\n            {inputType === 'date-range' && (\n              // https://github.com/airbnb/react-dates\n              <CustomDateRangePicker\n                // Required\n                startDate={getDateEntry(studyDateFrom, defaultStartDate)}\n                startDateId=\"start-date\"\n                endDate={getDateEntry(studyDateTo, defaultEndDate)}\n                endDateId=\"end-date\"\n                // TODO: We need a dynamic way to determine which fields values to update\n                onDatesChange={({ startDate, endDate, preset = false }) => {\n                  onValueChange('studyDateFrom', startDate);\n                  onValueChange('studyDateTo', endDate);\n                }}\n                focusedInput={focusedInput}\n                onFocusChange={updatedVal => setFocusedInput(updatedVal)}\n                // Optional\n                numberOfMonths={1} // For med and small screens? 2 for large?\n                showClearDates={true}\n                anchorDirection=\"left\"\n                presets={studyDatePresets}\n                hideKeyboardShortcutsPanel={true}\n                isOutsideRange={day => !isInclusivelyBeforeDay(day, moment())}\n              />\n            )}\n          </th>\n        );\n      })\n    : null;\n}\n\nTableSearchFilter.propTypes = {\n  meta: PropTypes.arrayOf(\n    PropTypes.shape({\n      displayText: PropTypes.string.isRequired,\n      fieldName: PropTypes.string.isRequired,\n      inputType: PropTypes.oneOf(['text', 'date-range']).isRequired,\n      size: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n  values: PropTypes.object.isRequired,\n  onSort: PropTypes.func.isRequired,\n  sortFieldName: PropTypes.string,\n  sortDirection: PropTypes.oneOf([null, 'asc', 'desc']),\n};\n\nTableSearchFilter.defaultProps = {};\n\nexport { TableSearchFilter };\nexport default TableSearchFilter;\n","import React from 'react';\nimport { Icon } from './../../elements/Icon';\n// TODO: useTranslation\nimport { withTranslation } from '../../contextProviders';\n\nfunction StudyListLoadingText({ t: translate }) {\n  return (\n    <div className=\"loading-text\">\n      {translate('Loading')}... <Icon name=\"circle-notch\" animation=\"pulse\" />\n    </div>\n  );\n}\n\nconst connectedComponent = withTranslation('StudyListLoadingText')(\n  StudyListLoadingText\n);\n\nexport { connectedComponent as StudyListLoadingText };\n","import './StudyList.styl';\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport TableSearchFilter from './TableSearchFilter.js';\nimport PropTypes from 'prop-types';\nimport { StudyListLoadingText } from './StudyListLoadingText.js';\nimport { useTranslation } from 'react-i18next';\n\nconst getContentFromUseMediaValue = (\n  displaySize,\n  contentArrayMap,\n  defaultContent\n) => {\n  const content =\n    displaySize in contentArrayMap\n      ? contentArrayMap[displaySize]\n      : defaultContent;\n\n  return content;\n};\n/**\n *\n *\n * @param {*} props\n * @returns\n */\nfunction StudyList(props) {\n  const {\n    isLoading,\n    hasError,\n    studies,\n    sort,\n    onSort: handleSort,\n    filterValues,\n    onFilterChange: handleFilterChange,\n    onSelectItem: handleSelectItem,\n    studyListDateFilterNumDays,\n    displaySize,\n  } = props;\n  const { t, ready: translationsAreReady } = useTranslation('StudyList');\n\n  const largeTableMeta = [\n    {\n      displayText: t('PatientName'),\n      fieldName: 'PatientName',\n      inputType: 'text',\n      size: 330,\n    },\n    {\n      displayText: t('MRN'),\n      fieldName: 'PatientID',\n      inputType: 'text',\n      size: 378,\n    },\n    {\n      displayText: t('AccessionNumber'),\n      fieldName: 'AccessionNumber',\n      inputType: 'text',\n      size: 180,\n    },\n    {\n      displayText: t('StudyDate'),\n      fieldName: 'StudyDate',\n      inputType: 'date-range',\n      size: 300,\n    },\n    {\n      displayText: t('Modality'),\n      fieldName: 'modalities',\n      inputType: 'text',\n      size: 114,\n    },\n    {\n      displayText: t('StudyDescription'),\n      fieldName: 'StudyDescription',\n      inputType: 'text',\n      size: 335,\n    },\n  ];\n\n  const mediumTableMeta = [\n    {\n      displayText: `${t('PatientName')} / ${t('MRN')}`,\n      fieldName: 'patientNameOrId',\n      inputType: 'text',\n      size: 250,\n    },\n    {\n      displayText: t('Description'),\n      fieldName: 'accessionOrModalityOrDescription',\n      inputType: 'text',\n      size: 350,\n    },\n    {\n      displayText: t('StudyDate'),\n      fieldName: 'StudyDate',\n      inputType: 'date-range',\n      size: 300,\n    },\n  ];\n\n  const smallTableMeta = [\n    {\n      displayText: t('Search'),\n      fieldName: 'allFields',\n      inputType: 'text',\n      size: 100,\n    },\n  ];\n\n  const tableMeta = getContentFromUseMediaValue(\n    displaySize,\n    { large: largeTableMeta, medium: mediumTableMeta, small: smallTableMeta },\n    smallTableMeta\n  );\n\n  const totalSize = tableMeta\n    .map(field => field.size)\n    .reduce((prev, next) => prev + next);\n\n  return translationsAreReady ? (\n    <table className=\"table table--striped table--hoverable\">\n      <colgroup>\n        {tableMeta.map((field, i) => {\n          const size = field.size;\n          const percentWidth = (size / totalSize) * 100.0;\n\n          return <col key={i} style={{ width: `${percentWidth}%` }} />;\n        })}\n      </colgroup>\n      <thead className=\"table-head\">\n        <tr className=\"filters\">\n          <TableSearchFilter\n            meta={tableMeta}\n            values={filterValues}\n            onSort={handleSort}\n            onValueChange={handleFilterChange}\n            sortFieldName={sort.fieldName}\n            sortDirection={sort.direction}\n            studyListDateFilterNumDays={studyListDateFilterNumDays}\n          />\n        </tr>\n      </thead>\n      <tbody className=\"table-body\" data-cy=\"study-list-results\">\n        {/* I'm not in love with this approach, but it's the quickest way for now\n         *\n         * - Display different content based on loading, empty, results state\n         *\n         * This is not ideal because it create a jump in focus. For loading especially,\n         * We should keep our current results visible while we load the new ones.\n         */}\n        {/* LOADING */}\n        {isLoading && (\n          <tr className=\"no-hover\">\n            <td colSpan={tableMeta.length}>\n              <StudyListLoadingText />\n            </td>\n          </tr>\n        )}\n        {!isLoading && hasError && (\n          <tr className=\"no-hover\">\n            <td colSpan={tableMeta.length}>\n              <div className=\"notFound\">\n                {t('There was an error fetching studies')}\n              </div>\n            </td>\n          </tr>\n        )}\n        {/* EMPTY */}\n        {!isLoading && !studies.length && (\n          <tr className=\"no-hover\">\n            <td colSpan={tableMeta.length}>\n              <div className=\"notFound\">{t('No matching results')}</div>\n            </td>\n          </tr>\n        )}\n        {!isLoading &&\n          studies.map((study, index) => (\n            <TableRow\n              key={`${study.StudyInstanceUID}-${index}`}\n              onClick={StudyInstanceUID => handleSelectItem(StudyInstanceUID)}\n              AccessionNumber={study.AccessionNumber || ''}\n              modalities={study.modalities}\n              PatientID={study.PatientID || ''}\n              PatientName={study.PatientName || ''}\n              StudyDate={study.StudyDate}\n              StudyDescription={study.StudyDescription || ''}\n              StudyInstanceUID={study.StudyInstanceUID}\n              displaySize={displaySize}\n            />\n          ))}\n      </tbody>\n    </table>\n  ) : null;\n}\n\nStudyList.propTypes = {\n  isLoading: PropTypes.bool.isRequired,\n  hasError: PropTypes.bool.isRequired,\n  studies: PropTypes.array.isRequired,\n  onSelectItem: PropTypes.func.isRequired,\n  // ~~ SORT\n  sort: PropTypes.shape({\n    fieldName: PropTypes.string,\n    direction: PropTypes.oneOf(['desc', 'asc', null]),\n  }).isRequired,\n  onSort: PropTypes.func.isRequired,\n  // ~~ FILTERS\n  filterValues: PropTypes.shape({\n    PatientName: PropTypes.string.isRequired,\n    PatientID: PropTypes.string.isRequired,\n    AccessionNumber: PropTypes.string.isRequired,\n    StudyDate: PropTypes.string.isRequired,\n    modalities: PropTypes.string.isRequired,\n    StudyDescription: PropTypes.string.isRequired,\n    patientNameOrId: PropTypes.string.isRequired,\n    accessionOrModalityOrDescription: PropTypes.string.isRequired,\n    allFields: PropTypes.string.isRequired,\n    studyDateTo: PropTypes.any,\n    studyDateFrom: PropTypes.any,\n  }).isRequired,\n  onFilterChange: PropTypes.func.isRequired,\n  studyListDateFilterNumDays: PropTypes.number,\n  displaySize: PropTypes.string,\n};\n\nStudyList.defaultProps = {};\n\nfunction TableRow(props) {\n  const {\n    AccessionNumber,\n    isHighlighted,\n    modalities,\n    PatientID,\n    PatientName,\n    StudyDate,\n    StudyDescription,\n    StudyInstanceUID,\n    onClick: handleClick,\n    displaySize,\n  } = props;\n\n  const { t } = useTranslation('StudyList');\n\n  const largeRowTemplate = (\n    <tr\n      onClick={() => handleClick(StudyInstanceUID)}\n      className={classNames({ active: isHighlighted })}\n    >\n      <td className={classNames({ 'empty-value': !PatientName })}>\n        {PatientName || `(${t('Empty')})`}\n      </td>\n      <td>{PatientID}</td>\n      <td>{AccessionNumber}</td>\n      <td>{StudyDate}</td>\n      <td className={classNames({ 'empty-value': !modalities })}>\n        {modalities || `(${t('Empty')})`}\n      </td>\n      <td>{StudyDescription}</td>\n    </tr>\n  );\n\n  const mediumRowTemplate = (\n    <tr\n      onClick={() => handleClick(StudyInstanceUID)}\n      className={classNames({ active: isHighlighted })}\n    >\n      <td className={classNames({ 'empty-value': !PatientName })}>\n        {PatientName || `(${t('Empty')})`}\n        <div style={{ color: '#60656f' }}>{PatientID}</div>\n      </td>\n      <td>\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n          {/* DESCRIPTION */}\n          <div\n            className=\"hide-xs\"\n            style={{\n              whiteSpace: 'pre-wrap',\n              flexGrow: 1,\n            }}\n          >\n            {StudyDescription}\n          </div>\n\n          {/* MODALITY & ACCESSION */}\n          <div\n            style={{\n              display: 'flex',\n              flexDirection: 'column',\n              maxWidth: '80px',\n              width: '80px',\n            }}\n          >\n            <div\n              className={classNames({\n                modalities: modalities,\n                'empty-value': !modalities,\n              })}\n              aria-label={modalities}\n              title={modalities}\n            >\n              {modalities || `(${t('Empty')})`}\n            </div>\n            <div\n              style={{\n                textOverflow: 'ellipsis',\n                whiteSpace: 'nowrap',\n                overflow: 'hidden',\n              }}\n              aria-label={AccessionNumber}\n              title={AccessionNumber}\n            >\n              {AccessionNumber}\n            </div>\n          </div>\n        </div>\n      </td>\n      {/* DATE */}\n      <td style={{ textAlign: 'center' }}>{StudyDate}</td>\n    </tr>\n  );\n\n  const smallRowTemplate = (\n    <tr\n      onClick={() => handleClick(StudyInstanceUID)}\n      className={classNames({ active: isHighlighted })}\n    >\n      <td style={{ position: 'relative', overflow: 'hidden' }}>\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n          {/* NAME AND ID */}\n          <div\n            className={classNames({ 'empty-value': !PatientName })}\n            style={{ width: '150px', minWidth: '150px' }}\n          >\n            <div style={{ fontWeight: 500, paddingTop: '3px' }}>\n              {PatientName || `(${t('Empty')})`}\n            </div>\n            <div style={{ color: '#60656f' }}>{PatientID}</div>\n          </div>\n\n          {/* DESCRIPTION */}\n          <div\n            className=\"hide-xs\"\n            style={{\n              whiteSpace: 'pre-wrap',\n              flexGrow: 1,\n              paddingLeft: '35px',\n            }}\n          >\n            {StudyDescription}\n          </div>\n\n          {/* MODALITY & DATE */}\n          <div\n            style={{\n              display: 'flex',\n              flexDirection: 'column',\n              maxWidth: '80px',\n              width: '80px',\n            }}\n          >\n            <div\n              className={classNames({\n                modalities: modalities,\n                'empty-value': !modalities,\n              })}\n              aria-label={modalities}\n              title={modalities}\n            >\n              {modalities || `(${t('Empty')})`}\n            </div>\n            <div>{StudyDate}</div>\n          </div>\n        </div>\n      </td>\n    </tr>\n  );\n\n  const rowTemplate = getContentFromUseMediaValue(\n    displaySize,\n    {\n      large: largeRowTemplate,\n      medium: mediumRowTemplate,\n      small: smallRowTemplate,\n    },\n    smallRowTemplate\n  );\n\n  return rowTemplate;\n}\n\nTableRow.propTypes = {\n  AccessionNumber: PropTypes.string.isRequired,\n  isHighlighted: PropTypes.bool,\n  modalities: PropTypes.string,\n  PatientID: PropTypes.string.isRequired,\n  PatientName: PropTypes.string.isRequired,\n  StudyDate: PropTypes.string.isRequired,\n  StudyDescription: PropTypes.string.isRequired,\n  StudyInstanceUID: PropTypes.string.isRequired,\n  displaySize: PropTypes.string,\n};\n\nTableRow.defaultProps = {\n  isHighlighted: false,\n};\n\nexport { StudyList };\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport './PaginationArea.styl';\nimport { withTranslation } from '../../contextProviders';\n\nclass TablePagination extends PureComponent {\n  static defaultProps = {\n    pageOptions: [5, 10, 25, 50, 100],\n    rowsPerPage: 25,\n    currentPage: 0,\n  };\n\n  static propTypes = {\n    /* Values to show in \"Rows per page\" select dropdown */\n    pageOptions: PropTypes.array,\n    rowsPerPage: PropTypes.number.isRequired,\n    currentPage: PropTypes.number.isRequired,\n    nextPageFunc: PropTypes.func,\n    prevPageFunc: PropTypes.func,\n    onRowsPerPageChange: PropTypes.func,\n    recordCount: PropTypes.number.isRequired,\n  };\n\n  nextPage = () => {\n    this.props.nextPageFunc(this.props.currentPage);\n  };\n\n  prevPage = () => {\n    this.props.prevPageFunc(this.props.currentPage);\n  };\n\n  onRowsPerPageChange = event => {\n    this.props.onRowsPerPageChange(parseInt(event.target.value));\n  };\n\n  renderPaginationButtons() {\n    return (\n      <div className=\"col-xs-8 col-sm-9 col-md-9\">\n        <div className=\"form-inline form-group page-buttons noselect\">\n          <React.Fragment>\n            <ul className=\"pagination-control no-margins\">\n              <li className=\"page-item prev\">\n                <button\n                  onClick={this.prevPage}\n                  disabled={this.props.currentPage === 0}\n                  className=\"btn page-link\"\n                >\n                  {this.props.t('Previous')}\n                </button>\n              </li>\n              <li className=\"page-item next\">\n                <button\n                  onClick={this.nextPage}\n                  disabled={\n                    this.props.recordCount === 0 ||\n                    this.props.rowsPerPage > this.props.recordCount\n                  }\n                  className=\"btn page-link\"\n                >\n                  {this.props.t('Next')}\n                </button>\n              </li>\n            </ul>\n          </React.Fragment>\n        </div>\n      </div>\n    );\n  }\n\n  renderRowsPerPageDropdown() {\n    return (\n      <div className=\"form-inline form-group rows-per-page\">\n        <span>{this.props.t('Show')}</span>\n        <select\n          onChange={this.onRowsPerPageChange}\n          defaultValue={this.props.rowsPerPage}\n        >\n          {this.props.pageOptions.map(pageNumber => {\n            return (\n              <option key={pageNumber} value={pageNumber}>\n                {pageNumber}\n              </option>\n            );\n          })}\n        </select>\n        <span>{this.props.t('RowsPerPage')}</span>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"pagination-area\">\n        <div className=\"rows-dropdown\">{this.renderRowsPerPageDropdown()}</div>\n        <div className=\"pagination-buttons\">\n          <div className=\"form-inline form-group page-number pull-right\">\n            {this.renderPaginationButtons()}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst connectedComponent = withTranslation('Common')(TablePagination);\nexport { connectedComponent as TablePagination };\n","import React, { PureComponent } from 'react';\n\nimport { Icon } from './../../elements/Icon';\nimport PropTypes from 'prop-types';\n\nclass PageToolbar extends PureComponent {\n  static propTypes = {\n    onImport: PropTypes.func,\n  };\n\n  onImport = event => {\n    if (this.props.onImport) {\n      this.props.onImport(event);\n    }\n  };\n\n  getImportTool() {\n    if (this.props.onImport) {\n      return (\n        <div className=\"addNewStudy btn-file\">\n          <label\n            htmlFor=\"btnImport\"\n            style={{ width: '18px' }}\n            onClick={this.onImport}\n          >\n            <Icon name=\"plus\" />\n          </label>\n        </div>\n      );\n    }\n  }\n\n  render() {\n    return <div className=\"studylistToolbar\">{this.getImportTool()}</div>;\n  }\n}\n\nexport { PageToolbar };\n","import './ExpandableToolMenu.styl';\n\nimport { OverlayTrigger } from '../components/overlayTrigger';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ToolbarButton from './ToolbarButton.js';\nimport { Tooltip } from '../components/tooltip';\n\nclass ExpandableToolMenu extends React.Component {\n  static propTypes = {\n    /** Button label */\n    label: PropTypes.string.isRequired,\n    /** Array of buttons to render when expanded */\n    buttons: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string,\n        label: PropTypes.string.isRequired,\n        icon: PropTypes.oneOfType([\n          PropTypes.string,\n          PropTypes.shape({\n            name: PropTypes.string.isRequired,\n          }),\n        ]),\n      })\n    ).isRequired,\n    icon: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.shape({\n        name: PropTypes.string.isRequired,\n      }),\n    ]),\n    onGroupMenuClick: PropTypes.func,\n    activeCommand: PropTypes.string,\n  };\n\n  static defaultProps = {\n    buttons: [],\n    icon: 'ellipse-circle',\n    label: 'More',\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isExpanded: false,\n    };\n  }\n\n  toolbarMenuOverlay = () => (\n    <Tooltip\n      placement=\"bottom\"\n      className=\"tooltip-toolbar-overlay\"\n      id={`${Math.random()}_tooltip-toolbar-overlay}`}\n    >\n      {this.getButtons()}\n    </Tooltip>\n  );\n\n  getButtons = () => {\n    return this.props.buttons.map((button, index) => {\n      return (\n        <ToolbarButton\n          key={index}\n          {...button}\n          isActive={button.id === this.props.activeCommand}\n        />\n      );\n    });\n  };\n\n  isActive = () => {\n    let isActive = false;\n    if (this.props.activeCommand) {\n      this.props.buttons.forEach(button => {\n        if (this.props.activeCommand === button.id) {\n          isActive = true;\n        }\n      });\n    }\n\n    return isActive;\n  };\n\n  activeIcon = () => {\n    if (this.props.activeCommand) {\n      return (\n        this.props.buttons.find(btn => this.props.activeCommand === btn.id)\n          .icon || this.props.icon\n      );\n    }\n\n    return this.props.icon;\n  };\n\n  onExpandableToolClick = () => {\n    if (this.props.onGroupMenuClick) {\n      this.props.onGroupMenuClick();\n    }\n    this.setState({\n      isExpanded: !this.state.isExpanded,\n    });\n  };\n\n  onOverlayHide = () => {\n    this.setState({\n      isExpanded: false,\n    });\n  };\n\n  render() {\n    const getToolBarButtonComponent = () => {\n      return (\n        <ToolbarButton\n          key=\"menu-button\"\n          type=\"tool\"\n          label={this.props.label}\n          icon={this.activeIcon()}\n          className={'toolbar-button expandableToolMenu'}\n          isActive={this.isActive()}\n          isExpandable={true}\n          isExpanded={this.state.isExpanded}\n        />\n      );\n    };\n\n    const toolbarComponent = getToolBarButtonComponent();\n\n    return (\n      <OverlayTrigger\n        key=\"menu-button\"\n        trigger=\"click\"\n        placement=\"bottom\"\n        rootClose={true}\n        handleHide={this.onOverlayHide}\n        onClick={this.onExpandableToolClick}\n        overlay={this.toolbarMenuOverlay()}\n      >\n        {toolbarComponent}\n      </OverlayTrigger>\n    );\n  }\n}\n\nexport default ExpandableToolMenu;\n","import './ToolbarSection.styl';\n\nimport React, { PureComponent } from 'react';\n\nimport ExpandableToolMenu from '../../viewer/ExpandableToolMenu';\nimport PropTypes from 'prop-types';\nimport ToolbarButton from '../../viewer/ToolbarButton';\nimport classnames from 'classnames';\n\nclass ToolbarSection extends PureComponent {\n  static defaultProps = {\n    className: '',\n  };\n\n  static propTypes = {\n    buttons: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string,\n        label: PropTypes.string.isRequired,\n        icon: PropTypes.oneOfType([\n          PropTypes.string,\n          PropTypes.shape({\n            name: PropTypes.string.isRequired,\n          }),\n        ]),\n        /** Optional: Expandable Tool Menu */\n        buttons: PropTypes.arrayOf(PropTypes.shape({})),\n      })\n    ).isRequired,\n    /** Array of string button ids that should show as active */\n    activeButtons: PropTypes.arrayOf(PropTypes.string).isRequired,\n    /** Class for toolbar section container */\n    className: PropTypes.string,\n  };\n\n  render() {\n    const items = this.props.buttons.map((button, index) => {\n      if (button.buttons && Array.isArray(button.buttons)) {\n        return (\n          <ExpandableToolMenu\n            key={`expandable-${index}`}\n            {...button}\n            activeCommand={button.activeButton}\n          />\n        );\n      } else {\n        return (\n          <ToolbarButton\n            key={index}\n            {...button}\n            isActive={this.props.activeButtons.includes(button.id)}\n          />\n        );\n      }\n    });\n\n    return (\n      <div className={classnames('ToolbarSection', this.props.className)}>\n        {items}\n      </div>\n    );\n  }\n}\n\nexport { ToolbarSection };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ErrorBoundary } from 'react-error-boundary';\nimport './ErrorFallback.css';\n\nconst ErrorFallback = ({ error, componentStack, resetErrorBoundary }) => {\n  return (\n    <div className=\"ErrorFallback\" role=\"alert\">\n      <p>Something went wrong.</p>\n      <pre>{error.message}</pre>\n      <pre>{componentStack}</pre>\n    </div>\n  );\n};\n\nconst OHIFErrorBoundary = ({\n  context = 'OHIF',\n  onReset = () => { },\n  onError = () => { },\n  fallbackComponent,\n  children,\n}) => {\n  const onErrorHandler = (error, componentStack) => {\n    console.error(`${context} Error Boundary`, error, componentStack);\n    onError(error, componentStack);\n  };\n\n  const onResetHandler = () => {\n    onReset();\n  };\n\n  return (\n    <ErrorBoundary\n      FallbackComponent={fallbackComponent || ErrorFallback}\n      onReset={onResetHandler}\n      onError={onErrorHandler}\n    >\n      {children}\n    </ErrorBoundary>\n  );\n};\n\nOHIFErrorBoundary.propTypes = {\n  context: PropTypes.string,\n  onReset: PropTypes.func,\n  onError: PropTypes.func,\n  children: PropTypes.node.isRequired,\n  fallbackComponent: PropTypes.oneOfType([PropTypes.node, PropTypes.func, PropTypes.element]),\n};\n\nexport default OHIFErrorBoundary;\n","import { useState, useEffect, useRef, useCallback } from 'react';\nimport isEqual from 'lodash.isequal';\n/**\n * Get display size value for matched mediaQueryList\n * @param {MediaQueryList[]} mediaQueryMap - Array of mappings, containing MediaQueryLists\n * @param {Array} mediaTypesAliases - Array of strings representing each mediaQueryAlias.\n * @param {string} defaultDisplaySize - default display size value. Fallback value.\n */\nconst getDisplaySize = (\n  mediaQueryMap,\n  mediaTypesAliases,\n  defaultDisplaySize\n) => {\n  if ((!mediaTypesAliases && !defaultDisplaySize) || !mediaQueryMap) {\n    return;\n  }\n\n  // Get index of first media query that matches\n  const index = mediaQueryMap.findIndex(mql => mql.matches);\n\n  // Return related value or defaultDisplaySize if none\n  return index >= 0 && typeof mediaTypesAliases[index] !== 'undefined'\n    ? mediaTypesAliases[index]\n    : defaultDisplaySize;\n};\n/**\n * Map each window MediaQueryLists\n * @param {Array} mediaQueriesStringList - array of string media queries to be parsed\n */\nconst getMediaQueryMap = mediaQueriesStringList => {\n  return (\n    mediaQueriesStringList &&\n    mediaQueriesStringList.map(q => window.matchMedia(q))\n  );\n};\n\nconst getMediaTypeAlias = (mediaQuery, state) => {\n  const { media } = mediaQuery;\n  const { mediaQueriesStringList, mediaTypesAliases } = state;\n\n  const index = mediaQueriesStringList.findIndex(originalMediaQuery => {\n    const { media: toCompareMedia } = window.matchMedia(originalMediaQuery);\n    return toCompareMedia === media;\n  });\n\n  return mediaTypesAliases[index];\n};\n\n/**\n * Hook to get current displaySize value.\n *\n * Its state changes and also displaySize value changes in case viewport is resized.\n * Its state changes in case mediaQueriesStringList or mediaTypesAliases changes.\n *\n * Current hook only offers displayMedia size, it wont expose method to change its state.\n * @param {Array} mediaQueriesStringList - array of string media queries to be parsed\n * @param {Array} mediaTypesAliases - array of aliases. Each value represents one mediaQueryList from array mediaQueriesStringList\n * @param {String} defaultMediaType - default mediaTypeAlias\n * @returns {String} current displayMedia size based on viewport size.\n *\n * @example <caption>Example to getDisplayMedia Size based on viewport size</caption>\n *\n *    const displaySize = useMedia(\n *    ['(min-width: 1500px)', '(min-width: 1000px)', '(min-width: 600px)'],\n *    // Value to return for matched media query\n *    ['large', 'medium', 'small'],\n *      // Default value\n *    'medium');\n *\n *  const currentDisplaySize = useMedia();\n *\n */\nconst useMedia = (\n  mediaQueriesStringList,\n  mediaTypesAliases,\n  defaultMediaType\n) => {\n  // MediaQuery.state is the source of truth. This hook will be dependent on it.\n  const [state, setState] = useState(() => {\n    const _mediaQueryMap = getMediaQueryMap(mediaQueriesStringList);\n    const _displaySize = getDisplaySize(\n      _mediaQueryMap,\n      mediaTypesAliases,\n      defaultMediaType\n    );\n\n    return {\n      mediaQueryMap: _mediaQueryMap,\n      displaySize: _displaySize,\n      mediaQueriesStringList,\n      mediaTypesAliases,\n      defaultMediaType,\n    };\n  });\n  let mount = useRef(false);\n\n  const updateDisplaySize = displaySize => {\n    if (mount.current) {\n      setState({ ...state, displaySize });\n    }\n  };\n\n  const updateState = value => {\n    const {\n      mediaQueriesStringList,\n      mediaTypesAliases,\n      defaultMediaType,\n    } = value;\n\n    const mediaQueryMap = getMediaQueryMap(mediaQueriesStringList);\n    const displaySize = getDisplaySize(\n      mediaQueryMap,\n      mediaTypesAliases,\n      defaultMediaType\n    );\n    // immutable state\n    // last chance to avoid setState of unmount component\n    if (mount.current) {\n      setState({\n        ...state,\n        mediaQueriesStringList,\n        mediaTypesAliases,\n        displaySize,\n        mediaQueryMap,\n      });\n    }\n  };\n\n  const onMediaQueryChange = useCallback(mediaQuery => {\n    if (mediaQuery.matches) {\n      const nextDisplaySize = getMediaTypeAlias(mediaQuery, state);\n      updateDisplaySize(nextDisplaySize);\n    }\n  }, []);\n\n  // update state of MediaQuery in case mediaQueriesStringList or mediaTypesAliases has changed\n  useEffect(() => {\n    const {\n      mediaQueriesStringList: _mediaQueriesStringList,\n      mediaTypesAliases: _mediaTypesAliases,\n    } = state;\n    if (\n      (mediaQueriesStringList &&\n        !isEqual(mediaQueriesStringList, _mediaQueriesStringList)) ||\n      (mediaTypesAliases && !isEqual(mediaTypesAliases, _mediaTypesAliases))\n    ) {\n      updateState({\n        mediaQueriesStringList,\n        mediaTypesAliases,\n      });\n    }\n  }, [mediaQueriesStringList, mediaTypesAliases]);\n\n  // re-assign window resizing listeners\n  useEffect(() => {\n    const { mediaQueryMap } = state;\n    mediaQueryMap.forEach(mql => {\n      mql.removeListener(onMediaQueryChange);\n      mql.addListener(onMediaQueryChange);\n    });\n  }, [state.mediaQueryMap]);\n\n  useEffect(() => {\n    mount.current = true;\n\n    return () => {\n      mount.current = false;\n      const { mediaQueryMap } = state;\n      mediaQueryMap.forEach(mql => {\n        mql.removeListener(onMediaQueryChange);\n      });\n    };\n  }, []);\n\n  return state.displaySize;\n};\n\nexport { useMedia };\n","import React, { useState, useEffect } from 'react';\n\n/**\n * A hook to set a value\n *\n * @param {*} value - A value to \"set\"\n * @param {number} delay - The debounce delay for setting the value\n * @returns\n */\nexport default function useDebounce(value, delay) {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(\n    () => {\n      // Set debouncedValue to value (passed in) after the specified delay\n      const handler = setTimeout(() => {\n        setDebouncedValue(value);\n      }, delay);\n\n      // Return a cleanup function that will be called every time useEffect is\n      // re-called. useEffect will only be re-called if value changes (see the\n      // inputs array below).\n      //\n      // This is how we prevent debouncedValue from changing if value is changed\n      // within the delay period. Timeout gets cleared and restarted.\n      //\n      // To put it in context, if the user is typing within our app's search\n      // box, we don't want the debouncedValue to update until they've stopped\n      // typing for more than 500ms.\n      return () => {\n        clearTimeout(handler);\n      };\n    },\n    // Only re-call effect if value changes\n    // You could also add the \"delay\" var to inputs array if you need to be\n    // able to change that dynamically.\n    [value]\n  );\n\n  return debouncedValue;\n}\n","import './Select.css';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Select extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: this.props.value,\n    };\n  }\n\n  handleChange = event => {\n    const value = event.target.value;\n    this.setState({ value });\n    if (this.props.onChange) this.props.onChange(value);\n  };\n\n  render() {\n    return (\n      <select\n        className=\"select-ohif\"\n        value={this.state.selected}\n        onChange={this.handleChange}\n      >\n        {this.props.options.map(({ key, value }) => {\n          return (\n            <option key={key} value={value}>\n              {key}\n            </option>\n          );\n        })}\n      </select>\n    );\n  }\n}\n\nSelect.propTypes = {\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      key: PropTypes.string.isRequired,\n      value: PropTypes.string.isRequired,\n    })\n  ),\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default Select;\n","import './Select.css';\n\nimport React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nclass Select extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  static propTypes = {\n    options: PropTypes.arrayOf(\n      PropTypes.shape({\n        key: PropTypes.string.isRequired,\n        value: PropTypes.string.isRequired,\n      })\n    ),\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n  };\n\n  handleChange = event => {\n    const value = event.target.value;\n    this.setState({ value });\n    if (this.props.onChange) this.props.onChange(value);\n  };\n\n  render() {\n    return (\n      <div className=\"select-ohif-container\">\n        {this.props.label && (\n          <label className=\"select-ohif-label\" htmlFor={this.id}>{this.props.label}</label>\n        )}\n        <select className=\"form-control select-ohif\" {...this.props}>\n          {this.props.options.map(({ key, value }) => {\n            return (\n              <option key={key} value={value}>\n                {key}\n              </option>\n            );\n          })}\n        </select>\n      </div>\n    );\n  }\n}\n\nexport { Select };\n","import './Label.css';\n\nimport React from 'react';\n\nimport PropTypes from 'prop-types';\n\nclass Label extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { value: this.props.text };\n  }\n\n  render() {\n    return (\n      <label className=\"label-ohif\" htmlFor={this.props.for}>\n        {this.props.text}\n      </label>\n    );\n  }\n}\n\nLabel.propTypes = {\n  text: PropTypes.string.isRequired,\n  for: PropTypes.string,\n};\n\nexport { Label };\n","import './Range.css';\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Range extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { value: props.value || 0 };\n  }\n\n  handleChange = event => {\n    this.setState({ value: event.target.value });\n    if (this.props.onChange) this.props.onChange(event);\n  };\n\n  render() {\n    return (\n      <>\n        <input\n          type=\"range\"\n          value={this.state.value}\n          min={this.props.min}\n          max={this.props.max}\n          step={this.props.step || 1}\n          onChange={this.handleChange}\n          id={this.props.id}\n          className=\"range\"\n        />\n        {this.props.showPercentage && <span>{`${this.state.value}%`}</span>}\n        {this.props.showValue && (\n          <span>\n            {this.props.valueRenderer\n              ? this.props.valueRenderer(this.state.value)\n              : this.state.value}\n          </span>\n        )}\n      </>\n    );\n  }\n}\n\nRange.propTypes = {\n  value: PropTypes.number,\n  min: PropTypes.number.isRequired,\n  max: PropTypes.number.isRequired,\n  step: PropTypes.number,\n  id: PropTypes.string,\n  valueRenderer: PropTypes.func,\n  onChange: PropTypes.func,\n  showPercentage: PropTypes.bool,\n  showValue: PropTypes.bool,\n};\n\nRange.defaultProps = {\n  showPercentage: false,\n  showValue: false,\n};\n\nexport { Range };\n","import './TextArea.css';\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nclass TextArea extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { value: this.props.value };\n  }\n\n  handleChange = event => {\n    this.setState({ value: event.target.value });\n    if (this.props.onChange) this.props.onChange();\n  };\n\n  render() {\n    return (\n      <textarea\n        className=\"textarea-ohif\"\n        value={this.state.value}\n        Rows={this.props.Rows}\n        cols={this.props.cols}\n        onChange={this.handleChange}\n        id={this.props.id}\n      />\n    );\n  }\n}\n\nTextArea.propTypes = {\n  value: PropTypes.string,\n  Rows: PropTypes.number,\n  cols: PropTypes.number,\n  id: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport { TextArea };\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './TextInput.css';\n\nclass TextInput extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  static propTypes = {\n    value: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number\n    ]),\n    id: PropTypes.string,\n    label: PropTypes.string,\n    type: PropTypes.string,\n  };\n\n  static defaultProps = {\n    value: '',\n    id: `TextInput-${new Date().toTimeString()}`,\n    label: undefined,\n    type: 'text',\n  };\n\n  render() {\n    return (\n      <div className=\"input-ohif-container\">\n        {this.props.label && (\n          <label className=\"input-ohif-label\" htmlFor={this.props.id}>{this.props.label}</label>\n        )}\n        <input\n          type={this.props.type}\n          id={this.props.id}\n          className=\"form-control input-ohif\"\n          {...this.props}\n        />\n      </div>\n    );\n  }\n}\n\nexport { TextInput };\n","import './DropdownMenu.css';\n\nimport React, { Component } from 'react';\n\nimport { Icon } from '../Icon';\nimport PropTypes from 'prop-types';\n\nclass DropdownMenu extends Component {\n  state = {\n    open: false,\n  };\n\n  static propTypes = {\n    titleElement: PropTypes.node,\n    title: PropTypes.string,\n    align: PropTypes.oneOf(['left', 'center', 'right']),\n    /** Items to render in the select's drop down */\n    list: PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        icon: PropTypes.object,\n        onClick: PropTypes.func,\n        link: PropTypes.string,\n      })\n    ),\n  };\n\n  getListItems = () => {\n    const { list, align } = this.props;\n\n    return list.map(({ icon, title, link, onClick }, key) => {\n      if (link) {\n        return (\n          <a\n            href={link || '#'}\n            key={key}\n            className=\"dd-item\"\n            onClick={() => this.handleOnClick(onClick)}\n          >\n            {icon && <Icon {...icon} className=\"dd-item-icon\" />}\n            <span>{title}</span>\n          </a>\n        );\n      } else {\n        return (\n          <button\n            key={key}\n            className=\"dd-item\"\n            data-cy=\"dd-item-menu\"\n            onClick={() => this.handleOnClick(onClick)}\n          >\n            {icon && <Icon {...icon} className=\"dd-item-icon\" />}\n            <span>{title}</span>\n          </button>\n        );\n      }\n    });\n  };\n\n  renderList = () => {\n    const { align } = this.props;\n\n    if (!this.state.open) {\n      return null;\n    }\n\n    return (\n      <div className={`dd-menu-list ${align || 'left'}`}>\n        {this.getListItems()}\n      </div>\n    );\n  };\n\n  handleOnClick = onClick => {\n    this.toggleList();\n\n    if (onClick) {\n      onClick();\n    }\n  };\n\n  handleMouseClick = e => {\n    if (this.node.contains(e.target)) {\n      return;\n    }\n\n    this.toggleList();\n  };\n\n  renderTitleElement = () => {\n    const { titleElement, title } = this.props;\n\n    if (titleElement) {\n      return titleElement;\n    }\n\n    return (\n      <React.Fragment>\n        <span className=\"dd-title\">{title}</span>\n        <span className=\"dd-caret-down\" />\n      </React.Fragment>\n    );\n  };\n\n  toggleList = () => {\n    const { open } = this.state;\n    let state = true;\n\n    document.addEventListener('mousedown', this.handleMouseClick, false);\n\n    if (open) {\n      document.removeEventListener('mousedown', this.handleMouseClick, false);\n      state = false;\n    }\n\n    this.setState({\n      open: state,\n    });\n  };\n\n  render() {\n    return (\n      <div\n        className=\"dd-menu\"\n        data-cy=\"options-menu\"\n        ref={node => (this.node = node)}\n      >\n        <div className=\"dd-menu-toggle\" onClick={this.toggleList}>\n          {this.renderTitleElement()}\n        </div>\n\n        {this.renderList()}\n      </div>\n    );\n  }\n}\n\nexport { DropdownMenu };\n","import React, { Component } from 'react';\n\nimport { Icon } from './../elements/Icon';\nimport PropTypes from 'prop-types';\n\nexport default class PlayClipButton extends Component {\n  static propTypes = {\n    isPlaying: PropTypes.bool.isRequired,\n  };\n\n  static defaultProps = {\n    isPlaying: false,\n  };\n\n  render() {\n    const iconName = this.props.isPlaying ? 'stop' : 'play';\n\n    return (\n      <div className=\"btn-group\">\n        <button\n          id=\"playClip\"\n          type=\"button\"\n          className=\"imageViewerCommand btn btn-sm btn-default\"\n          data-container=\"body\"\n          data-toggle=\"tooltip\"\n          data-placement=\"bottom\"\n          title=\"Play/Stop Clip\"\n        >\n          <Icon name={iconName} />\n        </button>\n        <button\n          id=\"toggleCineDialog\"\n          type=\"button\"\n          className=\"imageViewerCommand btn btn-sm btn-default\"\n          data-container=\"body\"\n          data-toggle=\"tooltip\"\n          data-placement=\"bottom\"\n          title=\"Toggle CINE Dialog\"\n        >\n          <Icon name=\"youtube\" />\n        </button>\n      </div>\n    );\n  }\n}\n","import { Icon } from './../elements/Icon';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classnames from 'classnames';\n\nexport function SimpleToolbarButton(props) {\n  const className = classnames(props.className, 'btn btn-sm btn-default');\n\n  return (\n    <button\n      id={props.id}\n      type=\"button\"\n      className={className}\n      data-container=\"body\"\n      data-toggle=\"tooltip\"\n      data-placement=\"bottom\"\n      title={props.title}\n    >\n      {props.icon && <Icon name={props.icon} />}\n    </button>\n  );\n}\n\nSimpleToolbarButton.propTypes = {\n  icon: PropTypes.string,\n  title: PropTypes.string,\n  className: PropTypes.string,\n  id: PropTypes.string,\n  onClick: PropTypes.func,\n};\nexport default SimpleToolbarButton;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport SimpleToolbarButton from './SimpleToolbarButton';\nimport PlayClipButton from './PlayClipButton';\nimport { LayoutButton } from './../components/layoutButton';\n\n// TODO: This should not be built in the `@ohif/ui` component\nfunction getDefaultButtonData() {\n  var buttonData = [\n    {\n      id: 'wwwc',\n      title: 'WW/WC',\n      className: 'imageViewerTool',\n      icon: 'sun',\n    },\n    {\n      id: 'wwwcRegion',\n      title: 'Window by Region',\n      className: 'imageViewerTool',\n      icon: 'stop',\n    },\n    {\n      id: 'magnify',\n      title: 'Magnify',\n      className: 'imageViewerTool',\n      icon: 'circle',\n    },\n    {\n      id: 'annotate',\n      title: 'Annotation',\n      className: 'imageViewerTool',\n      icon: 'arrows-alt-h',\n    },\n    {\n      id: 'invert',\n      title: 'Invert',\n      className: 'imageViewerCommand',\n      icon: 'adjust',\n    },\n    {\n      id: 'zoom',\n      title: 'Zoom',\n      className: 'imageViewerTool',\n      icon: 'search-plus',\n    },\n    {\n      id: 'pan',\n      title: 'Pan',\n      className: 'imageViewerTool',\n      icon: 'arrows',\n    },\n    {\n      id: 'stackScroll',\n      title: 'Stack Scroll',\n      className: 'imageViewerTool',\n      icon: 'bars',\n    },\n    {\n      id: 'length',\n      title: 'Length Measurement',\n      className: 'imageViewerTool',\n      icon: 'arrows-alt-v',\n    },\n    {\n      id: 'angle',\n      title: 'Angle Measurement',\n      className: 'imageViewerTool',\n      icon: 'fa fa-angle-left',\n    },\n    {\n      id: 'dragProbe',\n      title: 'Pixel Probe',\n      className: 'imageViewerTool',\n      icon: 'fa fa-dot-circle-o',\n    },\n    {\n      id: 'ellipticalRoi',\n      title: 'Elliptical ROI',\n      className: 'imageViewerTool',\n      icon: 'circle-o',\n    },\n    {\n      id: 'rectangleRoi',\n      title: 'Rectangle ROI',\n      className: 'imageViewerTool',\n      icon: 'square-o',\n    },\n    {\n      id: 'resetViewport',\n      title: 'Reset Viewport',\n      className: 'imageViewerCommand',\n      icon: 'reset',\n    },\n    {\n      id: 'clearTools',\n      title: 'Clear tools',\n      className: 'imageViewerCommand',\n      icon: 'trash',\n    },\n  ];\n  return buttonData;\n}\n\nexport default class Toolbar extends Component {\n  static propTypes = {\n    buttons: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        title: PropTypes.string.isRequired,\n        icon: PropTypes.oneOfType([\n          PropTypes.string,\n          PropTypes.shape({\n            name: PropTypes.string.isRequired,\n          }),\n        ]),\n      })\n    ).isRequired,\n    includeLayoutButton: PropTypes.bool.isRequired,\n    includePlayClipButton: PropTypes.bool.isRequired,\n  };\n\n  static defaultProps = {\n    buttons: getDefaultButtonData(),\n    includeLayoutButton: true,\n    includePlayClipButton: true,\n  };\n\n  render() {\n    var maybePlayClipButton;\n    if (this.props.includePlayClipButton) {\n      maybePlayClipButton = <PlayClipButton />;\n    }\n\n    var maybeLayoutButton;\n    if (this.props.includeLayoutButton) {\n      maybeLayoutButton = <LayoutButton />;\n    }\n\n    return (\n      <div id=\"toolbar\">\n        <div className=\"btn-group\">\n          {this.props.buttons.map((button, i) => {\n            return <SimpleToolbarButton {...button} key={i} />;\n          })}\n          {maybePlayClipButton}\n          {maybeLayoutButton}\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { DndProvider } from \"react-dnd\";\nimport HTML5Backend from 'react-dnd-html5-backend';\nimport TouchBackend from 'react-dnd-touch-backend';\n\nconst isTouchDevice = !!('ontouchstart' in window || navigator.maxTouchPoints);\n\n// See https://github.com/react-dnd/react-dnd/issues/186#issuecomment-335429067\n// https://github.com/react-dnd/react-dnd/issues/186#issuecomment-282789420\n//\n// http://react-dnd.github.io/react-dnd/docs/api/drag-drop-context\nexport default function viewerbaseDragDropContext(DecoratedClass) {\n  const backend = isTouchDevice ? TouchBackend : HTML5Backend;\n  const opts = isTouchDevice ? { enableMouseEvents: true } : {};\n\n  return (props) => (\n    <DndProvider backend={backend} opts={opts}>\n      <DecoratedClass {...props}/>\n    </DndProvider>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { ErrorPage } from '@ohif/ui';\n\nexport const retryImport = (fn, retriesLeft = 5, interval = 1000) =>\n  new Promise((resolve, reject) => {\n    fn().then(resolve).catch((error) => {\n      setTimeout(() => {\n        if (retriesLeft === 1) {\n          /* reject('maximum retries exceeded'); */\n          reject(error);\n          return;\n        }\n\n        /* Passing on \"reject\" is the important part */\n        retry(fn, retriesLeft - 1, interval).then(resolve, reject);\n      }, interval);\n    });\n  });\n\nconst onError = (error, setState) => setState({ component: ErrorPage });\n\n/**\n * We use this function to lazy load the import of a component to leverage 'Code Splitting'\n * Link: https://serverless-stack.com/chapters/code-splitting-in-create-react-app.html\n */\nconst asyncComponent = (importComponent, options = { onError }) => props => {\n  const [state, setState] = useState({ component: null });\n\n  const isFunction = item => typeof item === 'function';\n  const isChunkError = error => error.toString().indexOf('ChunkLoadError') > -1;\n\n  useEffect(() => {\n    const addDynamicallyLoadedComponentToState = async () => {\n      try {\n        const { default: component } = await importComponent();\n        setState({ component });\n        if (options.onLoaded && isFunction(options.onLoaded)) {\n          options.onLoaded(component);\n        }\n      } catch (error) {\n        console.error('[AsyncComponent] Failed to import chunk:', error);\n\n        if (options.onError && isFunction(options.onError)) {\n          options.onError(error, setState);\n          return;\n        }\n\n        if (isChunkError(error)) {\n          console.error('[AsyncComponent] Reloading due to chunk error');\n          window.location.reload();\n        }\n      }\n    };\n\n    addDynamicallyLoadedComponentToState();\n  }, []);\n\n  const Component = state.component;\n  return Component ? <Component {...props} /> : null;\n};\n\nexport default asyncComponent;\n","import {\n  ContextMenu,\n  Checkbox,\n  CineDialog,\n  ViewportDownloadForm,\n  LayoutButton,\n  LayoutChooser,\n  MeasurementTable,\n  MeasurementTableItem,\n  Overlay,\n  OverlayTrigger,\n  PageToolbar,\n  QuickSwitch,\n  RoundedButtonGroup,\n  SelectTree,\n  SimpleDialog,\n  StudyBrowser,\n  StudyList,\n  TableList,\n  TableListItem,\n  Thumbnail,\n  TabComponents,\n  TabFooter,\n  HotkeyField,\n  LanguageSwitcher,\n  TableSearchFilter,\n  TablePagination,\n  ToolbarSection,\n  Tooltip,\n  AboutContent,\n  OHIFModal,\n  ErrorBoundary,\n  ErrorPage,\n} from './components';\nimport { useDebounce, useMedia } from './hooks';\n\n// Elements\nimport {\n  ICONS,\n  Icon,\n  DropdownMenu as Dropdown,\n  Select,\n  OldSelect,\n  Label,\n  Range,\n  TextArea,\n  TextInput,\n} from './elements';\n\n// Alias this for now as not all dependents are using strict versioning\nimport ExpandableToolMenu from './viewer/ExpandableToolMenu.js';\nimport PlayClipButton from './viewer/PlayClipButton.js';\nimport { ScrollableArea } from './ScrollableArea/ScrollableArea.js';\nimport Toolbar from './viewer/Toolbar.js';\nimport ToolbarButton from './viewer/ToolbarButton.js';\nimport ViewerbaseDragDropContext from './utils/viewerbaseDragDropContext.js';\nimport { asyncComponent, retryImport } from './utils/asyncComponent';\nimport {\n  SnackbarProvider,\n  useSnackbarContext,\n  withSnackbar,\n  DialogProvider,\n  useDialog,\n  withDialog,\n  ModalProvider,\n  ModalConsumer,\n  useModal,\n  withModal,\n  LoggerProvider,\n  withLogger,\n  useLogger,\n} from './contextProviders';\n\nexport {\n  // Elements\n  ICONS,\n  //\n  Checkbox,\n  Dropdown,\n  Label,\n  TextArea,\n  TextInput,\n  CineDialog,\n  ContextMenu,\n  ViewportDownloadForm,\n  ExpandableToolMenu,\n  Icon,\n  LayoutButton,\n  LayoutChooser,\n  MeasurementTable,\n  MeasurementTableItem,\n  Overlay,\n  OverlayTrigger,\n  PlayClipButton,\n  PageToolbar,\n  QuickSwitch,\n  Range,\n  RoundedButtonGroup,\n  ScrollableArea,\n  Select,\n  OldSelect,\n  SelectTree,\n  SimpleDialog,\n  StudyBrowser,\n  StudyList,\n  TableList,\n  TableListItem,\n  Thumbnail,\n  TabComponents,\n  TabFooter,\n  HotkeyField,\n  LanguageSwitcher,\n  TableSearchFilter,\n  TablePagination,\n  Toolbar,\n  ToolbarButton,\n  ToolbarSection,\n  Tooltip,\n  AboutContent,\n  SnackbarProvider,\n  useSnackbarContext,\n  withSnackbar,\n  ModalProvider,\n  useModal,\n  ModalConsumer,\n  withModal,\n  OHIFModal,\n  DialogProvider,\n  withDialog,\n  useDialog,\n  ErrorBoundary,\n  ErrorPage,\n  LoggerProvider,\n  withLogger,\n  useLogger,\n  // Hooks\n  useDebounce,\n  useMedia,\n  // Utils\n  ViewerbaseDragDropContext,\n  asyncComponent,\n  retryImport,\n};\n","import getAttribute from './getAttribute.js';\nimport getAuthorizationHeader from './getAuthorizationHeader.js';\nimport getModalities from './getModalities.js';\nimport getName from './getName.js';\nimport getNumber from './getNumber.js';\nimport getString from './getString.js';\n\nconst DICOMWeb = {\n  getAttribute,\n  getAuthorizationHeader,\n  getModalities,\n  getName,\n  getNumber,\n  getString,\n};\n\nexport default DICOMWeb;\n","/**\n * Returns the specified element as a dicom attribute group/element.\n *\n * @param element - The group/element of the element (e.g. '00280009')\n * @param [defaultValue] - The value to return if the element is not present\n * @returns {*}\n */\nexport default function getAttribute(element, defaultValue) {\n  if (!element) {\n    return defaultValue;\n  }\n  // Value is not present if the attribute has a zero length value\n  if (!element.Value) {\n    return defaultValue;\n  }\n  // Sanity check to make sure we have at least one entry in the array.\n  if (!element.Value.length) {\n    return defaultValue;\n  }\n\n  return convertToInt(element.Value);\n}\n\nfunction convertToInt(input) {\n  function padFour(input) {\n    const l = input.length;\n\n    if (l == 0) return '0000';\n    if (l == 1) return '000' + input;\n    if (l == 2) return '00' + input;\n    if (l == 3) return '0' + input;\n\n    return input;\n  }\n\n  let output = '';\n  for (let i = 0; i < input.length; i++) {\n    for (let j = 0; j < input[i].length; j++) {\n      output += padFour(input[i].charCodeAt(j).toString(16));\n    }\n  }\n\n  return parseInt(output, 16);\n}\n","import user from '../user';\n\n/**\n * Returns the Authorization header as part of an Object.\n *\n * @export\n * @param {Object} [server={}]\n * @param {Object} [server.requestOptions]\n * @param {string|function} [server.requestOptions.auth]\n * @returns {Object} { Authorization }\n */\nexport default function getAuthorizationHeader({ requestOptions } = {}) {\n  const headers = {};\n\n  // Check for OHIF.user since this can also be run on the server\n  const accessToken = user && user.getAccessToken && user.getAccessToken();\n\n  // Auth for a specific server\n  if (requestOptions && requestOptions.auth) {\n    if (typeof requestOptions.auth === 'function') {\n      // Custom Auth Header\n      headers.Authorization = requestOptions.auth(requestOptions);\n    } else {\n      // HTTP Basic Auth (user:password)\n      headers.Authorization = `Basic ${btoa(requestOptions.auth)}`;\n    }\n  }\n  // Auth for the user's default\n  else if (accessToken) {\n    headers.Authorization = `Bearer ${accessToken}`;\n  }\n\n  return headers;\n}\n","export default function getModalities(Modality, ModalitiesInStudy) {\n  if (!Modality && !ModalitiesInStudy) {\n    return {};\n  }\n\n  const modalities = Modality || {\n    vr: 'CS',\n    Value: [],\n  };\n\n  if (ModalitiesInStudy) {\n    if (modalities.vr && modalities.vr === ModalitiesInStudy.vr) {\n      for (let i = 0; i < ModalitiesInStudy.Value.length; i++) {\n        const value = ModalitiesInStudy.Value[i];\n        if (modalities.Value.indexOf(value) === -1) {\n          modalities.Value.push(value);\n        }\n      }\n    } else {\n      return ModalitiesInStudy;\n    }\n  }\n\n  return modalities;\n}\n","/**\n * Returns the Alphabetic version of a PN\n *\n * @param element - The group/element of the element (e.g. '00200013')\n * @param [defaultValue] - The default value to return if the element is not found\n * @returns {*}\n */\nexport default function getName(element, defaultValue) {\n  if (!element) {\n    return defaultValue;\n  }\n  // Value is not present if the attribute has a zero length value\n  if (!element.Value) {\n    return defaultValue;\n  }\n  // Sanity check to make sure we have at least one entry in the array.\n  if (!element.Value.length) {\n    return defaultValue;\n  }\n  // Return the Alphabetic component group\n  if (element.Value[0].Alphabetic) {\n    return element.Value[0].Alphabetic;\n  }\n  // Orthanc does not return PN properly so this is a temporary workaround\n  return element.Value[0];\n}\n","/**\n * Returns the first string value as a Javascript Number\n * @param element - The group/element of the element (e.g. '00200013')\n * @param [defaultValue] - The default value to return if the element does not exist\n * @returns {*}\n */\nexport default function getNumber(element, defaultValue) {\n  if (!element) {\n    return defaultValue;\n  }\n  // Value is not present if the attribute has a zero length value\n  if (!element.Value) {\n    return defaultValue;\n  }\n  // Sanity check to make sure we have at least one entry in the array.\n  if (!element.Value.length) {\n    return defaultValue;\n  }\n\n  return parseFloat(element.Value[0]);\n}\n","/**\n * Returns the specified element as a string.  Multi-valued elements will be separated by a backslash\n *\n * @param element - The group/element of the element (e.g. '00200013')\n * @param [defaultValue] - The value to return if the element is not present\n * @returns {*}\n */\nexport default function getString(element, defaultValue) {\n  if (!element) {\n    return defaultValue;\n  }\n  // Value is not present if the attribute has a zero length value\n  if (!element.Value) {\n    return defaultValue;\n  }\n  // Sanity check to make sure we have at least one entry in the array.\n  if (!element.Value.length) {\n    return defaultValue;\n  }\n  // Join the array together separated by backslash\n  // NOTE: Orthanc does not correctly split values into an array so the join is a no-op\n  return element.Value.join('\\\\');\n}\n","import metadataProvider from './classes/MetadataProvider';\nimport {\n  getBoundingBox,\n  pixelToPage,\n  repositionTextBox,\n} from './lib/cornerstone.js';\n\nconst cornerstone = {\n  metadataProvider,\n  getBoundingBox,\n  pixelToPage,\n  repositionTextBox,\n};\n\nexport default cornerstone;\n","import cornerstone from 'cornerstone-core';\nimport cornerstoneTools from 'cornerstone-tools';\n\nfunction getBoundingBox(context, textLines, x, y, options) {\n  if (Object.prototype.toString.call(textLines) !== '[object Array]') {\n    textLines = [textLines];\n  }\n\n  const padding = 5;\n  const font = cornerstoneTools.textStyle.getFont();\n  const fontSize = cornerstoneTools.textStyle.getFontSize();\n\n  context.save();\n  context.font = font;\n  context.textBaseline = 'top';\n\n  // Find the longest text width in the array of text data\n  let maxWidth = 0;\n\n  textLines.forEach(text => {\n    // Get the text width in the current font\n    const width = context.measureText(text).width;\n\n    // Find the maximum with for all the text Rows;\n    maxWidth = Math.max(maxWidth, width);\n  });\n\n  // Calculate the bounding box for this text box\n  const boundingBox = {\n    width: maxWidth + padding * 2,\n    height: padding + textLines.length * (fontSize + padding),\n  };\n\n  if (options && options.centering && options.centering.x === true) {\n    x -= boundingBox.width / 2;\n  }\n\n  if (options && options.centering && options.centering.y === true) {\n    y -= boundingBox.height / 2;\n  }\n\n  boundingBox.left = x;\n  boundingBox.top = y;\n\n  context.restore();\n\n  // Return the bounding box so it can be used for pointNearHandle\n  return boundingBox;\n}\n\nfunction pixelToPage(element, position) {\n  const enabledElement = cornerstone.getEnabledElement(element);\n  const result = {\n    x: 0,\n    y: 0,\n  };\n\n  // Stop here if the cornerstone element is not enabled or position is not an object\n  if (!enabledElement || typeof position !== 'object') {\n    return result;\n  }\n\n  const canvas = enabledElement.canvas;\n\n  const canvasOffset = $(canvas).offset();\n  result.x += canvasOffset.left;\n  result.y += canvasOffset.top;\n\n  const canvasPosition = cornerstone.pixelToCanvas(element, position);\n  result.x += canvasPosition.x;\n  result.y += canvasPosition.y;\n\n  return result;\n}\n\nfunction repositionTextBox(eventData, measurementData, config) {\n  // Stop here if it's not a measurement creating\n  if (!measurementData.isCreating) {\n    return;\n  }\n\n  const element = eventData.element;\n  const enabledElement = cornerstone.getEnabledElement(element);\n  const image = enabledElement.image;\n\n  const allowedBorders = OHIF.uiSettings.autoPositionMeasurementsTextCallOuts;\n  const allow = {\n    T: !allowedBorders || allowedBorders.includes('T'),\n    R: !allowedBorders || allowedBorders.includes('R'),\n    B: !allowedBorders || allowedBorders.includes('B'),\n    L: !allowedBorders || allowedBorders.includes('L'),\n  };\n\n  const getAvailableBlankAreas = (enabledElement, labelWidth, labelHeight) => {\n    const { element, canvas, image } = enabledElement;\n\n    const topLeft = cornerstone.pixelToCanvas(element, {\n      x: 0,\n      y: 0,\n    });\n\n    const bottomRight = cornerstone.pixelToCanvas(element, {\n      x: image.width,\n      y: image.height,\n    });\n\n    const $canvas = $(canvas);\n    const canvasWidth = $canvas.outerWidth();\n    const canvasHeight = $canvas.outerHeight();\n\n    const result = {};\n    result['x-1'] = allow.L && topLeft.x > labelWidth;\n    result['y-1'] = allow.T && topLeft.y > labelHeight;\n    result.x1 = allow.R && canvasWidth - bottomRight.x > labelWidth;\n    result.y1 = allow.B && canvasHeight - bottomRight.y > labelHeight;\n\n    return result;\n  };\n\n  const getRenderingInformation = (limits, tool) => {\n    const mid = {};\n    mid.x = limits.x / 2;\n    mid.y = limits.y / 2;\n\n    const directions = {};\n    directions.x = tool.x < mid.x ? -1 : 1;\n    directions.y = tool.y < mid.y ? -1 : 1;\n\n    const diffX = directions.x < 0 ? tool.x : limits.x - tool.x;\n    const diffY = directions.y < 0 ? tool.y : limits.y - tool.y;\n    let cornerAxis = diffY < diffX ? 'y' : 'x';\n\n    const map = {\n      'x-1': 'L',\n      'y-1': 'T',\n      x1: 'R',\n      y1: 'B',\n    };\n\n    let current = 0;\n    while (current < 4 && !allow[map[cornerAxis + directions[cornerAxis]]]) {\n      // Invert the direction for the next iteration\n      directions[cornerAxis] *= -1;\n\n      // Invert the tempCornerAxis\n      cornerAxis = cornerAxis === 'x' ? 'y' : 'x';\n\n      current++;\n    }\n\n    return {\n      directions,\n      cornerAxis,\n    };\n  };\n\n  const calculateAxisCenter = (axis, start, end) => {\n    const a = start[axis];\n    const b = end[axis];\n    const lowest = Math.min(a, b);\n    const highest = Math.max(a, b);\n    return lowest + (highest - lowest) / 2;\n  };\n\n  const getTextBoxSizeInPixels = (element, bounds) => {\n    const topLeft = cornerstone.pageToPixel(element, 0, 0);\n    const bottomRight = cornerstone.pageToPixel(element, bounds.x, bounds.y);\n    return {\n      x: bottomRight.x - topLeft.x,\n      y: bottomRight.y - topLeft.y,\n    };\n  };\n\n  function getTextBoxOffset(config, cornerAxis, toolAxis, boxSize) {\n    config = config || {};\n    const centering = config.centering || {};\n    const centerX = !!centering.x;\n    const centerY = !!centering.y;\n    const halfBoxSizeX = boxSize.x / 2;\n    const halfBoxSizeY = boxSize.y / 2;\n    const offset = {\n      x: [],\n      y: [],\n    };\n\n    if (cornerAxis === 'x') {\n      const offsetY = centerY ? 0 : halfBoxSizeY;\n\n      offset.x[-1] = centerX ? halfBoxSizeX : 0;\n      offset.x[1] = centerX ? -halfBoxSizeX : -boxSize.x;\n      offset.y[-1] = offsetY;\n      offset.y[1] = offsetY;\n    } else {\n      const offsetX = centerX ? 0 : halfBoxSizeX;\n\n      offset.x[-1] = offsetX;\n      offset.x[1] = offsetX;\n      offset.y[-1] = centerY ? halfBoxSizeY : 0;\n      offset.y[1] = centerY ? -halfBoxSizeY : -boxSize.y;\n    }\n\n    return offset;\n  }\n\n  const handles = measurementData.handles;\n  const textBox = handles.textBox;\n\n  const $canvas = $(enabledElement.canvas);\n  const canvasWidth = $canvas.outerWidth();\n  const canvasHeight = $canvas.outerHeight();\n  const offset = $canvas.offset();\n  const canvasDimensions = {\n    x: canvasWidth,\n    y: canvasHeight,\n  };\n\n  const bounds = {};\n  bounds.x = textBox.boundingBox.width;\n  bounds.y = textBox.boundingBox.height;\n\n  const getHandlePosition = key => {\n    const { x, y } = handles[key];\n\n    return { x, y };\n  };\n  const start = getHandlePosition('start');\n  const end = getHandlePosition('end');\n\n  const tool = {};\n  tool.x = calculateAxisCenter('x', start, end);\n  tool.y = calculateAxisCenter('y', start, end);\n\n  let limits = {};\n  limits.x = image.width;\n  limits.y = image.height;\n\n  let { directions, cornerAxis } = getRenderingInformation(limits, tool);\n\n  const availableAreas = getAvailableBlankAreas(\n    enabledElement,\n    bounds.x,\n    bounds.y\n  );\n  const tempDirections = Object.assign({}, directions);\n  let tempCornerAxis = cornerAxis;\n  let foundPlace = false;\n  let current = 0;\n  while (current < 4) {\n    if (availableAreas[tempCornerAxis + tempDirections[tempCornerAxis]]) {\n      foundPlace = true;\n      break;\n    }\n\n    // Invert the direction for the next iteration\n    tempDirections[tempCornerAxis] *= -1;\n\n    // Invert the tempCornerAxis\n    tempCornerAxis = tempCornerAxis === 'x' ? 'y' : 'x';\n\n    current++;\n  }\n\n  let cornerAxisPosition;\n  if (foundPlace) {\n    directions = Object.assign({}, directions, tempDirections);\n    cornerAxis = tempCornerAxis;\n    cornerAxisPosition = directions[cornerAxis] < 0 ? 0 : limits[cornerAxis];\n  } else {\n    limits = Object.assign({}, limits, canvasDimensions);\n\n    const toolPositionOnCanvas = cornerstone.pixelToCanvas(element, tool);\n    const renderingInformation = getRenderingInformation(\n      limits,\n      toolPositionOnCanvas\n    );\n    directions = renderingInformation.directions;\n    cornerAxis = renderingInformation.cornerAxis;\n\n    const position = {\n      x: directions.x < 0 ? offset.left : offset.left + canvasWidth,\n      y: directions.y < 0 ? offset.top : offset.top + canvasHeight,\n    };\n\n    const pixelPosition = cornerstone.pageToPixel(\n      element,\n      position.x,\n      position.y\n    );\n    cornerAxisPosition = pixelPosition[cornerAxis];\n  }\n\n  const toolAxis = cornerAxis === 'x' ? 'y' : 'x';\n  const boxSize = getTextBoxSizeInPixels(element, bounds);\n\n  textBox[cornerAxis] = cornerAxisPosition;\n  textBox[toolAxis] = tool[toolAxis];\n\n  // Adjust the text box position reducing its size from the corner axis\n  const textBoxOffset = getTextBoxOffset(config, cornerAxis, toolAxis, boxSize);\n  textBox[cornerAxis] += textBoxOffset[cornerAxis][directions[cornerAxis]];\n\n  // Preventing the text box from partially going outside the canvas area\n  const topLeft = cornerstone.pixelToCanvas(element, textBox);\n  const bottomRight = {\n    x: topLeft.x + bounds.x,\n    y: topLeft.y + bounds.y,\n  };\n  const canvasBorders = {\n    x0: offset.left,\n    y0: offset.top,\n    x1: offset.left + canvasWidth,\n    y1: offset.top + canvasHeight,\n  };\n  if (topLeft[toolAxis] < 0) {\n    const x = canvasBorders.x0;\n    const y = canvasBorders.y0;\n    const pixelPosition = cornerstone.pageToPixel(element, x, y);\n    textBox[toolAxis] = pixelPosition[toolAxis];\n  } else if (bottomRight[toolAxis] > canvasDimensions[toolAxis]) {\n    const x = canvasBorders.x1 - bounds.x;\n    const y = canvasBorders.y1 - bounds.y;\n    const pixelPosition = cornerstone.pageToPixel(element, x, y);\n    textBox[toolAxis] = pixelPosition[toolAxis];\n  }\n}\n\nexport { getBoundingBox, pixelToPage, repositionTextBox };\n","import validate from 'validate.js';\n\nvalidate.validators.equals = function(value, options, key, attributes) {\n  if (options && value !== options.value) {\n    return key + 'must equal ' + options.value;\n  }\n};\n\nvalidate.validators.doesNotEqual = function(value, options, key) {\n  if (options && value === options.value) {\n    return key + 'cannot equal ' + options.value;\n  }\n};\n\nvalidate.validators.contains = function(value, options, key) {\n  if (options && value.indexOf && value.indexOf(options.value) === -1) {\n    return key + 'must contain ' + options.value;\n  }\n};\n\nvalidate.validators.doesNotContain = function(value, options, key) {\n  if (options && value.indexOf && value.indexOf(options.value) !== -1) {\n    return key + 'cannot contain ' + options.value;\n  }\n};\n\nvalidate.validators.startsWith = function(value, options, key) {\n  if (options && value.startsWith && !value.startsWith(options.value)) {\n    return key + 'must start with ' + options.value;\n  }\n};\n\nvalidate.validators.endsWith = function(value, options, key) {\n  if (options && value.endsWith && !value.endsWith(options.value)) {\n    return key + 'must end with ' + options.value;\n  }\n};\n\nexport { validate };\n","// Define an empty object to store callbacks that are used to retrieve custom attributes\n// The simplest example for a custom attribute is the Timepoint type (i.e. baseline or follow-up)\n// used in the LesionTracker application.\n//\n// Timepoint type can be obtained given a studyId, and this is done through a custom callback.\n// Developers can define attributes (i.e. attributeId = timepointType) with a name ('Timepoint Type')\n// and a callback function that is used to calculate them.\n//\n// The input to the callback, which is called during viewport-image matching rule evaluation\n// is the set of attributes that contains the specified attribute. In our example, timepointType is\n// linked to the study attributes, and so the inputs to the callback is an object containing\n// the study attributes.\nconst CustomAttributeRetrievalCallbacks = {};\n\n/**\n * Adds a custom attribute to be used in the HangingProtocol UI and matching rules, including a\n * callback that will be used to calculate the attribute value.\n *\n * @param attributeId The ID used to refer to the attribute (e.g. 'timepointType')\n * @param attributeName The name of the attribute to be displayed (e.g. 'Timepoint Type')\n * @param callback The function used to calculate the attribute value from the other attributes at its level (e.g. study/series/image)\n */\nfunction addCustomAttribute(attributeId, attributeName, callback) {\n  CustomAttributeRetrievalCallbacks[attributeId] = {\n    name: attributeName,\n    callback: callback,\n  };\n}\n\nexport { CustomAttributeRetrievalCallbacks, addCustomAttribute };\n","import OHIFError from '../classes/OHIFError.js';\nimport metadata from '../classes/metadata/';\nimport { validate } from './lib/validate.js';\nimport { CustomAttributeRetrievalCallbacks } from './customAttributes';\n\n/**\n * Import Constants\n */\nconst { InstanceMetadata } = metadata;\n\n/**\n * Match a Metadata instance against rules using Validate.js for validation.\n * @param  {InstanceMetadata} metadataInstance Metadata instance object\n * @param  {Array} rules Array of MatchingRules instances (StudyMatchingRule|SeriesMatchingRule|ImageMatchingRule) for the match\n * @return {Object}      Matching Object with score and details (which rule passed or failed)\n */\nconst match = (metadataInstance, rules) => {\n  // Make sure the supplied data is valid.\n  if (!(metadataInstance instanceof InstanceMetadata)) {\n    throw new OHIFError(\n      'HPMatcher::match metadataInstance must be an instance of InstanceMetadata'\n    );\n  }\n\n  const options = {\n    format: 'grouped',\n  };\n\n  const details = {\n    passed: [],\n    failed: [],\n  };\n\n  let requiredFailed = false;\n  let score = 0;\n\n  rules.forEach(rule => {\n    const attribute = rule.attribute;\n\n    // Do not use the custom attribute from the metadataInstance since it is subject to change\n    if (CustomAttributeRetrievalCallbacks.hasOwnProperty(attribute)) {\n      const customAttribute = CustomAttributeRetrievalCallbacks[attribute];\n      metadataInstance.setCustomAttribute(\n        attribute,\n        customAttribute.callback(metadataInstance)\n      );\n    }\n\n    // Format the constraint as required by Validate.js\n    const testConstraint = {\n      [attribute]: rule.constraint,\n    };\n\n    // Create a single attribute object to be validated, since metadataInstance is an\n    // instance of Metadata (StudyMetadata, SeriesMetadata or InstanceMetadata)\n    const attributeValue = metadataInstance.customAttributeExists(attribute)\n      ? metadataInstance.getCustomAttribute(attribute)\n      : metadataInstance.getTagValue(attribute);\n    const attributeMap = {\n      [attribute]: attributeValue,\n    };\n\n    // Use Validate.js to evaluate the constraints on the specified metadataInstance\n    let errorMessages;\n    try {\n      errorMessages = validate(attributeMap, testConstraint, [options]);\n    } catch (e) {\n      errorMessages = ['Something went wrong during validation.', e];\n    }\n\n    if (!errorMessages) {\n      // If no errorMessages were returned, then validation passed.\n\n      // Add the rule's weight to the total score\n      score += parseInt(rule.weight, 10);\n\n      // Log that this rule passed in the matching details object\n      details.passed.push({\n        rule,\n      });\n    } else {\n      // If errorMessages were present, then validation failed\n\n      // If the rule that failed validation was Required, then\n      // mark that a required Rule has failed\n      if (rule.required) {\n        requiredFailed = true;\n      }\n\n      // Log that this rule failed in the matching details object\n      // and include any error messages\n      details.failed.push({\n        rule,\n        errorMessages,\n      });\n    }\n  });\n\n  // If a required Rule has failed Validation, set the matching score to zero\n  if (requiredFailed) {\n    score = 0;\n  }\n\n  return {\n    score,\n    details,\n    requiredFailed,\n  };\n};\n\nconst HPMatcher = {\n  match,\n};\n\nexport { HPMatcher };\n","// Define an empty object to store callbacks that are used to apply custom viewport settings\n// after a viewport is rendered.\nconst CustomViewportSettings = {};\n\n/**\n * Adds a custom setting that can be chosen in the HangingProtocol UI and applied to a Viewport\n *\n * @param settingId The ID used to refer to the setting (e.g. 'displayCADMarkers')\n * @param settingName The name of the setting to be displayed (e.g. 'Display CAD Markers')\n * @param options\n * @param callback A function to be run after a viewport is rendered with a series\n */\nfunction addCustomViewportSetting(settingId, settingName, options, callback) {\n  CustomViewportSettings[settingId] = {\n    id: settingId,\n    text: settingName,\n    options: options,\n    callback: callback,\n  };\n}\n\nexport { CustomViewportSettings, addCustomViewportSetting };\n","const comparators = [\n  {\n    id: 'equals',\n    name: '= (Equals)',\n    validator: 'equals',\n    validatorOption: 'value',\n    description: 'The attribute must equal this value.',\n  },\n  {\n    id: 'doesNotEqual',\n    name: '!= (Does not equal)',\n    validator: 'doesNotEqual',\n    validatorOption: 'value',\n    description: 'The attribute must not equal this value.',\n  },\n  {\n    id: 'contains',\n    name: 'Contains',\n    validator: 'contains',\n    validatorOption: 'value',\n    description: 'The attribute must contain this value.',\n  },\n  {\n    id: 'doesNotContain',\n    name: 'Does not contain',\n    validator: 'doesNotContain',\n    validatorOption: 'value',\n    description: 'The attribute must not contain this value.',\n  },\n  {\n    id: 'startsWith',\n    name: 'Starts with',\n    validator: 'startsWith',\n    validatorOption: 'value',\n    description: 'The attribute must start with this value.',\n  },\n  {\n    id: 'endsWith',\n    name: 'Ends with',\n    validator: 'endsWith',\n    validatorOption: 'value',\n    description: 'The attribute must end with this value.',\n  },\n  {\n    id: 'onlyInteger',\n    name: 'Only Integers',\n    validator: 'numericality',\n    validatorOption: 'onlyInteger',\n    description: \"Real numbers won't be allowed.\",\n  },\n  {\n    id: 'greaterThan',\n    name: '> (Greater than)',\n    validator: 'numericality',\n    validatorOption: 'greaterThan',\n    description: 'The attribute has to be greater than this value.',\n  },\n  {\n    id: 'greaterThanOrEqualTo',\n    name: '>= (Greater than or equal to)',\n    validator: 'numericality',\n    validatorOption: 'greaterThanOrEqualTo',\n    description: 'The attribute has to be at least this value.',\n  },\n  {\n    id: 'lessThanOrEqualTo',\n    name: '<= (Less than or equal to)',\n    validator: 'numericality',\n    validatorOption: 'lessThanOrEqualTo',\n    description: 'The attribute can be this value at the most.',\n  },\n  {\n    id: 'lessThan',\n    name: '< (Less than)',\n    validator: 'numericality',\n    validatorOption: 'lessThan',\n    description: 'The attribute has to be less than this value.',\n  },\n  {\n    id: 'odd',\n    name: 'Odd',\n    validator: 'numericality',\n    validatorOption: 'odd',\n    description: 'The attribute has to be odd.',\n  },\n  {\n    id: 'even',\n    name: 'Even',\n    validator: 'numericality',\n    validatorOption: 'even',\n    description: 'The attribute has to be even.',\n  },\n];\n\n// Immutable object\nObject.freeze(comparators);\n\nexport { comparators };\n","import { comparators } from '../lib/comparators';\nimport guid from '../../utils/guid';\n\nconst EQUALS_REGEXP = /^equals$/;\n\n/**\n * This Class represents a Rule to be evaluated given a set of attributes\n * Rules have:\n * - An attribute (e.g. 'SeriesDescription')\n * - A constraint Object, in the form required by Validate.js:\n *\n * rule.constraint = {\n *   contains: {\n *      value: 'T-1'\n *      }\n *   };\n *\n *  Note: In this example we use the 'contains' Validator, which is a custom Validator defined in Viewerbase\n *\n * - A value for whether or not they are Required to be matched (default: False)\n * - A value for their relative weighting during Protocol or Image matching (default: 1)\n */\nexport default class Rule {\n  /**\n   * The Constructor for the Class to create a Rule with the bare\n   * minimum information\n   *\n   * @param name The desired name for the Rule\n   */\n  constructor(attribute, constraint, required, weight) {\n    // Create a new UUID for this Rule\n    this.id = guid();\n\n    // Set the Rule's weight (defaults to 1)\n    this.weight = weight || 1;\n\n    // If an attribute is specified, assign it\n    if (attribute) {\n      this.attribute = attribute;\n    }\n\n    // If a constraint is specified, assign it\n    if (constraint) {\n      this.constraint = constraint;\n    }\n\n    // If a value for 'required' is specified, assign it\n    if (required === undefined) {\n      // If no value was specified, default to False\n      this.required = false;\n    } else {\n      this.required = required;\n    }\n\n    // Cache for constraint info object\n    this._constraintInfo = void 0;\n\n    // Cache for validator and value object\n    this._validatorAndValue = void 0;\n  }\n\n  /**\n   * Occasionally the Rule class needs to be instantiated from a JavaScript Object.\n   * This function fills in a Protocol with the Object data.\n   *\n   * @param input A Rule as a JavaScript Object, e.g. retrieved from JSON\n   */\n  fromObject(input) {\n    // Check if the input already has an ID\n    // If so, keep it. It not, create a new UUID\n    this.id = input.id || guid();\n\n    // Assign the specified input data to the Rule\n    this.required = input.required;\n    this.weight = input.weight;\n    this.attribute = input.attribute;\n    this.constraint = input.constraint;\n  }\n\n  /**\n   * Get the constraint info object for the current constraint\n   * @return {Object\\undefined} Constraint object or undefined if current constraint\n   *                            is not valid or not found in comparators list\n   */\n  getConstraintInfo() {\n    let constraintInfo = this._constraintInfo;\n    // Check if info is cached already\n    if (constraintInfo !== void 0) {\n      return constraintInfo;\n    }\n\n    const ruleConstraint = Object.keys(this.constraint)[0];\n\n    if (ruleConstraint !== void 0) {\n      constraintInfo = comparators.find(\n        comparator => ruleConstraint === comparator.id\n      );\n    }\n\n    // Cache this information for later use\n    this._constraintInfo = constraintInfo;\n\n    return constraintInfo;\n  }\n\n  /**\n   * Check if current rule is related to priors\n   * @return {Boolean} True if a rule is related to priors or false otherwise\n   */\n  isRuleForPrior() {\n    // @TODO: Should we check this too? this.attribute === 'relativeTime'\n    return this.attribute === 'abstractPriorValue';\n  }\n\n  /**\n   * If the current rule is a rule for priors, returns the number of referenced priors. Otherwise, returns -1.\n   * @return {Number} The number of referenced priors or -1 if not applicable. Returns zero if the actual value could not be determined.\n   */\n  getNumberOfPriorsReferenced() {\n    if (!this.isRuleForPrior()) {\n      return -1;\n    }\n\n    // Get rule's validator and value\n    const ruleValidatorAndValue = this.getConstraintValidatorAndValue();\n    const { value, validator } = ruleValidatorAndValue;\n    const intValue = parseInt(value, 10) || 0; // avoid possible NaN\n\n    // \"Equal to\" validators\n    if (EQUALS_REGEXP.test(validator)) {\n      // In this case, -1 (the oldest prior) indicates that at least one study is used\n      return intValue < 0 ? 1 : intValue;\n    }\n\n    // Default cases return value\n    return 0;\n  }\n\n  /**\n   * Get the constraint validator and value\n   * @return {Object|undefined} Returns an object containing the validator and it's value or undefined\n   */\n  getConstraintValidatorAndValue() {\n    let validatorAndValue = this._validatorAndValue;\n\n    // Check if validator and value are cached already\n    if (validatorAndValue !== void 0) {\n      return validatorAndValue;\n    }\n\n    // Get the constraint info object\n    const constraintInfo = this.getConstraintInfo();\n\n    // Constraint info object exists and is valid\n    if (constraintInfo !== void 0) {\n      const validator = constraintInfo.validator;\n      const currentValidator = this.constraint[validator];\n\n      if (currentValidator) {\n        const constraintValidator = constraintInfo.validatorOption;\n        const constraintValue = currentValidator[constraintValidator];\n\n        validatorAndValue = {\n          value: constraintValue,\n          validator: constraintInfo.id,\n        };\n\n        this._validatorAndValue = validatorAndValue;\n      }\n    }\n\n    return validatorAndValue;\n  }\n}\n","import Rule from './Rule';\n\n/**\n * The ProtocolMatchingRule Class extends the Rule Class.\n *\n * At present it does not add any new methods or attributes\n * @type {ProtocolMatchingRule}\n */\nclass ProtocolMatchingRule extends Rule {}\n\n/**\n * The StudyMatchingRule Class extends the Rule Class.\n *\n * At present it does not add any new methods or attributes\n * @type {StudyMatchingRule}\n */\nclass StudyMatchingRule extends Rule {}\n\n/**\n * The SeriesMatchingRule Class extends the Rule Class.\n *\n * At present it does not add any new methods or attributes\n * @type {SeriesMatchingRule}\n */\nclass SeriesMatchingRule extends Rule {}\n\n/**\n * The ImageMatchingRule class extends the Rule Class.\n *\n * At present it does not add any new methods or attributes\n * @type {ImageMatchingRule}\n */\nclass ImageMatchingRule extends Rule {}\n\nexport {\n  ProtocolMatchingRule,\n  StudyMatchingRule,\n  SeriesMatchingRule,\n  ImageMatchingRule,\n};\n","/**\n * Removes the first instance of an element from an array, if an equal value exists\n *\n * @param array\n * @param input\n *\n * @returns {boolean} Whether or not the element was found and removed\n */\nconst removeFromArray = (array, input) => {\n  // If the array is empty, stop here\n  if (!array || !array.length) {\n    return false;\n  }\n\n  array.forEach((value, index) => {\n    // TODO: Double check whether or not this deep equality check is necessary\n    //if (_.isEqual(value, input)) {\n    if (value === input) {\n      indexToRemove = index;\n      return false;\n    }\n  });\n\n  if (indexToRemove === void 0) {\n    return false;\n  }\n\n  array.splice(indexToRemove, 1);\n  return true;\n};\n\nexport { removeFromArray };\n","/**\n * The ViewportStructure class represents the layout and layout properties that\n * Viewports are displayed in. ViewportStructure has a type, which corresponds to\n * a layout template, and a set of properties, which depend on the type.\n *\n * @type {ViewportStructure}\n */\nexport default class ViewportStructure {\n  constructor(type, properties) {\n    this.type = type;\n    this.properties = properties;\n  }\n\n  /**\n   * Occasionally the ViewportStructure class needs to be instantiated from a JavaScript Object.\n   * This function fills in a ViewportStructure with the Object data.\n   *\n   * @param input The ViewportStructure as a JavaScript Object, e.g. retrieved from JSON\n   */\n  fromObject(input) {\n    this.type = input.type;\n    this.properties = input.properties;\n  }\n\n  /**\n   * Retrieve the layout template name based on the layout type\n   *\n   * @returns {string}\n   */\n  getLayoutTemplateName() {\n    // Viewport structure can be updated later when we build more complex display layouts\n    switch (this.type) {\n      case 'grid':\n        return 'gridLayout';\n    }\n  }\n\n  /**\n   * Retrieve the number of Viewports required for this layout\n   * given the layout type and properties\n   *\n   * @returns {string}\n   */\n  getNumViewports() {\n    // Viewport structure can be updated later when we build more complex display layouts\n    switch (this.type) {\n      case 'grid':\n        // For the typical grid layout, we only need to multiply Rows by Columns to\n        // obtain the number of viewports\n        return this.properties.Rows * this.properties.Columns;\n    }\n  }\n}\n","import {\n  StudyMatchingRule,\n  SeriesMatchingRule,\n  ImageMatchingRule,\n} from './rules';\nimport { removeFromArray } from '../lib/removeFromArray';\n\n/**\n * This Class defines a Viewport in the Hanging Protocol Stage. A Viewport contains\n * arrays of Rules that are matched in the ProtocolEngine in order to determine which\n * images should be hung.\n *\n * @type {Viewport}\n */\nexport default class Viewport {\n  constructor() {\n    this.viewportSettings = {};\n    this.imageMatchingRules = [];\n    this.seriesMatchingRules = [];\n    this.studyMatchingRules = [];\n  }\n\n  /**\n   * Occasionally the Viewport class needs to be instantiated from a JavaScript Object.\n   * This function fills in a Viewport with the Object data.\n   *\n   * @param input The Viewport as a JavaScript Object, e.g. retrieved from JSON\n   */\n  fromObject(input) {\n    // If ImageMatchingRules exist, create them from the Object data\n    // and add them to the Viewport's imageMatchingRules array\n    if (input.imageMatchingRules) {\n      input.imageMatchingRules.forEach(ruleObject => {\n        var rule = new ImageMatchingRule();\n        rule.fromObject(ruleObject);\n        this.imageMatchingRules.push(rule);\n      });\n    }\n\n    // If SeriesMatchingRules exist, create them from the Object data\n    // and add them to the Viewport's seriesMatchingRules array\n    if (input.seriesMatchingRules) {\n      input.seriesMatchingRules.forEach(ruleObject => {\n        var rule = new SeriesMatchingRule();\n        rule.fromObject(ruleObject);\n        this.seriesMatchingRules.push(rule);\n      });\n    }\n\n    // If StudyMatchingRules exist, create them from the Object data\n    // and add them to the Viewport's studyMatchingRules array\n    if (input.studyMatchingRules) {\n      input.studyMatchingRules.forEach(ruleObject => {\n        var rule = new StudyMatchingRule();\n        rule.fromObject(ruleObject);\n        this.studyMatchingRules.push(rule);\n      });\n    }\n\n    // If ViewportSettings exist, add them to the current protocol\n    if (input.viewportSettings) {\n      this.viewportSettings = input.viewportSettings;\n    }\n  }\n\n  /**\n   * Finds and removes a rule from whichever array it exists in.\n   * It is not required to specify if it exists in studyMatchingRules,\n   * seriesMatchingRules, or imageMatchingRules\n   *\n   * @param rule\n   */\n  removeRule(rule) {\n    var array;\n    if (rule instanceof StudyMatchingRule) {\n      array = this.studyMatchingRules;\n    } else if (rule instanceof SeriesMatchingRule) {\n      array = this.seriesMatchingRules;\n    } else if (rule instanceof ImageMatchingRule) {\n      array = this.imageMatchingRules;\n    }\n\n    removeFromArray(array, rule);\n  }\n}\n","import ViewportStructure from './ViewportStructure';\nimport Viewport from './Viewport';\nimport guid from '../../utils/guid';\n\n/**\n * A Stage is one step in the Display Set Sequence for a Hanging Protocol\n *\n * Stages are defined as a ViewportStructure and an array of Viewports\n *\n * @type {Stage}\n */\nexport default class Stage {\n  constructor(ViewportStructure, name) {\n    // Create a new UUID for this Stage\n    this.id = guid();\n\n    // Assign the name and ViewportStructure provided\n    this.name = name;\n    this.viewportStructure = ViewportStructure;\n\n    // Create an empty array for the Viewports\n    this.viewports = [];\n\n    // Set the created date to Now\n    this.createdDate = new Date();\n  }\n\n  /**\n   * Creates a clone of the current Stage with a new name\n   *\n   * @param name\n   * @returns {Stage|*}\n   */\n  createClone(name) {\n    // Create a new JavaScript independent of the current Protocol\n    var currentStage = Object.assign({}, this);\n\n    // Create a new Stage to return\n    var clonedStage = new Stage();\n\n    // Assign the desired properties\n    currentStage.id = clonedStage.id;\n    clonedStage.fromObject(currentStage);\n\n    // If we have specified a name, assign it\n    if (name) {\n      clonedStage.name = name;\n    }\n\n    // Return the cloned Stage\n    return clonedStage;\n  }\n\n  /**\n   * Occasionally the Stage class needs to be instantiated from a JavaScript Object.\n   * This function fills in a Protocol with the Object data.\n   *\n   * @param input A Stage as a JavaScript Object, e.g. retrieved from JSON\n   */\n  fromObject(input) {\n    // Check if the input already has an ID\n    // If so, keep it. It not, create a new UUID\n    this.id = input.id || guid();\n\n    // Assign the input name to the Stage\n    this.name = input.name;\n\n    // If a ViewportStructure is present in the input, add it from the\n    // input data\n    this.viewportStructure = new ViewportStructure();\n    this.viewportStructure.fromObject(input.viewportStructure);\n\n    // If any viewports are present in the input object\n    if (input.viewports) {\n      input.viewports.forEach(viewportObject => {\n        // Create a new Viewport with their data\n        var viewport = new Viewport();\n        viewport.fromObject(viewportObject);\n\n        // Add it to the viewports array\n        this.viewports.push(viewport);\n      });\n    }\n  }\n}\n","import { ProtocolMatchingRule } from './rules';\nimport { removeFromArray } from '../lib/removeFromArray';\nimport Stage from './Stage';\nimport guid from '../../utils/guid';\nimport user from '../../user';\n\n/**\n * This class represents a Hanging Protocol at the highest level\n *\n * @type {Protocol}\n */\nexport default class Protocol {\n  /**\n   * The Constructor for the Class to create a Protocol with the bare\n   * minimum information\n   *\n   * @param name The desired name for the Protocol\n   */\n  constructor(name) {\n    // Create a new UUID for this Protocol\n    this.id = guid();\n\n    // Store a value which determines whether or not a Protocol is locked\n    // This is probably temporary, since we will eventually have role / user\n    // checks for editing. For now we just need it to prevent changes to the\n    // default protocols.\n    this.locked = false;\n\n    // Boolean value to indicate if the protocol has updated priors information\n    // it's set in \"updateNumberOfPriorsReferenced\" function\n    this.hasUpdatedPriorsInformation = false;\n\n    // Apply the desired name\n    this.name = name;\n\n    // Set the created and modified dates to Now\n    this.createdDate = new Date();\n    this.modifiedDate = new Date();\n\n    // If we are logged in while creating this Protocol,\n    // store this information as well\n    if (user.userLoggedIn && user.userLoggedIn()) {\n      this.createdBy = user.getUserId();\n      this.modifiedBy = user.getUserId();\n    }\n\n    // Create two empty Sets specifying which roles\n    // have read and write access to this Protocol\n    this.availableTo = new Set();\n    this.editableBy = new Set();\n\n    // Define empty arrays for the Protocol matching rules\n    // and Stages\n    this.protocolMatchingRules = [];\n    this.stages = [];\n\n    // Define auxiliary values for priors\n    this.numberOfPriorsReferenced = -1;\n  }\n\n  getNumberOfPriorsReferenced(skipCache = false) {\n    let numberOfPriorsReferenced =\n      skipCache !== true ? this.numberOfPriorsReferenced : -1;\n\n    // Check if information is cached already\n    if (numberOfPriorsReferenced > -1) {\n      return numberOfPriorsReferenced;\n    }\n\n    numberOfPriorsReferenced = 0;\n\n    // Search each study matching rule for prior rules\n    // Each stage can have many viewports that can have\n    // multiple study matching rules.\n    this.stages.forEach(stage => {\n      if (!stage.viewports) {\n        return;\n      }\n\n      stage.viewports.forEach(viewport => {\n        if (!viewport.studyMatchingRules) {\n          return;\n        }\n\n        viewport.studyMatchingRules.forEach(rule => {\n          // If the current rule is not a priors rule, it will return -1 then numberOfPriorsReferenced will continue to be 0\n          const priorsReferenced = rule.getNumberOfPriorsReferenced();\n          if (priorsReferenced > numberOfPriorsReferenced) {\n            numberOfPriorsReferenced = priorsReferenced;\n          }\n        });\n      });\n    });\n\n    this.numberOfPriorsReferenced = numberOfPriorsReferenced;\n\n    return numberOfPriorsReferenced;\n  }\n\n  updateNumberOfPriorsReferenced() {\n    this.getNumberOfPriorsReferenced(true);\n  }\n\n  /**\n   * Method to update the modifiedDate when the Protocol\n   * has been changed\n   */\n  protocolWasModified() {\n    // If we are logged in while modifying this Protocol,\n    // store this information as well\n    if (user.userLoggedIn && user.userLoggedIn()) {\n      this.modifiedBy = user.getUserId();\n    }\n\n    // Protocol has been modified, so mark priors information\n    // as \"outdated\"\n    this.hasUpdatedPriorsInformation = false;\n\n    // Update number of priors referenced info\n    this.updateNumberOfPriorsReferenced();\n\n    // Update the modifiedDate with the current Date/Time\n    this.modifiedDate = new Date();\n  }\n\n  /**\n   * Occasionally the Protocol class needs to be instantiated from a JavaScript Object\n   * containing the Protocol data. This function fills in a Protocol with the Object\n   * data.\n   *\n   * @param input A Protocol as a JavaScript Object, e.g. retrieved from JSON\n   */\n  fromObject(input) {\n    // Check if the input already has an ID\n    // If so, keep it. It not, create a new UUID\n    this.id = input.id || guid();\n\n    // Assign the input name to the Protocol\n    this.name = input.name;\n\n    // Retrieve locked status, use !! to make it truthy\n    // so that undefined values will be set to false\n    this.locked = !!input.locked;\n\n    // TODO: Check how to regenerate Set from Object\n    //this.availableTo = new Set(input.availableTo);\n    //this.editableBy = new Set(input.editableBy);\n\n    // If the input contains Protocol matching rules\n    if (input.protocolMatchingRules) {\n      input.protocolMatchingRules.forEach(ruleObject => {\n        // Create new Rules from the stored data\n        var rule = new ProtocolMatchingRule();\n        rule.fromObject(ruleObject);\n\n        // Add them to the Protocol\n        this.protocolMatchingRules.push(rule);\n      });\n    }\n\n    // If the input contains data for various Stages in the\n    // display set sequence\n    if (input.stages) {\n      input.stages.forEach(stageObject => {\n        // Create Stages from the stored data\n        var stage = new Stage();\n        stage.fromObject(stageObject);\n\n        // Add them to the Protocol\n        this.stages.push(stage);\n      });\n    }\n  }\n\n  /**\n   * Creates a clone of the current Protocol with a new name\n   *\n   * @param name\n   * @returns {Protocol|*}\n   */\n  createClone(name) {\n    // Create a new JavaScript independent of the current Protocol\n    var currentProtocol = Object.assign({}, this);\n\n    // Create a new Protocol to return\n    var clonedProtocol = new Protocol();\n\n    // Apply the desired properties\n    currentProtocol.id = clonedProtocol.id;\n    clonedProtocol.fromObject(currentProtocol);\n\n    // If we have specified a name, assign it\n    if (name) {\n      clonedProtocol.name = name;\n    }\n\n    // Unlock the clone\n    clonedProtocol.locked = false;\n\n    // Return the cloned Protocol\n    return clonedProtocol;\n  }\n\n  /**\n   * Adds a Stage to this Protocol's display set sequence\n   *\n   * @param stage\n   */\n  addStage(stage) {\n    this.stages.push(stage);\n\n    // Update the modifiedDate and User that last\n    // modified this Protocol\n    this.protocolWasModified();\n  }\n\n  /**\n   * Adds a Rule to this Protocol's array of matching rules\n   *\n   * @param rule\n   */\n  addProtocolMatchingRule(rule) {\n    this.protocolMatchingRules.push(rule);\n\n    // Update the modifiedDate and User that last\n    // modified this Protocol\n    this.protocolWasModified();\n  }\n\n  /**\n   * Removes a Rule from this Protocol's array of matching rules\n   *\n   * @param rule\n   */\n  removeProtocolMatchingRule(rule) {\n    var wasRemoved = removeFromArray(this.protocolMatchingRules, rule);\n\n    // Update the modifiedDate and User that last\n    // modified this Protocol\n    if (wasRemoved) {\n      this.protocolWasModified();\n    }\n  }\n}\n","import OHIFError from '../classes/OHIFError.js';\nimport metadata from '../classes/metadata/';\nimport { StudyMetadataSource } from '../classes/StudyMetadataSource.js';\nimport { isImage } from '../utils/isImage.js';\nimport { HPMatcher } from './HPMatcher.js';\nimport { sortByScore } from './lib/sortByScore';\nimport log from '../log.js';\nimport sortBy from '../utils/sortBy.js';\nimport { CustomViewportSettings } from './customViewportSettings';\nimport Protocol from './classes/Protocol';\nimport { ProtocolStore } from './protocolStore/classes';\n\n/**\n * Import Constants\n */\nconst { StudyMetadata, InstanceMetadata } = metadata;\n\n// Useful constants\nconst ABSTRACT_PRIOR_VALUE = 'abstractPriorValue';\n\nexport default class ProtocolEngine {\n  matchedProtocols = new Map();\n  matchedProtocolScores = {};\n\n  /**\n   * Constructor\n   * @param  {ProtocolStore} protocolStore Protocol Store used to keep track of all hanging protocols\n   * @param  {Array} studies Array of study metadata\n   * @param  {Map} priorStudies Map of prior studies\n   * @param  {Object} studyMetadataSource Instance of StudyMetadataSource (ohif-viewerbase) Object to get study metadata\n   * @param  {Object} options\n   */\n  constructor(\n    protocolStore,\n    studies,\n    priorStudies,\n    studyMetadataSource,\n    options = {}\n  ) {\n    // -----------\n    // Type Validations\n    if (!(studyMetadataSource instanceof StudyMetadataSource)) {\n      throw new OHIFError(\n        'ProtocolEngine::constructor studyMetadataSource is not an instance of StudyMetadataSource'\n      );\n    }\n\n    if (\n      !(studies instanceof Array) &&\n      !studies.every(study => study instanceof StudyMetadata)\n    ) {\n      throw new OHIFError(\n        \"ProtocolEngine::constructor studies is not an array or it's items are not instances of StudyMetadata\"\n      );\n    }\n\n    // --------------\n    // Initialization\n    this.protocolStore = protocolStore;\n    this.studies = studies;\n    this.priorStudies = priorStudies instanceof Map ? priorStudies : new Map();\n    this.studyMetadataSource = studyMetadataSource;\n    this.options = options;\n\n    // Put protocol engine in a known state\n    this.reset();\n\n    // Create an array for new stage ids to be stored\n    // while editing a stage\n    this.newStageIds = [];\n  }\n\n  /**\n   * Resets the ProtocolEngine to the best match\n   */\n  reset() {\n    const protocol = this.getBestProtocolMatch();\n\n    this.setHangingProtocol(protocol);\n  }\n\n  /**\n   * Retrieves the current Stage from the current Protocol and stage index\n   *\n   * @returns {*} The Stage model for the currently displayed Stage\n   */\n  getCurrentStageModel() {\n    return this.protocol.stages[this.stage];\n  }\n\n  /**\n   * Finds the best protocols from Protocol Store, matching each protocol matching rules\n   * with the given study. The best protocol are orded by score and returned in an array\n   * @param  {Object} study StudyMetadata instance object\n   * @return {Array}       Array of match objects or an empty array if no match was found\n   *                       Each match object has the score of the matching and the matched\n   *                       protocol\n   */\n  findMatchByStudy(study) {\n    log.trace('ProtocolEngine::findMatchByStudy');\n\n    const matched = [];\n    const studyInstance = study.getFirstInstance();\n\n    // Set custom attribute for study metadata\n    const numberOfAvailablePriors = this.getNumberOfAvailablePriors(\n      study.getObjectID()\n    );\n\n    this.protocolStore.getProtocol().forEach(protocol => {\n      // Clone the protocol's protocolMatchingRules array\n      // We clone it so that we don't accidentally add the\n      // numberOfPriorsReferenced rule to the Protocol itself.\n      let rules = protocol.protocolMatchingRules.slice();\n      if (!rules) {\n        return;\n      }\n\n      // Check if the study has the minimun number of priors used by the protocol.\n      const numberOfPriorsReferenced = protocol.getNumberOfPriorsReferenced();\n      if (numberOfPriorsReferenced > numberOfAvailablePriors) {\n        return;\n      }\n\n      // Run the matcher and get matching details\n      const matchedDetails = HPMatcher.match(studyInstance, rules);\n      const score = matchedDetails.score;\n\n      // The protocol matched some rule, add it to the matched list\n      if (score > 0) {\n        matched.push({\n          score,\n          protocol,\n        });\n      }\n    });\n\n    // If no matches were found, select the default protocol\n    if (!matched.length) {\n      const defaultProtocol = this.protocolStore.getProtocol('defaultProtocol');\n\n      return [\n        {\n          score: 1,\n          protocol: defaultProtocol,\n        },\n      ];\n    }\n\n    // Sort the matched list by score\n    sortByScore(matched);\n\n    log.trace('ProtocolEngine::findMatchByStudy matched', matched);\n\n    return matched;\n  }\n\n  _clearMatchedProtocols() {\n    this.matchedProtocols.clear();\n    this.matchedProtocolScores = {};\n  }\n  /**\n   * Populates the MatchedProtocols Collection by running the matching procedure\n   */\n  updateProtocolMatches() {\n    log.trace('ProtocolEngine::updateProtocolMatches');\n\n    // Clear all data currently in matchedProtocols\n    this._clearMatchedProtocols();\n\n    // For each study, find the matching protocols\n    this.studies.forEach(study => {\n      const matched = this.findMatchByStudy(study);\n\n      // For each matched protocol, check if it is already in MatchedProtocols\n      matched.forEach(matchedDetail => {\n        const protocol = matchedDetail.protocol;\n        if (!protocol) {\n          return;\n        }\n\n        // If it is not already in the MatchedProtocols Collection, insert it with its score\n        if (!this.matchedProtocols.has(protocol.id)) {\n          log.trace(\n            'ProtocolEngine::updateProtocolMatches inserting protocol match',\n            matchedDetail\n          );\n          this.matchedProtocols.set(protocol.id, protocol);\n          this.matchedProtocolScores[protocol.id] = matchedDetail.score;\n        }\n      });\n    });\n  }\n\n  _largestKeyByValue(obj) {\n    return Object.keys(obj).reduce((a, b) => (obj[a] > obj[b] ? a : b));\n  }\n\n  _getHighestScoringProtocol() {\n    if (!Object.keys(this.matchedProtocolScores).length) {\n      return this.protocolStore.getProtocol('defaultProtocol');\n    }\n    const highestScoringProtocolId = this._largestKeyByValue(\n      this.matchedProtocolScores\n    );\n    return this.matchedProtocols.get(highestScoringProtocolId);\n  }\n\n  /**\n   * Return the best matched Protocol to the current study or set of studies\n   * @returns {*}\n   */\n  getBestProtocolMatch() {\n    // Run the matching to populate matchedProtocols Set and Map\n    this.updateProtocolMatches();\n\n    // Retrieve the highest scoring Protocol\n    const bestMatch = this._getHighestScoringProtocol();\n\n    log.trace('ProtocolEngine::getBestProtocolMatch bestMatch', bestMatch);\n\n    return bestMatch;\n  }\n\n  /**\n   * Get the number of prior studies supplied in the priorStudies map property.\n   *\n   * @param {String} studyObjectID The study object ID of the study whose priors are needed\n   * @returns {number} The number of available prior studies with the same PatientID\n   */\n  getNumberOfAvailablePriors(studyObjectID) {\n    return this.getAvailableStudyPriors(studyObjectID).length;\n  }\n\n  /**\n   * Get the array of prior studies from a specific study.\n   *\n   * @param {String} studyObjectID The study object ID of the study whose priors are needed\n   * @returns {Array} The array of available priors or an empty array\n   */\n  getAvailableStudyPriors(studyObjectID) {\n    const priors = this.priorStudies.get(studyObjectID);\n\n    return priors instanceof Array ? priors : [];\n  }\n\n  // Match images given a list of Studies and a Viewport's image matching reqs\n  matchImages(viewport, viewportIndex) {\n    log.trace('ProtocolEngine::matchImages');\n\n    const {\n      studyMatchingRules,\n      seriesMatchingRules,\n      imageMatchingRules: instanceMatchingRules,\n    } = viewport;\n\n    const matchingScores = [];\n    const currentStudy = this.studies[0]; // @TODO: Should this be: this.studies[this.currentStudy] ???\n    const firstInstance = currentStudy.getFirstInstance();\n\n    let highestStudyMatchingScore = 0;\n    let highestSeriesMatchingScore = 0;\n\n    // Set custom attribute for study metadata and it's first instance\n    currentStudy.setCustomAttribute(ABSTRACT_PRIOR_VALUE, 0);\n    if (firstInstance instanceof InstanceMetadata) {\n      firstInstance.setCustomAttribute(ABSTRACT_PRIOR_VALUE, 0);\n    }\n\n    // Only used if study matching rules has abstract prior values defined...\n    let priorStudies;\n\n    studyMatchingRules.forEach(rule => {\n      if (rule.attribute === ABSTRACT_PRIOR_VALUE) {\n        const validatorType = Object.keys(rule.constraint)[0];\n        const validator = Object.keys(rule.constraint[validatorType])[0];\n\n        let abstractPriorValue = rule.constraint[validatorType][validator];\n        abstractPriorValue = parseInt(abstractPriorValue, 10);\n        // TODO: Restrict or clarify validators for abstractPriorValue?\n\n        // No need to call it more than once...\n        if (!priorStudies) {\n          priorStudies = this.getAvailableStudyPriors(\n            currentStudy.getObjectID()\n          );\n        }\n\n        // TODO: Revisit this later: What about two studies with the same\n        // study date?\n\n        let priorStudy;\n        if (abstractPriorValue === -1) {\n          priorStudy = priorStudies[priorStudies.length - 1];\n        } else {\n          const studyIndex = Math.max(abstractPriorValue - 1, 0);\n          priorStudy = priorStudies[studyIndex];\n        }\n\n        // Invalid data\n        if (!priorStudy instanceof StudyMetadata) {\n          return;\n        }\n\n        const priorStudyObjectID = priorStudy.getObjectID();\n\n        // Check if study metadata is already in studies list\n        if (\n          this.studies.find(study => study.getObjectID() === priorStudyObjectID)\n        ) {\n          return;\n        }\n\n        // Get study metadata if necessary and load study in the viewer (each viewer should provide it's own load study method)\n        this.studyMetadataSource.loadStudy(priorStudy).then(\n          studyMetadata => {\n            // Set the custom attribute abstractPriorValue for the study metadata\n            studyMetadata.setCustomAttribute(\n              ABSTRACT_PRIOR_VALUE,\n              abstractPriorValue\n            );\n\n            // Also add custom attribute\n            const firstInstance = studyMetadata.getFirstInstance();\n            if (firstInstance instanceof InstanceMetadata) {\n              firstInstance.setCustomAttribute(\n                ABSTRACT_PRIOR_VALUE,\n                abstractPriorValue\n              );\n            }\n\n            // Insert the new study metadata\n            this.studies.push(studyMetadata);\n\n            // Update the viewport to refresh layout manager with new study\n            this.updateViewports(viewportIndex);\n          },\n          error => {\n            log.warn(error);\n            throw new OHIFError(\n              `ProtocolEngine::matchImages could not get study metadata for the Study with the following ObjectID: ${priorStudyObjectID}`\n            );\n          }\n        );\n      }\n      // TODO: Add relative Date / time\n    });\n\n    this.studies.forEach(study => {\n      const studyMatchDetails = HPMatcher.match(\n        study.getFirstInstance(),\n        studyMatchingRules\n      );\n\n      // Prevent bestMatch from being updated if the matchDetails' required attribute check has failed\n      if (\n        studyMatchDetails.requiredFailed === true ||\n        studyMatchDetails.score < highestStudyMatchingScore\n      ) {\n        return;\n      }\n\n      highestStudyMatchingScore = studyMatchDetails.score;\n\n      study.forEachSeries(series => {\n        const seriesMatchDetails = HPMatcher.match(\n          series.getFirstInstance(),\n          seriesMatchingRules\n        );\n\n        // Prevent bestMatch from being updated if the matchDetails' required attribute check has failed\n        if (\n          seriesMatchDetails.requiredFailed === true ||\n          seriesMatchDetails.score < highestSeriesMatchingScore\n        ) {\n          return;\n        }\n\n        highestSeriesMatchingScore = seriesMatchDetails.score;\n\n        series.forEachInstance((instance, index) => {\n          // This tests to make sure there is actually image data in this instance\n          // TODO: Change this when we add PDF and MPEG support\n          // See https://ohiforg.atlassian.net/browse/LT-227\n          if (\n            !isImage(instance.getTagValue('SOPClassUID')) &&\n            !instance.getTagValue('Rows')\n          ) {\n            return;\n          }\n\n          const instanceMatchDetails = HPMatcher.match(\n            instance,\n            instanceMatchingRules\n          );\n\n          // Prevent bestMatch from being updated if the matchDetails' required attribute check has failed\n          if (instanceMatchDetails.requiredFailed === true) {\n            return;\n          }\n\n          const matchDetails = {\n            passed: [],\n            failed: [],\n          };\n\n          matchDetails.passed = matchDetails.passed.concat(\n            instanceMatchDetails.details.passed\n          );\n          matchDetails.passed = matchDetails.passed.concat(\n            seriesMatchDetails.details.passed\n          );\n          matchDetails.passed = matchDetails.passed.concat(\n            studyMatchDetails.details.passed\n          );\n\n          matchDetails.failed = matchDetails.failed.concat(\n            instanceMatchDetails.details.failed\n          );\n          matchDetails.failed = matchDetails.failed.concat(\n            seriesMatchDetails.details.failed\n          );\n          matchDetails.failed = matchDetails.failed.concat(\n            studyMatchDetails.details.failed\n          );\n\n          const totalMatchScore =\n            instanceMatchDetails.score +\n            seriesMatchDetails.score +\n            studyMatchDetails.score;\n          const currentSOPInstanceUID = instance.getSOPInstanceUID();\n\n          const imageDetails = {\n            StudyInstanceUID: study.getStudyInstanceUID(),\n            SeriesInstanceUID: series.getSeriesInstanceUID(),\n            SOPInstanceUID: currentSOPInstanceUID,\n            currentImageIdIndex: index,\n            matchingScore: totalMatchScore,\n            matchDetails: matchDetails,\n            sortingInfo: {\n              score: totalMatchScore,\n              study:\n                instance.getTagValue('StudyDate') +\n                instance.getTagValue('StudyTime'),\n              series: parseInt(instance.getTagValue('SeriesNumber')), // TODO: change for seriesDateTime\n              instance: parseInt(instance.getTagValue('InstanceNumber')), // TODO: change for acquisitionTime\n            },\n          };\n\n          // Find the displaySet\n          const displaySet = study.findDisplaySet(displaySet =>\n            displaySet.images.find(\n              image => image.getSOPInstanceUID() === currentSOPInstanceUID\n            )\n          );\n\n          // If the instance was found, set the displaySet ID\n          if (displaySet) {\n            imageDetails.displaySetInstanceUID = displaySet.getUID();\n            imageDetails.imageId = instance.getImageId();\n          }\n\n          matchingScores.push(imageDetails);\n        });\n      });\n    });\n\n    // Sort the matchingScores\n    const sortingFunction = sortBy(\n      {\n        name: 'score',\n        reverse: true,\n      },\n      {\n        name: 'study',\n        reverse: true,\n      },\n      {\n        name: 'instance',\n      },\n      {\n        name: 'series',\n      }\n    );\n    matchingScores.sort((a, b) =>\n      sortingFunction(a.sortingInfo, b.sortingInfo)\n    );\n\n    const bestMatch = matchingScores[0];\n\n    log.trace('ProtocolEngine::matchImages bestMatch', bestMatch);\n\n    return {\n      bestMatch,\n      matchingScores,\n    };\n  }\n\n  /**\n   * Sets the current layout\n   *\n   * @param {number} numRows\n   * @param {number} numColumns\n   */\n  setLayout(numRows, numColumns) {\n    if (numRows < 1 && numColumns < 1) {\n      log.error(`Invalid layout ${numRows} x ${numColumns}`);\n      return;\n    }\n\n    if (typeof this.options.setLayout !== 'function') {\n      log.error('Hanging Protocol Engine setLayout callback is not defined');\n      return;\n    }\n\n    let viewports = [];\n    const numViewports = numRows * numColumns;\n\n    for (let i = 0; i < numViewports; i++) {\n      viewports.push({});\n    }\n\n    this.options.setLayout({ numRows, numColumns, viewports });\n  }\n\n  /**\n   * Rerenders viewports that are part of the current layout manager\n   * using the matching rules internal to each viewport.\n   *\n   * If this function is provided the index of a viewport, only the specified viewport\n   * is rerendered.\n   *\n   * @param viewportIndex\n   */\n  updateViewports(viewportIndex) {\n    log.trace(\n      `ProtocolEngine::updateViewports viewportIndex: ${viewportIndex}`\n    );\n\n    // Make sure we have an active protocol with a non-empty array of display sets\n    if (!this.getNumProtocolStages()) {\n      return;\n    }\n\n    // Retrieve the current stage\n    const stageModel = this.getCurrentStageModel();\n\n    // If the current stage does not fulfill the requirements to be displayed,\n    // stop here.\n    if (\n      !stageModel ||\n      !stageModel.viewportStructure ||\n      !stageModel.viewports ||\n      !stageModel.viewports.length\n    ) {\n      return;\n    }\n\n    // Retrieve the layoutTemplate associated with the current display set's viewport structure\n    // If no such template name exists, stop here.\n    const layoutTemplateName = stageModel.viewportStructure.getLayoutTemplateName();\n    if (!layoutTemplateName) {\n      return;\n    }\n\n    // Retrieve the properties associated with the current display set's viewport structure template\n    // If no such layout properties exist, stop here.\n    const layoutProps = stageModel.viewportStructure.properties;\n    if (!layoutProps) {\n      return;\n    }\n\n    // Create an empty array to store the output viewportData\n    const viewportData = [];\n\n    // Empty the matchDetails associated with the ProtocolEngine.\n    // This will be used to store the pass/fail details and score\n    // for each of the viewport matching procedures\n    this.matchDetails = [];\n\n    // Loop through each viewport\n    stageModel.viewports.forEach((viewport, viewportIndex) => {\n      const details = this.matchImages(viewport, viewportIndex);\n\n      this.matchDetails[viewportIndex] = details;\n\n      // Convert any YES/NO values into true/false for Cornerstone\n      const cornerstoneViewportParams = {};\n\n      // Cache viewportSettings keys\n      const viewportSettingsKeys = Object.keys(viewport.viewportSettings);\n\n      viewportSettingsKeys.forEach(key => {\n        let value = viewport.viewportSettings[key];\n        if (value === 'YES') {\n          value = true;\n        } else if (value === 'NO') {\n          value = false;\n        }\n\n        cornerstoneViewportParams[key] = value;\n      });\n\n      // imageViewerViewports occasionally needs relevant layout data in order to set\n      // the element style of the viewport in question\n      const currentViewportData = {\n        viewportIndex,\n        viewport: cornerstoneViewportParams,\n        ...layoutProps,\n      };\n\n      const customSettings = [];\n      viewportSettingsKeys.forEach(id => {\n        const setting = CustomViewportSettings[id];\n        if (!setting) {\n          return;\n        }\n\n        customSettings.push({\n          id: id,\n          value: viewport.viewportSettings[id],\n        });\n      });\n\n      currentViewportData.renderedCallback = element => {\n        //console.log('renderedCallback for ' + element.id);\n        customSettings.forEach(customSetting => {\n          log.trace(\n            `ProtocolEngine::currentViewportData.renderedCallback Applying custom setting: ${customSetting.id}`\n          );\n          log.trace(\n            `ProtocolEngine::currentViewportData.renderedCallback with value: ${customSetting.value}`\n          );\n\n          const setting = CustomViewportSettings[customSetting.id];\n          setting.callback(element, customSetting.value);\n        });\n      };\n\n      let currentMatch = details.bestMatch;\n      let currentPosition = 1;\n      const scoresLength = details.matchingScores.length;\n      while (\n        currentPosition < scoresLength &&\n        viewportData.find(a => a.imageId === currentMatch.imageId)\n      ) {\n        currentMatch = details.matchingScores[currentPosition];\n        currentPosition++;\n      }\n\n      if (currentMatch && currentMatch.imageId) {\n        currentViewportData.StudyInstanceUID = currentMatch.StudyInstanceUID;\n        currentViewportData.SeriesInstanceUID = currentMatch.SeriesInstanceUID;\n        currentViewportData.SOPInstanceUID = currentMatch.SOPInstanceUID;\n        currentViewportData.currentImageIdIndex =\n          currentMatch.currentImageIdIndex;\n        currentViewportData.displaySetInstanceUID =\n          currentMatch.displaySetInstanceUID;\n        currentViewportData.imageId = currentMatch.imageId;\n      }\n\n      // @TODO Why should we throw an exception when a best match is not found? This was aborting the whole process.\n      // if (!currentViewportData.displaySetInstanceUID) {\n      //     throw new OHIFError('ProtocolEngine::updateViewports No matching display set found?');\n      // }\n\n      viewportData.push(currentViewportData);\n    });\n\n    this.setLayout(layoutProps.Rows, layoutProps.Columns);\n\n    if (typeof this.options.setViewportSpecificData !== 'function') {\n      log.error(\n        'Hanging Protocol Engine setViewportSpecificData callback is not defined'\n      );\n      return;\n    }\n\n    // If viewportIndex is defined, then update only that viewport\n    if (viewportIndex !== undefined && viewportData[viewportIndex]) {\n      this.options.setViewportSpecificData(\n        viewportIndex,\n        viewportData[viewportIndex]\n      );\n      return;\n    }\n\n    // Update all viewports\n    viewportData.forEach(viewportSpecificData => {\n      this.options.setViewportSpecificData(\n        viewportSpecificData.viewportIndex,\n        viewportSpecificData\n      );\n    });\n  }\n\n  /**\n   * Sets the current Hanging Protocol to the specified Protocol\n   * An optional argument can also be used to prevent the updating of the Viewports\n   *\n   * @param newProtocol\n   * @param updateViewports\n   */\n  setHangingProtocol(newProtocol, updateViewports = true) {\n    log.trace('ProtocolEngine::setHangingProtocol newProtocol', newProtocol);\n    log.trace(\n      `ProtocolEngine::setHangingProtocol updateViewports = ${updateViewports}`\n    );\n\n    // Reset the array of newStageIds\n    this.newStageIds = [];\n\n    if (Protocol.prototype.isPrototypeOf(newProtocol)) {\n      this.protocol = newProtocol;\n    } else {\n      this.protocol = new Protocol();\n      this.protocol.fromObject(newProtocol);\n    }\n\n    this.stage = 0;\n\n    // Update viewports by default\n    if (updateViewports) {\n      this.updateViewports();\n    }\n  }\n\n  /**\n   * Check if the next stage is available\n   * @return {Boolean} True if next stage is available or false otherwise\n   */\n  isNextStageAvailable() {\n    const numberOfStages = this.getNumProtocolStages();\n\n    return this.stage + 1 < numberOfStages;\n  }\n\n  /**\n   * Check if the previous stage is available\n   * @return {Boolean} True if previous stage is available or false otherwise\n   */\n  isPreviousStageAvailable() {\n    return this.stage - 1 >= 0;\n  }\n\n  /**\n   * Changes the current stage to a new stage index in the display set sequence.\n   * It checks if the next stage exists.\n   *\n   * @param {Integer} stageAction An integer value specifying wheater next (1) or previous (-1) stage\n   * @return {Boolean} True if new stage has set or false, otherwise\n   */\n  setCurrentProtocolStage(stageAction) {\n    // Check if previous or next stage is available\n    if (stageAction === -1 && !this.isPreviousStageAvailable()) {\n      return false;\n    } else if (stageAction === 1 && !this.isNextStageAvailable()) {\n      return false;\n    }\n\n    // Sets the new stage\n    this.stage += stageAction;\n\n    // Log the new stage\n    log.trace(`ProtocolEngine::setCurrentProtocolStage stage = ${this.stage}`);\n\n    // Since stage has changed, we need to update the viewports\n    // and redo matchings\n    this.updateViewports();\n\n    // Everything went well\n    return true;\n  }\n\n  /**\n   * Retrieves the number of Stages in the current Protocol or\n   * undefined if no protocol or stages are set\n   */\n  getNumProtocolStages() {\n    if (\n      !this.protocol ||\n      !this.protocol.stages ||\n      !this.protocol.stages.length\n    ) {\n      return;\n    }\n\n    return this.protocol.stages.length;\n  }\n\n  /**\n   * Switches to the next protocol stage in the display set sequence\n   */\n  nextProtocolStage() {\n    log.trace('ProtocolEngine::nextProtocolStage');\n\n    if (!this.setCurrentProtocolStage(1)) {\n      log.trace('ProtocolEngine::nextProtocolStage failed');\n    }\n  }\n\n  /**\n   * Switches to the previous protocol stage in the display set sequence\n   */\n  previousProtocolStage() {\n    log.trace('ProtocolEngine::previousProtocolStage');\n\n    if (!this.setCurrentProtocolStage(-1)) {\n      log.trace('ProtocolEngine::previousProtocolStage failed');\n    }\n  }\n}\n","// Sorts an array by score\nconst sortByScore = arr => {\n  arr.sort((a, b) => {\n    return b.score - a.score;\n  });\n};\n\nexport { sortByScore };\n","import Protocol from '../../classes/Protocol';\n\n// The ProtocolStore class allows persisting hanging protocols using different strategies.\n// For example, one strategy stores hanging protocols in the application server while\n// another strategy stores them in a remote machine, but only one strategy can be used at a time.\n\nexport default class ProtocolStore {\n  constructor(strategy) {\n    this.strategy = strategy;\n  }\n\n  /**\n   * Get a Protocol instance or array of Protocol instances for the given protocol object or array\n   * @param  {Object|array} protocolObject Protocol plain object or array of Protocol plain objects\n   * @return {Protocol|array} Protocol instance or array of Protocol intances for the given protocol object or array\n   */\n  static getProtocolInstance(protocolObject) {\n    let result = protocolObject;\n\n    // If result is an array of protocols objects\n    if (result instanceof Array) {\n      result.forEach((protocol, index) => {\n        // Check if protocol is an instance of Protocol\n        if (!(protocol instanceof Protocol)) {\n          const protocolInstance = new Protocol();\n          protocolInstance.fromObject(protocol);\n          result[index] = protocolInstance;\n        }\n      });\n    } else if (result !== void 0 && !(result instanceof Protocol)) {\n      // Check if result exists and is not an instance of Protocol\n      const protocolInstance = new Protocol();\n      protocolInstance.fromObject(result);\n      result = protocolInstance;\n    }\n\n    return result;\n  }\n\n  /**\n   * Registers a function to be called when the protocol store is ready to persist hanging protocols\n   *\n   * NOTE: Strategies should implement this function\n   *\n   * @param callback The function to be called as a callback\n   */\n  onReady(callback) {\n    this.strategy.onReady(callback);\n  }\n\n  /**\n   * Gets the hanging protocol by protocolId if defined, otherwise all stored hanging protocols\n   *\n   * NOTE: Strategies should implement this function\n   *\n   * @param protocolId The protocol ID used to find the hanging protocol\n   * @returns {object|array} The hanging protocol by protocolId or array of the stored hanging protocols\n   */\n  getProtocol(protocolId) {\n    let result = this.strategy.getProtocol(protocolId);\n    return ProtocolStore.getProtocolInstance(result);\n  }\n\n  /**\n   * Stores the hanging protocol\n   *\n   * NOTE: Strategies should implement this function\n   *\n   * @param protocol The hanging protocol to be stored\n   */\n  addProtocol(protocol) {\n    this.strategy.addProtocol(protocol);\n  }\n\n  /**\n   * Updates the hanging protocol by protocolId\n   *\n   * NOTE: Strategies should implement this function\n   *\n   * @param protocolId The protocol ID used to find the hanging protocol to update\n   * @param protocol The updated hanging protocol\n   */\n  updateProtocol(protocolId, protocol) {\n    this.strategy.updateProtocol(protocolId, protocol);\n  }\n\n  /**\n   * Removes the hanging protocol\n   *\n   * NOTE: Strategies should implement this function\n   *\n   * @param protocolId The protocol ID used to remove the hanging protocol\n   */\n  removeProtocol(protocolId) {\n    this.strategy.removeProtocol(protocolId);\n  }\n}\n","import Protocol from '../classes/Protocol';\nimport ViewportStructure from '../classes/ViewportStructure';\nimport Viewport from '../classes/Viewport';\nimport Stage from '../classes/Stage';\n\nfunction getDefaultProtocol() {\n  const protocol = new Protocol('Default');\n  protocol.id = 'defaultProtocol';\n  protocol.locked = true;\n\n  const oneByOne = new ViewportStructure('grid', {\n    Rows: 1,\n    Columns: 1,\n  });\n\n  const viewport = new Viewport();\n  const first = new Stage(oneByOne, 'oneByOne');\n  first.viewports.push(viewport);\n\n  protocol.stages.push(first);\n\n  return protocol;\n}\n\nconst defaultProtocol = getDefaultProtocol();\n\nexport default defaultProtocol;\n","import ProtocolEngine from './ProtocolEngine.js';\nimport { ProtocolStore, ProtocolStrategy } from './protocolStore';\nimport { addCustomAttribute } from './customAttributes';\nimport { addCustomViewportSetting } from './customViewportSettings';\n\nconst hangingProtocols = {\n  ProtocolEngine,\n  ProtocolStore,\n  ProtocolStrategy,\n  addCustomAttribute,\n  addCustomViewportSetting,\n};\n\nexport default hangingProtocols;\n","import log from '../../../log';\nimport defaultProtocol from '../defaultProtocol';\n\nexport default class ProtocolStrategy {\n  constructor() {\n    this.hangingProtocols = new Map();\n    this.defaultsAdded = false;\n  }\n\n  /**\n   * Registers a function to be called when the hangingProtocols collection is subscribed\n   * The callback is called only one time when the subscription is ready\n   *\n   * @param callback The function to be called as a callback\n   */\n  onReady(callback) {\n    if (!this.defaultsAdded) {\n      log.info('Inserting the default hanging protocol...');\n      this.addProtocol(defaultProtocol);\n      this.defaultsAdded = true;\n    }\n\n    callback();\n  }\n\n  /**\n   * Gets the hanging protocol by protocolId if defined, otherwise all stored hanging protocols\n   *\n   * @param protocolId The protocol ID used to find the hanging protocol\n   * @returns {object|array} The hanging protocol by protocolId or array of the stored hanging protocols\n   */\n  getProtocol(protocolId) {\n    // Return the hanging protocol by protocolId if defined\n    if (protocolId) {\n      return this.hangingProtocols.get(protocolId);\n    }\n\n    // Otherwise, return all protocols\n    return Array.from(this.hangingProtocols.values());\n  }\n\n  /**\n   * Stores the hanging protocol\n   *\n   * @param protocol The hanging protocol to be stored\n   */\n  addProtocol(protocol) {\n    this.hangingProtocols.set(protocol.id, protocol);\n  }\n\n  /**\n   * Updates the hanging protocol by protocolId\n   *\n   * @param protocolId The protocol ID used to find the hanging protocol to update\n   * @param protocol The updated hanging protocol\n   */\n  updateProtocol(protocolId, protocol) {\n    if (!this.hangingProtocols.has(protocolId)) {\n      return;\n    }\n\n    this.hangingProtocols.set(protocolId, protocol);\n  }\n\n  /**\n   * Removes the hanging protocol\n   *\n   * @param protocolId The protocol ID used to remove the hanging protocol\n   */\n  removeProtocol(protocolId) {\n    if (!this.hangingProtocols.has(protocolId)) {\n      return;\n    }\n\n    this.hangingProtocols.delete(protocolId);\n  }\n}\n","//import Dropdown from './ui/dropdown/class.js';\n\n/*\n * Defines the base OHIF header object\n */\n//const dropdown = new OHIF.ui.Dropdown();\nconst header = {};\n\nexport default header;\n","// Transforms a shallow object with keys separated by \".\" into a nested object\nfunction getNestedObject(shallowObject) {\n  const nestedObject = {};\n  for (let key in shallowObject) {\n    if (!shallowObject.hasOwnProperty(key)) continue;\n    const value = shallowObject[key];\n    const propertyArray = key.split('.');\n    let currentObject = nestedObject;\n    while (propertyArray.length) {\n      const currentProperty = propertyArray.shift();\n      if (!propertyArray.length) {\n        currentObject[currentProperty] = value;\n      } else {\n        if (!currentObject[currentProperty]) {\n          currentObject[currentProperty] = {};\n        }\n\n        currentObject = currentObject[currentProperty];\n      }\n    }\n  }\n\n  return nestedObject;\n}\n\n// Transforms a nested object into a shallowObject merging its keys with \".\" character\nfunction getShallowObject(nestedObject) {\n  const shallowObject = {};\n  const putValues = (baseKey, nestedObject, resultObject) => {\n    for (let key in nestedObject) {\n      if (!nestedObject.hasOwnProperty(key)) continue;\n      let currentKey = baseKey ? `${baseKey}.${key}` : key;\n      const currentValue = nestedObject[key];\n      if (typeof currentValue === 'object') {\n        if (currentValue instanceof Array) {\n          currentKey += '[]';\n        }\n\n        putValues(currentKey, currentValue, resultObject);\n      } else {\n        resultObject[currentKey] = currentValue;\n      }\n    }\n  };\n\n  putValues('', nestedObject, shallowObject);\n  return shallowObject;\n}\n\nconst object = {\n  getNestedObject,\n  getShallowObject,\n};\n\nexport default object;\n","// TODO: This is duplicated in TypeSafeCollection\nfunction isObject(subject) {\n  return (\n    subject instanceof Object ||\n    (typeof subject === 'object' && subject !== null)\n  );\n}\n\n// TODO: This is duplicated in TypeSafeCollection\nfunction isString(subject) {\n  return typeof subject === 'string';\n}\n\n// Search for some string inside any object or array\nfunction search(object, query, property = null, result = []) {\n  // Create the search pattern\n  const pattern = new RegExp(query.trim(), 'i');\n\n  Object.keys(object).forEach(key => {\n    const item = object[key];\n\n    // Stop here if item is empty\n    if (!item) {\n      return;\n    }\n\n    // Get the value to be compared\n    const value = isString(property) ? item[property] : item;\n\n    // Check if the value match the pattern\n    if (isString(value) && pattern.test(value)) {\n      // Add the current item to the result\n      result.push(item);\n    }\n\n    if (isObject(item)) {\n      // Search recursively the item if the current item is an object\n      search(item, query, property, result);\n    }\n  });\n\n  // Return the found items\n  return result;\n}\n\n// Encode any string into a safe format for HTML id attribute\nfunction encodeId(input) {\n  const string = input && input.toString ? input.toString() : input;\n\n  // Return an underscore if the given string is empty or if it's not a string\n  if (string === '' || typeof string !== 'string') {\n    return '_';\n  }\n\n  // Create a converter to replace non accepted chars\n  const converter = match => '_' + match[0].charCodeAt(0).toString(16) + '_';\n\n  // Encode the given string and return it\n  return string.replace(/[^a-zA-Z0-9-]/g, converter);\n}\n\nconst string = {\n  search,\n  encodeId,\n};\n\nexport default string;\n","import unsavedChanges from './unsavedChanges.js';\nimport handleError from './handleError.js';\nimport isCharacterKeyPress from './isCharacterKeyPress.js';\nimport getOffset from './getOffset.js';\nimport getScrollbarSize from './getScrollbarSize.js';\n\nconst ui = {\n  getScrollbarSize,\n  getOffset,\n  isCharacterKeyPress,\n  handleError,\n};\n\nexport default ui;\n","/**\n * Get the vertical and horizontal scrollbar sizes\n * Got from https://stackoverflow.com/questions/986937/how-can-i-get-the-browsers-scrollbar-sizes\n *\n * @returns {Array} Array containing the scrollbar horizontal and vertical sizes\n */\nexport default function getScrollbarSize() {\n  const inner = document.createElement('p');\n  inner.style.width = '100%';\n  inner.style.height = '100%';\n\n  const outer = document.createElement('div');\n  outer.style.position = 'absolute';\n  outer.style.top = '0px';\n  outer.style.left = '0px';\n  outer.style.visibility = 'hidden';\n  outer.style.width = '100px';\n  outer.style.height = '100px';\n  outer.style.overflow = 'hidden';\n  outer.appendChild(inner);\n\n  document.body.appendChild(outer);\n\n  const w1 = inner.offsetWidth;\n  const h1 = inner.offsetHeight;\n  outer.style.overflow = 'scroll';\n  let w2 = inner.offsetWidth;\n  let h2 = inner.offsetHeight;\n\n  if (w1 === w2) {\n    w2 = outer.clientWidth;\n  }\n\n  if (h1 === h2) {\n    h2 = outer.clientHeight;\n  }\n\n  document.body.removeChild(outer);\n\n  return [w1 - w2, h1 - h2];\n}\n","/**\n * Get the offset for the given element\n *\n * @param {Object} element DOM element which will have the offser calculated\n * @returns {Object} Object containing the top and left offset\n */\nexport default function getOffset(element) {\n  let top = 0;\n  let left = 0;\n  if (element.offsetParent) {\n    do {\n      left += element.offsetLeft;\n      top += element.offsetTop;\n    } while ((element = element.offsetParent));\n  }\n\n  return {\n    left,\n    top,\n  };\n}\n","/**\n * Check if the pressed key combination will result in a character input\n * Got from https://stackoverflow.com/questions/4179708/how-to-detect-if-the-pressed-key-will-produce-a-character-inside-an-input-text\n *\n * @returns {Boolean} Whether the pressed key combination will input a character or not\n */\nexport default function isCharacterKeyPress(event) {\n  if (typeof event.which === 'undefined') {\n    // This is IE, which only fires keypress events for printable keys\n    return true;\n  } else if (typeof event.which === 'number' && event.which > 0) {\n    // In other browsers except old versions of WebKit, event.which is\n    // only greater than zero if the keypress is a printable key.\n    // We need to filter out backspace and ctrl/alt/meta key combinations\n    return (\n      !event.ctrlKey && !event.metaKey && !event.altKey && event.which !== 8\n    );\n  }\n\n  return false;\n}\n","import log from '../log.js';\n\nexport default function handleError(error) {\n  let { title, message } = error;\n\n  if (!title) {\n    if (error instanceof Error) {\n      title = error.name;\n    }\n  }\n\n  if (!message) {\n    if (error instanceof Error) {\n      message = error.message;\n    }\n  }\n\n  const data = Object.assign(\n    {\n      title,\n      message,\n      class: 'themed',\n      hideConfirm: true,\n      cancelLabel: 'Dismiss',\n      cancelClass: 'btn-secondary',\n    },\n    error || {}\n  );\n\n  log.error(error);\n  // TODO: Find a better way to handle errors instead of displaying a dialog for all of them.\n  // OHIF.ui.showDialog('dialogForm', data);\n}\n","import './lib';\n\nimport { ExtensionManager, MODULE_TYPES } from './extensions';\nimport { ServicesManager } from './services';\nimport classes, { CommandsManager, HotkeysManager } from './classes/';\n\nimport DICOMWeb from './DICOMWeb';\nimport DICOMSR from './DICOMSR';\nimport cornerstone from './cornerstone.js';\nimport hangingProtocols from './hanging-protocols';\nimport header from './header.js';\nimport log from './log.js';\nimport measurements from './measurements';\nimport metadata from './classes/metadata/';\nimport object from './object.js';\nimport redux from './redux/';\nimport string from './string.js';\nimport studies from './studies/';\nimport ui from './ui';\nimport user from './user.js';\nimport errorHandler from './errorHandler.js';\nimport utils, { hotkeys } from './utils/';\nimport str2ab from './utils/str2ab';\n\nimport {\n  UINotificationService,\n  UIModalService,\n  UIDialogService,\n  MeasurementService,\n  LoggerService,\n} from './services';\n\nconst OHIF = {\n  MODULE_TYPES,\n  //\n  CommandsManager,\n  ExtensionManager,\n  HotkeysManager,\n  ServicesManager,\n  //\n  utils,\n  hotkeys,\n  studies,\n  redux,\n  classes,\n  metadata,\n  header,\n  cornerstone,\n  string,\n  ui,\n  user,\n  errorHandler,\n  object,\n  log,\n  DICOMWeb,\n  DICOMSR,\n  viewer: {},\n  measurements,\n  hangingProtocols,\n  //\n  UINotificationService,\n  UIModalService,\n  UIDialogService,\n  MeasurementService,\n  LoggerService,\n};\n\nexport {\n  MODULE_TYPES,\n  //\n  CommandsManager,\n  ExtensionManager,\n  HotkeysManager,\n  ServicesManager,\n  //\n  utils,\n  hotkeys,\n  studies,\n  redux,\n  classes,\n  metadata,\n  header,\n  cornerstone,\n  string,\n  ui,\n  user,\n  errorHandler,\n  object,\n  log,\n  DICOMWeb,\n  DICOMSR,\n  measurements,\n  hangingProtocols,\n  //\n  UINotificationService,\n  UIModalService,\n  UIDialogService,\n  MeasurementService,\n  LoggerService,\n\n  str2ab,\n};\n\nexport { OHIF };\n\nexport default OHIF;\n","import React from 'react';\nimport adjust from './icons/adjust.svg';\n// Icons\nimport angleDoubleDown from './icons/angle-double-down.svg';\nimport angleDoubleUp from './icons/angle-double-up.svg';\nimport angleLeft from './icons/angle-left.svg';\nimport arrows from './icons/arrows.svg';\nimport arrowsAltH from './icons/arrows-alt-h.svg';\nimport arrowsAltV from './icons/arrows-alt-v.svg';\nimport bars from './icons/bars.svg';\nimport brain from './icons/brain.svg';\nimport brush from './icons/brush.svg';\nimport caretDown from './icons/caret-down.svg';\nimport caretUp from './icons/caret-up.svg';\nimport check from './icons/check.svg';\nimport checkCircle from './icons/check-circle.svg';\nimport checkCircleO from './icons/check-circle-o.svg';\nimport chevronDown from './icons/chevron-down.svg';\nimport circle from './icons/circle.svg';\nimport circleNotch from './icons/circle-notch.svg';\nimport circleO from './icons/circle-o.svg';\nimport clipboard from './icons/clipboard.svg';\nimport cog from './icons/cog.svg';\nimport createComment from './icons/create-comment.svg';\nimport createScreenCapture from './icons/create-screen-capture.svg';\nimport crosshairs from './icons/crosshairs.svg';\nimport cube from './icons/cube.svg';\nimport d3Rotate from './icons/3d-rotate.svg';\nimport database from './icons/database.svg';\nimport dotCircle from './icons/dot-circle.svg';\nimport edit from './icons/edit.svg';\nimport ellipseCircle from './icons/ellipse-circle.svg';\nimport ellipseH from './icons/ellipse-h.svg';\nimport ellipseV from './icons/ellipse-v.svg';\nimport exclamationCircle from './icons/exclamation-circle.svg';\nimport exclamationTriangle from './icons/exclamation-triangle.svg';\nimport fastBackward from './icons/fast-backward.svg';\nimport fastForward from './icons/fast-forward.svg';\nimport stop from './icons/stop.svg';\nimport info from './icons/info.svg';\nimport inlineEdit from './icons/inline-edit.svg';\nimport level from './icons/level.svg';\nimport link from './icons/link.svg';\nimport linkCircles from './icons/link-circles.svg';\nimport list from './icons/list.svg';\nimport liver from './icons/liver.svg';\nimport lock from './icons/lock.svg';\nimport lockAlt from './icons/lock-alt.svg';\nimport lung from './icons/lung.svg';\nimport measureNonTarget from './icons/measure-non-target.svg';\nimport measureTarget from './icons/measure-target.svg';\nimport measureTargetCr from './icons/measure-target-cr.svg';\nimport measureTargetNe from './icons/measure-target-ne.svg';\nimport measureTargetUn from './icons/measure-target-un.svg';\nimport measureTemp from './icons/measure-temp.svg';\nimport objectGroup from './icons/object-group.svg';\nimport ohifLogo from './icons/ohif-logo.svg';\nimport ohifTextLogo from './icons/ohif-text-logo.svg';\nimport oval from './icons/oval.svg';\nimport palette from './icons/palette.svg';\nimport play from './icons/play.svg';\nimport plus from './icons/plus.svg';\nimport powerOff from './icons/power-off.svg';\nimport reset from './icons/reset.svg';\nimport rotate from './icons/rotate.svg';\nimport rotateRight from './icons/rotate-right.svg';\nimport saveRegular from './icons/save-regular.svg';\nimport scissors from './icons/scissors.svg';\nimport search from './icons/search.svg';\nimport searchPlus from './icons/search-plus.svg';\nimport softTissue from './icons/soft-tissue.svg';\nimport sort from './icons/sort.svg';\nimport sortDown from './icons/sort-down.svg';\nimport sortUp from './icons/sort-up.svg';\nimport sphere from './icons/sphere.svg';\nimport squareO from './icons/square-o.svg';\nimport star from './icons/star.svg';\nimport stepBackward from './icons/step-backward.svg';\nimport stepForward from './icons/step-forward.svg';\nimport sun from './icons/sun.svg';\nimport th from './icons/th.svg';\nimport thLarge from './icons/th-large.svg';\nimport thList from './icons/th-list.svg';\nimport times from './icons/times.svg';\nimport trash from './icons/trash.svg';\nimport unlink from './icons/unlink.svg';\nimport user from './icons/user.svg';\nimport youtube from './icons/youtube.svg';\nimport eye from './icons/eye.svg';\nimport eyeClosed from './icons/eye-closed.svg';\nimport envelopeSquare from './icons/envelope-square.svg';\n\nconst ICONS = {\n  eye,\n  'eye-closed': eyeClosed,\n  brush,\n  scissors,\n  user,\n  sort,\n  th,\n  star,\n  'sort-up': sortUp,\n  sphere,\n  'sort-down': sortDown,\n  info,\n  cube,\n  crosshairs,\n  'dot-circle': dotCircle,\n  'angle-left': angleLeft,\n  '3d-rotate': d3Rotate,\n  plus,\n  'chevron-down': chevronDown,\n  'angle-double-down': angleDoubleDown,\n  'angle-double-up': angleDoubleUp,\n  'arrows-alt-h': arrowsAltH,\n  'arrows-alt-v': arrowsAltV,\n  bars,\n  'caret-down': caretDown,\n  'caret-up': caretUp,\n  'check-circle-o': checkCircleO,\n  check,\n  circle,\n  'circle-o': circleO,\n  times,\n  'create-comment': createComment,\n  'create-screen-capture': createScreenCapture,\n  edit,\n  'fast-backward': fastBackward,\n  'fast-forward': fastForward,\n  'object-group': objectGroup,\n  search,\n  'power-off': powerOff,\n  'inline-edit': inlineEdit,\n  list,\n  'ohif-logo': ohifLogo,\n  'ohif-text-logo': ohifTextLogo,\n  lock,\n  play,\n  database,\n  cog,\n  'circle-notch': circleNotch,\n  'square-o': squareO,\n  'check-circle': checkCircle,\n  'lock-alt': lockAlt,\n  'step-backward': stepBackward,\n  'step-forward': stepForward,\n  clipboard: clipboard,\n  stop,\n  'th-large': thLarge,\n  'th-list': thList,\n  sun,\n  palette,\n  youtube,\n  oval,\n  'ellipse-h': ellipseH,\n  'ellipse-v': ellipseV,\n  adjust,\n  level,\n  'link-circles': linkCircles,\n  'search-plus': searchPlus,\n  'measure-non-target': measureNonTarget,\n  'measure-target': measureTarget,\n  'measure-target-cr': measureTargetCr,\n  'measure-target-un': measureTargetUn,\n  'measure-target-ne': measureTargetNe,\n  'measure-temp': measureTemp,\n  'ellipse-circle': ellipseCircle,\n  arrows,\n  reset,\n  rotate,\n  'rotate-right': rotateRight,\n  trash,\n  unlink,\n  'exclamation-circle': exclamationCircle,\n  link,\n  'exclamation-triangle': exclamationTriangle,\n  brain,\n  'soft-tissue': softTissue,\n  lung,\n  liver,\n  save: saveRegular,\n  'envelope-square': envelopeSquare,\n};\n\n/**\n * Return the matching SVG Icon as a React Component.\n * Results in an inlined SVG Element. If there's no match,\n * return `null`\n */\nexport default function getIcon(key, props) {\n  if (!key || !ICONS[key]) {\n    return React.createElement('div', null, 'Missing Icon');\n  }\n\n  return React.createElement(ICONS[key], props);\n}\n\nexport { ICONS };\n","import './Icon.styl';\n\nimport PropTypes from 'prop-types';\nimport getIcon from './getIcon.js';\n\nconst Icon = props => {\n  return getIcon(props.name, props);\n};\n\nIcon.propTypes = {\n  /** The string name of the icon to display */\n  name: PropTypes.string.isRequired,\n};\n\nexport default Icon;\n","import { ICONS } from './getIcon.js';\nimport Icon from './Icon.js';\n\nexport { Icon, ICONS };\n","import React, {\n  useState,\n  createContext,\n  useContext,\n  useEffect,\n  useCallback,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst ModalContext = createContext(null);\nconst { Provider } = ModalContext;\n\nexport const useModal = () => useContext(ModalContext);\n\n/**\n * UI Modal\n *\n * @typedef {Object} ModalProps\n * @property {ReactElement|HTMLElement} [content=null] Modal content.\n * @property {Object} [contentProps=null] Modal content props.\n * @property {boolean} [shouldCloseOnEsc=false] Modal is dismissible via the esc key.\n * @property {boolean} [isOpen=true] Make the Modal visible or hidden.\n * @property {boolean} [closeButton=true] Should the modal body render the close button.\n * @property {string} [title=null] Should the modal render the title independently of the body content.\n * @property {string} [customClassName=null] The custom class to style the modal.\n */\n\nconst ModalProvider = ({ children, modal: Modal, service }) => {\n  const DEFAULT_OPTIONS = {\n    content: null,\n    contentProps: null,\n    shouldCloseOnEsc: false,\n    isOpen: true,\n    onClose: null,\n    closeButton: true,\n    showScrollbar: false,\n    title: null,\n    customClassName: '',\n    fullscreen: false,\n  };\n\n  const [options, setOptions] = useState(DEFAULT_OPTIONS);\n\n  /**\n   * Show the modal and override its configuration props.\n   *\n   * @param {ModalProps} props { content, contentProps, shouldCloseOnEsc, isOpen, closeButton, title, customClassName }\n   * @returns void\n   */\n  const show = useCallback(props => setOptions({ ...options, ...props }), [\n    options,\n  ]);\n\n  /**\n   * Hide the modal and set its properties to default.\n   *\n   * @returns void\n   */\n  const hide = useCallback(() => setOptions(DEFAULT_OPTIONS), [\n    DEFAULT_OPTIONS,\n  ]);\n\n  /**\n   * Sets the implementation of a modal service that can be used by extensions.\n   *\n   * @returns void\n   */\n  useEffect(() => {\n    if (service) {\n      service.setServiceImplementation({ hide, show });\n    }\n  }, [hide, service, show]);\n\n  const {\n    content: ModalContent,\n    contentProps,\n    isOpen,\n    onClose,\n    title,\n    customClassName,\n    shouldCloseOnEsc,\n    fullscreen,\n    closeButton,\n    showScrollbar,\n    noScroll,\n  } = options;\n\n  return (\n    <Provider value={{ show, hide }}>\n      {ModalContent && (\n        <Modal\n          className={classNames(\n            customClassName,\n            ModalContent.className,\n            { visibleScrollbar: showScrollbar },\n            { noScroll }\n          )}\n          shouldCloseOnEsc={shouldCloseOnEsc}\n          isOpen={isOpen}\n          title={title}\n          fullscreen={fullscreen}\n          closeButton={closeButton}\n          onClose={() => {\n            if (onClose) {\n              onClose();\n            }\n\n            hide();\n          }}\n        >\n          <ModalContent {...contentProps} show={show} hide={hide} />\n        </Modal>\n      )}\n      {children}\n    </Provider>\n  );\n};\n\n/**\n * Higher Order Component to use the modal methods through a Class Component.\n *\n * @returns\n */\nexport const withModal = Component => {\n  return function WrappedComponent(props) {\n    const { show, hide } = useModal();\n    return <Component {...props} modal={{ show, hide }} />;\n  };\n};\n\nModalProvider.defaultProps = {\n  service: null,\n};\n\nModalProvider.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n  modal: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n    PropTypes.func,\n  ]).isRequired,\n  service: PropTypes.shape({\n    setServiceImplementation: PropTypes.func,\n  }),\n};\n\nexport default ModalProvider;\n\nexport const ModalConsumer = ModalContext.Consumer;\n","import React, { useEffect } from 'react';\n\nconst SnackbarItem = ({ options, onClose }) => {\n  const handleClose = () => {\n    onClose(options.id);\n  };\n\n  const handleClick = () => {\n    options.action.onClick({ ...options, close: handleClose });\n  };\n\n  useEffect(() => {\n    if (options.autoClose) {\n      setTimeout(() => {\n        handleClose();\n      }, options.duration);\n    }\n  }, []);\n\n  return (\n    <div\n      className={`${options.visible ? '' : 'sb-hidden'} sb-${\n        options.type\n      } sb-item`}\n    >\n      <span className=\"sb-closeBtn\" onClick={handleClose}>\n        <span className=\"sb-closeIcon\">x</span>\n      </span>\n      {options.title && <div className=\"sb-title\">{options.title}</div>}\n      {options.message && <div className=\"sb-message\">{options.message}</div>}\n      {options.action && (\n        <button className=\"sb-action\" onClick={handleClick}>\n          {options.action.label}\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default SnackbarItem;\n","import React from 'react';\nimport SnackbarItem from './SnackbarItem';\nimport './Snackbar.css';\nimport { useSnackbarContext } from '../../contextProviders';\n\nconst SnackbarContainer = () => {\n  const { snackbarItems, hide } = useSnackbarContext();\n\n  const renderItem = item => {\n    return <SnackbarItem key={item.itemId} options={item} onClose={hide} />;\n  };\n\n  if (!snackbarItems) {\n    return null;\n  }\n\n  const renderItems = () => {\n    const items = {\n      topLeft: [],\n      topCenter: [],\n      topRight: [],\n      bottomLeft: [],\n      bottomCenter: [],\n      bottomRight: [],\n    };\n\n    snackbarItems.map(item => {\n      items[item.position].push(item);\n    });\n\n    return (\n      <div>\n        {Object.keys(items).map(pos => {\n          if (!items[pos].length) {\n            return null;\n          }\n\n          return (\n            <div key={pos} className={`sb-container sb-${pos}`}>\n              {items[pos].map((item, index) => (\n                <div key={item.id + index}>{renderItem(item)}</div>\n              ))}\n            </div>\n          );\n        })}\n      </div>\n    );\n  };\n\n  return <>{renderItems()}</>;\n};\n\nexport default SnackbarContainer;\n","export default {\n  INFO: 'info',\n  WARNING: 'warning',\n  SUCCESS: 'success',\n  ERROR: 'error',\n};\n","import React, {\n  useState,\n  createContext,\n  useContext,\n  useCallback,\n  useEffect,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport { classes } from '@ohif/core';\n\nimport SnackbarContainer from '../components/snackbar/SnackbarContainer';\nimport SnackbarTypes from '../components/snackbar/SnackbarTypes';\n\nconst { LogManager } = classes;\n\nconst SnackbarContext = createContext(null);\n\nexport const useSnackbarContext = () => useContext(SnackbarContext);\n\nconst SnackbarProvider = ({ children, service }) => {\n  const DEFAULT_OPTIONS = {\n    title: '',\n    message: '',\n    duration: 5000,\n    autoClose: true,\n    position: 'bottomRight',\n    type: SnackbarTypes.INFO,\n    action: null,\n  };\n\n  const [count, setCount] = useState(1);\n  const [snackbarItems, setSnackbarItems] = useState([]);\n\n  useEffect(() => {\n    const onLogHandler = ({ type, notify, title, message }) => {\n      if (notify) {\n        show({ type, title, message });\n      }\n    };\n\n    LogManager.subscribe(LogManager.EVENTS.OnLog, onLogHandler);\n\n    return () => {\n      LogManager.unsubscribe(LogManager.EVENTS.OnLog, onLogHandler);\n    };\n  }, [show]);\n\n  const show = useCallback(\n    options => {\n      if (!options || (!options.title && !options.message)) {\n        console.warn(\n          'Snackbar cannot be rendered without required parameters: title | message'\n        );\n\n        return null;\n      }\n\n      if (options.type === 'error') {\n        console.error(options.error);\n      }\n\n      const newItem = {\n        ...DEFAULT_OPTIONS,\n        ...options,\n        id: count,\n        visible: true,\n      };\n\n      setSnackbarItems(state => [...state, newItem]);\n      setCount(count + 1);\n    },\n    [count, DEFAULT_OPTIONS]\n  );\n\n  const hide = useCallback(\n    id => {\n      const hideItem = items => {\n        const newItems = items.map(item => {\n          if (item.id === id) {\n            item.visible = false;\n          }\n\n          return item;\n        });\n\n        return newItems;\n      };\n\n      setSnackbarItems(state => hideItem(state));\n\n      setTimeout(() => {\n        setSnackbarItems(state => [...state.filter(item => item.id !== id)]);\n      }, 1000);\n    },\n    [setSnackbarItems]\n  );\n\n  const hideAll = () => {\n    // reset count\n    setCount(1);\n\n    // remove all items from array\n    setSnackbarItems(() => []);\n  };\n\n  /**\n   * Sets the implementation of a notification service that can be used by extensions.\n   *\n   * @returns void\n   */\n  useEffect(() => {\n    if (service) {\n      service.setServiceImplementation({ hide, show });\n    }\n  }, [service, hide, show]);\n\n  /**\n   * expose snackbar methods to window for debug purposes\n   * TODO: Check if it's really necessary\n   */\n  window.snackbar = {\n    show,\n    hide,\n    hideAll,\n  };\n\n  return (\n    <SnackbarContext.Provider value={{ show, hide, hideAll, snackbarItems }}>\n      {!!snackbarItems && <SnackbarContainer />}\n      {children}\n    </SnackbarContext.Provider>\n  );\n};\n\nSnackbarProvider.defaultProps = {\n  service: null,\n};\n\nSnackbarProvider.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n    PropTypes.func,\n  ]).isRequired,\n  service: PropTypes.shape({\n    setServiceImplementation: PropTypes.func,\n  }),\n};\n\n/**\n *\n * High Order Component to use the snackbar methods through a Class Component\n *\n */\nexport const withSnackbar = Component => {\n  return function WrappedComponent(props) {\n    const snackbarContext = {\n      ...useSnackbarContext(),\n    };\n    return <Component {...props} snackbarContext={snackbarContext} />;\n  };\n};\n\nexport default SnackbarProvider;\n","// Reference > https://reactjs.org/docs/context.html\nimport React from 'react';\nimport {\n  withTranslation as I18NextWithTranslation,\n  I18nextProvider,\n} from 'react-i18next';\nimport i18n from '@ohif/i18n';\n\nconst WrapperI18n = Component => {\n  const WrapperComponent = props => (\n    <I18nextProvider i18n={i18n}>\n      <Component {...props} />\n    </I18nextProvider>\n  );\n\n  return WrapperComponent;\n};\n\nconst withTranslation = namespace => Component => {\n  const TranslatedComponent = props => {\n    return <Component {...props} />;\n  };\n\n  return WrapperI18n(I18NextWithTranslation(namespace)(TranslatedComponent));\n};\n\nexport { withTranslation };\nexport default withTranslation;\n","import React, {\n  useState,\n  createContext,\n  useContext,\n  useCallback,\n  useEffect,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport Draggable from 'react-draggable';\nimport classNames from 'classnames';\n\nimport { utils } from '@ohif/core';\n\nimport './DialogProvider.styl';\n\nconst DialogContext = createContext(null);\n\nexport const useDialog = () => useContext(DialogContext);\n\nconst DialogProvider = ({ children, service }) => {\n  const [isDragging, setIsDragging] = useState(false);\n  const [dialogs, setDialogs] = useState([]);\n  const [lastDialogId, setLastDialogId] = useState(null);\n  const [lastDialogPosition, setLastDialogPosition] = useState(null);\n  const [centerPositions, setCenterPositions] = useState([]);\n\n  useEffect(() => {\n    setCenterPositions(\n      dialogs.map(dialog => ({\n        id: dialog.id,\n        ...getCenterPosition(dialog.id),\n      }))\n    );\n  }, [dialogs]);\n\n  const getCenterPosition = id => {\n    const root = document.querySelector('#root');\n    const centerX = root.offsetLeft + root.offsetWidth / 2;\n    const centerY = root.offsetTop + root.offsetHeight / 2;\n    const item = document.querySelector(`#draggableItem-${id}`);\n    const itemBounds = item.getBoundingClientRect();\n    return {\n      x: centerX - itemBounds.width / 2,\n      y: centerY - itemBounds.height / 2,\n    };\n  };\n\n  /**\n   * Creates a new dialog and return its id.\n   *\n   * @param {DialogProps} props The dialog props.\n   * @returns The new dialog id.\n   */\n  const create = useCallback(props => {\n    const { id } = props;\n\n    let dialogId = id;\n    if (!dialogId) {\n      dialogId = utils.guid();\n    }\n\n    setDialogs(dialogs => [...dialogs, { ...props, id: dialogId }]);\n    setLastDialogId(dialogId);\n\n    return dialogId;\n  }, []);\n\n  /**\n   * Dismisses the dialog with a given id.\n   *\n   * @param {Object} props -\n   * @property {string} props.id The dialog id.\n   * @returns void\n   */\n  const dismiss = useCallback(\n    ({ id }) =>\n      setDialogs(dialogs => dialogs.filter(dialog => dialog.id !== id)),\n    []\n  );\n\n  /**\n   * Sets the implementation of a dialog service that can be used by extensions.\n   *\n   * @returns void\n   */\n  useEffect(() => {\n    if (service) {\n      service.setServiceImplementation({ create, dismiss, dismissAll });\n    }\n  }, [create, dismiss, service]);\n\n  /**\n   * Moves the dialog to the foreground if clicked.\n   *\n   * @param {string} id The dialog id.\n   * @returns void\n   */\n  const _bringToFront = useCallback(id => {\n    setDialogs(dialogs => {\n      const topDialog = dialogs.find(dialog => dialog.id === id);\n      return topDialog\n        ? [...dialogs.filter(dialog => dialog.id !== id), topDialog]\n        : dialogs;\n    });\n  }, []);\n\n  /**\n   * UI Dialog\n   *\n   * @typedef {Object} DialogProps\n   * @property {string} id The dialog id.\n   * @property {DialogContent} content The dialog content.\n   * @property {Object} contentProps The dialog content props.\n   * @property {boolean} isDraggable Controls if dialog content is draggable or not.\n   * @property {boolean} showOverlay Controls dialog overlay.\n   * @property {boolean} centralize Center the dialog on the screen.\n   * @property {boolean} preservePosition Use last position instead of default.\n   * @property {ElementPosition} defaultPosition Specifies the `x` and `y` that the dragged item should start at.\n   * @property {Function} onStart Called when dragging starts. If `false` is returned any handler, the action will cancel.\n   * @property {Function} onStop Called when dragging stops.\n   * @property {Function} onDrag Called while dragging.\n   */\n\n  useEffect(() => _bringToFront(lastDialogId), [_bringToFront, lastDialogId]);\n\n  /**\n   * Dismisses all dialogs.\n   *\n   * @returns void\n   */\n  const dismissAll = () => {\n    setDialogs([]);\n  };\n\n  /**\n   * Indicate if there are no dialogs present.\n   *\n   * @returns True if no dialogs are present.\n   */\n  const isEmpty = () => dialogs && dialogs.length < 1;\n\n  const renderDialogs = () =>\n    dialogs.map(dialog => {\n      const {\n        id,\n        content: DialogContent,\n        contentProps,\n        defaultPosition,\n        centralize = false,\n        preservePosition = true,\n        isDraggable = true,\n        onStart,\n        onStop,\n        onDrag,\n        showOverlay,\n      } = dialog;\n\n      let position =\n        (preservePosition && lastDialogPosition) || defaultPosition;\n      if (centralize) {\n        position = centerPositions.find(position => position.id === id);\n      }\n\n      const dragableItem = () => (\n        <Draggable\n          key={id}\n          disabled={!isDraggable}\n          position={position}\n          defaultPosition={position}\n          bounds=\"parent\"\n          onStart={event => {\n            const e = event || window.event;\n            const target = e.target || e.srcElement;\n            const BLACKLIST = [\n              'SVG',\n              'BUTTON',\n              'PATH',\n              'INPUT',\n              'SPAN',\n              'LABEL',\n            ];\n            if (BLACKLIST.includes(target.tagName.toUpperCase())) {\n              return false;\n            }\n\n            if (validCallback(onStart)) {\n              return onStart(event);\n            }\n          }}\n          onStop={event => {\n            setIsDragging(false);\n\n            if (validCallback(onStop)) {\n              return onStop(event);\n            }\n          }}\n          onDrag={event => {\n            setIsDragging(true);\n            _bringToFront(id);\n            _updateLastDialogPosition(id);\n\n            if (validCallback(onDrag)) {\n              return onDrag(event);\n            }\n          }}\n        >\n          <div\n            id={`draggableItem-${id}`}\n            className={classNames(\n              'DraggableItem',\n              isDragging && 'dragging',\n              isDraggable && 'draggable'\n            )}\n            style={{ zIndex: '999', position: 'absolute' }}\n            onClick={() => _bringToFront(id)}\n          >\n            <DialogContent {...dialog} {...contentProps} />\n          </div>\n        </Draggable>\n      );\n\n      return showOverlay ? (\n        <div className=\"Overlay\" key={id}>\n          {dragableItem()}\n        </div>\n      ) : (\n        dragableItem()\n      );\n    });\n\n  /**\n   * Update the last dialog position to be used as the new default position.\n   *\n   * @returns void\n   */\n  const _updateLastDialogPosition = dialogId => {\n    const draggableItemBounds = document\n      .querySelector(`#draggableItem-${dialogId}`)\n      .getBoundingClientRect();\n    setLastDialogPosition({\n      x: draggableItemBounds.x,\n      y: draggableItemBounds.y,\n    });\n  };\n\n  const validCallback = callback => callback && typeof callback === 'function';\n\n  return (\n    <DialogContext.Provider value={{ create, dismiss, dismissAll, isEmpty }}>\n      {!isEmpty() && <div className=\"DraggableArea\">{renderDialogs()}</div>}\n      {children}\n    </DialogContext.Provider>\n  );\n};\n\n/**\n *\n * High Order Component to use the dialog methods through a Class Component\n *\n */\nexport const withDialog = Component => {\n  return function WrappedComponent(props) {\n    const { create, dismiss, dismissAll, isEmpty } = useDialog();\n    return (\n      <Component {...props} dialog={{ create, dismiss, dismissAll, isEmpty }} />\n    );\n  };\n};\n\nDialogProvider.defaultProps = {\n  service: null,\n};\n\nDialogProvider.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n    PropTypes.func,\n  ]).isRequired,\n  service: PropTypes.shape({\n    setServiceImplementation: PropTypes.func,\n  }),\n};\n\nexport default DialogProvider;\n","import React, { useState, createContext, useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nconst LoggerContext = createContext(null);\nconst { Provider } = LoggerContext;\n\nexport const useLogger = () => useContext(LoggerContext);\n\nconst LoggerProvider = ({ children, service }) => {\n  const [state, setState] = useState({\n    errors: [],\n    infos: [],\n  });\n\n  useEffect(() => {\n    const onErrorHandler = ({ error: errorObject, message }) => {\n      error({ error: errorObject, message });\n    };\n    window.addEventListener('error', onErrorHandler);\n    return () => {\n      window.removeEventListener('error', onErrorHandler);\n    };\n  }, []);\n\n  /**\n   * Logs an error\n   *\n   * @param {object} props { error, stack, message, displayOnConsole }\n   * @returns void\n   */\n  const error = ({\n    error = {},\n    stack = '',\n    message = '',\n    displayOnConsole = true,\n  }) => {\n    const errorObject = { error, stack, message, displayOnConsole };\n    setState(state => ({ ...state, errors: [...state.errors, errorObject] }));\n\n    if (displayOnConsole) {\n      console.error(error);\n    }\n  };\n\n  /**\n   * Logs an info\n   *\n   * @param {object} props { message, displayOnConsole }\n   * @returns void\n   */\n  const info = ({ message = '', displayOnConsole = true }) => {\n    setState(state => ({\n      ...state,\n      infos: state.infos.push({ message, displayOnConsole }),\n    }));\n\n    if (displayOnConsole) {\n      console.info(message);\n    }\n  };\n\n  /**\n   * Sets the implementation of a log service that can be used by extensions\n   *\n   * @returns void\n   */\n  useEffect(() => {\n    if (service) {\n      service.setServiceImplementation({ error, info });\n    }\n  }, [error, service, info]);\n\n  return <Provider value={{ info, error, state }}>{children}</Provider>;\n};\n\n/**\n * Higher Order Component to use the log methods through a Class Component\n *\n * @returns\n */\nexport const withLogger = Component => {\n  return function WrappedComponent(props) {\n    const { error, info, state } = useLogger();\n    return <Component {...props} logger={{ error, info, state }} />;\n  };\n};\n\nLoggerProvider.defaultProps = {\n  service: null,\n};\n\nLoggerProvider.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n  service: PropTypes.shape({\n    setServiceImplementation: PropTypes.func,\n  }),\n};\n\nexport default LoggerProvider;\n\nexport const LogConsumer = LoggerContext.Consumer;\n","export {\n  default as ModalProvider,\n  useModal,\n  withModal,\n  ModalConsumer,\n} from './ModalProvider.js';\nexport {\n  default as SnackbarProvider,\n  useSnackbarContext,\n  withSnackbar,\n} from './SnackbarProvider.js';\nexport {\n  default as LanguageProvider,\n  withTranslation,\n} from './LanguageProvider.js';\nexport {\n  default as DialogProvider,\n  withDialog,\n  useDialog,\n} from './DialogProvider.js';\nexport {\n  default as LoggerProvider,\n  withLogger,\n  useLogger,\n} from './LoggerProvider.js';\n","/**\n * Create a random GUID\n *\n * @return {string}\n */\nconst guid = () => {\n  const getFourRandomValues = () => {\n    return Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  };\n  return (\n    getFourRandomValues() +\n    getFourRandomValues() +\n    '-' +\n    getFourRandomValues() +\n    '-' +\n    getFourRandomValues() +\n    '-' +\n    getFourRandomValues() +\n    '-' +\n    getFourRandomValues() +\n    getFourRandomValues() +\n    getFourRandomValues()\n  );\n};\n\nexport default guid;\n","// These should be overridden by the implementation\nconst errorHandler = {\n  getHTTPErrorHandler: () => null,\n};\n\nexport default errorHandler;\n","// @TODO: improve this object\n/**\n * Objects to be used to throw errors\n */\nclass OHIFError extends Error {\n  constructor(message) {\n    super();\n    this.message = message;\n    this.stack = new Error().stack;\n    this.name = this.constructor.name;\n  }\n}\n\nexport default OHIFError;\n","import retry from 'retry';\n\nconst defaultRetryOptions = {\n  retries: 5,\n  factor: 3,\n  minTimeout: 1 * 1000,\n  maxTimeout: 60 * 1000,\n  randomize: true,\n  retryableStatusCodes: [429, 500],\n};\n\nlet retryOptions = { ...defaultRetryOptions };\n\n/**\n * Request hook used to add retry functionality to XHR requests.\n *\n * @param {XMLHttpRequest} request XHR request instance\n * @param {object} metadata Metadata about the request\n * @param {object} metadata.url URL\n * @param {object} metadata.method HTTP method\n * @returns {XMLHttpRequest} request instance optionally modified\n */\nconst xhrRetryRequestHook = (request, metadata) => {\n  const { url, method } = metadata;\n\n  function faultTolerantRequestSend(...args) {\n    const operation = retry.operation(retryOptions);\n\n    operation.attempt(function operationAttempt(currentAttempt) {\n      const originalOnReadyStateChange = request.onreadystatechange;\n\n      /** Overriding/extending XHR function */\n      request.onreadystatechange = function onReadyStateChange(...args) {\n        originalOnReadyStateChange.apply(request, args);\n\n        if (retryOptions.retryableStatusCodes.includes(request.status)) {\n          const errorMessage = `Attempt to request ${url} failed.`;\n          const attemptFailedError = new Error(errorMessage);\n          operation.retry(attemptFailedError);\n        }\n      };\n\n      /** Call open only on retry (after headers and other things were set in the xhr instance) */\n      if (currentAttempt > 1) {\n        console.warn(`Requesting ${url}... (attempt: ${currentAttempt})`);\n        request.open(method, url, true);\n      }\n    });\n\n    originalRequestSend.apply(request, args);\n  }\n\n  /** Overriding/extending XHR function */\n  const originalRequestSend = request.send;\n  request.send = faultTolerantRequestSend;\n\n  return request;\n};\n\n/**\n * Returns a configured retry request hook function\n * that can be used to add retry functionality to XHR request.\n *\n * Default options:\n *   retries: 5\n *   factor: 3\n *   minTimeout: 1 * 1000\n *   maxTimeout: 60 * 1000\n *   randomize: true\n *\n * @param {object} options\n * @param {number} options.retires number of retries\n * @param {number} options.factor factor\n * @param {number} options.minTimeout the min timeout\n * @param {number} options.maxTimeout the max timeout\n * @param {boolean} options.randomize randomize\n * @param {array} options.retryableStatusCodes status codes that can trigger retry\n * @returns {function} the configured retry request function\n */\nexport const getXHRRetryRequestHook = (options = {}) => {\n  retryOptions = { ...defaultRetryOptions };\n  if ('retries' in options) {\n    retryOptions.retries = options.retries;\n  }\n  if ('factor' in options) {\n    retryOptions.factor = options.factor;\n  }\n  if ('minTimeout' in options) {\n    retryOptions.minTimeout = options.minTimeout;\n  }\n  if ('maxTimeout' in options) {\n    retryOptions.maxTimeout = options.maxTimeout;\n  }\n  if ('randomize' in options) {\n    retryOptions.randomize = options.randomize;\n  }\n  if ('retryableStatusCodes' in options) {\n    retryOptions.retryableStatusCodes = options.retryableStatusCodes;\n  }\n  return xhrRetryRequestHook;\n};\n\nexport default getXHRRetryRequestHook;\n","// These should be overridden by the implementation\nlet user = {\n  userLoggedIn: () => false,\n  getUserId: () => null,\n  getName: () => null,\n  getAccessToken: () => null,\n  login: () => new Promise((resolve, reject) => reject()),\n  logout: () => new Promise((resolve, reject) => reject()),\n  getData: key => null,\n  setData: (key, value) => null,\n};\n\nexport default user;\n","/**\n * Constants\n */\n\nconst STRING = 'string';\nconst NUMBER = 'number';\nconst FUNCTION = 'function';\nconst OBJECT = 'object';\n\n/**\n * Class Definition\n */\n\nexport class Metadata {\n  /**\n   * Constructor and Instance Methods\n   */\n\n  constructor(data, uid) {\n    // Define the main \"_data\" private property as an immutable property.\n    // IMPORTANT: This property can only be set during instance construction.\n    Object.defineProperty(this, '_data', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: data,\n    });\n\n    // Define the main \"_uid\" private property as an immutable property.\n    // IMPORTANT: This property can only be set during instance construction.\n    Object.defineProperty(this, '_uid', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: uid,\n    });\n\n    // Define \"_custom\" properties as an immutable property.\n    // IMPORTANT: This property can only be set during instance construction.\n    Object.defineProperty(this, '_custom', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: Object.create(null),\n    });\n  }\n\n  getData() {\n    return this._data;\n  }\n\n  getDataProperty(propertyName) {\n    let propertyValue;\n    const _data = this._data;\n    if (\n      _data instanceof Object ||\n      (typeof _data === OBJECT && _data !== null)\n    ) {\n      propertyValue = _data[propertyName];\n    }\n    return propertyValue;\n  }\n\n  /**\n   * Get unique object ID\n   */\n  getObjectID() {\n    return this._uid;\n  }\n\n  /**\n   * Set custom attribute value\n   * @param {String} attribute Custom attribute name\n   * @param {Any} value     Custom attribute value\n   */\n  setCustomAttribute(attribute, value) {\n    this._custom[attribute] = value;\n  }\n\n  /**\n   * Get custom attribute value\n   * @param  {String} attribute Custom attribute name\n   * @return {Any}              Custom attribute value\n   */\n  getCustomAttribute(attribute) {\n    return this._custom[attribute];\n  }\n\n  /**\n   * Check if a custom attribute exists\n   * @param  {String} attribute Custom attribute name\n   * @return {Boolean}          True if custom attribute exists or false if not\n   */\n  customAttributeExists(attribute) {\n    return attribute in this._custom;\n  }\n\n  /**\n   * Set custom attributes in batch mode.\n   * @param {Object} attributeMap An object whose own properties will be used as custom attributes.\n   */\n  setCustomAttributes(attributeMap) {\n    const _hasOwn = Object.prototype.hasOwnProperty;\n    const _custom = this._custom;\n    for (let attribute in attributeMap) {\n      if (_hasOwn.call(attributeMap, attribute)) {\n        _custom[attribute] = attributeMap[attribute];\n      }\n    }\n  }\n\n  /**\n   * Static Methods\n   */\n\n  static isValidUID(uid) {\n    return typeof uid === STRING && uid.length > 0;\n  }\n\n  static isValidIndex(index) {\n    return typeof index === NUMBER && index >= 0 && (index | 0) === index;\n  }\n\n  static isValidCallback(callback) {\n    return typeof callback === FUNCTION;\n  }\n}\n","const state = {\n  enabledElements: {},\n};\n\n/**\n * Sets the enabled element `dom` reference for an active viewport.\n * @param {HTMLElement} dom Active viewport element.\n * @return void\n */\nconst setEnabledElement = (viewportIndex, element) =>\n  (state.enabledElements[viewportIndex] = element);\n\n/**\n * Grabs the enabled element `dom` reference of an active viewport.\n *\n * @return {HTMLElement} Active viewport element.\n */\nconst getEnabledElement = viewportIndex => state.enabledElements[viewportIndex];\n\nexport { setEnabledElement, getEnabledElement };\n","import { Metadata } from './Metadata';\nimport OHIFError from '../OHIFError.js';\n\n/**\n * ATTENTION! This class should never depend on StudyMetadata or SeriesMetadata classes as this could\n * possibly cause circular dependency issues.\n */\n\nconst UNDEFINED = 'undefined';\nconst STRING = 'string';\n\nexport class InstanceMetadata extends Metadata {\n  constructor(data, uid) {\n    super(data, uid);\n    // Initialize Private Properties\n    Object.defineProperties(this, {\n      _imageId: {\n        configurable: true, // configurable so that it can be redefined in sub-classes...\n        enumerable: false,\n        writable: true,\n        value: null,\n      },\n    });\n    // Initialize Public Properties\n    this._definePublicProperties();\n  }\n\n  /**\n   * Private Methods\n   */\n\n  /**\n   * Define Public Properties\n   * This method should only be called during initialization (inside the class constructor)\n   */\n  _definePublicProperties() {\n    /**\n     * Property: this.SOPInstanceUID\n     * Same as this.getSOPInstanceUID()\n     * It's specially useful in contexts where a method call is not suitable like in search criteria. For example:\n     * sopInstanceCollection.findBy({\n     *   SOPInstanceUID: '1.2.3.4.5.6.77777.8888888.99999999999.0'\n     * });\n     */\n    Object.defineProperty(this, 'SOPInstanceUID', {\n      configurable: false,\n      enumerable: false,\n      get: function() {\n        return this.getSOPInstanceUID();\n      },\n    });\n  }\n\n  /**\n   * Public Methods\n   */\n\n  /**\n   * Returns the StudyInstanceUID of the current instance. This method is basically a shorthand the full \"getTagValue\" method call.\n   */\n  getStudyInstanceUID() {\n    return this.getTagValue('StudyInstanceUID', null);\n  }\n\n  /**\n   * Returns the SeriesInstanceUID of the current instance. This method is basically a shorthand the full \"getTagValue\" method call.\n   */\n  getSeriesInstanceUID() {\n    return this.getTagValue('SeriesInstanceUID', null);\n  }\n\n  /**\n   * Returns the SOPInstanceUID of the current instance.\n   */\n  getSOPInstanceUID() {\n    return this.getTagValue('SOPInstanceUID', null);\n  }\n\n  // @TODO: Improve this... (E.g.: blob data)\n  getStringValue(tagOrProperty, index, defaultValue) {\n    let value = this.getTagValue(tagOrProperty, defaultValue);\n\n    if (typeof value !== STRING && typeof value !== UNDEFINED) {\n      value = value.toString();\n    }\n\n    return InstanceMetadata.getIndexedValue(value, index, defaultValue);\n  }\n\n  // @TODO: Improve this... (E.g.: blob data)\n  getFloatValue(tagOrProperty, index, defaultValue) {\n    let value = this.getTagValue(tagOrProperty, defaultValue);\n    value = InstanceMetadata.getIndexedValue(value, index, defaultValue);\n\n    if (value instanceof Array) {\n      value.forEach((val, idx) => {\n        value[idx] = parseFloat(val);\n      });\n\n      return value;\n    }\n\n    return typeof value === STRING ? parseFloat(value) : value;\n  }\n\n  // @TODO: Improve this... (E.g.: blob data)\n  getIntValue(tagOrProperty, index, defaultValue) {\n    let value = this.getTagValue(tagOrProperty, defaultValue);\n    value = InstanceMetadata.getIndexedValue(value, index, defaultValue);\n\n    if (value instanceof Array) {\n      value.forEach((val, idx) => {\n        value[idx] = parseFloat(val);\n      });\n\n      return value;\n    }\n\n    return typeof value === STRING ? parseInt(value) : value;\n  }\n\n  /**\n   * This function should be overriden by specialized classes in order to allow client libraries or viewers to take advantage of the Study Metadata API.\n   */\n  getTagValue(tagOrProperty, defaultValue) {\n    /**\n     * Please override this method on a specialized class.\n     */\n    throw new OHIFError(\n      'InstanceMetadata::getTagValue is not overriden. Please, override it in a specialized class. See OHIFInstanceMetadata for example'\n    );\n  }\n\n  /**\n   * Compares the current instance with another one.\n   * @param {InstanceMetadata} instance An instance of the InstanceMetadata class.\n   * @returns {boolean} Returns true if both instances refer to the same instance.\n   */\n  equals(instance) {\n    const self = this;\n    return (\n      instance === self ||\n      (instance instanceof InstanceMetadata &&\n        instance.getSOPInstanceUID() === self.getSOPInstanceUID())\n    );\n  }\n\n  /**\n   * Check if the tagOrProperty exists\n   * @param  {String} tagOrProperty tag or property be checked\n   * @return {Boolean}   True if the tag or property exists or false if doesn't\n   */\n  tagExists(tagOrProperty) {\n    /**\n     * Please override this method\n     */\n    throw new OHIFError(\n      'InstanceMetadata::tagExists is not overriden. Please, override it in a specialized class. See OHIFInstanceMetadata for example'\n    );\n  }\n\n  /**\n   * Get custom image id of a sop instance\n   * @return {Any}          sop instance image id\n   */\n  getImageId(frame) {\n    /**\n     * Please override this method\n     */\n    throw new OHIFError(\n      'InstanceMetadata::getImageId is not overriden. Please, override it in a specialized class. See OHIFInstanceMetadata for example'\n    );\n  }\n\n  /**\n   * Static Methods\n   */\n\n  /**\n   * Get an value based that can be index based. This function is called by all getters. See above functions.\n   *     - If value is a String and has indexes:\n   *         - If undefined index: returns an array of the split values.\n   *         - If defined index:\n   *             - If invalid: returns defaultValue\n   *             - If valid: returns the indexed value\n   *      - If value is not a String, returns default value.\n   */\n  static getIndexedValue(value, index, defaultValue) {\n    let result = defaultValue;\n\n    if (typeof value === STRING) {\n      const hasIndexValues = value.indexOf('\\\\') !== -1;\n\n      result = value;\n\n      if (hasIndexValues) {\n        const splitValues = value.split('\\\\');\n        if (Metadata.isValidIndex(index)) {\n          const indexedValue = splitValues[index];\n\n          result = typeof indexedValue !== STRING ? defaultValue : indexedValue;\n        } else {\n          result = splitValues;\n        }\n      }\n    }\n\n    return result;\n  }\n}\n","import { Metadata } from './Metadata';\nimport { InstanceMetadata } from './InstanceMetadata';\n\nexport class SeriesMetadata extends Metadata {\n  constructor(data, uid) {\n    super(data, uid);\n    // Initialize Private Properties\n    Object.defineProperties(this, {\n      _seriesInstanceUID: {\n        configurable: true, // configurable so that it can be redefined in sub-classes...\n        enumerable: false,\n        writable: true,\n        value: null,\n      },\n      _instances: {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: [],\n      },\n      _firstInstance: {\n        configurable: false,\n        enumerable: false,\n        writable: true,\n        value: null,\n      },\n    });\n    // Initialize Public Properties\n    this._definePublicProperties();\n  }\n\n  /**\n   * Private Methods\n   */\n\n  /**\n   * Define Public Properties\n   * This method should only be called during initialization (inside the class constructor)\n   */\n  _definePublicProperties() {\n    /**\n     * Property: this.seriesInstanceUID\n     * Same as this.getSeriesInstanceUID()\n     * It's specially useful in contexts where a method call is not suitable like in search criteria. For example:\n     * seriesCollection.findBy({\n     *   seriesInstanceUID: '1.2.3.4.5.6.77777.8888888.99999999999.0'\n     * });\n     */\n    Object.defineProperty(this, 'seriesInstanceUID', {\n      configurable: false,\n      enumerable: false,\n      get: function() {\n        return this.getSeriesInstanceUID();\n      },\n    });\n  }\n\n  /**\n   * Public Methods\n   */\n\n  /**\n   * Returns the SeriesInstanceUID of the current series.\n   */\n  getSeriesInstanceUID() {\n    return this._seriesInstanceUID;\n  }\n\n  /**\n   * Append an instance to the current series.\n   * @param {InstanceMetadata} instance The instance to be added to the current series.\n   * @returns {boolean} Returns true on success, false otherwise.\n   */\n  addInstance(instance) {\n    let result = false;\n    if (\n      instance instanceof InstanceMetadata &&\n      this.getInstanceByUID(instance.getSOPInstanceUID()) === void 0\n    ) {\n      this._instances.push(instance);\n      result = true;\n    }\n    return result;\n  }\n\n  /**\n   * Get the first instance of the current series retaining a consistent result across multiple calls.\n   * @return {InstanceMetadata} An instance of the InstanceMetadata class or null if it does not exist.\n   */\n  getFirstInstance() {\n    let instance = this._firstInstance;\n    if (!(instance instanceof InstanceMetadata)) {\n      instance = null;\n      const found = this.getInstanceByIndex(0);\n      if (found instanceof InstanceMetadata) {\n        this._firstInstance = found;\n        instance = found;\n      }\n    }\n    return instance;\n  }\n\n  /**\n   * Find an instance by index.\n   * @param {number} index An integer representing a list index.\n   * @returns {InstanceMetadata} Returns a InstanceMetadata instance when found or undefined otherwise.\n   */\n  getInstanceByIndex(index) {\n    let found; // undefined by default...\n    if (Metadata.isValidIndex(index)) {\n      found = this._instances[index];\n    }\n    return found;\n  }\n\n  /**\n   * Find an instance by SOPInstanceUID.\n   * @param {string} uid An UID string.\n   * @returns {InstanceMetadata} Returns a InstanceMetadata instance when found or undefined otherwise.\n   */\n  getInstanceByUID(uid) {\n    let found; // undefined by default...\n    if (Metadata.isValidUID(uid)) {\n      found = this._instances.find(instance => {\n        return instance.getSOPInstanceUID() === uid;\n      });\n    }\n    return found;\n  }\n\n  /**\n   * Retrieve the number of instances within the current series.\n   * @returns {number} The number of instances in the current series.\n   */\n  getInstanceCount() {\n    return this._instances.length;\n  }\n\n  /**\n   * Invokes the supplied callback for each instance in the current series passing\n   * two arguments: instance (an InstanceMetadata instance) and index (the integer\n   * index of the instance within the current series)\n   * @param {function} callback The callback function which will be invoked for each instance in the series.\n   * @returns {undefined} Nothing is returned.\n   */\n  forEachInstance(callback) {\n    if (Metadata.isValidCallback(callback)) {\n      this._instances.forEach((instance, index) => {\n        callback.call(null, instance, index);\n      });\n    }\n  }\n\n  /**\n   * Find the index of an instance inside the series.\n   * @param {InstanceMetadata} instance An instance of the SeriesMetadata class.\n   * @returns {number} The index of the instance inside the series or -1 if not found.\n   */\n  indexOfInstance(instance) {\n    return this._instances.indexOf(instance);\n  }\n\n  /**\n   * Search the associated instances using the supplied callback as criteria. The callback is passed\n   * two arguments: instance (a InstanceMetadata instance) and index (the integer\n   * index of the instance within its series)\n   * @param {function} callback The callback function which will be invoked for each instance.\n   * @returns {InstanceMetadata|undefined} If an instance is found based on callback criteria it\n   *                                     returns a InstanceMetadata. \"undefined\" is returned otherwise\n   */\n  findInstance(callback) {\n    if (Metadata.isValidCallback(callback)) {\n      return this._instances.find((instance, index) => {\n        return callback.call(null, instance, index);\n      });\n    }\n  }\n\n  /**\n   * Compares the current series with another one.\n   * @param {SeriesMetadata} series An instance of the SeriesMetadata class.\n   * @returns {boolean} Returns true if both instances refer to the same series.\n   */\n  equals(series) {\n    const self = this;\n    return (\n      series === self ||\n      (series instanceof SeriesMetadata &&\n        series.getSeriesInstanceUID() === self.getSeriesInstanceUID())\n    );\n  }\n}\n","import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Transition, {\n  ENTERED,\n  ENTERING,\n} from 'react-transition-group/Transition';\n\nconst propTypes = {\n  /**\n   * Show the component; triggers the fade in or fade out animation\n   */\n  in: PropTypes.bool,\n\n  /**\n   * Wait until the first \"enter\" transition to mount the component (add it to the DOM)\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * Unmount the component (remove it from the DOM) when it is faded out\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * Run the fade in animation when the component mounts, if it is initially\n   * shown\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Duration of the fade animation in milliseconds, to ensure that finishing\n   * callbacks are fired even if the original browser transition end events are\n   * canceled\n   */\n  timeout: PropTypes.number,\n\n  /**\n   * Callback fired before the component fades in\n   */\n  onEnter: PropTypes.func,\n  /**\n   * Callback fired after the component starts to fade in\n   */\n  onEntering: PropTypes.func,\n  /**\n   * Callback fired after the has component faded in\n   */\n  onEntered: PropTypes.func,\n  /**\n   * Callback fired before the component fades out\n   */\n  onExit: PropTypes.func,\n  /**\n   * Callback fired after the component starts to fade out\n   */\n  onExiting: PropTypes.func,\n  /**\n   * Callback fired after the component has faded out\n   */\n  onExited: PropTypes.func,\n};\n\nconst defaultProps = {\n  in: false,\n  timeout: 300,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n};\n\nconst fadeStyles = {\n  [ENTERING]: 'in',\n  [ENTERED]: 'in',\n};\n\nclass Fade extends React.Component {\n  render() {\n    const { className, children, ...props } = this.props;\n\n    return (\n      <Transition {...props}>\n        {(status, innerProps) =>\n          React.cloneElement(children, {\n            ...innerProps,\n            className: classNames(\n              'fade',\n              className,\n              children.props.className,\n              fadeStyles[status]\n            ),\n          })\n        }\n      </Transition>\n    );\n  }\n}\n\nFade.propTypes = propTypes;\nFade.defaultProps = defaultProps;\n\nexport default Fade;\n","import classNames from 'classnames';\nimport React, { cloneElement } from 'react';\nimport PropTypes from 'prop-types';\nimport { Overlay as BaseOverlay } from 'react-overlays';\nimport elementType from 'prop-types-extra/lib/elementType';\nimport { withTranslation } from '../../contextProviders';\n\nimport Fade from './Fade';\n\nconst propTypes = {\n  /**\n   * Set the visibility of the Overlay\n   */\n  show: PropTypes.bool,\n  /**\n   * Specify whether the overlay should trigger onHide when the user clicks outside the overlay\n   */\n  rootClose: PropTypes.bool,\n  /**\n   * A callback invoked by the overlay when it wishes to be hidden. Required if\n   * `rootClose` is specified.\n   */\n  onHide: PropTypes.func,\n\n  /**\n   * Use animation\n   */\n  animation: PropTypes.oneOfType([PropTypes.bool, elementType]),\n\n  /**\n   * Callback fired before the Overlay transitions in\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired as the Overlay begins to transition in\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the Overlay finishes transitioning in\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired right before the Overlay transitions out\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired as the Overlay begins to transition out\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the Overlay finishes transitioning out\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * Sets the direction of the Overlay.\n   */\n  placement: PropTypes.oneOf(['top', 'right', 'bottom', 'left']),\n};\n\nconst defaultProps = {\n  animation: Fade,\n  rootClose: false,\n  show: false,\n  placement: 'right',\n};\n\nclass Overlay extends React.Component {\n  render() {\n    const { animation, children, ...props } = this.props;\n\n    const transition = animation === true ? Fade : animation || null;\n\n    let child;\n\n    if (!transition) {\n      child = cloneElement(children, {\n        className: classNames(children.props.className, 'in'),\n      });\n    } else {\n      child = children;\n    }\n\n    return (\n      <BaseOverlay {...props} transition={transition}>\n        {child}\n      </BaseOverlay>\n    );\n  }\n}\n\nOverlay.propTypes = propTypes;\nOverlay.defaultProps = defaultProps;\n\nconst connectedComponent = withTranslation()(Overlay);\nexport { connectedComponent as Overlay };\nexport default connectedComponent;\n","/**\n * Safe chained function\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n *\n * @param {function} functions to chain\n * @returns {function|null}\n */\nfunction createChainedFunction(...funcs) {\n  return funcs\n    .filter(f => f != null)\n    .reduce((acc, f) => {\n      if (typeof f !== 'function') {\n        throw new Error(\n          'Invalid Argument Type, must only provide functions, undefined, or null.'\n        );\n      }\n\n      if (acc === null) {\n        return f;\n      }\n\n      return function chainedFunction(...args) {\n        acc.apply(this, args);\n        f.apply(this, args);\n      };\n    }, null);\n}\n\nexport default createChainedFunction;\n","import contains from 'dom-helpers/query/contains';\nimport React, { cloneElement } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport warning from 'warning';\n\nimport { Overlay } from './Overlay';\n\nimport createChainedFunction from './createChainedFunction';\n\n/**\n * Check if value one is inside or equal to the of value\n *\n * @param {string} one\n * @param {string|array} of\n * @returns {boolean}\n */\nfunction isOneOf(one, of) {\n  if (Array.isArray(of)) {\n    return of.indexOf(one) >= 0;\n  }\n  return one === of;\n}\n\nconst triggerType = PropTypes.oneOf(['click', 'hover', 'focus']);\n\nconst propTypes = {\n  /**\n   * Specify which action or actions trigger Overlay visibility\n   */\n  trigger: PropTypes.oneOfType([triggerType, PropTypes.arrayOf(triggerType)]),\n\n  /**\n   * A millisecond delay amount to show and hide the Overlay once triggered\n   */\n  delay: PropTypes.number,\n  /**\n   * A millisecond delay amount before showing the Overlay once triggered.\n   */\n  delayShow: PropTypes.number,\n  /**\n   * A millisecond delay amount before hiding the Overlay once triggered.\n   */\n  delayHide: PropTypes.number,\n\n  // FIXME: This should be `defaultShow`.\n  /**\n   * The initial visibility state of the Overlay. For more nuanced visibility\n   * control, consider using the Overlay component directly.\n   */\n  defaultOverlayShown: PropTypes.bool,\n\n  /**\n   * An element or text to overlay next to the target.\n   */\n  overlay: PropTypes.node.isRequired,\n\n  /**\n   * A function to be called once the hide is triggered\n   */\n  handleHide: PropTypes.func,\n\n  /**\n   * @private\n   */\n  onBlur: PropTypes.func,\n  /**\n   * @private\n   */\n  onClick: PropTypes.func,\n  /**\n   * @private\n   */\n  onFocus: PropTypes.func,\n  /**\n   * @private\n   */\n  onMouseOut: PropTypes.func,\n  /**\n   * @private\n   */\n  onMouseOver: PropTypes.func,\n\n  // Overridden props from `<Overlay>`.\n  /**\n   * @private\n   */\n  target: PropTypes.oneOf([null]),\n  /**\n   * @private\n   */\n  onHide: PropTypes.oneOf([null]),\n  /**\n   * @private\n   */\n  show: PropTypes.oneOf([null]),\n};\n\nconst defaultProps = {\n  defaultOverlayShown: false,\n  trigger: ['hover', 'focus'],\n};\n\nclass OverlayTrigger extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleToggle = this.handleToggle.bind(this);\n    this.handleDelayedShow = this.handleDelayedShow.bind(this);\n    this.handleDelayedHide = this.handleDelayedHide.bind(this);\n    this.handleHide = createChainedFunction(\n      this.handleHide.bind(this),\n      props.handleHide\n    );\n\n    this.handleMouseOver = e =>\n      this.handleMouseOverOut(this.handleDelayedShow, e, 'fromElement');\n    this.handleMouseOut = e =>\n      this.handleMouseOverOut(this.handleDelayedHide, e, 'toElement');\n\n    this._mountNode = null;\n\n    this.state = {\n      show: props.defaultOverlayShown,\n    };\n  }\n\n  componentDidMount() {\n    this._mountNode = document.createElement('div');\n    this.renderOverlay();\n  }\n\n  componentDidUpdate() {\n    this.renderOverlay();\n  }\n\n  componentWillUnmount() {\n    ReactDOM.unmountComponentAtNode(this._mountNode);\n    this._mountNode = null;\n\n    clearTimeout(this._hoverShowDelay);\n    clearTimeout(this._hoverHideDelay);\n  }\n\n  handleDelayedHide() {\n    if (this._hoverShowDelay != null) {\n      clearTimeout(this._hoverShowDelay);\n      this._hoverShowDelay = null;\n      return;\n    }\n\n    if (!this.state.show || this._hoverHideDelay != null) {\n      return;\n    }\n\n    const delay =\n      this.props.delayHide != null ? this.props.delayHide : this.props.delay;\n\n    if (!delay) {\n      this.hide();\n      return;\n    }\n\n    this._hoverHideDelay = setTimeout(() => {\n      this._hoverHideDelay = null;\n      this.hide();\n    }, delay);\n  }\n\n  handleDelayedShow() {\n    if (this._hoverHideDelay != null) {\n      clearTimeout(this._hoverHideDelay);\n      this._hoverHideDelay = null;\n      return;\n    }\n\n    if (this.state.show || this._hoverShowDelay != null) {\n      return;\n    }\n\n    const delay =\n      this.props.delayShow != null ? this.props.delayShow : this.props.delay;\n\n    if (!delay) {\n      this.show();\n      return;\n    }\n\n    this._hoverShowDelay = setTimeout(() => {\n      this._hoverShowDelay = null;\n      this.show();\n    }, delay);\n  }\n\n  handleHide() {\n    this.hide();\n  }\n\n  // Simple implementation of mouseEnter and mouseLeave.\n  // React's built version is broken: https://github.com/facebook/react/issues/4251\n  // for cases when the trigger is disabled and mouseOut/Over can cause flicker\n  // moving from one child element to another.\n  handleMouseOverOut(handler, e, relatedNative) {\n    const target = e.currentTarget;\n    const related = e.relatedTarget || e.nativeEvent[relatedNative];\n\n    if ((!related || related !== target) && !contains(target, related)) {\n      handler(e);\n    }\n  }\n\n  handleToggle() {\n    if (this.state.show) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  hide() {\n    this.setState({ show: false });\n  }\n\n  makeOverlay(overlay, props) {\n    return (\n      <Overlay\n        {...props}\n        show={this.state.show}\n        onHide={this.handleHide}\n        target={this}\n      >\n        {overlay}\n      </Overlay>\n    );\n  }\n\n  show() {\n    this.setState({ show: true });\n  }\n\n  renderOverlay() {\n    ReactDOM.unstable_renderSubtreeIntoContainer(\n      this,\n      this._overlay,\n      this._mountNode\n    );\n  }\n\n  render() {\n    const {\n      trigger,\n      overlay,\n      children,\n      onBlur,\n      onClick,\n      onFocus,\n      onMouseOut,\n      onMouseOver,\n      ...props\n    } = this.props;\n\n    delete props.delay;\n    delete props.delayShow;\n    delete props.delayHide;\n    delete props.defaultOverlayShown;\n\n    const child = React.Children.only(children);\n    const childProps = child.props;\n    const triggerProps = {};\n\n    if (this.state.show) {\n      triggerProps['aria-describedby'] = overlay.props.id;\n    }\n\n    // FIXME: The logic here for passing through handlers on this component is\n    // inconsistent. We shouldn't be passing any of these props through.\n\n    triggerProps.onClick = createChainedFunction(childProps.onClick, onClick);\n\n    if (isOneOf('click', trigger)) {\n      triggerProps.onClick = createChainedFunction(\n        triggerProps.onClick,\n        this.handleToggle\n      );\n    }\n\n    if (isOneOf('hover', trigger)) {\n      warning(\n        !(trigger === 'hover'),\n        '[react-bootstrap] Specifying only the `\"hover\"` trigger limits the ' +\n          'visibility of the overlay to just mouse users. Consider also ' +\n          'including the `\"focus\"` trigger so that touch and keyboard only ' +\n          'users can see the overlay as well.'\n      );\n\n      triggerProps.onMouseOver = createChainedFunction(\n        childProps.onMouseOver,\n        onMouseOver,\n        this.handleMouseOver\n      );\n      triggerProps.onMouseOut = createChainedFunction(\n        childProps.onMouseOut,\n        onMouseOut,\n        this.handleMouseOut\n      );\n    }\n\n    if (isOneOf('focus', trigger)) {\n      triggerProps.onFocus = createChainedFunction(\n        childProps.onFocus,\n        onFocus,\n        this.handleDelayedShow\n      );\n      triggerProps.onBlur = createChainedFunction(\n        childProps.onBlur,\n        onBlur,\n        this.handleDelayedHide\n      );\n    }\n\n    this._overlay = this.makeOverlay(overlay, props);\n\n    return cloneElement(child, triggerProps);\n  }\n}\n\nOverlayTrigger.propTypes = propTypes;\nOverlayTrigger.defaultProps = defaultProps;\n\nexport { OverlayTrigger };\n","export { Overlay } from './Overlay.js';\nexport { OverlayTrigger } from './OverlayTrigger.js';\n","import React, { useContext } from 'react';\nimport { useSelector } from 'react-redux';\nimport { getActiveContexts } from '../store/layout/selectors.js';\n\nlet AppContext = React.createContext({});\n\nexport const CONTEXTS = {\n  CORNERSTONE: 'ACTIVE_VIEWPORT::CORNERSTONE',\n  VTK: 'ACTIVE_VIEWPORT::VTK'\n};\n\nexport const useAppContext = () => useContext(AppContext);\n\nexport const AppProvider = ({ children, config }) => {\n  const activeContexts = useSelector(state => getActiveContexts(state));\n\n  return (\n    <AppContext.Provider value={{ appConfig: config, activeContexts }}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport const withAppContext = Component => {\n  return function WrappedComponent(props) {\n    const { appConfig, activeContexts } = useAppContext();\n    return (\n      <Component {...props} appConfig={appConfig} activeContexts={activeContexts} />\n    );\n  };\n};\n\nexport default AppContext;\n","import './Tooltip.styl';\n\nimport classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst propTypes = {\n  /** Sets the direction the Tooltip is positioned towards. */\n  placement: PropTypes.oneOf(['top', 'right', 'bottom', 'left']),\n\n  /** The \"top\" position value for the Tooltip. */\n  positionTop: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /** The \"left\" position value for the Tooltip. */\n  positionLeft: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** The \"top\" position value for the Tooltip arrow. */\n  arrowOffsetTop: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /** The \"left\" position value for the Tooltip arrow. */\n  arrowOffsetLeft: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n};\n\nconst defaultProps = {\n  placement: 'right',\n};\n\nclass Tooltip extends React.Component {\n  render() {\n    const {\n      placement,\n      positionTop,\n      positionLeft,\n      arrowOffsetTop,\n      arrowOffsetLeft,\n      className,\n      style,\n      children,\n    } = this.props;\n\n    const outerStyle = {\n      top: positionTop,\n      left: positionLeft,\n      ...style,\n    };\n\n    const arrowStyle = {\n      top: arrowOffsetTop,\n      left: arrowOffsetLeft,\n    };\n\n    return (\n      <div\n        role=\"tooltip\"\n        className={classNames(className, 'tooltip', placement)}\n        style={outerStyle}\n      >\n        <div className=\"tooltip-arrow\" style={arrowStyle} />\n        <div className=\"tooltip-inner\">{children}</div>\n      </div>\n    );\n  }\n}\n\nTooltip.propTypes = propTypes;\nTooltip.defaultProps = defaultProps;\n\nexport { Tooltip };\n","export { Tooltip } from './Tooltip.js';\n","import { api } from 'dicomweb-client';\nimport DICOMWeb from '../../DICOMWeb';\nimport str2ab from '../str2ab';\n\nimport errorHandler from '../../errorHandler';\nimport getXHRRetryRequestHook from '../xhrRetryRequestHook';\n\nexport default async function fetchPaletteColorLookupTableData(\n  instance,\n  server\n) {\n  const {\n    PaletteColorLookupTableUID,\n    RedPaletteColorLookupTableDescriptor,\n    GreenPaletteColorLookupTableDescriptor,\n    BluePaletteColorLookupTableDescriptor,\n    RedPaletteColorLookupTableData,\n    GreenPaletteColorLookupTableData,\n    BluePaletteColorLookupTableData,\n  } = instance;\n\n  return new Promise((resolve, reject) => {\n    let entry;\n    if (_paletteColorCache.isValidUID(PaletteColorLookupTableUID)) {\n      entry = _paletteColorCache.get(PaletteColorLookupTableUID);\n\n      if (entry) {\n        return resolve(entry);\n      }\n    }\n\n    // no entry in cache... Fetch remote data.\n    const promises = [\n      _getPaletteColor(\n        server,\n        RedPaletteColorLookupTableData,\n        RedPaletteColorLookupTableDescriptor\n      ),\n      _getPaletteColor(\n        server,\n        GreenPaletteColorLookupTableData,\n        GreenPaletteColorLookupTableDescriptor\n      ),\n      _getPaletteColor(\n        server,\n        BluePaletteColorLookupTableData,\n        BluePaletteColorLookupTableDescriptor\n      ),\n    ];\n\n    Promise.all(promises).then(\n      ([\n        RedPaletteColorLookupTableData,\n        GreenPaletteColorLookupTableData,\n        BluePaletteColorLookupTableData,\n      ]) => {\n        // when PaletteColorLookupTableUID is present, the entry can be cached...\n        _paletteColorCache.add({\n          RedPaletteColorLookupTableData,\n          GreenPaletteColorLookupTableData,\n          BluePaletteColorLookupTableData,\n          PaletteColorLookupTableUID,\n        });\n\n        instance.RedPaletteColorLookupTableData = RedPaletteColorLookupTableData;\n        instance.GreenPaletteColorLookupTableData = GreenPaletteColorLookupTableData;\n        instance.BluePaletteColorLookupTableData = BluePaletteColorLookupTableData;\n\n        resolve();\n      }\n    );\n  });\n}\n\n/**\n * Simple cache schema for retrieved color palettes.\n */\nconst _paletteColorCache = {\n  count: 0,\n  maxAge: 24 * 60 * 60 * 1000, // 24h cache?\n  entries: {},\n  isValidUID: function(PaletteColorLookupTableUID) {\n    return (\n      typeof PaletteColorLookupTableUID === 'string' &&\n      PaletteColorLookupTableUID.length > 0\n    );\n  },\n  get: function(PaletteColorLookupTableUID) {\n    let entry = null;\n    if (this.entries.hasOwnProperty(PaletteColorLookupTableUID)) {\n      entry = this.entries[PaletteColorLookupTableUID];\n      // check how the entry is...\n      if (Date.now() - entry.time > this.maxAge) {\n        // entry is too old... remove entry.\n        delete this.entries[PaletteColorLookupTableUID];\n        this.count--;\n        entry = null;\n      }\n    }\n    return entry;\n  },\n  add: function(entry) {\n    if (this.isValidUID(entry.uid)) {\n      let PaletteColorLookupTableUID = entry.uid;\n      if (this.entries.hasOwnProperty(PaletteColorLookupTableUID) !== true) {\n        this.count++; // increment cache entry count...\n      }\n      entry.time = Date.now();\n      this.entries[PaletteColorLookupTableUID] = entry;\n      // @TODO: Add logic to get rid of old entries and reduce memory usage...\n    }\n  },\n};\n\nfunction _getPaletteColor(server, paletteColorLookupTableData, lutDescriptor) {\n  const numLutEntries = lutDescriptor[0] ? lutDescriptor[0] : 65536;\n  const bits = lutDescriptor[2];\n\n  const arrayBufferToPaletteColorLUT = arraybuffer => {\n    const byteArray = bits === 16 ?\n      new Uint16Array(arraybuffer) :\n      new Uint8Array(arraybuffer);\n    const lut = [];\n\n    for (let i = 0; i < numLutEntries; i++) {\n      lut[i] = byteArray[i];\n    }\n\n    return lut;\n  };\n\n  if (paletteColorLookupTableData.BulkDataURI) {\n    let uri = paletteColorLookupTableData.BulkDataURI;\n\n    // TODO: Workaround for dcm4chee behind SSL-terminating proxy returning\n    // incorrect bulk data URIs\n    if (server.wadoRoot.indexOf('https') === 0 && !uri.includes('https')) {\n      uri = uri.replace('http', 'https');\n    }\n\n    const config = {\n      url: server.wadoRoot, //BulkDataURI is absolute, so this isn't used\n      headers: DICOMWeb.getAuthorizationHeader(server),\n      errorInterceptor: errorHandler.getHTTPErrorHandler(),\n      requestHooks: [getXHRRetryRequestHook()],\n    };\n    const dicomWeb = new api.DICOMwebClient(config);\n    const options = {\n      BulkDataURI: uri,\n    };\n\n    return dicomWeb\n      .retrieveBulkData(options)\n      .then(result => result[0])\n      .then(arrayBufferToPaletteColorLUT);\n  } else if (paletteColorLookupTableData.InlineBinary) {\n    const inlineBinaryData = atob(paletteColorLookupTableData.InlineBinary);\n    const arraybuffer = str2ab(inlineBinaryData);\n\n    return new Promise(resolve => {\n      resolve(arrayBufferToPaletteColorLUT(arraybuffer));\n    });\n  } else {\n    return Promise.resolve(\n      arrayBufferToPaletteColorLUT(paletteColorLookupTableData)\n    );\n  }\n}\n","export default function unpackOverlay(arrayBuffer) {\n  const bitArray = new Uint8Array(arrayBuffer);\n  const byteArray = new Uint8Array(8 * bitArray.length);\n\n  for (let byteIndex = 0; byteIndex < byteArray.length; byteIndex++) {\n    const bitIndex = byteIndex % 8;\n    const bitByteIndex = Math.floor(byteIndex / 8);\n    byteArray[byteIndex] =\n      1 * ((bitArray[bitByteIndex] & (1 << bitIndex)) >> bitIndex);\n  }\n\n  return byteArray;\n}\n","import { api } from 'dicomweb-client';\nimport DICOMWeb from '../../DICOMWeb';\nimport str2ab from '../str2ab';\nimport unpackOverlay from './unpackOverlay';\n\nimport errorHandler from '../../errorHandler';\nimport getXHRRetryRequestHook from '../xhrRetryRequestHook';\n\nexport default async function fetchOverlayData(instance, server) {\n  const OverlayDataPromises = [];\n  const OverlayDataTags = [];\n\n  return new Promise((resolve, reject) => {\n    for (let overlayGroup = 0x00; overlayGroup <= 0x1e; overlayGroup += 0x02) {\n      let groupStr = `60${overlayGroup.toString(16)}`;\n\n      if (groupStr.length === 3) {\n        groupStr = `600${overlayGroup.toString(16)}`;\n      }\n\n      const OverlayDataTag = `${groupStr}3000`;\n\n      if (instance[OverlayDataTag] && instance[OverlayDataTag].InlineBinary) {\n        const inlineBinaryData = atob(instance[OverlayDataTag].InlineBinary);\n        const arraybuffer = str2ab(inlineBinaryData);\n\n        instance[OverlayDataTag] = unpackOverlay(arraybuffer);\n      } else if (\n        instance[OverlayDataTag] &&\n        instance[OverlayDataTag].BulkDataURI\n      ) {\n        OverlayDataPromises.push(\n          _getOverlayData(instance[OverlayDataTag], server)\n        );\n        OverlayDataTags.push(OverlayDataTag);\n      } else if (\n        instance[OverlayDataTag] &&\n        instance[OverlayDataTag] instanceof ArrayBuffer\n      ) {\n        instance[OverlayDataTag] = unpackOverlay(instance[OverlayDataTag]);\n      }\n    }\n\n    if (OverlayDataPromises.length) {\n      Promise.all(OverlayDataPromises).then(results => {\n        for (let i = 0; i < results.length; i++) {\n          instance[OverlayDataTags[i]] = results[i];\n        }\n\n        resolve();\n      });\n    } else {\n      resolve();\n    }\n  });\n}\n\nasync function _getOverlayData(tag, server) {\n  const { BulkDataURI } = tag;\n\n  let uri = BulkDataURI;\n\n  // TODO: Workaround for dcm4chee behind SSL-terminating proxy returning\n  // incorrect bulk data URIs\n  if (server.wadoRoot.indexOf('https') === 0 && !uri.includes('https')) {\n    uri = uri.replace('http', 'https');\n  }\n\n  const config = {\n    url: server.wadoRoot, //BulkDataURI is absolute, so this isn't used\n    headers: DICOMWeb.getAuthorizationHeader(server),\n    errorInterceptor: errorHandler.getHTTPErrorHandler(),\n    requestHooks: [getXHRRetryRequestHook()],\n  };\n  const dicomWeb = new api.DICOMwebClient(config);\n  const options = {\n    BulkDataURI: uri,\n  };\n\n  return dicomWeb\n    .retrieveBulkData(options)\n    .then(result => result[0])\n    .then(unpackOverlay);\n}\n","const validNumber = val => {\n  if (Array.isArray(val)) {\n    return val.map(v => (v !== undefined ? Number(v) : v));\n  } else {\n    return val !== undefined ? Number(val) : val;\n  }\n};\n\nexport default validNumber;\n","import dcmjs from 'dcmjs';\nimport queryString from 'query-string';\nimport dicomParser from 'dicom-parser';\nimport getPixelSpacingInformation from '../utils/metadataProvider/getPixelSpacingInformation';\nimport fetchPaletteColorLookupTableData from '../utils/metadataProvider/fetchPaletteColorLookupTableData';\nimport fetchOverlayData from '../utils/metadataProvider/fetchOverlayData';\nimport validNumber from '../utils/metadataProvider/validNumber';\n\nclass MetadataProvider {\n  constructor() {\n    // Define the main \"metadataLookup\" private property as an immutable property.\n    Object.defineProperty(this, 'studies', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: new Map(),\n    });\n    Object.defineProperty(this, 'imageIdToUIDs', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: new Map(),\n    });\n    this.datasets = {};\n  }\n\n  async addInstance(dicomJSONDatasetOrP10ArrayBuffer, options = {}) {\n    let dicomJSONDataset;\n\n    // If Arraybuffer, parse to DICOMJSON before naturalizing.\n    if (dicomJSONDatasetOrP10ArrayBuffer instanceof ArrayBuffer) {\n      const dicomData = DicomMessage.readFile(dicomJSONDatasetOrP10ArrayBuffer);\n\n      dicomJSONDataset = dicomData.dict;\n    } else {\n      dicomJSONDataset = dicomJSONDatasetOrP10ArrayBuffer;\n    }\n\n    // Check if dataset is already naturalized.\n\n    let naturalizedDataset;\n\n    if (dicomJSONDataset['SeriesInstanceUID'] === undefined) {\n      naturalizedDataset = dcmjs.data.DicomMetaDictionary.naturalizeDataset(\n        dicomJSONDataset\n      );\n    } else {\n      naturalizedDataset = dicomJSONDataset;\n    }\n\n    const {\n      StudyInstanceUID,\n      SeriesInstanceUID,\n      SOPInstanceUID,\n    } = naturalizedDataset;\n\n    this._getAndCacheStudyDataset(StudyInstanceUID, dicomJSONDataset);\n    const study = this._getAndCacheStudy(StudyInstanceUID);\n    const series = this._getAndCacheSeriesFromStudy(study, SeriesInstanceUID);\n    const instance = this._getAndCacheInstanceFromStudy(series, SOPInstanceUID);\n\n    Object.assign(instance, naturalizedDataset);\n\n    await this._checkBulkDataAndInlineBinaries(instance, options.server);\n\n    return instance;\n  }\n\n  addImageIdToUIDs(imageId, uids) {\n    // This method is a fallback for when you don't have WADO-URI or WADO-RS.\n    // You can add instances fetched by any method by calling addInstance, and hook an imageId to point at it here.\n    // An example would be dicom hosted at some random site.\n\n    this.imageIdToUIDs.set(imageId, uids);\n  }\n\n  _getAndCacheStudyDataset(StudyInstanceUID, dataset) {\n    if (!this.datasets[StudyInstanceUID]) {\n      this.datasets[StudyInstanceUID] = dataset;\n    }\n  }\n\n  getStudyDataset(StudyInstanceUID) {\n    return this.datasets[StudyInstanceUID];\n  }\n\n  _getAndCacheStudy(StudyInstanceUID) {\n    const studies = this.studies;\n\n    let study = studies.get(StudyInstanceUID);\n\n    if (!study) {\n      study = { series: new Map() };\n      studies.set(StudyInstanceUID, study);\n    }\n\n    return study;\n  }\n\n  _getAndCacheSeriesFromStudy(study, SeriesInstanceUID) {\n    let series = study.series.get(SeriesInstanceUID);\n\n    if (!series) {\n      series = { instances: new Map() };\n      study.series.set(SeriesInstanceUID, series);\n    }\n\n    return series;\n  }\n\n  _getAndCacheInstanceFromStudy(series, SOPInstanceUID) {\n    let instance = series.instances.get(SOPInstanceUID);\n\n    if (!instance) {\n      instance = {};\n      series.instances.set(SOPInstanceUID, instance);\n    }\n\n    return instance;\n  }\n\n  async _checkBulkDataAndInlineBinaries(instance, server) {\n    await fetchOverlayData(instance, server);\n\n    if (instance.PhotometricInterpretation === 'PALETTE COLOR') {\n      await fetchPaletteColorLookupTableData(instance, server);\n    }\n  }\n\n  _getInstance(imageId) {\n    const uids = this._getUIDsFromImageID(imageId);\n\n    if (!uids) {\n      return;\n    }\n\n    const { StudyInstanceUID, SeriesInstanceUID, SOPInstanceUID } = uids;\n\n    return this._getInstanceData(\n      StudyInstanceUID,\n      SeriesInstanceUID,\n      SOPInstanceUID\n    );\n  }\n\n  get(query, imageId, options = { fallback: false }) {\n    const instance = this._getInstance(imageId);\n\n    if (query === INSTANCE) {\n      return instance;\n    }\n\n    return this.getTagFromInstance(query, instance, options);\n  }\n\n  getTag(query, imageId, options) {\n    return this.get(query, imageId, options);\n  }\n\n  getInstance(imageId) {\n    return this.get(INSTANCE, imageId);\n  }\n\n  getTagFromInstance(\n    naturalizedTagOrWADOImageLoaderTag,\n    instance,\n    options = { fallback: false }\n  ) {\n    if (!instance) {\n      return;\n    }\n\n    // If its a naturalized dcmjs tag present on the instance, return.\n    if (instance[naturalizedTagOrWADOImageLoaderTag]) {\n      return instance[naturalizedTagOrWADOImageLoaderTag];\n    }\n\n    // Maybe its a legacy CornerstoneWADOImageLoader tag then:\n    return this._getCornerstoneWADOImageLoaderTag(\n      naturalizedTagOrWADOImageLoaderTag,\n      instance\n    );\n  }\n\n  _getCornerstoneWADOImageLoaderTag(wadoImageLoaderTag, instance) {\n    let metadata;\n\n    switch (wadoImageLoaderTag) {\n      case WADO_IMAGE_LOADER_TAGS.GENERAL_SERIES_MODULE:\n        const { SeriesDate, SeriesTime } = instance;\n\n        let seriesDate;\n        let seriesTime;\n\n        if (SeriesDate) {\n          seriesDate = dicomParser.parseDA(SeriesDate);\n        }\n\n        if (SeriesTime) {\n          seriesTime = dicomParser.parseTM(SeriesTime);\n        }\n\n        metadata = {\n          modality: instance.Modality,\n          seriesInstanceUID: instance.SeriesInstanceUID,\n          seriesNumber: instance.SeriesNumber,\n          studyInstanceUID: instance.StudyInstanceUID,\n          seriesDate,\n          seriesTime,\n        };\n        break;\n      case WADO_IMAGE_LOADER_TAGS.PATIENT_STUDY_MODULE:\n        metadata = {\n          patientAge: instance.PatientAge,\n          patientSize: instance.PatientSize,\n          patientWeight: instance.PatientWeight,\n        };\n        break;\n      case WADO_IMAGE_LOADER_TAGS.IMAGE_PLANE_MODULE:\n        const { ImageOrientationPatient } = instance;\n\n        // Fallback for DX images.\n        // TODO: We should use the rest of the results of this function\n        // to update the UI somehow\n        const { PixelSpacing } = getPixelSpacingInformation(instance);\n\n        let rowPixelSpacing;\n        let columnPixelSpacing;\n\n        let rowCosines;\n        let columnCosines;\n\n        if (PixelSpacing) {\n          rowPixelSpacing = validNumber(PixelSpacing[0]);\n          columnPixelSpacing = validNumber(PixelSpacing[1]);\n        }\n\n        if (ImageOrientationPatient) {\n          rowCosines = validNumber(ImageOrientationPatient.slice(0, 3));\n          columnCosines = validNumber(ImageOrientationPatient.slice(3, 6));\n        }\n\n        metadata = {\n          frameOfReferenceUID: instance.FrameOfReferenceUID,\n          rows: instance.Rows,\n          columns: instance.Columns,\n          imageOrientationPatient: validNumber(ImageOrientationPatient),\n          rowCosines,\n          columnCosines,\n          imagePositionPatient: validNumber(instance.ImagePositionPatient),\n          sliceThickness: validNumber(instance.SliceThickness),\n          sliceLocation: validNumber(instance.SliceLocation),\n          pixelSpacing: validNumber(PixelSpacing),\n          rowPixelSpacing,\n          columnPixelSpacing,\n        };\n        break;\n      case WADO_IMAGE_LOADER_TAGS.IMAGE_PIXEL_MODULE:\n        metadata = {\n          samplesPerPixel: instance.SamplesPerPixel,\n          photometricInterpretation: instance.PhotometricInterpretation,\n          rows: instance.Rows,\n          columns: instance.Columns,\n          bitsAllocated: instance.BitsAllocated,\n          bitsStored: instance.BitsStored,\n          highBit: instance.HighBit,\n          pixelRepresentation: instance.PixelRepresentation,\n          planarConfiguration: instance.PlanarConfiguration,\n          pixelAspectRatio: instance.PixelAspectRatio,\n          smallestPixelValue: instance.SmallestPixelValue,\n          largestPixelValue: instance.LargestPixelValue,\n          redPaletteColorLookupTableDescriptor:\n            instance.RedPaletteColorLookupTableDescriptor,\n          greenPaletteColorLookupTableDescriptor:\n            instance.GreenPaletteColorLookupTableDescriptor,\n          bluePaletteColorLookupTableDescriptor:\n            instance.BluePaletteColorLookupTableDescriptor,\n          redPaletteColorLookupTableData:\n            instance.RedPaletteColorLookupTableData,\n          greenPaletteColorLookupTableData:\n            instance.GreenPaletteColorLookupTableData,\n          bluePaletteColorLookupTableData:\n            instance.BluePaletteColorLookupTableData,\n        };\n\n        break;\n      case WADO_IMAGE_LOADER_TAGS.VOI_LUT_MODULE:\n        let { WindowCenter, WindowWidth } = instance;\n\n        const windowCenter = Array.isArray(WindowCenter)\n          ? WindowCenter\n          : [WindowCenter];\n        const windowWidth = Array.isArray(WindowWidth)\n          ? WindowWidth\n          : [WindowWidth];\n\n        metadata = {\n          windowCenter: validNumber(windowCenter),\n          windowWidth: validNumber(windowWidth),\n        };\n\n        break;\n      case WADO_IMAGE_LOADER_TAGS.MODALITY_LUT_MODULE:\n        const rescaleSlope = validNumber(instance.RescaleSlope);\n        const rescaleIntercept = validNumber(instance.RescaleIntercept);\n        metadata = {\n          rescaleIntercept,\n          rescaleSlope,\n          rescaleType: instance.RescaleType,\n        };\n        break;\n      case WADO_IMAGE_LOADER_TAGS.SOP_COMMON_MODULE:\n        metadata = {\n          sopClassUID: instance.SOPClassUID,\n          sopInstanceUID: instance.SOPInstanceUID,\n        };\n        break;\n      case WADO_IMAGE_LOADER_TAGS.PET_ISOTOPE_MODULE:\n        const { RadiopharmaceuticalInformationSequence } = instance;\n\n        if (RadiopharmaceuticalInformationSequence) {\n          const RadiopharmaceuticalInformation = Array.isArray(\n            RadiopharmaceuticalInformationSequence\n          )\n            ? RadiopharmaceuticalInformationSequence[0]\n            : RadiopharmaceuticalInformationSequence;\n\n          const {\n            RadiopharmaceuticalStartTime,\n            RadionuclideTotalDose,\n            RadionuclideHalfLife,\n          } = RadiopharmaceuticalInformation;\n\n          const radiopharmaceuticalInfo = {\n            radiopharmaceuticalStartTime: dicomParser.parseTM(\n              RadiopharmaceuticalStartTime\n            ),\n            radionuclideTotalDose: RadionuclideTotalDose,\n            radionuclideHalfLife: RadionuclideHalfLife,\n          };\n          metadata = {\n            radiopharmaceuticalInfo,\n          };\n        }\n\n        break;\n      case WADO_IMAGE_LOADER_TAGS.OVERLAY_PLANE_MODULE:\n        const overlays = [];\n\n        for (\n          let overlayGroup = 0x00;\n          overlayGroup <= 0x1e;\n          overlayGroup += 0x02\n        ) {\n          let groupStr = `60${overlayGroup.toString(16)}`;\n\n          if (groupStr.length === 3) {\n            groupStr = `600${overlayGroup.toString(16)}`;\n          }\n\n          const OverlayDataTag = `${groupStr}3000`;\n          const OverlayData = instance[OverlayDataTag];\n\n          if (!OverlayData) {\n            continue;\n          }\n\n          const OverlayRowsTag = `${groupStr}0010`;\n          const OverlayColumnsTag = `${groupStr}0011`;\n          const OverlayType = `${groupStr}0040`;\n          const OverlayOriginTag = `${groupStr}0050`;\n          const OverlayDescriptionTag = `${groupStr}0022`;\n          const OverlayLabelTag = `${groupStr}1500`;\n          const ROIAreaTag = `${groupStr}1301`;\n          const ROIMeanTag = `${groupStr}1302`;\n          const ROIStandardDeviationTag = `${groupStr}1303`;\n          const OverlayOrigin = instance[OverlayOriginTag];\n\n          const overlay = {\n            rows: instance[OverlayRowsTag],\n            columns: instance[OverlayColumnsTag],\n            type: instance[OverlayType],\n            x: OverlayOrigin[0],\n            y: OverlayOrigin[1],\n            pixelData: OverlayData,\n            description: instance[OverlayDescriptionTag],\n            label: instance[OverlayLabelTag],\n            roiArea: instance[ROIAreaTag],\n            roiMean: instance[ROIMeanTag],\n            roiStandardDeviation: instance[ROIStandardDeviationTag],\n          };\n\n          overlays.push(overlay);\n        }\n\n        metadata = {\n          overlays,\n        };\n\n        break;\n\n      case WADO_IMAGE_LOADER_TAGS.PATIENT_MODULE:\n        const { PatientName } = instance;\n\n        let patientName;\n        if (PatientName) {\n          patientName = PatientName.Alphabetic;\n        }\n\n        metadata = {\n          patientName,\n          patientId: instance.PatientID,\n        };\n\n        break;\n\n      case WADO_IMAGE_LOADER_TAGS.GENERAL_IMAGE_MODULE:\n        metadata = {\n          sopInstanceUid: instance.SOPInstanceUID,\n          instanceNumber: instance.InstanceNumber,\n          lossyImageCompression: instance.LossyImageCompression,\n          lossyImageCompressionRatio: instance.LossyImageCompressionRatio,\n          lossyImageCompressionMethod: instance.LossyImageCompressionMethod,\n        };\n\n        break;\n      case WADO_IMAGE_LOADER_TAGS.GENERAL_STUDY_MODULE:\n        metadata = {\n          studyDescription: instance.StudyDescription,\n          studyDate: instance.StudyDate,\n          studyTime: instance.StudyTime,\n          accessionNumber: instance.AccessionNumber,\n        };\n\n        break;\n      case WADO_IMAGE_LOADER_TAGS.CINE_MODULE:\n        metadata = {\n          frameTime: instance.FrameTime,\n        };\n\n        break;\n    }\n\n    return metadata;\n  }\n\n  _getInstanceData(StudyInstanceUID, SeriesInstanceUID, SOPInstanceUID) {\n    const study = this.studies.get(StudyInstanceUID);\n\n    if (!study) {\n      return;\n    }\n\n    const series = study.series.get(SeriesInstanceUID);\n\n    if (!series) {\n      return;\n    }\n\n    const instance = series.instances.get(SOPInstanceUID);\n\n    return instance;\n  }\n\n  _getUIDsFromImageID(imageId) {\n    if (imageId.includes('wadors:')) {\n      const strippedImageId = imageId.split('studies/')[1];\n      const splitImageId = strippedImageId.split('/');\n\n      return {\n        StudyInstanceUID: splitImageId[0], // Note: splitImageId[1] === 'series'\n        SeriesInstanceUID: splitImageId[2], // Note: splitImageId[3] === 'instances'\n        SOPInstanceUID: splitImageId[4],\n      };\n    }\n    if (imageId.includes('wado?requestType=WADO')) {\n      const qs = queryString.parse(imageId);\n\n      return {\n        StudyInstanceUID: qs.studyUID,\n        SeriesInstanceUID: qs.seriesUID,\n        SOPInstanceUID: qs.objectUID,\n      };\n    } else {\n      // Maybe its a non-standard imageId\n      return this.imageIdToUIDs.get(imageId);\n    }\n  }\n}\n\nconst metadataProvider = new MetadataProvider();\n\nexport default metadataProvider;\n\nconst WADO_IMAGE_LOADER_TAGS = {\n  // CornerstoneWADOImageLoader specific\n  GENERAL_SERIES_MODULE: 'generalSeriesModule',\n  PATIENT_STUDY_MODULE: 'patientStudyModule',\n  IMAGE_PLANE_MODULE: 'imagePlaneModule',\n  IMAGE_PIXEL_MODULE: 'imagePixelModule',\n  VOI_LUT_MODULE: 'voiLutModule',\n  MODALITY_LUT_MODULE: 'modalityLutModule',\n  SOP_COMMON_MODULE: 'sopCommonModule',\n  PET_ISOTOPE_MODULE: 'petIsotopeModule',\n  OVERLAY_PLANE_MODULE: 'overlayPlaneModule',\n\n  // react-cornerstone-viewport specifc\n  PATIENT_MODULE: 'patientModule',\n  GENERAL_IMAGE_MODULE: 'generalImageModule',\n  GENERAL_STUDY_MODULE: 'generalStudyModule',\n  CINE_MODULE: 'cineModule',\n};\n\nconst INSTANCE = 'instance';\n","import log from '../../log';\n\nexport default function getPixelSpacingInformation(instance) {\n  // See http://gdcm.sourceforge.net/wiki/index.php/Imager_Pixel_Spacing\n\n  // TODO: Add Ultrasound region spacing\n  // TODO: Add manual calibration\n\n  // TODO: Use ENUMS from dcmjs\n  const projectionRadiographSOPClassUIDs = [\n    '1.2.840.10008.5.1.4.1.1.1', //\tCR Image Storage\n    '1.2.840.10008.5.1.4.1.1.1.1', //\tDigital X-Ray Image Storage – for Presentation\n    '1.2.840.10008.5.1.4.1.1.1.1.1', //\tDigital X-Ray Image Storage – for Processing\n    '1.2.840.10008.5.1.4.1.1.1.2', //\tDigital Mammography X-Ray Image Storage – for Presentation\n    '1.2.840.10008.5.1.4.1.1.1.2.1', //\tDigital Mammography X-Ray Image Storage – for Processing\n    '1.2.840.10008.5.1.4.1.1.1.3', //\tDigital Intra – oral X-Ray Image Storage – for Presentation\n    '1.2.840.10008.5.1.4.1.1.1.3.1', //\tDigital Intra – oral X-Ray Image Storage – for Processing\n    '1.2.840.10008.5.1.4.1.1.12.1', //\tX-Ray Angiographic Image Storage\n    '1.2.840.10008.5.1.4.1.1.12.1.1', //\tEnhanced XA Image Storage\n    '1.2.840.10008.5.1.4.1.1.12.2', //\tX-Ray Radiofluoroscopic Image Storage\n    '1.2.840.10008.5.1.4.1.1.12.2.1', //\tEnhanced XRF Image Storage\n    '1.2.840.10008.5.1.4.1.1.12.3', // X-Ray Angiographic Bi-plane Image Storage\tRetired\n  ];\n\n  const {\n    PixelSpacing,\n    ImagerPixelSpacing,\n    SOPClassUID,\n    PixelSpacingCalibrationType,\n    PixelSpacingCalibrationDescription,\n    EstimatedRadiographicMagnificationFactor,\n    SequenceOfUltrasoundRegions,\n  } = instance;\n  const isProjection = projectionRadiographSOPClassUIDs.includes(SOPClassUID);\n\n  const TYPES = {\n    NOT_APPLICABLE: 'NOT_APPLICABLE',\n    UNKNOWN: 'UNKNOWN',\n    CALIBRATED: 'CALIBRATED',\n    DETECTOR: 'DETECTOR',\n  };\n\n  if (isProjection && !ImagerPixelSpacing) {\n    // If only Pixel Spacing is present, and this is a projection radiograph,\n    // PixelSpacing should be used, but the user should be informed that\n    // what it means is unknown\n    return {\n      PixelSpacing,\n      type: TYPES.UNKNOWN,\n      isProjection,\n    };\n  } else if (\n    PixelSpacing &&\n    ImagerPixelSpacing &&\n    PixelSpacing === ImagerPixelSpacing\n  ) {\n    // If Imager Pixel Spacing and Pixel Spacing are present and they have the same values,\n    // then the user should be informed that the measurements are at the detector plane\n    return {\n      PixelSpacing,\n      type: TYPES.DETECTOR,\n      isProjection,\n    };\n  } else if (\n    PixelSpacing &&\n    ImagerPixelSpacing &&\n    PixelSpacing !== ImagerPixelSpacing\n  ) {\n    // If Imager Pixel Spacing and Pixel Spacing are present and they have different values,\n    // then the user should be informed that these are \"calibrated\"\n    // (in some unknown manner if Pixel Spacing Calibration Type and/or\n    // Pixel Spacing Calibration Description are absent)\n    return {\n      PixelSpacing,\n      type: TYPES.CALIBRATED,\n      isProjection,\n      PixelSpacingCalibrationType,\n      PixelSpacingCalibrationDescription,\n    };\n  } else if (!PixelSpacing && ImagerPixelSpacing) {\n    let CorrectedImagerPixelSpacing = ImagerPixelSpacing;\n    if (EstimatedRadiographicMagnificationFactor) {\n      // Note that in IHE Mammo profile compliant displays, the value of Imager Pixel Spacing is required to be corrected by\n      // Estimated Radiographic Magnification Factor and the user informed of that.\n      // TODO: should this correction be done before all of this logic?\n      CorrectedImagerPixelSpacing = ImagerPixelSpacing.map(\n        pixelSpacing => pixelSpacing / EstimatedRadiographicMagnificationFactor\n      );\n    } else {\n      log.info(\n        'EstimatedRadiographicMagnificationFactor was not present. Unable to correct ImagerPixelSpacing.'\n      );\n    }\n\n    return {\n      PixelSpacing: CorrectedImagerPixelSpacing,\n      isProjection,\n    };\n  } else if (\n    SequenceOfUltrasoundRegions &&\n    typeof SequenceOfUltrasoundRegions === 'object'\n  ) {\n    const { PhysicalDeltaX, PhysicalDeltaY } = SequenceOfUltrasoundRegions;\n    const USPixelSpacing = [PhysicalDeltaX * 10, PhysicalDeltaY * 10];\n\n    return {\n      PixelSpacing: USPixelSpacing,\n    };\n  } else if (\n    SequenceOfUltrasoundRegions &&\n    Array.isArray(SequenceOfUltrasoundRegions) &&\n    SequenceOfUltrasoundRegions.length > 1\n  ) {\n    log.warn(\n      'Sequence of Ultrasound Regions > one entry. This is not yet implemented, all measurements will be shown in pixels.'\n    );\n  } else if (isProjection === false && !ImagerPixelSpacing) {\n    // If only Pixel Spacing is present, and this is not a projection radiograph,\n    // we can stop here\n    return {\n      PixelSpacing,\n      type: TYPES.NOT_APPLICABLE,\n      isProjection,\n    };\n  }\n\n    log.info(\n    'Unknown combination of PixelSpacing and ImagerPixelSpacing identified. Unable to determine spacing.'\n  );\n}\n","/**\n * adds a pause and unpause method to Mousetrap\n * this allows you to enable or disable keyboard shortcuts\n * without having to reset Mousetrap and rebind everything\n *\n * https://github.com/ccampbell/mousetrap/blob/master/plugins/pause/mousetrap-pause.js\n */\nexport default function(Mousetrap) {\n  var _originalStopCallback = Mousetrap.prototype.stopCallback;\n\n  Mousetrap.prototype.stopCallback = function(e, element, combo) {\n    var self = this;\n\n    if (self.paused) {\n      return true;\n    }\n\n    return _originalStopCallback.call(self, e, element, combo);\n  };\n\n  Mousetrap.prototype.pause = function() {\n    var self = this;\n    self.paused = true;\n  };\n\n  Mousetrap.prototype.unpause = function() {\n    var self = this;\n    self.paused = false;\n  };\n\n  Mousetrap.init();\n}\n","/**\n * This extension allows you to record a sequence using Mousetrap.\n * {@link https://craig.is/killing/mice}\n *\n * @author Dan Tao <daniel.tao@gmail.com>\n */\nexport default function(Mousetrap) {\n  /**\n   * the sequence currently being recorded\n   *\n   * @type {Array}\n   */\n  var _recordedSequence = [],\n    /**\n     * a callback to invoke after recording a sequence\n     *\n     * @type {Function|null}\n     */\n    _recordedSequenceCallback = null,\n    /**\n     * a list of all of the keys currently held down\n     *\n     * @type {Array}\n     */\n    _currentRecordedKeys = [],\n    /**\n     * temporary state where we remember if we've already captured a\n     * character key in the current combo\n     *\n     * @type {boolean}\n     */\n    _recordedCharacterKey = false,\n    /**\n     * a handle for the timer of the current recording\n     *\n     * @type {null|number}\n     */\n    _recordTimer = null,\n    /**\n     * the original handleKey method to override when Mousetrap.record() is\n     * called\n     *\n     * @type {Function}\n     */\n    _origHandleKey = Mousetrap.prototype.handleKey;\n\n  /**\n   * handles a character key event\n   *\n   * @param {string} character\n   * @param {Array} modifiers\n   * @param {Event} e\n   * @returns void\n   */\n  function _handleKey(character, modifiers, e) {\n    var self = this;\n\n    if (!self.recording) {\n      _origHandleKey.apply(self, arguments);\n      return;\n    }\n\n    // remember this character if we're currently recording a sequence\n    if (e.type == 'keydown') {\n      if (character.length === 1 && _recordedCharacterKey) {\n        _recordCurrentCombo();\n      }\n\n      for (let i = 0; i < modifiers.length; ++i) {\n        _recordKey(modifiers[i]);\n      }\n      _recordKey(character);\n\n      // once a key is released, all keys that were held down at the time\n      // count as a keypress\n    } else if (e.type == 'keyup' && _currentRecordedKeys.length > 0) {\n      _recordCurrentCombo();\n    }\n  }\n\n  /**\n   * marks a character key as held down while recording a sequence\n   *\n   * @param {string} key\n   * @returns void\n   */\n  function _recordKey(key) {\n    // one-off implementation of Array.indexOf, since IE6-9 don't support it\n    for (let i = 0; i < _currentRecordedKeys.length; ++i) {\n      if (_currentRecordedKeys[i] === key) {\n        return;\n      }\n    }\n\n    _currentRecordedKeys.push(key);\n\n    if (key.length === 1) {\n      _recordedCharacterKey = true;\n    }\n  }\n\n  /**\n   * marks whatever key combination that's been recorded so far as finished\n   * and gets ready for the next combo\n   *\n   * @returns void\n   */\n  function _recordCurrentCombo() {\n    _recordedSequence.push(_currentRecordedKeys);\n    _currentRecordedKeys = [];\n    _recordedCharacterKey = false;\n    _finishRecording();\n  }\n\n  /**\n   * ensures each combo in a sequence is in a predictable order and formats\n   * key combos to be '+'-delimited\n   *\n   * modifies the sequence in-place\n   *\n   * @param {Array} sequence\n   * @returns void\n   */\n  function _normalizeSequence(sequence) {\n    for (let i = 0; i < sequence.length; ++i) {\n      sequence[i].sort(function(x, y) {\n        // modifier keys always come first, in alphabetical order\n        if (x.length > 1 && y.length === 1) {\n          return -1;\n        } else if (x.length === 1 && y.length > 1) {\n          return 1;\n        }\n\n        // character keys come next (list should contain no duplicates,\n        // so no need for equality check)\n        return x > y ? 1 : -1;\n      });\n\n      sequence[i] = sequence[i].join('+');\n    }\n  }\n\n  /**\n   * finishes the current recording, passes the recorded sequence to the stored\n   * callback, and sets Mousetrap.handleKey back to its original function\n   *\n   * @returns void\n   */\n  function _finishRecording() {\n    if (_recordedSequenceCallback) {\n      _normalizeSequence(_recordedSequence);\n      _recordedSequenceCallback(_recordedSequence);\n    }\n\n    // reset all recorded state\n    _recordedSequence = [];\n    _recordedSequenceCallback = null;\n    _currentRecordedKeys = [];\n  }\n\n  /**\n   * called to set a 1 second timeout on the current recording\n   *\n   * this is so after each key press in the sequence the recording will wait for\n   * 1 more second before executing the callback\n   *\n   * @returns void\n   */\n  function _restartRecordTimer() {\n    clearTimeout(_recordTimer);\n    _recordTimer = setTimeout(_finishRecording, 1000);\n  }\n\n  /**\n   * records the next sequence and passes it to a callback once it's\n   * completed\n   *\n   * @param {Function} callback\n   * @returns void\n   */\n  Mousetrap.prototype.record = function(callback) {\n    var self = this;\n    self.recording = true;\n    _recordedSequenceCallback = function() {\n      self.recording = false;\n      callback.apply(self, arguments);\n    };\n  };\n\n  /**\n   * stop recording\n   *\n   * @param {Function} callback\n   * @returns void\n   */\n  Mousetrap.prototype.stopRecord = function() {\n    var self = this;\n    self.recording = false;\n  };\n\n  /**\n   * start recording\n   *\n   * @param {Function} callback\n   * @returns void\n   */\n  Mousetrap.prototype.startRecording = function() {\n    var self = this;\n    self.recording = true;\n  };\n\n  Mousetrap.prototype.handleKey = function() {\n    var self = this;\n    _handleKey.apply(self, arguments);\n  };\n\n  Mousetrap.init();\n}\n","import Mousetrap from 'mousetrap';\nimport pausePlugin from './pausePlugin';\nimport recordPlugin from './recordPlugin';\n\nrecordPlugin(Mousetrap);\npausePlugin(Mousetrap);\n\nexport default Mousetrap;\n","const ReconstructionIssues = {\n  DATASET_4D: 'datasetis4D',\n  VARYING_IMAGESDIMENSIONS: 'imagesdimensionsvarying',\n  VARYING_IMAGESCOMPONENTS: 'imagescomponentsvarying',\n  VARYING_IMAGESORIENTATION: 'imagesorientationvarying',\n  MISSING_FRAMES: 'missingframes',\n  IRREGULAR_SPACING: 'irregularspacing',\n  MULTIFFRAMES: 'multiframe',\n};\n\nexport {ReconstructionIssues};\n","import { TypeSafeCollection } from '../classes/TypeSafeCollection';\n\nconst studyMetadataList = new TypeSafeCollection();\n\nfunction add(studyMetadata) {\n  studyMetadataList.insert(studyMetadata);\n}\n\nfunction get(studyInstanceUID) {\n  return studyMetadataList.findBy({ studyInstanceUID });\n}\n\nfunction all(options) {\n  return studyMetadataList.all(options);\n}\n\nfunction remove(studyInstanceUID) {\n  studyMetadataList.remove({ studyInstanceUID });\n}\n\nfunction purge() {\n  studyMetadataList.removeAll();\n}\n\nexport default {\n  add,\n  get,\n  all,\n  remove,\n  purge,\n};\n","import { InstanceMetadata } from './InstanceMetadata';\nimport getImageId from '../../utils/getImageId.js';\n\nexport class OHIFInstanceMetadata extends InstanceMetadata {\n  /**\n   * @param {Object} Instance object.\n   */\n  constructor(data, series, study, uid) {\n    super(data, uid);\n    this.init(series, study);\n  }\n\n  init(series, study) {\n    const instance = this.getData();\n\n    // Initialize Private Properties\n    Object.defineProperties(this, {\n      _sopInstanceUID: {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: instance.SOPInstanceUID,\n      },\n      _study: {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: study,\n      },\n      _series: {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: series,\n      },\n      _instance: {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: instance,\n      },\n      _cache: {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: Object.create(null),\n      },\n    });\n  }\n\n  // Override\n  getTagValue(tagOrProperty, defaultValue, bypassCache) {\n    // check if this property has been cached...\n    if (tagOrProperty in this._cache && bypassCache !== true) {\n      return this._cache[tagOrProperty];\n    }\n\n    const instanceData = this._instance.metadata;\n\n    // Search property value in the whole study metadata chain...\n    let rawValue;\n    if (tagOrProperty in instanceData) {\n      rawValue = instanceData[tagOrProperty];\n    } else if (tagOrProperty in this._series) {\n      rawValue = this._series[tagOrProperty];\n    } else if (tagOrProperty in this._study) {\n      rawValue = this._study[tagOrProperty];\n    }\n\n    if (rawValue !== void 0) {\n      // if rawValue value is not undefined, cache result...\n      this._cache[tagOrProperty] = rawValue;\n      return rawValue;\n    }\n\n    return defaultValue;\n  }\n\n  // Override\n  tagExists(tagOrProperty) {\n    return (\n      tagOrProperty in this._instance.metadata ||\n      tagOrProperty in this._series ||\n      tagOrProperty in this._study\n    );\n  }\n\n  // Override\n  getImageId(frame, thumbnail) {\n    // If _imageID is not cached, create it\n    if (this._imageId === null) {\n      this._imageId = getImageId(this.getData(), frame, thumbnail);\n    }\n\n    return this._imageId;\n  }\n}\n","import { SeriesMetadata } from './SeriesMetadata';\nimport { OHIFInstanceMetadata } from './OHIFInstanceMetadata';\n\nexport class OHIFSeriesMetadata extends SeriesMetadata {\n  /**\n   * @param {Object} Series object.\n   */\n  constructor(data, study, uid) {\n    super(data, uid);\n    this.init(study);\n  }\n\n  init(study) {\n    const series = this.getData();\n\n    // define \"_seriesInstanceUID\" protected property...\n    Object.defineProperty(this, '_seriesInstanceUID', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: series.SeriesInstanceUID,\n    });\n\n    // populate internal list of instances...\n    series.instances.forEach(instance => {\n      this.addInstance(new OHIFInstanceMetadata(instance, series, study));\n    });\n  }\n}\n","import { StudyMetadata } from './StudyMetadata';\nimport { OHIFSeriesMetadata } from './OHIFSeriesMetadata';\n\nexport class OHIFStudyMetadata extends StudyMetadata {\n  /**\n   * @param {Object} Study object.\n   */\n  constructor(data, uid) {\n    super(data, uid);\n    this.init();\n  }\n\n  init() {\n    const study = this.getData();\n\n    // define \"_studyInstanceUID\" protected property\n    Object.defineProperty(this, '_studyInstanceUID', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: study.StudyInstanceUID,\n    });\n\n    // populate internal list of series\n    study.series.forEach(series => {\n      this.addSeries(new OHIFSeriesMetadata(series, study));\n    });\n  }\n}\n","import { InstanceMetadata } from './InstanceMetadata';\nimport { Metadata } from './Metadata';\nimport { OHIFInstanceMetadata } from './OHIFInstanceMetadata';\nimport { OHIFSeriesMetadata } from './OHIFSeriesMetadata';\nimport { OHIFStudyMetadata } from './OHIFStudyMetadata';\nimport { SeriesMetadata } from './SeriesMetadata';\nimport { StudyMetadata } from './StudyMetadata';\n\nconst metadata = {\n  Metadata,\n  StudyMetadata,\n  SeriesMetadata,\n  InstanceMetadata,\n  OHIFStudyMetadata,\n  OHIFSeriesMetadata,\n  OHIFInstanceMetadata,\n};\n\nexport {\n  Metadata,\n  StudyMetadata,\n  SeriesMetadata,\n  InstanceMetadata,\n  OHIFStudyMetadata,\n  OHIFSeriesMetadata,\n  OHIFInstanceMetadata,\n};\n\nexport default metadata;\n","import { ReconstructionIssues } from './../enums.js';\n\n/**\n * Checks if a series is reconstructable to a 3D volume.\n *\n * @param {Object[]} An array of `OHIFInstanceMetadata` objects.\n *\n * @returns {Object} value, reconstructionIssues.\n */\nfunction isDisplaySetReconstructable(instances) {\n  if (!instances.length) {\n    return { value: false };\n  }\n\n  const firstInstance = instances[0].getData().metadata;\n\n  const Modality = firstInstance.Modality;\n  const isMultiframe = firstInstance.NumberOfFrames > 1;\n\n  if (!constructableModalities.includes(Modality)) {\n    return { value: false };\n  }\n\n  // Can't reconstruct if we only have one image.\n  if (!isMultiframe && instances.length === 1) {\n    return { value: false };\n  }\n\n  if (isMultiframe) {\n    return processMultiframe();\n  } else {\n    return processSingleframe(instances);\n  }\n}\n\n/**\n * Process reconstructable multiframes checks\n * TODO: deal with multriframe checks! return false for now as can't reconstruct.\n * *\n * @returns {Object} value and reconstructionIssues.\n */\nfunction processMultiframe() {\n  const reconstructionIssues = [ReconstructionIssues.MULTIFRAMES];\n  return { value: false, reconstructionIssues };\n}\n\n/**\n * Process reconstructable single frame checks\n *\n * @param {Object[]} An array of `OHIFInstanceMetadata` objects.\n *\n * @returns {Object} value and reconstructionIssues.\n */\nfunction processSingleframe(instances) {\n  const n = instances.length;\n  const firstImage = instances[0].getData().metadata;\n  const firstImageRows = firstImage.Rows;\n  const firstImageColumns = firstImage.Columns;\n  const firstImageSamplesPerPixel = firstImage.SamplesPerPixel;\n  const firstImageOrientationPatient = firstImage.ImageOrientationPatient;\n\n  const reconstructionIssues = [];\n  // Can't reconstruct if we:\n  // -- Have a different dimensions within a displaySet.\n  // -- Have a different number of components within a displaySet.\n  // -- Have different orientations within a displaySet.\n  for (let ii = 1; ii < n; ++ii) {\n    const instance = instances[ii].getData().metadata;\n    const {\n      Rows,\n      Columns,\n      SamplesPerPixel,\n      ImageOrientationPatient,\n    } = instance;\n\n    if (Rows !== firstImageRows || Columns !== firstImageColumns) {\n      reconstructionIssues.push(ReconstructionIssues.VARYING_IMAGESDIMENSIONS);\n    } else if (SamplesPerPixel !== firstImageSamplesPerPixel) {\n      reconstructionIssues.push(ReconstructionIssues.VARYING_IMAGESCOMPONENTS);\n    } else if (\n      !_isSameArray(ImageOrientationPatient, firstImageOrientationPatient)\n    ) {\n      reconstructionIssues.push(ReconstructionIssues.VARYING_IMAGESORIENTATION);\n    }\n\n    if (reconstructionIssues.length !== 0) {\n      break;\n    }\n  }\n\n  // check if dataset is 4D\n  if (_isDataset4D(instances)) {\n    reconstructionIssues.push(ReconstructionIssues.DATASET_4D);\n  }\n\n  return {\n    value: reconstructionIssues.length === 0 ? true : false,\n    reconstructionIssues,\n  };\n}\n\n/**\n *  Check is the spacing is uniform.\n *  The input metadata array has to be ordered by image position.\n *\n * @param {Object[]} An array of `OHIFInstanceMetadata` objects.\n * @param {boolean} is the dataset 4D.\n *\n * @returns {Object} isUniform, reconstructionIssues and missingFrames\n */\nfunction isSpacingUniform(instances, datasetIs4D) {\n  const n = instances.length;\n  const firstImage = instances[0].getData().metadata;\n  const firstImagePositionPatient = firstImage.ImagePositionPatient;\n\n  const reconstructionIssues = [];\n  let missingFrames = 0;\n\n  // Check if frame spacing is approximately equal within a spacingTolerance.\n  // If spacing is on a uniform grid but we are missing frames,\n  // Allow reconstruction, but pass back the number of missing frames.\n  if (n > 2) {\n    const lastIpp = instances[n - 1].getData().metadata.ImagePositionPatient;\n\n    // We can't reconstruct if we are missing ImagePositionPatient values\n    if (firstImagePositionPatient && lastIpp) {\n      const averageSpacingBetweenFrames =\n        _getPerpendicularDistance(firstImagePositionPatient, lastIpp) / (n - 1);\n\n      let previousImagePositionPatient = firstImagePositionPatient;\n\n      for (let ii = 1; ii < n; ++ii) {\n        const instance = instances[ii].getData().metadata;\n        const { ImagePositionPatient } = instance;\n\n        const spacingBetweenFrames = _getPerpendicularDistance(\n          ImagePositionPatient,\n          previousImagePositionPatient\n        );\n\n        if (datasetIs4D && spacingBetweenFrames < 1e-3) {\n          // the dataset is 4D, if the distance is zero, means that we are\n          // checking the 4th dimension. Do not return, since we want still to\n          // check the 3rd dimension spacing.\n          continue;\n        }\n\n        const spacingIssue = _getSpacingIssue(\n          spacingBetweenFrames,\n          averageSpacingBetweenFrames\n        );\n\n        if (spacingIssue) {\n          const issue = spacingIssue.issue;\n\n          if (issue === ReconstructionIssues.MISSING_FRAMES) {\n            missingFrames += spacingIssue.missingFrames;\n          } else if (issue === ReconstructionIssues.IRREGULAR_SPACING) {\n            reconstructionIssues.push(issue);\n            break;\n          }\n        }\n\n        previousImagePositionPatient = ImagePositionPatient;\n      }\n    }\n  }\n\n  return {\n    isUniform: reconstructionIssues.length === 0 ? true : false,\n    missingFrames,\n    reconstructionIssues,\n  };\n}\n\n/**\n *  Check if 4D dataset.\n *\n *  Assuming that slices at different time have the same position, here we just check if\n *  there are multiple slices for the same ImagePositionPatient and disable MPR.\n *\n *  A better heuristic would be checking 4D tags, e.g. the presence of multiple TemporalPositionIdentifier values.\n *  However, some studies (e.g. https://github.com/OHIF/Viewers/issues/2113) do not have such tags.\n *\n * @param {Object[]} instances An array of `OHIFInstanceMetadata` objects.\n *\n * @returns {boolean} dataset4D value.\n */\nfunction _isDataset4D(instances) {\n  const n = instances.length;\n  for (let ii = 0; ii < n; ++ii) {\n    const instanceMetadataControl = instances[ii].getData().metadata;\n    if (\n      !instanceMetadataControl ||\n      instanceMetadataControl === undefined ||\n      !instanceMetadataControl.ImagePositionPatient ||\n      instanceMetadataControl.ImagePositionPatient === undefined\n    ) {\n      continue;\n    }\n    for (let jj = ii + 1; jj < n; ++jj) {\n      const instanceMetadata = instances[jj].getData().metadata;\n      if (\n        !instanceMetadata ||\n        instanceMetadata === undefined ||\n        !instanceMetadata.ImagePositionPatient ||\n        instanceMetadata.ImagePositionPatient === undefined\n      ) {\n        continue;\n      }\n\n      if (\n        _isSameArray(\n          instanceMetadataControl.ImagePositionPatient,\n          instanceMetadata.ImagePositionPatient\n        )\n      ) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction _isSameArray(iop1, iop2) {\n  if (iop1 === undefined || !iop2 === undefined) {\n    return;\n  }\n\n  return (\n    Math.abs(iop1[0] - iop2[0]) < iopTolerance &&\n    Math.abs(iop1[1] - iop2[1]) < iopTolerance &&\n    Math.abs(iop1[2] - iop2[2]) < iopTolerance\n  );\n}\n\n// TODO: Is 10% a reasonable spacingTolerance for spacing?\nconst spacingTolerance = 0.1;\nconst iopTolerance = 0.01;\n\n/**\n * Checks for spacing issues.\n *\n * @param {number} spacing The spacing between two frames.\n * @param {number} averageSpacing The average spacing between all frames.\n *\n * @returns {Object} An object containing the issue and extra information if necessary.\n */\nfunction _getSpacingIssue(spacing, averageSpacing) {\n  const equalWithinTolerance =\n    Math.abs(spacing - averageSpacing) < averageSpacing * spacingTolerance;\n\n  if (equalWithinTolerance) {\n    return;\n  }\n\n  const multipleOfAverageSpacing = spacing / averageSpacing;\n\n  const numberOfSpacings = Math.round(multipleOfAverageSpacing);\n\n  const errorForEachSpacing =\n    Math.abs(spacing - numberOfSpacings * averageSpacing) / numberOfSpacings;\n\n  if (errorForEachSpacing < spacingTolerance * averageSpacing) {\n    return {\n      issue: ReconstructionIssues.MISSING_FRAMES,\n      missingFrames: numberOfSpacings - 1,\n    };\n  }\n\n  return { issue: ReconstructionIssues.IRREGULAR_SPACING };\n}\n\nfunction _getPerpendicularDistance(a, b) {\n  return Math.sqrt(\n    Math.pow(a[0] - b[0], 2) +\n      Math.pow(a[1] - b[1], 2) +\n      Math.pow(a[2] - b[2], 2)\n  );\n}\n\nconst constructableModalities = ['MR', 'CT', 'PT', 'NM'];\n\nexport { isDisplaySetReconstructable, isSpacingUniform };\n","// - createStacks\nimport DICOMWeb from './../../DICOMWeb';\nimport ImageSet from './../ImageSet';\nimport { InstanceMetadata } from './InstanceMetadata';\nimport { Metadata } from './Metadata';\nimport { SeriesMetadata } from './SeriesMetadata';\n// - createStacks\nimport { api } from 'dicomweb-client';\n// - createStacks\nimport { isImage } from '../../utils/isImage';\nimport { naturalizeSOPClassUID } from '../../utils/naturalizeSOPClassUID';\nimport {\n  isDisplaySetReconstructable,\n  isSpacingUniform,\n} from '../../utils/isDisplaySetReconstructable';\nimport errorHandler from '../../errorHandler';\nimport isLowPriorityModality from '../../utils/isLowPriorityModality';\nimport getXHRRetryRequestHook from '../../utils/xhrRetryRequestHook';\n\nclass StudyMetadata extends Metadata {\n  constructor(data, uid) {\n    super(data, uid);\n    // Initialize Private Properties\n    Object.defineProperties(this, {\n      _studyInstanceUID: {\n        configurable: true, // configurable so that it can be redefined in sub-classes...\n        enumerable: false,\n        writable: true,\n        value: null,\n      },\n      _series: {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: [],\n      },\n      _displaySets: {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: [],\n      },\n      _derivedDisplaySets: {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: [],\n      },\n      _firstSeries: {\n        configurable: false,\n        enumerable: false,\n        writable: true,\n        value: null,\n      },\n      _firstInstance: {\n        configurable: false,\n        enumerable: false,\n        writable: true,\n        value: null,\n      },\n    });\n    // Initialize Public Properties\n    this._definePublicProperties();\n  }\n\n  /**\n   * Private Methods\n   */\n\n  /**\n   * Define Public Properties\n   * This method should only be called during initialization (inside the class constructor)\n   */\n  _definePublicProperties() {\n    /**\n     * Property: this.studyInstanceUID\n     * Same as this.getStudyInstanceUID()\n     * It's specially useful in contexts where a method call is not suitable like in search criteria. For example:\n     * studyCollection.findBy({\n     *   studyInstanceUID: '1.2.3.4.5.6.77777.8888888.99999999999.0'\n     * });\n     */\n    Object.defineProperty(this, 'studyInstanceUID', {\n      configurable: false,\n      enumerable: false,\n      get: function() {\n        return this.getStudyInstanceUID();\n      },\n    });\n  }\n\n  /**\n   * Public Methods\n   */\n\n  /**\n   * Getter for displaySets\n   * @return {Array} Array of display set object\n   */\n  getDisplaySets() {\n    return this._displaySets.slice();\n  }\n\n  /**\n   * Split a series metadata object into display sets\n   * @param {Array} sopClassHandlerModules List of SOP Class Modules\n   * @param {SeriesMetadata} series The series metadata object from which the display sets will be created\n   * @returns {Array} The list of display sets created for the given series object\n   */\n  _createDisplaySetsForSeries(sopClassHandlerModules, series) {\n    const study = this;\n    const displaySets = [];\n\n    const anyInstances = series.getInstanceCount() > 0;\n\n    if (!anyInstances) {\n      const displaySet = new ImageSet([]);\n      const seriesData = series.getData();\n\n      displaySet.setAttributes({\n        displaySetInstanceUID: displaySet.uid,\n        SeriesInstanceUID: seriesData.SeriesInstanceUID,\n        SeriesDescription: seriesData.SeriesDescription,\n        SeriesNumber: seriesData.SeriesNumber,\n        Modality: seriesData.Modality,\n      });\n\n      displaySets.push(displaySet);\n\n      return displaySets;\n    }\n\n    const sopClassUIDs = getSopClassUIDs(series);\n\n    if (sopClassHandlerModules && sopClassHandlerModules.length > 0) {\n      const displaySet = _getDisplaySetFromSopClassModule(\n        sopClassHandlerModules,\n        series,\n        study,\n        sopClassUIDs\n      );\n\n      if (displaySet) {\n        displaySet.sopClassModule = true;\n\n        if (displaySet.isDerived) {\n          this._addDerivedDisplaySet(displaySet);\n        }\n\n        displaySets.push(displaySet);\n\n        return displaySets;\n      }\n    }\n\n    // WE NEED A BETTER WAY TO NOTE THAT THIS IS THE DEFAULT BEHAVIOR FOR LOADING\n    // A DISPLAY SET IF THERE IS NO MATCHING SOP CLASS PLUGIN\n\n    // Search through the instances (InstanceMetadata object) of this series\n    // Split Multi-frame instances and Single-image modalities\n    // into their own specific display sets. Place the rest of each\n    // series into another display set.\n    const stackableInstances = [];\n    series.forEachInstance(instance => {\n      let displaySet;\n\n      // All imaging modalities must have a valid value for SOPClassUID (x00080016) or Rows (x00280010)\n      if (\n        !isImage(instance.getTagValue('SOPClassUID')) &&\n        !instance.getTagValue('Rows')\n      ) {\n        // we set an empty display and we add a isSOPClassUIDSupported variable to\n        // print a warning that the series is not supported in the thumbnail.\n        // SOPClassUIDNaturalized is human readable name, since for non image series,\n        // we could have a mismatch between the SOPClassUID and the Modality.\n        // For example, in the Parametric map IOD Modality is expected to match\n        // the value for the series used to generate Parametric map, and there is no \"PM\" modality.\n        const displaySet = new ImageSet([]);\n        const seriesData = series.getData();\n        displaySet.setAttributes({\n          displaySetInstanceUID: displaySet.uid,\n          SeriesDate: seriesData.SeriesDate,\n          SeriesTime: seriesData.SeriesTime,\n          SeriesInstanceUID: series.getSeriesInstanceUID(),\n          SeriesNumber: instance.getTagValue('SeriesNumber'),\n          SeriesDescription: instance.getTagValue('SeriesDescription'),\n          numImageFrames: instance.getTagValue('NumberOfFrames'),\n          frameRate: instance.getTagValue('FrameTime'),\n          Modality: instance.getTagValue('Modality'),\n          isMultiFrame: false,\n          StudyInstanceUID: study.getStudyInstanceUID(), // Include the study instance UID\n          InstanceNumber: instance.getTagValue('InstanceNumber'), // Include the instance number\n          AcquisitionDatetime: instance.getTagValue('AcquisitionDateTime'), // Include the acquisition datetime\n          isReconstructable: false,\n          isSOPClassUIDSupported: false,\n          SOPClassUIDNaturalized: naturalizeSOPClassUID(\n            instance.getTagValue('SOPClassUID')\n          ),\n          metadata: instance.getData().metadata,\n        });\n\n        displaySets.push(displaySet);\n      } else {\n        if (isMultiFrame(instance)) {\n          displaySet = makeDisplaySet(series, [instance]);\n\n          displaySet.setAttributes({\n            sopClassUIDs,\n            isClip: true,\n            SeriesInstanceUID: series.getSeriesInstanceUID(),\n            StudyInstanceUID: study.getStudyInstanceUID(), // Include the study instance UID for drag/drop purposes\n            numImageFrames: instance.getTagValue('NumberOfFrames'), // Override the default value of instances.length\n            InstanceNumber: instance.getTagValue('InstanceNumber'), // Include the instance number\n            AcquisitionDatetime: instance.getTagValue('AcquisitionDateTime'), // Include the acquisition datetime\n          });\n          displaySets.push(displaySet);\n        } else if (isSingleImageModality(instance.Modality)) {\n          displaySet = makeDisplaySet(series, [instance]);\n          displaySet.setAttributes({\n            sopClassUIDs,\n            StudyInstanceUID: study.getStudyInstanceUID(), // Include the study instance UID\n            SeriesInstanceUID: series.getSeriesInstanceUID(),\n            InstanceNumber: instance.getTagValue('InstanceNumber'), // Include the instance number\n            AcquisitionDatetime: instance.getTagValue('AcquisitionDateTime'), // Include the acquisition datetime\n          });\n          displaySets.push(displaySet);\n        } else {\n          stackableInstances.push(instance);\n        }\n      }\n    });\n\n    if (stackableInstances.length) {\n      const displaySet = makeDisplaySet(series, stackableInstances);\n      displaySet.setAttribute('StudyInstanceUID', study.getStudyInstanceUID());\n      displaySet.setAttributes({\n        sopClassUIDs,\n      });\n      displaySets.push(displaySet);\n    }\n\n    return displaySets;\n  }\n\n  /**\n   * Adds the displaySets to the studies list of derived displaySets.\n   * @param {object} displaySet The displaySet to append to the derived displaysets list.\n   */\n  _addDerivedDisplaySet(displaySet) {\n    this._derivedDisplaySets.push(displaySet);\n    // --> Perhaps that logic should exist in the extension sop class handler and this be a dumb list.\n    // TODO -> Get x Modality by referencedSeriesInstanceUid, FoR, etc.\n  }\n\n  /**\n   * Adds the displaySets to the studies list of derived displaySets.\n   * @param {array} displaySets The displaySets array to append to the derived displaysets list.\n   */\n  _addDerivedDisplaySets(displaySets) {\n    displaySets.map(displaySet => this._derivedDisplaySets.push(displaySet));\n  }\n\n  /**\n   * Returns the source display set of the derivated display set.\n   * @param {object} derivatedDisplaySet\n   * @param {array[StudyMetadata]} studies\n   * @return {object} source display set.\n   */\n  static getReferencedDisplaySet(derivatedDisplaySet, studies) {\n    let allDisplaySets = [];\n\n    studies.forEach(study => {\n      allDisplaySets = allDisplaySets.concat(study.displaySets);\n    });\n\n    const otherDisplaySets = allDisplaySets.filter(\n      ds =>\n        ds &&\n        derivatedDisplaySet &&\n        ds.displaySetInstanceUID !== derivatedDisplaySet.displaySetInstanceUID\n    );\n\n    const { metadata } = derivatedDisplaySet;\n\n    let referencedSeriesInstanceUIDs = _findReferencedSeriesInstanceUIDsFromSourceImageSequence(\n      metadata,\n      otherDisplaySets\n    );\n\n    let noReferencedSeriesAvailable =\n      !referencedSeriesInstanceUIDs ||\n      referencedSeriesInstanceUIDs.length === 0;\n    if (noReferencedSeriesAvailable) {\n      referencedSeriesInstanceUIDs = _findReferencedSeriesInstanceUIDsFromReferencedSeriesSequence(\n        metadata\n      );\n    }\n\n    noReferencedSeriesAvailable =\n      !referencedSeriesInstanceUIDs ||\n      referencedSeriesInstanceUIDs.length === 0;\n    if (noReferencedSeriesAvailable) {\n      referencedSeriesInstanceUIDs = _findReferencedSeriesInstanceUIDsFromReferencedImageSequence(\n        metadata,\n        otherDisplaySets\n      );\n    }\n\n    const referencedSeriesAvailable =\n      referencedSeriesInstanceUIDs && referencedSeriesInstanceUIDs.length !== 0;\n    if (referencedSeriesAvailable) {\n      const referencedDisplaySet = otherDisplaySets.find(ds =>\n        referencedSeriesInstanceUIDs.includes(ds.SeriesInstanceUID)\n      );\n      return referencedDisplaySet;\n    }\n  }\n\n  /**\n   * Returns a list of derived datasets in the study, filtered by the given filter.\n   * @param {object} filter An object containing search filters\n   * @param {object} filter.Modality\n   * @param {object} filter.referencedSeriesInstanceUID\n   * @param {object} filter.referencedFrameOfReferenceUID\n   * @return {Array} filtered derived display sets\n   */\n  getDerivedDatasets(filter) {\n    const {\n      Modality,\n      referencedSeriesInstanceUID,\n      referencedFrameOfReferenceUID,\n    } = filter;\n\n    let filteredDerivedDisplaySets = this._derivedDisplaySets;\n\n    if (Modality) {\n      filteredDerivedDisplaySets = filteredDerivedDisplaySets.filter(\n        displaySet => displaySet.Modality === Modality\n      );\n    }\n\n    if (referencedSeriesInstanceUID) {\n      filteredDerivedDisplaySets = filteredDerivedDisplaySets.filter(\n        displaySet => {\n          const referencedDisplaySet = StudyMetadata.getReferencedDisplaySet(\n            displaySet,\n            [this]\n          );\n          if (referencedDisplaySet) {\n            return (\n              referencedDisplaySet.SeriesInstanceUID ===\n              referencedSeriesInstanceUID\n            );\n          } else {\n            if (\n              !displaySet.referencedDisplaySets ||\n              displaySet.referencedDisplaySets.length === 0\n            ) {\n              return false;\n            }\n\n            const filteredReferencedDisplaySets = displaySet.referencedDisplaySets.filter(\n              referencedDisplaySet =>\n                referencedDisplaySet.SeriesInstanceUID ===\n                referencedSeriesInstanceUID\n            );\n\n            if (\n              filteredReferencedDisplaySets &&\n              filteredReferencedDisplaySets.length !== 0\n            ) {\n              return true;\n            }\n\n            return false;\n          }\n        }\n      );\n    }\n\n    if (referencedFrameOfReferenceUID) {\n      filteredDerivedDisplaySets = filteredDerivedDisplaySets.filter(\n        displaySet =>\n          displaySet.FrameOfReferenceUID === referencedFrameOfReferenceUID\n      );\n    }\n\n    return filteredDerivedDisplaySets;\n  }\n\n  /**\n   * Creates a set of displaySets to be placed in the Study Metadata\n   * The displaySets that appear in the Study Metadata must represent\n   * imaging modalities. A series may be split into one or more displaySets.\n   *\n   * Furthermore, for drag/drop functionality,\n   * it is easiest if the stack objects also contain information about\n   * which study they are linked to.\n   *\n   * @param {StudyMetadata} study The study instance metadata to be used\n   * @returns {Array} An array of series to be placed in the Study Metadata\n   */\n  createDisplaySets(sopClassHandlerModules) {\n    const displaySets = [];\n    const anyDisplaySets = this.getSeriesCount();\n\n    if (!anyDisplaySets) {\n      return displaySets;\n    }\n\n    // Loop through the series (SeriesMetadata)\n    this.forEachSeries(series => {\n      const displaySetsForSeries = this._createDisplaySetsForSeries(\n        sopClassHandlerModules,\n        series\n      );\n\n      displaySetsForSeries.forEach(ds => this._insertDisplaySet(ds));\n    });\n\n    return this._displaySets;\n  }\n\n  /**\n   * Method to append display sets from a given series to the internal list of display sets\n   * @param {Array} sopClassHandlerModules A list of SOP Class Handler Modules\n   * @param {SeriesMetadata} series The series metadata object from which the display sets will be created\n   * @returns {boolean} Returns true on success or false on failure (e.g., the series does not belong to this study)\n   */\n  createAndAddDisplaySetsForSeries(sopClassHandlerModules, series) {\n    if (!this.containsSeries(series)) {\n      return false;\n    }\n\n    const displaySets = this._createDisplaySetsForSeries(\n      sopClassHandlerModules,\n      series\n    );\n\n    // Note: filtering in place because this._displaySets has writable: false\n    for (let i = this._displaySets.length - 1; i >= 0; i--) {\n      const displaySet = this._displaySets[i];\n      if (displaySet.SeriesInstanceUID === series.getSeriesInstanceUID()) {\n        this._displaySets.splice(i, 1);\n      }\n    }\n\n    displaySets.forEach(displaySet => {\n      this.addDisplaySet(displaySet);\n    });\n\n    return true;\n  }\n\n  /**\n   * Add a single display set to the list\n   * @param {Object} displaySet Display set object\n   * @returns {boolean} True on success, false on failure.\n   */\n  addDisplaySet(displaySet) {\n    if (displaySet instanceof ImageSet || displaySet.sopClassModule) {\n      this._insertDisplaySet(displaySet);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Invokes the supplied callback for each display set in the current study passing\n   * two arguments: display set (a ImageSet instance) and index (the integer\n   * index of the display set within the current study)\n   * @param {function} callback The callback function which will be invoked for each display set instance.\n   * @returns {undefined} Nothing is returned.\n   */\n  forEachDisplaySet(callback) {\n    if (Metadata.isValidCallback(callback)) {\n      this._displaySets.forEach((displaySet, index) => {\n        callback.call(null, displaySet, index);\n      });\n    }\n  }\n\n  /**\n   * Insert the displaySet so that the list has an increasing SeriesNumber,\n   * with the most recent series first for displaySets with the same SeriesNumber.\n   *\n   * If the displaySet is low priority, the same logic is applied, but is sorted within a sub list\n   * At the end of the list, where all low priority data is found.\n   */\n  _insertDisplaySet(displaySet) {\n    const { SeriesNumber } = displaySet;\n    const displaySets = this._displaySets;\n    let insertIndex = displaySets.length;\n    let firstIndexWithSameSeriesNumber;\n\n    // If low priority, start search from next low priority.\n    if (isLowPriorityModality(displaySet.Modality)) {\n      let startingIndex;\n\n      // Find where the first low priority displaySet is.\n      for (let i = 0; i < displaySets.length; i++) {\n        if (isLowPriorityModality(displaySets[i].Modality)) {\n          startingIndex = i;\n          break;\n        }\n      }\n\n      if (!startingIndex) {\n        startingIndex = displaySets.length;\n      }\n\n      // Find the correct SeriesNumber location to insert within the low priority\n      // Modality displaySets\n      for (let i = startingIndex; i < displaySets.length; i++) {\n        if (\n          displaySets[i].SeriesNumber === SeriesNumber &&\n          !firstIndexWithSameSeriesNumber\n        ) {\n          firstIndexWithSameSeriesNumber = i;\n        }\n\n        if (displaySets[i].SeriesNumber > SeriesNumber) {\n          insertIndex = i;\n          break;\n        }\n      }\n    } else {\n      // Find correct SeriesNumber to insert or where the low priority modalities start.\n      for (let i = 0; i < displaySets.length; i++) {\n        if (\n          displaySets[i].SeriesNumber === SeriesNumber &&\n          !firstIndexWithSameSeriesNumber\n        ) {\n          firstIndexWithSameSeriesNumber = i;\n        }\n\n        if (\n          displaySets[i].SeriesNumber > SeriesNumber ||\n          isLowPriorityModality(displaySets[i].Modality)\n        ) {\n          insertIndex = i;\n          break;\n        }\n      }\n    }\n\n    // If we have multiple displaySets with the same series number, find the insert position based on\n    // SeriesDate and SeriesTime.\n    if (firstIndexWithSameSeriesNumber !== undefined) {\n      // If no SeriesDate, is just a placeholder displaySet, just insert anywhere, it will be re-added later.\n      if (displaySet.SeriesDate) {\n        const seriesDateTime = `${displaySet.SeriesDate}${displaySet.SeriesTime}`;\n\n        for (let i = firstIndexWithSameSeriesNumber; i < insertIndex; i++) {\n          const displaySetI = displaySets[i];\n\n          if (\n            displaySetI.SeriesDate &&\n            `${displaySetI.SeriesDate}${displaySetI.SeriesTime}` <\n              seriesDateTime\n          ) {\n            insertIndex = i;\n            break;\n          }\n        }\n      }\n    }\n\n    if (\n      this._displaySets.some(\n        ds => ds.displaySetInstanceUID === displaySet.displaySetInstanceUID\n      )\n    ) {\n      return;\n    }\n\n    this._displaySets.splice(insertIndex, 0, displaySet);\n    this.displaySets = this._displaySets;\n  }\n\n  /**\n   * Search the associated display sets using the supplied callback as criteria. The callback is passed\n   * two arguments: display set (an ImageSet instance) and index (the integer\n   * index of the display set within the current study)\n   * @param {function} callback The callback function which will be invoked for each display set instance.\n   * @returns {undefined} Nothing is returned.\n   */\n  findDisplaySet(callback) {\n    if (Metadata.isValidCallback(callback)) {\n      return this._displaySets.find((displaySet, index) => {\n        return callback.call(null, displaySet, index);\n      });\n    }\n  }\n\n  /**\n   * Retrieve the number of display sets within the current study.\n   * @returns {number} The number of display sets in the current study.\n   */\n  getDisplaySetCount() {\n    return this._displaySets.length;\n  }\n\n  /**\n   * Returns the StudyInstanceUID of the current study.\n   */\n  getStudyInstanceUID() {\n    return this._studyInstanceUID;\n  }\n\n  /**\n   * Getter for series\n   * @return {Array} Array of SeriesMetadata object\n   */\n  getSeries() {\n    return this._series.slice();\n  }\n\n  /**\n   * Append a series to the current study.\n   * @param {SeriesMetadata} series The series to be added to the current study.\n   * @returns {boolean} Returns true on success, false otherwise.\n   */\n  addSeries(series) {\n    let result = false;\n    if (\n      series instanceof SeriesMetadata &&\n      this.getSeriesByUID(series.getSeriesInstanceUID()) === void 0\n    ) {\n      this._series.push(series);\n      result = true;\n    }\n    return result;\n  }\n\n  /**\n   * Update a series in the current study by SeriesInstanceUID.\n   * @param {String} SeriesInstanceUID The SeriesInstanceUID to be updated\n   * @param {SeriesMetadata} series The series to be added to the current study.\n   * @returns {boolean} Returns true on success, false otherwise.\n   */\n  updateSeries(SeriesInstanceUID, series) {\n    const index = this._series.findIndex(series => {\n      return series.getSeriesInstanceUID() === SeriesInstanceUID;\n    });\n\n    if (index < 0) {\n      return false;\n    }\n\n    if (!(series instanceof SeriesMetadata)) {\n      throw new Error('Series must be an instance of SeriesMetadata');\n    }\n\n    this._series[index] = series;\n\n    return true;\n  }\n\n  /**\n   * Find a series by index.\n   * @param {number} index An integer representing a list index.\n   * @returns {SeriesMetadata} Returns a SeriesMetadata instance when found or undefined otherwise.\n   */\n  getSeriesByIndex(index) {\n    let found; // undefined by default...\n    if (Metadata.isValidIndex(index)) {\n      found = this._series[index];\n    }\n    return found;\n  }\n\n  /**\n   * Find a series by SeriesInstanceUID.\n   * @param {string} uid An UID string.\n   * @returns {SeriesMetadata} Returns a SeriesMetadata instance when found or undefined otherwise.\n   */\n  getSeriesByUID(uid) {\n    let found; // undefined by default...\n    if (Metadata.isValidUID(uid)) {\n      found = this._series.find(series => {\n        return series.getSeriesInstanceUID() === uid;\n      });\n    }\n    return found;\n  }\n\n  containsSeries(series) {\n    return (\n      series instanceof SeriesMetadata && this._series.indexOf(series) >= 0\n    );\n  }\n\n  /**\n   * Retrieve the number of series within the current study.\n   * @returns {number} The number of series in the current study.\n   */\n  getSeriesCount() {\n    return this._series.length;\n  }\n\n  /**\n   * Retrieve the number of instances within the current study.\n   * @returns {number} The number of instances in the current study.\n   */\n  getInstanceCount() {\n    return this._series.reduce((sum, series) => {\n      return sum + series.getInstanceCount();\n    }, 0);\n  }\n\n  /**\n   * Invokes the supplied callback for each series in the current study passing\n   * two arguments: series (a SeriesMetadata instance) and index (the integer\n   * index of the series within the current study)\n   * @param {function} callback The callback function which will be invoked for each series instance.\n   * @returns {undefined} Nothing is returned.\n   */\n  forEachSeries(callback) {\n    if (Metadata.isValidCallback(callback)) {\n      this._series.forEach((series, index) => {\n        callback.call(null, series, index);\n      });\n    }\n  }\n\n  /**\n   * Find the index of a series inside the study.\n   * @param {SeriesMetadata} series An instance of the SeriesMetadata class.\n   * @returns {number} The index of the series inside the study or -1 if not found.\n   */\n  indexOfSeries(series) {\n    return this._series.indexOf(series);\n  }\n\n  /**\n   * Compares the current study instance with another one.\n   * @param {StudyMetadata} study An instance of the StudyMetadata class.\n   * @returns {boolean} Returns true if both instances refer to the same study.\n   */\n  equals(study) {\n    const self = this;\n    return (\n      study === self ||\n      (study instanceof StudyMetadata &&\n        study.getStudyInstanceUID() === self.getStudyInstanceUID())\n    );\n  }\n\n  /**\n   * Get the first series of the current study retaining a consistent result across multiple calls.\n   * @return {SeriesMetadata} An instance of the SeriesMetadata class or null if it does not exist.\n   */\n  getFirstSeries() {\n    let series = this._firstSeries;\n    if (!(series instanceof SeriesMetadata)) {\n      series = null;\n      const found = this.getSeriesByIndex(0);\n      if (found instanceof SeriesMetadata) {\n        this._firstSeries = found;\n        series = found;\n      }\n    }\n    return series;\n  }\n\n  /**\n   * Get the first image id given display instance uid.\n   * @return {string} The image id.\n   */\n  getFirstImageId(displaySetInstanceUID) {\n    try {\n      const displaySet = this.findDisplaySet(\n        displaySet => displaySet.displaySetInstanceUID === displaySetInstanceUID\n      );\n      return displaySet.images[0].getImageId();\n    } catch (error) {\n      console.error('Failed to retrieve image metadata');\n      return null;\n    }\n  }\n\n  /**\n   * Get the first instance of the current study retaining a consistent result across multiple calls.\n   * @return {InstanceMetadata} An instance of the InstanceMetadata class or null if it does not exist.\n   */\n  getFirstInstance() {\n    let instance = this._firstInstance;\n    if (!(instance instanceof InstanceMetadata)) {\n      instance = null;\n      const firstSeries = this.getFirstSeries();\n      if (firstSeries instanceof SeriesMetadata) {\n        const found = firstSeries.getFirstInstance();\n        if (found instanceof InstanceMetadata) {\n          this._firstInstance = found;\n          instance = found;\n        }\n      }\n    }\n    return instance;\n  }\n\n  /**\n   * Search the associated series to find an specific instance using the supplied callback as criteria.\n   * The callback is passed two arguments: instance (a InstanceMetadata instance) and index (the integer\n   * index of the instance within the current series)\n   * @param {function} callback The callback function which will be invoked for each instance instance.\n   * @returns {Object} Result object containing series (SeriesMetadata) and instance (InstanceMetadata)\n   *                   objects or an empty object if not found.\n   */\n  findSeriesAndInstanceByInstance(callback) {\n    let result;\n\n    if (Metadata.isValidCallback(callback)) {\n      let instance;\n\n      const series = this._series.find(series => {\n        instance = series.findInstance(callback);\n        return instance instanceof InstanceMetadata;\n      });\n\n      // No series found\n      if (series instanceof SeriesMetadata) {\n        result = {\n          series,\n          instance,\n        };\n      }\n    }\n\n    return result || {};\n  }\n\n  /**\n   * Find series by instance using the supplied callback as criteria. The callback is passed\n   * two arguments: instance (a InstanceMetadata instance) and index (the integer index of\n   * the instance within its series)\n   * @param {function} callback The callback function which will be invoked for each instance.\n   * @returns {SeriesMetadata|undefined} If a series is found based on callback criteria it\n   *                                     returns a SeriesMetadata. \"undefined\" is returned otherwise\n   */\n  findSeriesByInstance(callback) {\n    const result = this.findSeriesAndInstanceByInstance(callback);\n\n    return result.series;\n  }\n\n  /**\n   * Find an instance using the supplied callback as criteria. The callback is passed\n   * two arguments: instance (a InstanceMetadata instance) and index (the integer index of\n   * the instance within its series)\n   * @param {function} callback The callback function which will be invoked for each instance.\n   * @returns {InstanceMetadata|undefined} If an instance is found based on callback criteria it\n   *                                     returns a InstanceMetadata. \"undefined\" is returned otherwise\n   */\n  findInstance(callback) {\n    const result = this.findSeriesAndInstanceByInstance(callback);\n\n    return result.instance;\n  }\n}\n\n/**\n *\n * @typedef StudyMetadata\n * @property {function} getSeriesCount - returns the number of series in the study\n * @property {function} forEachSeries - function that invokes callback with each series and index\n * @property {function} getStudyInstanceUID - returns the study's instance UID\n *\n */\n\n/**\n * @typedef SeriesMetadata\n * @property {function} getSeriesInstanceUID - returns the series's instance UID\n * @property {function} getData - ???\n * @property {function} forEachInstance - ???\n */\n\nconst dwc = api.DICOMwebClient;\n\nconst isMultiFrame = instance => {\n  return instance.getTagValue('NumberOfFrames') > 1;\n};\n\n/**\n * Creates a display set for a series.\n * Checks if a series is reconstructable to a 3D volume.\n * If reconstructable, the frames are sorted.\n *\n * @param {SeriesMetadata} series The series metadata object from which the display sets will be created\n * @param {Object[]} instances An array of `OHIFInstanceMetadata` objects.\n *\n * @returns {Object} imageSet.\n */\nconst makeDisplaySet = (series, instances) => {\n  const instance = instances[0];\n  const imageSet = new ImageSet(instances);\n  const seriesData = series.getData();\n\n  // set appropriate attributes to image set...\n  imageSet.setAttributes({\n    displaySetInstanceUID: imageSet.uid, // create a local alias for the imageSet UID\n    SeriesDate: seriesData.SeriesDate,\n    SeriesTime: seriesData.SeriesTime,\n    SeriesInstanceUID: series.getSeriesInstanceUID(),\n    SeriesNumber: instance.getTagValue('SeriesNumber'),\n    SeriesDescription: instance.getTagValue('SeriesDescription'),\n    numImageFrames: instances.length,\n    frameRate: instance.getTagValue('FrameTime'),\n    Modality: instance.getTagValue('Modality'),\n    isMultiFrame: isMultiFrame(instance),\n  });\n\n  // Sort the images in this series by instanceNumber\n  const shallSort = true; //!OHIF.utils.ObjectPath.get(Meteor, 'settings.public.ui.sortSeriesByIncomingOrder');\n  if (shallSort) {\n    imageSet.sortBy((a, b) => {\n      // Sort by InstanceNumber (0020,0013)\n      return (\n        (parseInt(a.getTagValue('InstanceNumber', 0)) || 0) -\n        (parseInt(b.getTagValue('InstanceNumber', 0)) || 0)\n      );\n    });\n  }\n\n  // Include the first image instance number (after sorted)\n  imageSet.setAttribute(\n    'InstanceNumber',\n    imageSet.getImage(0).getTagValue('InstanceNumber')\n  );\n\n  const displayReconstructableInfo = isDisplaySetReconstructable(instances);\n  imageSet.isReconstructable = displayReconstructableInfo.value;\n\n  let displaySpacingInfo = undefined;\n  if (shallSort && imageSet.isReconstructable) {\n    // sort images by image position\n    imageSet.sortByImagePositionPatient();\n\n    // check if the spacing is uniform and update isReconstructable\n    const datasetIs4D = displayReconstructableInfo.reconstructionIssues.find(\n      issue => issue === ReconstructionIssues.DATASET_4D\n    );\n    displaySpacingInfo = isSpacingUniform(imageSet.images, datasetIs4D);\n    imageSet.isReconstructable = displaySpacingInfo.isUniform;\n\n    if (displaySpacingInfo.missingFrames) {\n      // TODO -> This is currently unused, but may be used for reconstructing\n      // Volumes with gaps later on.\n      imageSet.missingFrames = displaySpacingInfo.missingFrames;\n    }\n  }\n\n  if (!imageSet.displayReconstructableInfo) {\n    // It is not reconstrabale Save type of warning\n    imageSet.reconstructionIssues = displaySpacingInfo\n      ? displayReconstructableInfo.reconstructionIssues.concat(\n          displaySpacingInfo.reconstructionIssues\n        )\n      : displayReconstructableInfo.reconstructionIssues;\n  }\n\n  imageSet.isSOPClassUIDSupported = true;\n\n  return imageSet;\n};\n\nconst isSingleImageModality = Modality => {\n  return Modality === 'CR' || Modality === 'MG' || Modality === 'DX';\n};\n\nfunction getSopClassUIDs(series) {\n  const uniqueSopClassUIDsInSeries = new Set();\n  series.forEachInstance(instance => {\n    const instanceSopClassUID = instance.getTagValue('SOPClassUID');\n\n    uniqueSopClassUIDsInSeries.add(instanceSopClassUID);\n  });\n  const sopClassUIDs = Array.from(uniqueSopClassUIDsInSeries);\n\n  return sopClassUIDs;\n}\n\n/**\n * @private\n * @param {SeriesMetadata} series\n * @param {StudyMetadata} study\n * @param {string[]} sopClassUIDs\n */\nfunction _getDisplaySetFromSopClassModule(\n  sopClassHandlerExtensions, // TODO: Update Usage\n  series,\n  study,\n  sopClassUIDs\n) {\n  // TODO: For now only use the plugins if all instances have the same SOPClassUID\n  if (sopClassUIDs.length !== 1) {\n    console.warn(\n      'getDisplaySetFromSopClassPlugin: More than one SOPClassUID in the same series is not yet supported.'\n    );\n    return;\n  }\n\n  const SOPClassUID = sopClassUIDs[0];\n  const sopClassHandlerModules = sopClassHandlerExtensions.map(extension => {\n    return extension.module;\n  });\n\n  const handlersForSopClassUID = sopClassHandlerModules.filter(module => {\n    return module.sopClassUIDs.includes(SOPClassUID);\n  });\n\n  // TODO: Sort by something, so we can determine which plugin to use\n  if (!handlersForSopClassUID || !handlersForSopClassUID.length) {\n    return;\n  }\n\n  const plugin = handlersForSopClassUID[0];\n  const headers = DICOMWeb.getAuthorizationHeader();\n  const errorInterceptor = errorHandler.getHTTPErrorHandler();\n  const dicomWebClient = new dwc({\n    url: study.getData().wadoRoot,\n    headers,\n    errorInterceptor,\n    requestHooks: [getXHRRetryRequestHook()],\n  });\n\n  let displaySet = plugin.getDisplaySetFromSeries(\n    series,\n    study,\n    dicomWebClient,\n    headers\n  );\n  if (displaySet && !displaySet.Modality) {\n    const instance = series.getFirstInstance();\n    displaySet.Modality = instance.getTagValue('Modality');\n  }\n  return displaySet;\n}\n\n/**\n * Returns the referenced series instance UIDs by searching the information in the\n * ReferencedSeriesSequence.\n * @param {object} derivatedDisplaySet.metadata\n * @return {array[string]} referenced series instance UIDs.\n */\nfunction _findReferencedSeriesInstanceUIDsFromReferencedSeriesSequence(\n  metadata\n) {\n  if (!metadata.ReferencedSeriesSequence) {\n    return;\n  }\n\n  let referencedSeriesInstanceUIDs;\n  const ReferencedSeriesSequence = _toArray(metadata.ReferencedSeriesSequence);\n\n  referencedSeriesInstanceUIDs = ReferencedSeriesSequence.map(\n    ReferencedSeries => ReferencedSeries.SeriesInstanceUID\n  );\n\n  return referencedSeriesInstanceUIDs;\n}\n\n/**\n * Returns the referenced series instance UIDs by searching the information in the\n * ReferencedImageSequence.\n * @param {object} derivatedDisplaySet.metadata\n * @param {array[object]} displaysets\n * @return {array[string]} referenced series instance UIDs.\n */\nfunction _findReferencedSeriesInstanceUIDsFromReferencedImageSequence(\n  metadata,\n  displaySets\n) {\n  if (!metadata.ReferencedImageSequence) {\n    return;\n  }\n\n  let referencedSeriesInstanceUIDs;\n  const referencedImageArray = _toArray(metadata.ReferencedImageSequence);\n  for (let i = 0; i < referencedImageArray.length; i++) {\n    const { ReferencedSOPInstanceUID } = referencedImageArray[i];\n    if (!ReferencedSOPInstanceUID) {\n      continue;\n    }\n\n    referencedSeriesInstanceUIDs = _findReferencedSeriesInstanceUIDsFromSOPInstanceUID(\n      displaySets,\n      ReferencedSOPInstanceUID\n    );\n\n    if (\n      referencedSeriesInstanceUIDs &&\n      referencedSeriesInstanceUIDs.length !== 0\n    ) {\n      break;\n    }\n  }\n\n  return referencedSeriesInstanceUIDs;\n}\n\n/**\n * Returns the referenced series instance UIDs by searching the information in the\n * SourceImageSequence.\n * @param {object} derivatedDisplaySet.metadata\n * @param {array[object]} displaysets\n * @return {array[string]} referenced series instance UIDs.\n */\nfunction _findReferencedSeriesInstanceUIDsFromSourceImageSequence(\n  metadata,\n  displaySets\n) {\n  let SourceImageSequence;\n\n  if (metadata.SourceImageSequence) {\n    SourceImageSequence = metadata.SourceImageSequence;\n  } else {\n    const { PerFrameFunctionalGroupsSequence } = metadata;\n    const firstFunctionalGroups = _toArray(PerFrameFunctionalGroupsSequence)[0];\n    if (firstFunctionalGroups) {\n      const { DerivationImageSequence } = firstFunctionalGroups;\n      SourceImageSequence = DerivationImageSequence;\n    }\n  }\n\n  if (!SourceImageSequence) {\n    return;\n  }\n\n  const sourceImageArray = _toArray(SourceImageSequence);\n\n  let referencedSeriesInstanceUIDs;\n  for (let i = 0; i < sourceImageArray.length; i++) {\n    const { ReferencedSOPInstanceUID } = sourceImageArray[i];\n    referencedSeriesInstanceUIDs = _findReferencedSeriesInstanceUIDsFromSOPInstanceUID(\n      displaySets,\n      ReferencedSOPInstanceUID\n    );\n    if (\n      referencedSeriesInstanceUIDs &&\n      referencedSeriesInstanceUIDs.length !== 0\n    ) {\n      break;\n    }\n  }\n\n  return referencedSeriesInstanceUIDs;\n}\n\n/**\n * Returns the referenced series instance UIDs by searching the information in the\n * SOPInstanceUID of the displaySets.\n * @param {array[object]} displaysets\n * @param {string} SOPInstanceUID\n * @return {array[string]} referenced series instance UIDs.\n */\nfunction _findReferencedSeriesInstanceUIDsFromSOPInstanceUID(\n  displaySets,\n  SOPInstanceUID\n) {\n  const imageSets = displaySets.filter(ds => ds instanceof ImageSet);\n\n  for (let i = 0; i < imageSets.length; i++) {\n    const { images } = imageSets[i];\n    if (!images) {\n      continue;\n    }\n    for (let j = 0; j < images.length; j++) {\n      const image = images[j];\n      if (!image) {\n        continue;\n      }\n      if (image.SOPInstanceUID === SOPInstanceUID) {\n        return [image.getData().metadata.SeriesInstanceUID];\n      }\n    }\n  }\n}\n\nfunction _toArray(arrayOrObject) {\n  return Array.isArray(arrayOrObject) ? arrayOrObject : [arrayOrObject];\n}\n\nexport { StudyMetadata };\n","import { sopClassDictionary } from './sopClassDictionary';\nimport { isImage } from './isImage';\n\n/**\n * Naturalize SOP Class UID which do not have image data\n * @param {string} SOPClassUID - SOP Class UID to be converted\n * @returns {string} - human readable name\n */\nexport const naturalizeSOPClassUID = SOPClassUID => {\n  let naturalizedName = '';\n  if (!SOPClassUID) return naturalizedName;\n  if (!isImage) return naturalizedName;\n\n  if (sopClassDictionary.MRSpectroscopyStorage === SOPClassUID) {\n    naturalizedName = 'MRSpectroscopy';\n  } else if (sopClassDictionary.EnhancedUSVolumeStorage === SOPClassUID) {\n    naturalizedName = 'EnhancedUSVolume';\n  } else if (sopClassDictionary.Sop12LeadECGWaveformStorage === SOPClassUID) {\n    naturalizedName = 'Sop12LeadECGWaveform';\n  } else if (sopClassDictionary.GeneralECGWaveformStorage === SOPClassUID) {\n    naturalizedName = 'GeneralECGWaveform';\n  } else if (sopClassDictionary.AmbulatoryECGWaveformStorage === SOPClassUID) {\n    naturalizedName = 'AECAmbulatoryECGWaveformGW';\n  } else if (sopClassDictionary.HemodynamicWaveformStorage === SOPClassUID) {\n    naturalizedName = 'HemodynamicWaveform';\n  } else if (\n    sopClassDictionary.CardiacElectrophysiologyWaveformStorage === SOPClassUID\n  ) {\n    naturalizedName = 'CardiacElectrophysiologyWaveform';\n  } else if (\n    sopClassDictionary.BasicVoiceAudioWaveformStorage === SOPClassUID\n  ) {\n    naturalizedName = 'BasicVoiceAudioWaveform';\n  } else if (sopClassDictionary.GeneralAudioWaveformStorage === SOPClassUID) {\n    naturalizedName = 'GGeneralAudioWaveformAW';\n  } else if (sopClassDictionary.ArterialPulseWaveformStorage === SOPClassUID) {\n    naturalizedName = 'APArterialPulseWaveformW';\n  } else if (sopClassDictionary.RespiratoryWaveformStorage === SOPClassUID) {\n    naturalizedName = 'RespiratoryWaveform';\n  } else if (\n    sopClassDictionary.GrayscaleSoftcopyPresentationStateStorage === SOPClassUID\n  ) {\n    naturalizedName = 'GrayscaleSoftcopyPresentationState';\n  } else if (\n    sopClassDictionary.ColorSoftcopyPresentationStateStorage === SOPClassUID\n  ) {\n    naturalizedName = 'ColorSoftcopyPresentationState';\n  } else if (\n    sopClassDictionary.PseudoColorSoftcopyPresentationStateStorage ===\n    SOPClassUID\n  ) {\n    naturalizedName = 'PseudoColorSoftcopyPresentationState';\n  } else if (\n    sopClassDictionary.BlendingSoftcopyPresentationStateStorage === SOPClassUID\n  ) {\n    naturalizedName = 'BlendingSoftcopyPresentationState';\n  } else if (\n    sopClassDictionary.XAXRFGrayscaleSoftcopyPresentationStateStorage ===\n    SOPClassUID\n  ) {\n    naturalizedName = 'XAXRFGrayscaleSoftcopyPresentationState';\n  } else if (sopClassDictionary.RawDataStorage === SOPClassUID) {\n    naturalizedName = 'RawData';\n  } else if (sopClassDictionary.SpatialRegistrationStorage === SOPClassUID) {\n    naturalizedName = 'SpatialRegistration';\n  } else if (sopClassDictionary.SpatialFiducialsStorage === SOPClassUID) {\n    naturalizedName = 'SpatialFiducials';\n  } else if (\n    sopClassDictionary.DeformableSpatialRegistrationStorage === SOPClassUID\n  ) {\n    naturalizedName = 'DeformableSpatialRegistration';\n  } else if (sopClassDictionary.SegmentationStorage === SOPClassUID) {\n    naturalizedName = 'SEG';\n  } else if (sopClassDictionary.SurfaceSegmentationStorage === SOPClassUID) {\n    naturalizedName = 'SurfaceSEG';\n  } else if (sopClassDictionary.RealWorldValueMappingStorage === SOPClassUID) {\n    naturalizedName = 'RealWorldValueMapping';\n  } else if (sopClassDictionary.SurfaceScanMeshStorage === SOPClassUID) {\n    naturalizedName = 'SurfaceScanMesh';\n  } else if (sopClassDictionary.SurfaceScanPointCloudStorage === SOPClassUID) {\n    naturalizedName = 'SurfaceScanPointCloud';\n  } else if (\n    sopClassDictionary.StereometricRelationshipStorage === SOPClassUID\n  ) {\n    naturalizedName = 'StereometricRelationship';\n  } else if (sopClassDictionary.LensometryMeasurementsStorage === SOPClassUID) {\n    naturalizedName = 'LensometryMeasurements';\n  } else if (\n    sopClassDictionary.AutorefractionMeasurementsStorage === SOPClassUID\n  ) {\n    naturalizedName = 'AutorefractionMeasurements';\n  } else if (\n    sopClassDictionary.KeratometryMeasurementsStorage === SOPClassUID\n  ) {\n    naturalizedName = 'KeratometryMeasurements';\n  } else if (\n    sopClassDictionary.SubjectiveRefractionMeasurementsStorage === SOPClassUID\n  ) {\n    naturalizedName = 'SubjectiveRefractionMeasurements';\n  } else if (\n    sopClassDictionary.VisualAcuityMeasurementsStorage === SOPClassUID\n  ) {\n    naturalizedName = 'VisualAcuityMeasurements';\n  } else if (\n    sopClassDictionary.SpectaclePrescriptionReportStorage === SOPClassUID\n  ) {\n    naturalizedName = 'SpectaclePrescriptionReport';\n  } else if (\n    sopClassDictionary.OphthalmicAxialMeasurementsStorage === SOPClassUID\n  ) {\n    naturalizedName = 'OphthalmicAxialMeasurements';\n  } else if (\n    sopClassDictionary.IntraocularLensCalculationsStorage === SOPClassUID\n  ) {\n    naturalizedName = 'IntraocularLensCalculations';\n  } else if (\n    sopClassDictionary.MacularGridThicknessandVolumeReport === SOPClassUID\n  ) {\n    naturalizedName = 'MacularGridThicknessandVolume';\n  } else if (\n    sopClassDictionary.OphthalmicVisualFieldStaticPerimetryMeasurementsStorage ===\n    SOPClassUID\n  ) {\n    naturalizedName = 'OphthalmicVisualFieldStaticPerimetryMeasurements';\n  } else if (sopClassDictionary.OphthalmicThicknessMapStorage === SOPClassUID) {\n    naturalizedName = 'OphthalmicThicknessMap';\n  } else if (sopClassDictionary.CornealTopographyMapStorage === SOPClassUID) {\n    naturalizedName = 'CornealTopographyMap';\n  } else if (sopClassDictionary.BasicTextSR === SOPClassUID) {\n    naturalizedName = 'BasicTextSR';\n  } else if (sopClassDictionary.EnhancedSR === SOPClassUID) {\n    naturalizedName = 'EnhancedSR';\n  } else if (sopClassDictionary.ComprehensiveSR === SOPClassUID) {\n    naturalizedName = 'ComprehensiveSR';\n  } else if (sopClassDictionary.Comprehensive3DSR === SOPClassUID) {\n    naturalizedName = 'Comprehensive3DSR';\n  } else if (sopClassDictionary.ProcedureLog === SOPClassUID) {\n    naturalizedName = 'ProcedureLog';\n  } else if (sopClassDictionary.MammographyCADSR === SOPClassUID) {\n    naturalizedName = 'MammographyCADSR';\n  } else if (sopClassDictionary.KeyObjectSelection === SOPClassUID) {\n    naturalizedName = 'KeyObject';\n  } else if (sopClassDictionary.ChestCADSR === SOPClassUID) {\n    naturalizedName = 'ChestCADSR';\n  } else if (sopClassDictionary.XRayRadiationDoseSR === SOPClassUID) {\n    naturalizedName = 'XRayRadiationDoseSR';\n  } else if (\n    sopClassDictionary.RadiopharmaceuticalRadiationDoseSR === SOPClassUID\n  ) {\n    naturalizedName = 'RadiopharmaceuticalRadiationDoseSR';\n  } else if (sopClassDictionary.ColonCADSR === SOPClassUID) {\n    naturalizedName = 'ColonCADSR';\n  } else if (\n    sopClassDictionary.ImplantationPlanSRDocumentStorage === SOPClassUID\n  ) {\n    naturalizedName = 'ImplantationPlanSRDocument';\n  } else if (sopClassDictionary.EncapsulatedPDFStorage === SOPClassUID) {\n    naturalizedName = 'EncapsulatedPDF';\n  } else if (sopClassDictionary.EncapsulatedCDAStorage === SOPClassUID) {\n    naturalizedName = 'EncapsulatedCDA';\n  } else if (sopClassDictionary.BasicStructuredDisplayStorage === SOPClassUID) {\n    naturalizedName = 'BasicStructuredDisplay';\n  } else if (sopClassDictionary.RTDoseStorage === SOPClassUID) {\n    naturalizedName = 'RTDose';\n  } else if (sopClassDictionary.RTStructureSetStorage === SOPClassUID) {\n    naturalizedName = 'RTStructureSet';\n  } else if (sopClassDictionary.RTBeamsTreatmentRecordStorage === SOPClassUID) {\n    naturalizedName = 'RTBeamsTreatmentRecord';\n  } else if (sopClassDictionary.RTPlanStorage === SOPClassUID) {\n    naturalizedName = 'RTPlan';\n  } else if (\n    sopClassDictionary.RTBrachyTreatmentRecordStorage === SOPClassUID\n  ) {\n    naturalizedName = 'RTBrachyTreatmentRecord';\n  } else if (\n    sopClassDictionary.RTTreatmentSummaryRecordStorage === SOPClassUID\n  ) {\n    naturalizedName = 'RTTreatmentSummaryRecord';\n  } else if (sopClassDictionary.RTIonPlanStorage === SOPClassUID) {\n    naturalizedName = 'RTIonPlan';\n  } else if (\n    sopClassDictionary.RTIonBeamsTreatmentRecordStorage === SOPClassUID\n  ) {\n    naturalizedName = 'RTIonBeamsTreatmentRecord';\n  } else if (\n    sopClassDictionary.RTBeamsDeliveryInstructionStorage === SOPClassUID\n  ) {\n    naturalizedName = 'RTBeamsDeliveryInstruction';\n  } else if (sopClassDictionary.GenericImplantTemplateStorage === SOPClassUID) {\n    naturalizedName = 'GenericImplantTemplate';\n  } else if (\n    sopClassDictionary.ImplantAssemblyTemplateStorage === SOPClassUID\n  ) {\n    naturalizedName = 'ImplantAssemblyTemplate';\n  } else if (sopClassDictionary.ImplantTemplateGroupStorage === SOPClassUID) {\n    naturalizedName = 'ImplantTemplateGroup';\n  }\n\n  return naturalizedName;\n};\n","import guid from '../utils/guid.js';\nimport OHIFError from './OHIFError';\nimport { Vector3 } from 'cornerstone-math';\n\nconst OBJECT = 'object';\n\n/**\n * This class defines an ImageSet object which will be used across the viewer. This object represents\n * a list of images that are associated by any arbitrary criteria being thus content agnostic. Besides the\n * main attributes (images and uid) it allows additional attributes to be appended to it (currently\n * indiscriminately, but this should be changed).\n */\nclass ImageSet {\n  constructor(images) {\n    if (Array.isArray(images) !== true) {\n      throw new OHIFError('ImageSet expects an array of images');\n    }\n\n    // @property \"images\"\n    Object.defineProperty(this, 'images', {\n      enumerable: false,\n      configurable: false,\n      writable: false,\n      value: images,\n    });\n\n    // @property \"uid\"\n    Object.defineProperty(this, 'uid', {\n      enumerable: false,\n      configurable: false,\n      writable: false,\n      value: guid(), // Unique ID of the instance\n    });\n  }\n\n  getUID() {\n    return this.uid;\n  }\n\n  setAttribute(attribute, value) {\n    this[attribute] = value;\n  }\n\n  getAttribute(attribute) {\n    return this[attribute];\n  }\n\n  setAttributes(attributes) {\n    if (typeof attributes === OBJECT && attributes !== null) {\n      const imageSet = this,\n        hasOwn = Object.prototype.hasOwnProperty;\n      for (let attribute in attributes) {\n        if (hasOwn.call(attributes, attribute)) {\n          imageSet[attribute] = attributes[attribute];\n        }\n      }\n    }\n  }\n\n  getImage(index) {\n    return this.images[index];\n  }\n\n  sortBy(sortingCallback) {\n    return this.images.sort(sortingCallback);\n  }\n\n  sortByImagePositionPatient() {\n    const images = this.images;\n    const referenceImagePositionPatient = _getImagePositionPatient(images[0]);\n\n    const refIppVec = new Vector3(\n      referenceImagePositionPatient[0],\n      referenceImagePositionPatient[1],\n      referenceImagePositionPatient[2]\n    );\n\n    const ImageOrientationPatient = _getImageOrientationPatient(images[0]);\n\n    const scanAxisNormal = new Vector3(\n      ImageOrientationPatient[0],\n      ImageOrientationPatient[1],\n      ImageOrientationPatient[2]\n    ).cross(\n      new Vector3(\n        ImageOrientationPatient[3],\n        ImageOrientationPatient[4],\n        ImageOrientationPatient[5]\n      )\n    );\n\n    const distanceImagePairs = images.map(function(image) {\n      const ippVec = new Vector3(..._getImagePositionPatient(image));\n      const positionVector = refIppVec.clone().sub(ippVec);\n      const distance = positionVector.dot(scanAxisNormal);\n\n      return {\n        distance,\n        image,\n      };\n    });\n\n    distanceImagePairs.sort(function(a, b) {\n      return b.distance - a.distance;\n    });\n\n    const sortedImages = distanceImagePairs.map(a => a.image);\n\n    images.sort(function(a, b) {\n      return sortedImages.indexOf(a) - sortedImages.indexOf(b);\n    });\n  }\n}\n\nfunction _getImagePositionPatient(image) {\n  return image.getData().metadata.ImagePositionPatient;\n}\n\nfunction _getImageOrientationPatient(image) {\n  return image.getData().metadata.ImageOrientationPatient;\n}\n\nexport default ImageSet;\n","import getWADORSImageId from './getWADORSImageId';\n\n// https://stackoverflow.com/a/6021027/3895126\nfunction updateQueryStringParameter(uri, key, value) {\n  const regex = new RegExp('([?&])' + key + '=.*?(&|$)', 'i');\n  const separator = uri.indexOf('?') !== -1 ? '&' : '?';\n  if (uri.match(regex)) {\n    return uri.replace(regex, '$1' + key + '=' + value + '$2');\n  } else {\n    return uri + separator + key + '=' + value;\n  }\n}\n\n/**\n * Obtain an imageId for Cornerstone from an image instance\n *\n * @param instance\n * @param frame\n * @param thumbnail\n * @returns {string} The imageId to be used by Cornerstone\n */\nexport default function getImageId(instance, frame, thumbnail = false) {\n  if (!instance) {\n    return;\n  }\n\n  if (typeof instance.getImageId === 'function') {\n    return instance.getImageId();\n  }\n\n  if (instance.url) {\n    if (frame !== undefined) {\n      instance.url = updateQueryStringParameter(instance.url, 'frame', frame);\n    }\n\n    return instance.url;\n  }\n\n  const renderingAttr = thumbnail ? 'thumbnailRendering' : 'imageRendering';\n\n  if (\n    !instance[renderingAttr] ||\n    instance[renderingAttr] === 'wadouri' ||\n    !instance.wadorsuri\n  ) {\n    let imageId = 'dicomweb:' + instance.wadouri;\n    if (frame !== undefined) {\n      imageId += '&frame=' + frame;\n    }\n\n    return imageId;\n  } else {\n    return getWADORSImageId(instance, frame, thumbnail); // WADO-RS Retrieve Frame\n  }\n}\n","import OHIFError from './OHIFError';\n\n/**\n * Abstract class to fetch study metadata.\n */\nexport class StudyMetadataSource {\n  /**\n   * Get study metadata for a study with given study InstanceUID.\n   * @param {String} studyInstanceUID Study InstanceUID.\n   */\n  getByInstanceUID(studyInstanceUID) {\n    /**\n     * Please override this method on a specialized class.\n     */\n    throw new OHIFError(\n      'StudyMetadataSource::getByInstanceUID is not overriden. Please, override it in a specialized class. See OHIFStudyMetadataSource for example'\n    );\n  }\n\n  /**\n   * Load study info and study metadata for a given study into the viewer.\n   * @param {StudyMetadata} study StudyMetadata object.\n   */\n  loadStudy(study) {\n    /**\n     * Please override this method on a specialized class.\n     */\n    throw new OHIFError(\n      'StudyMetadataSource::loadStudy is not overriden. Please, override it in a specialized class. See OHIFStudyMetadataSource for example'\n    );\n  }\n}\n","const debugMode = !!(\n  process.env.NODE_ENV !== 'production' && process.env.REACT_APP_I18N_DEBUG\n);\n\nconst detectionOptions = {\n  // order and from where user language should be detected\n  order: ['querystring', 'cookie', 'localStorage', 'navigator', 'htmlTag', 'path', 'subdomain'],\n\n  // keys or params to lookup language from\n  lookupQuerystring: 'lng',\n  lookupCookie: 'i18next',\n  lookupLocalStorage: 'i18nextLng',\n  lookupFromPathIndex: 0,\n  lookupFromSubdomainIndex: 0,\n\n  // cache user language on\n  caches: ['localStorage', 'cookie'],\n  excludeCacheFor: ['cimode'], // languages to not persist (cookie, localStorage)\n\n  // optional htmlTag with lang attribute, the default is:\n  htmlTag: document.documentElement\n};\n\nexport { debugMode, detectionOptions };\n","import { debugMode } from './config';\n\nexport default (message, level = 'log') => {\n  if (debugMode) {\n    // eslint-disable-next-line\n    console[level]('@ohif/i18n: ', message);\n  }\n};\n","import de from './de/';\nimport en_US from './en-US/';\nimport es from './es/';\nimport fr from './fr/';\nimport ja_JP from './ja-JP/';\nimport nl from './nl/';\nimport pt_BR from './pt-BR/';\nimport ru from './ru/';\nimport vi from './vi/';\nimport zh from './zh/';\n\nexport default {\n  ...de,\n  ...en_US,\n  ...es,\n  ...fr,\n  ...ja_JP,\n  ...nl,\n  ...pt_BR,\n  ...ru,\n  ...vi,\n  ...zh,\n};\n","import AboutModal from './AboutModal.json';\nimport Buttons from './Buttons.json';\nimport CineDialog from './CineDialog.json';\nimport Common from './Common.json';\nimport DatePicker from './DatePicker.json';\nimport Header from './Header.json';\nimport MeasurementTable from './MeasurementTable.json';\nimport StudyList from './StudyList.json';\nimport UserPreferencesModal from './UserPreferencesModal.json';\nimport ViewportDownloadForm from './ViewportDownloadForm.json';\n\nexport default { \n  'de': {\n    AboutModal,\n    Buttons,\n    CineDialog,\n    Common,\n    DatePicker,\n    Header,\n    MeasurementTable,\n    StudyList,\n    UserPreferencesModal,\n    ViewportDownloadForm,\n  }\n};\n","import AboutModal from './AboutModal.json';\nimport Buttons from './Buttons.json';\nimport CineDialog from './CineDialog.json';\nimport Common from './Common.json';\nimport DatePicker from './DatePicker.json';\nimport Header from './Header.json';\nimport MeasurementTable from './MeasurementTable.json';\nimport StudyList from './StudyList.json';\nimport UserPreferencesModal from './UserPreferencesModal.json';\nimport ViewportDownloadForm from './ViewportDownloadForm.json';\n\nexport default { \n  'en-US': {\n    AboutModal,\n    Buttons,\n    CineDialog,\n    Common,\n    DatePicker,\n    Header,\n    MeasurementTable,\n    StudyList,\n    UserPreferencesModal,\n    ViewportDownloadForm,\n  }\n};\n","import AboutModal from './AboutModal.json';\nimport Buttons from './Buttons.json';\nimport CineDialog from './CineDialog.json';\nimport Common from './Common.json';\nimport DatePicker from './DatePicker.json';\nimport Header from './Header.json';\nimport MeasurementTable from './MeasurementTable.json';\nimport StudyList from './StudyList.json';\nimport UserPreferencesModal from './UserPreferencesModal.json';\nimport ViewportDownloadForm from './ViewportDownloadForm.json';\n\nexport default { \n  'es': {\n    AboutModal,\n    Buttons,\n    CineDialog,\n    Common,\n    DatePicker,\n    Header,\n    MeasurementTable,\n    StudyList,\n    UserPreferencesModal,\n    ViewportDownloadForm,\n  }\n};\n","import AboutModal from './AboutModal.json';\nimport Buttons from './Buttons.json';\nimport CineDialog from './CineDialog.json';\nimport Common from './Common.json';\nimport DatePicker from './DatePicker.json';\nimport Header from './Header.json';\nimport MeasurementTable from './MeasurementTable.json';\nimport StudyList from './StudyList.json';\nimport UserPreferencesModal from './UserPreferencesModal.json';\nimport ViewportDownloadForm from './ViewportDownloadForm.json';\n\nexport default { \n  'fr': {\n    AboutModal,\n    Buttons,\n    CineDialog,\n    Common,\n    DatePicker,\n    Header,\n    MeasurementTable,\n    StudyList,\n    UserPreferencesModal,\n    ViewportDownloadForm,\n  }\n};\n","import AboutModal from './AboutModal.json';\nimport Buttons from './Buttons.json';\nimport CineDialog from './CineDialog.json';\nimport Common from './Common.json';\nimport DatePicker from './DatePicker.json';\nimport Header from './Header.json';\nimport MeasurementTable from './MeasurementTable.json';\nimport StudyList from './StudyList.json';\nimport UserPreferencesModal from './UserPreferencesModal.json';\nimport ViewportDownloadForm from './ViewportDownloadForm.json';\n\nexport default { \n  'ja-JP': {\n    AboutModal,\n    Buttons,\n    CineDialog,\n    Common,\n    DatePicker,\n    Header,\n    MeasurementTable,\n    StudyList,\n    UserPreferencesModal,\n    ViewportDownloadForm,\n  }\n};\n","import AboutModal from './AboutModal.json';\nimport Buttons from './Buttons.json';\nimport CineDialog from './CineDialog.json';\nimport Common from './Common.json';\nimport DatePicker from './DatePicker.json';\nimport Header from './Header.json';\nimport MeasurementTable from './MeasurementTable.json';\nimport StudyList from './StudyList.json';\nimport UserPreferencesModal from './UserPreferencesModal.json';\nimport ViewportDownloadForm from './ViewportDownloadForm.json';\n\nexport default { \n  'nl': {\n    AboutModal,\n    Buttons,\n    CineDialog,\n    Common,\n    DatePicker,\n    Header,\n    MeasurementTable,\n    StudyList,\n    UserPreferencesModal,\n    ViewportDownloadForm,\n  }\n};\n","import AboutModal from './AboutModal.json';\nimport Buttons from './Buttons.json';\nimport CineDialog from './CineDialog.json';\nimport Common from './Common.json';\nimport DatePicker from './DatePicker.json';\nimport Header from './Header.json';\nimport MeasurementTable from './MeasurementTable.json';\nimport StudyList from './StudyList.json';\nimport UserPreferencesModal from './UserPreferencesModal.json';\nimport ViewportDownloadForm from './ViewportDownloadForm.json';\n\nexport default { \n  'pt-BR': {\n    AboutModal,\n    Buttons,\n    CineDialog,\n    Common,\n    DatePicker,\n    Header,\n    MeasurementTable,\n    StudyList,\n    UserPreferencesModal,\n    ViewportDownloadForm,\n  }\n};\n","import AboutModal from './AboutModal.json';\nimport Buttons from './Buttons.json';\nimport CineDialog from './CineDialog.json';\nimport Common from './Common.json';\nimport DatePicker from './DatePicker.json';\nimport Header from './Header.json';\nimport MeasurementTable from './MeasurementTable.json';\nimport StudyList from './StudyList.json';\nimport UserPreferencesModal from './UserPreferencesModal.json';\nimport ViewportDownloadForm from './ViewportDownloadForm.json';\n\nexport default { \n  'ru': {\n    AboutModal,\n    Buttons,\n    CineDialog,\n    Common,\n    DatePicker,\n    Header,\n    MeasurementTable,\n    StudyList,\n    UserPreferencesModal,\n    ViewportDownloadForm,\n  }\n};\n","import AboutModal from './AboutModal.json';\nimport Buttons from './Buttons.json';\nimport CineDialog from './CineDialog.json';\nimport Common from './Common.json';\nimport DatePicker from './DatePicker.json';\nimport Header from './Header.json';\nimport MeasurementTable from './MeasurementTable.json';\nimport StudyList from './StudyList.json';\nimport UserPreferencesModal from './UserPreferencesModal.json';\nimport ViewportDownloadForm from './ViewportDownloadForm.json';\n\nexport default { \n  'vi': {\n    AboutModal,\n    Buttons,\n    CineDialog,\n    Common,\n    DatePicker,\n    Header,\n    MeasurementTable,\n    StudyList,\n    UserPreferencesModal,\n    ViewportDownloadForm,\n  }\n};\n","import AboutModal from './AboutModal.json';\nimport Buttons from './Buttons.json';\nimport CineDialog from './CineDialog.json';\nimport Common from './Common.json';\nimport DatePicker from './DatePicker.json';\nimport Header from './Header.json';\nimport MeasurementTable from './MeasurementTable.json';\nimport StudyList from './StudyList.json';\nimport UserPreferencesModal from './UserPreferencesModal.json';\nimport ViewportDownloadForm from './ViewportDownloadForm.json';\n\nexport default { \n  'zh': {\n    AboutModal,\n    Buttons,\n    CineDialog,\n    Common,\n    DatePicker,\n    Header,\n    MeasurementTable,\n    StudyList,\n    UserPreferencesModal,\n    ViewportDownloadForm,\n  }\n};\n","const languagesMap = {\n  ar: 'Arabic',\n  am: 'Amharic',\n  bg: 'Bulgarian',\n  bn: 'Bengali',\n  ca: 'Catalan',\n  cs: 'Czech',\n  da: 'Danish',\n  de: 'German',\n  el: 'Greek',\n  en: 'English',\n  'en-GB': 'English (Great Britain)',\n  'en-US': 'English (USA)',\n  es: 'Spanish',\n  et: 'Estonian',\n  fa: 'Persian',\n  fi: 'Finnish',\n  fil: 'Filipino',\n  fr: 'French',\n  gu: 'Gujarati',\n  he: 'Hebrew',\n  hi: 'Hindi',\n  hr: 'Croatian',\n  hu: 'Hungarian',\n  id: 'Indonesian',\n  it: 'Italian',\n  ja: 'Japanese',\n  'ja-JP': 'Japanese (Japan)',\n  kn: 'Kannada',\n  ko: 'Korean',\n  lt: 'Lithuanian',\n  lv: 'Latvian',\n  ml: 'Malayalam',\n  mr: 'Marathi',\n  ms: 'Malay',\n  nl: 'Dutch',\n  no: 'Norwegian',\n  pl: 'Polish',\n  'pt-BR': 'Portuguese (Brazil)',\n  'pt-PT': 'Portuguese (Portugal)',\n  ro: 'Romanian',\n  ru: 'Russian',\n  sk: 'Slovak',\n  sl: 'Slovenian',\n  sr: 'Serbian',\n  sv: 'Swedish',\n  sw: 'Swahili',\n  ta: 'Tamil',\n  te: 'Telugu',\n  th: 'Thai',\n  tr: 'Turkish',\n  uk: 'Ukrainian',\n  vi: 'Vietnamese',\n  zh: 'Chinese',\n  'zh-CN': 'Chinese (China)',\n  'zh-TW': 'Chinese (Taiwan)',\n};\n\nexport default function getAvailableLanguagesInfo(locales) {\n  const availableLanguagesInfo = [];\n\n  Object.keys(locales).forEach(key => {\n    availableLanguagesInfo.push({\n      value: key,\n      label: languagesMap[key] || key,\n    });\n  });\n\n  return availableLanguagesInfo;\n}\n","import i18n from 'i18next';\nimport Backend from 'i18next-locize-backend';\nimport LastUsed from 'locize-lastused';\nimport Editor from 'locize-editor';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport { initReactI18next } from 'react-i18next';\nimport customDebug from './debugger';\nimport pkg from '../package.json';\nimport { debugMode, detectionOptions } from './config';\n\n// Note: The index.js files inside src/locales are dynamically generated\n// by the pullTranslations.sh script\nimport locales from './locales';\n\nfunction addLocales(newLocales) {\n  customDebug(`Adding locales ${newLocales}`, 'info');\n\n  let resourceBundle = [];\n\n  Object.keys(newLocales).map(key => {\n    Object.keys(newLocales[key]).map(namespace => {\n      const locale = newLocales[key][namespace];\n      resourceBundle.push({ key, namespace, locale });\n      i18n.addResourceBundle(key, namespace, locale, true, true);\n    });\n  });\n\n  customDebug(`Locales added successfully`, 'info');\n  customDebug(resourceBundle, 'info');\n}\n\n/*\n * Note: Developers can add the API key to use the\n * in-context editor using environment variables.\n * (DO NOT commit the API key)\n */\nconst locizeOptions = {\n  projectId: process.env.LOCIZE_PROJECTID,\n  apiKey: process.env.LOCIZE_API_KEY,\n  referenceLng: 'en-US',\n  fallbacklng: 'en-US',\n};\n\nconst envUseLocize = !!process.env.USE_LOCIZE;\nconst envApiKeyAvailable = !!process.env.LOCIZE_API_KEY;\nconst DEFAULT_LANGUAGE = 'en-US';\n\nfunction initI18n(\n  detection = detectionOptions,\n  useLocize = envUseLocize,\n  apiKeyAvailable = envApiKeyAvailable\n) {\n  let initialized;\n\n  if (useLocize) {\n    customDebug(`Using Locize for translation files`, 'info');\n    initialized = i18n\n      // i18next-locize-backend\n      // loads translations from your project, saves new keys to it (saveMissing: true)\n      // https://github.com/locize/i18next-locize-backend\n      .use(Backend)\n      // locize-lastused\n      // sets a timestamp of last access on every translation segment on locize\n      // -> safely remove the ones not being touched for weeks/months\n      // https://github.com/locize/locize-lastused\n      .use(LastUsed)\n      // locize-editor\n      // InContext Editor of locize ?locize=true to show it\n      // https://github.com/locize/locize-editor\n      .use(Editor)\n      // detect user language\n      // learn more: https://github.com/i18next/i18next-browser-languageDetector\n      .use(LanguageDetector)\n      // pass the i18n instance to react-i18next.\n      .use(initReactI18next)\n      // init i18next\n      // for all options read: https://www.i18next.com/overview/configuration-options\n      .init({\n        fallbackLng: DEFAULT_LANGUAGE,\n        saveMissing: apiKeyAvailable,\n        debug: debugMode,\n        keySeparator: false,\n        interpolation: {\n          escapeValue: false, // not needed for react as it escapes by default\n        },\n        detection,\n        backend: locizeOptions,\n        locizeLastUsed: locizeOptions,\n        editor: {\n          ...locizeOptions,\n          onEditorSaved: async (lng, ns) => {\n            // reload that namespace in given language\n            await i18n.reloadResources(lng, ns);\n            // trigger an event on i18n which triggers a rerender\n            // based on bindI18n below in react options\n            i18n.emit('editorSaved');\n          },\n        },\n        react: {\n          useSuspense: false, // TODO: Was seeing weird errors without this\n          wait: true,\n          bindI18n: 'languageChanged editorSaved',\n        },\n      });\n  } else {\n    customDebug(`Using local translation files`, 'info');\n    initialized = i18n\n      // detect user language\n      // learn more: https://github.com/i18next/i18next-browser-languageDetector\n      .use(LanguageDetector)\n      // pass the i18n instance to react-i18next.\n      .use(initReactI18next)\n      // init i18next\n      // for all options read: https://www.i18next.com/overview/configuration-options\n      .init({\n        fallbackLng: DEFAULT_LANGUAGE,\n        resources: locales,\n        debug: debugMode,\n        keySeparator: false,\n        interpolation: {\n          escapeValue: false, // not needed for react as it escapes by default\n        },\n        detection,\n        react: {\n          wait: true,\n        },\n      });\n  }\n\n  return initialized.then(function(t) {\n    i18n.T = t;\n    customDebug(`T function available.`, 'info');\n  });\n}\n\ncustomDebug(`version ${pkg.version} loaded.`, 'info');\n\ni18n.initializing = initI18n();\ni18n.initI18n = initI18n;\ni18n.addLocales = addLocales;\ni18n.defaultLanguage = DEFAULT_LANGUAGE;\n\nimport getAvailableLanguagesInfo from './getAvailableLanguagesInfo.js';\ni18n.availableLanguages = getAvailableLanguagesInfo(locales);\n\nexport default i18n;\n","import RetrieveMetadata from './services/wado/retrieveMetadata.js';\n\nconst moduleName = 'RetrieveStudyMetadata';\n// Cache for promises. Prevents unnecessary subsequent calls to the server\nconst StudyMetaDataPromises = new Map();\n\n/**\n * Retrieves study metadata\n *\n * @param {Object} server Object with server configuration parameters\n * @param {string} StudyInstanceUID The UID of the Study to be retrieved\n * @param {Object} [filters] - Object containing filters to be applied on retrieve metadata process\n * @param {string} [filter.seriesInstanceUID] - series instance uid to filter results against\n * @param {boolean} [separateSeriesInstanceUIDFilters = false] - If true, split filtered metadata calls into multiple calls,\n * as some DICOMWeb implementations only support single filters.\n * @returns {Promise} that will be resolved with the metadata or rejected with the error\n */\nexport function retrieveStudyMetadata(\n  server,\n  StudyInstanceUID,\n  filters,\n  separateSeriesInstanceUIDFilters = false\n) {\n  // @TODO: Whenever a study metadata request has failed, its related promise will be rejected once and for all\n  // and further requests for that metadata will always fail. On failure, we probably need to remove the\n  // corresponding promise from the \"StudyMetaDataPromises\" map...\n\n  if (!server) {\n    throw new Error(`${moduleName}: Required 'server' parameter not provided.`);\n  }\n  if (!StudyInstanceUID) {\n    throw new Error(\n      `${moduleName}: Required 'StudyInstanceUID' parameter not provided.`\n    );\n  }\n\n  // Already waiting on result? Return cached promise\n  if (StudyMetaDataPromises.has(StudyInstanceUID)) {\n    return StudyMetaDataPromises.get(StudyInstanceUID);\n  }\n\n  // Create a promise to handle the data retrieval\n  let promise;\n\n  if (\n    filters &&\n    filters.seriesInstanceUID &&\n    separateSeriesInstanceUIDFilters\n  ) {\n    promise = __separateSeriesRequestToAggregatePromiseateSeriesRequestToAggregatePromise(\n      server,\n      StudyInstanceUID,\n      filters\n    );\n  } else {\n    promise = RetrieveMetadata(server, StudyInstanceUID, filters);\n\n    /*\n    promise = new Promise((resolve, reject) => {\n      RetrieveMetadata(server, StudyInstanceUID, filters).then(function(data) {\n        resolve(data);\n      }, reject);\n    });\n    */\n  }\n\n  // Store the promise in cache\n  StudyMetaDataPromises.set(StudyInstanceUID, promise);\n\n  return promise;\n}\n\n/**\n * Splits up seriesInstanceUID filters to multiple calls for platforms\n * @param {Object} server Object with server configuration parameters\n * @param {string} StudyInstanceUID The UID of the Study to be retrieved\n * @param {Object} filters - Object containing filters to be applied on retrieve metadata process\n */\nfunction __separateSeriesRequestToAggregatePromiseateSeriesRequestToAggregatePromise(\n  server,\n  StudyInstanceUID,\n  filters\n) {\n  const { seriesInstanceUID } = filters;\n  const seriesInstanceUIDs = seriesInstanceUID.split(',');\n\n  return new Promise((resolve, reject) => {\n    const promises = [];\n\n    seriesInstanceUIDs.forEach(uid => {\n      const seriesSpecificFilters = Object.assign({}, filters, {\n        seriesInstanceUID: uid,\n      });\n\n      promises.push(\n        RetrieveMetadata(server, StudyInstanceUID, seriesSpecificFilters)\n      );\n    });\n\n    Promise.all(promises).then(results => {\n      const data = results[0];\n\n      let series = [];\n\n      results.forEach(result => {\n        series = [...series, ...result.series];\n      });\n\n      data.series = series;\n\n      resolve(data);\n    }, reject);\n  });\n}\n\n/**\n * Delete the cached study metadata retrieval promise to ensure that the browser will\n * re-retrieve the study metadata when it is next requested\n *\n * @param {String} StudyInstanceUID The UID of the Study to be removed from cache\n *\n */\nexport function deleteStudyMetadataPromise(StudyInstanceUID) {\n  if (StudyMetaDataPromises.has(StudyInstanceUID)) {\n    StudyMetaDataPromises.delete(StudyInstanceUID);\n  }\n}\n","/**\n * Convert String to ArrayBuffer\n *\n * @param {String} str Input String\n * @return {ArrayBuffer} Output converted ArrayBuffer\n */\nexport default function str2ab(str) {\n  const strLen = str.length;\n  const bytes = new Uint8Array(strLen);\n\n  for (let i = 0; i < strLen; i++) {\n    bytes[i] = str.charCodeAt(i);\n  }\n\n  return bytes.buffer;\n}\n","export class ObjectPath {\n  /**\n   * Set an object property based on \"path\" (namespace) supplied creating\n   * ... intermediary objects if they do not exist.\n   * @param object {Object} An object where the properties specified on path should be set.\n   * @param path {String} A string representing the property to be set, e.g. \"user.study.series.timepoint\".\n   * @param value {Any} The value of the property that will be set.\n   * @return {Boolean} Returns \"true\" on success, \"false\" if any intermediate component of the supplied path\n   * ... is not a valid Object, in which case the property cannot be set. No excpetions are thrown.\n   */\n  static set(object, path, value) {\n    let components = ObjectPath.getPathComponents(path),\n      length = components !== null ? components.length : 0,\n      result = false;\n\n    if (length > 0 && ObjectPath.isValidObject(object)) {\n      let i = 0,\n        last = length - 1,\n        currentObject = object;\n\n      while (i < last) {\n        let field = components[i];\n\n        if (field in currentObject) {\n          if (!ObjectPath.isValidObject(currentObject[field])) {\n            break;\n          }\n        } else {\n          currentObject[field] = {};\n        }\n\n        currentObject = currentObject[field];\n        i++;\n      }\n\n      if (i === last) {\n        currentObject[components[last]] = value;\n        result = true;\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * Get an object property based on \"path\" (namespace) supplied traversing the object\n   * ... tree as necessary.\n   * @param object {Object} An object where the properties specified might exist.\n   * @param path {String} A string representing the property to be searched for, e.g. \"user.study.series.timepoint\".\n   * @return {Any} The value of the property if found. By default, returns the special type \"undefined\".\n   */\n  static get(object, path) {\n    let found, // undefined by default\n      components = ObjectPath.getPathComponents(path),\n      length = components !== null ? components.length : 0;\n\n    if (length > 0 && ObjectPath.isValidObject(object)) {\n      let i = 0,\n        last = length - 1,\n        currentObject = object;\n\n      while (i < last) {\n        let field = components[i];\n\n        const isValid = ObjectPath.isValidObject(currentObject[field]);\n        if (field in currentObject && isValid) {\n          currentObject = currentObject[field];\n          i++;\n        } else {\n          break;\n        }\n      }\n\n      if (i === last && components[last] in currentObject) {\n        found = currentObject[components[last]];\n      }\n    }\n\n    return found;\n  }\n\n  /**\n   * Check if the supplied argument is a real JavaScript Object instance.\n   * @param object {Any} The subject to be tested.\n   * @return {Boolean} Returns \"true\" if the object is a real Object instance and \"false\" otherwise.\n   */\n  static isValidObject(object) {\n    return (\n      typeof object === 'object' && object !== null && object instanceof Object\n    );\n  }\n\n  static getPathComponents(path) {\n    return typeof path === 'string' ? path.split('.') : null;\n  }\n}\n\nexport default ObjectPath;\n","const absoluteUrl = path => {\n  let absolutePath = '/';\n\n  if (!path) return absolutePath;\n\n  // TODO: Find another way to get root url\n  const absoluteUrl = window.location.origin;\n  const absoluteUrlParts = absoluteUrl.split('/');\n\n  if (absoluteUrlParts.length > 4) {\n    const rootUrlPrefixIndex = absoluteUrl.indexOf(absoluteUrlParts[3]);\n    absolutePath += absoluteUrl.substring(rootUrlPrefixIndex) + path;\n  } else {\n    absolutePath += path;\n  }\n\n  return absolutePath.replace(/\\/\\/+/g, '/');\n};\n\nexport default absoluteUrl;\n","// TODO: figure out where else to put this function\nconst addServers = (servers, store) => {\n  if (!servers || !store) {\n    throw new Error('The servers and store must be defined');\n  }\n\n  Object.keys(servers).forEach(serverType => {\n    const endpoints = servers[serverType];\n    endpoints.forEach(endpoint => {\n      const server = Object.assign({}, endpoint);\n      server.type = serverType;\n\n      store.dispatch({\n        type: 'ADD_SERVER',\n        server,\n      });\n    });\n  });\n};\n\nexport default addServers;\n","import cornerstone from 'cornerstone-core';\nimport cornerstoneWADOImageLoader from 'cornerstone-wado-image-loader';\nimport { api } from 'dicomweb-client';\nimport DICOMWeb from '../DICOMWeb';\n\nimport errorHandler from '../errorHandler';\nimport getXHRRetryRequestHook from './xhrRetryRequestHook';\n\nconst getImageId = imageObj => {\n  if (!imageObj) {\n    return;\n  }\n\n  return typeof imageObj.getImageId === 'function'\n    ? imageObj.getImageId()\n    : imageObj.url;\n};\n\nconst findImageIdOnStudies = (studies, displaySetInstanceUID) => {\n  const study = studies.find(study => {\n    const foundDisplaySet = study.displaySets.some(\n      displaySet => displaySet.displaySetInstanceUID === displaySetInstanceUID\n    );\n\n    return foundDisplaySet;\n  });\n\n  const displaySet = study.displaySets.find(displaySet => {\n    return displaySet.displaySetInstanceUID === displaySetInstanceUID;\n  });\n\n  const seriesInstanceUid = displaySet.SeriesInstanceUID;\n  const sopInstanceUid = displaySet.SOPInstanceUID;\n\n  const { series = [] } = study;\n\n  const a_series = series.find(a_series => {\n    return a_series.SeriesInstanceUID == seriesInstanceUid;\n  });\n\n  const { instances = [] } = a_series || {};\n\n  const instance = instances.find(instance => {\n    return instance.metadata.SOPInstanceUID == sopInstanceUid;\n  });\n\n  return getImageId(instance);\n};\n\nconst someInvalidStrings = strings => {\n  const stringsArray = Array.isArray(strings) ? strings : [strings];\n  const emptyString = string => !string;\n  let invalid = stringsArray.some(emptyString);\n  return invalid;\n};\n\nconst getImageInstance = dataset => {\n  return dataset && dataset.images && dataset.images[0];\n};\n\nconst getImageInstanceId = imageInstance => {\n  return getImageId(imageInstance);\n};\n\nconst fetchIt = (url, headers = DICOMWeb.getAuthorizationHeader()) => {\n  return fetch(url, headers).then(response => response.arrayBuffer());\n};\n\nconst cornerstoneRetriever = imageId => {\n  return cornerstone.loadAndCacheImage(imageId).then(image => {\n    return image && image.data && image.data.byteArray.buffer;\n  });\n};\n\nconst wadorsRetriever = (\n  url,\n  studyInstanceUID,\n  seriesInstanceUID,\n  sopInstanceUID,\n  headers = DICOMWeb.getAuthorizationHeader(),\n  errorInterceptor = errorHandler.getHTTPErrorHandler()\n) => {\n  const config = {\n    url,\n    headers,\n    errorInterceptor,\n    requestHooks: [getXHRRetryRequestHook()],\n  };\n  const dicomWeb = new api.DICOMwebClient(config);\n\n  return dicomWeb.retrieveInstance({\n    studyInstanceUID,\n    seriesInstanceUID,\n    sopInstanceUID,\n  });\n};\n\nconst getImageLoaderType = imageId => {\n  const loaderRegExp = /^\\w+\\:/;\n  const loaderType = loaderRegExp.exec(imageId);\n\n  return (\n    (loaderRegExp.lastIndex === 0 &&\n      loaderType &&\n      loaderType[0] &&\n      loaderType[0].replace(':', '')) ||\n    ''\n  );\n};\n\nclass DicomLoaderService {\n  getLocalData(dataset, studies) {\n    if (dataset && dataset.localFile) {\n      // Use referenced imageInstance\n      const imageInstance = getImageInstance(dataset);\n      let imageId = getImageInstanceId(imageInstance);\n\n      // or Try to get it from studies\n      if (someInvalidStrings(imageId)) {\n        imageId = findImageIdOnStudies(studies, dataset.displaySetInstanceUID);\n      }\n\n      if (!someInvalidStrings(imageId)) {\n        return cornerstoneWADOImageLoader.wadouri.loadFileRequest(imageId);\n      }\n    }\n  }\n\n  getDataByImageType(dataset) {\n    const imageInstance = getImageInstance(dataset);\n\n    if (imageInstance) {\n      const imageId = getImageInstanceId(imageInstance);\n      let getDicomDataMethod = fetchIt;\n      const loaderType = getImageLoaderType(imageId);\n\n      switch (loaderType) {\n        case 'dicomfile':\n          getDicomDataMethod = cornerstoneRetriever.bind(this, imageId);\n          break;\n        case 'wadors':\n          const url = imageInstance.getData().wadoRoot;\n          const studyInstanceUID = imageInstance.getStudyInstanceUID();\n          const seriesInstanceUID = imageInstance.getSeriesInstanceUID();\n          const sopInstanceUID = imageInstance.getSOPInstanceUID();\n          const invalidParams = someInvalidStrings([\n            url,\n            studyInstanceUID,\n            seriesInstanceUID,\n            sopInstanceUID,\n          ]);\n          if (invalidParams) {\n            return;\n          }\n\n          getDicomDataMethod = wadorsRetriever.bind(\n            this,\n            url,\n            studyInstanceUID,\n            seriesInstanceUID,\n            sopInstanceUID\n          );\n          break;\n        case 'wadouri':\n          // Strip out the image loader specifier\n          imageId = imageId.substring(imageId.indexOf(':') + 1);\n\n          if (someInvalidStrings(imageId)) {\n            return;\n          }\n          getDicomDataMethod = fetchIt.bind(this, imageId);\n          break;\n      }\n\n      return getDicomDataMethod();\n    }\n  }\n\n  getDataByDatasetType(dataset) {\n    const {\n      StudyInstanceUID,\n      SeriesInstanceUID,\n      SOPInstanceUID,\n      authorizationHeaders,\n      wadoRoot,\n      wadoUri,\n    } = dataset;\n    // Retrieve wadors or just try to fetch wadouri\n    if (!someInvalidStrings(wadoRoot)) {\n      return wadorsRetriever(\n        wadoRoot,\n        StudyInstanceUID,\n        SeriesInstanceUID,\n        SOPInstanceUID,\n        authorizationHeaders\n      );\n    } else if (!someInvalidStrings(wadoUri)) {\n      return fetchIt(wadoUri, { headers: authorizationHeaders });\n    }\n  }\n\n  *getLoaderIterator(dataset, studies) {\n    yield this.getLocalData(dataset, studies);\n    yield this.getDataByImageType(dataset);\n    yield this.getDataByDatasetType(dataset);\n  }\n\n  findDicomDataPromise(dataset, studies) {\n    const loaderIterator = this.getLoaderIterator(dataset, studies);\n    // it returns first valid retriever method.\n    for (const loader of loaderIterator) {\n      if (loader) {\n        return loader;\n      }\n    }\n\n    // in case of no valid loader\n    throw new Error('Invalid dicom data loader');\n  }\n}\n\nconst dicomLoaderService = new DicomLoaderService();\n\nexport default dicomLoaderService;\n","/* Enabled JPEG images downloading on IE11. */\nconst b64toBlob = (b64Data, contentType = '', sliceSize = 512) => {\n  const byteCharacters = atob(b64Data);\n  const byteArrays = [];\n\n  for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n    const slice = byteCharacters.slice(offset, offset + sliceSize);\n\n    const byteNumbers = new Array(slice.length);\n    for (let i = 0; i < slice.length; i++) {\n      byteNumbers[i] = slice.charCodeAt(i);\n    }\n\n    const byteArray = new Uint8Array(byteNumbers);\n    byteArrays.push(byteArray);\n  }\n\n  const blob = new Blob(byteArrays, { type: contentType });\n  return blob;\n};\n\nexport default b64toBlob;\n","import studyMetadataManager from './studyMetadataManager';\n\n/**\n * Study schema\n *\n * @typedef {Object} Study\n * @property {Array} seriesList -\n * @property {Object} seriesMap -\n * @property {Object} seriesLoader -\n * @property {string} wadoUriRoot -\n * @property {string} wadoRoot -\n * @property {string} qidoRoot -\n * @property {string} patientName -\n * @property {string} patientId -\n * @property {number} patientAge -\n * @property {number} patientSize -\n * @property {number} patientWeight -\n * @property {string} accessionNumber -\n * @property {string} studyDate -\n * @property {string} studyTime -\n * @property {string} modalities -\n * @property {string} studyDescription -\n * @property {string} imageCount -\n * @property {string} studyInstanceUid -\n * @property {string} institutionName -\n * @property {Array} displaySets -\n */\n\n/**\n * Factory function to load and cache derived display sets.\n *\n * @param {object} referencedDisplaySet Display set\n * @param {string} referencedDisplaySet.displaySetInstanceUid Display set instance uid\n * @param {string} referencedDisplaySet.seriesDate\n * @param {string} referencedDisplaySet.seriesTime\n * @param {string} referencedDisplaySet.seriesInstanceUid\n * @param {string} referencedDisplaySet.seriesNumber\n * @param {string} referencedDisplaySet.seriesDescription\n * @param {number} referencedDisplaySet.numImageFrames\n * @param {string} referencedDisplaySet.frameRate\n * @param {string} referencedDisplaySet.modality\n * @param {boolean} referencedDisplaySet.isMultiFrame\n * @param {number} referencedDisplaySet.instanceNumber\n * @param {boolean} referencedDisplaySet.isReconstructable\n * @param {string} referencedDisplaySet.studyInstanceUid\n * @param {Array} referencedDisplaySet.sopClassUids\n * @param {Study[]} studies Collection of studies\n * @param {object} logger\n * @param {object} snackbar\n * @returns void\n */\nasync function loadAndCacheDerivedDisplaySets(\n  referencedDisplaySet,\n  studies,\n  logger,\n  snackbar\n) {\n  const { StudyInstanceUID, SeriesInstanceUID } = referencedDisplaySet;\n  const promises = [];\n  const studyMetadata = studyMetadataManager.get(StudyInstanceUID);\n\n  if (!studyMetadata) {\n    return promises;\n  }\n\n  const derivedDisplaySets = studyMetadata.getDerivedDatasets({\n    referencedSeriesInstanceUID: SeriesInstanceUID,\n  });\n\n  if (!derivedDisplaySets.length) {\n    return promises;\n  }\n\n  // Filter by type\n  const displaySetsPerModality = {};\n\n  derivedDisplaySets.forEach(displaySet => {\n    const Modality = displaySet.Modality;\n\n    if (displaySetsPerModality[Modality] === undefined) {\n      displaySetsPerModality[Modality] = [];\n    }\n\n    displaySetsPerModality[Modality].push(displaySet);\n  });\n\n  // For each type, see if any are loaded, if not load the most recent.\n  await Promise.all(\n    Object.keys(displaySetsPerModality).map(async key => {\n      const displaySets = displaySetsPerModality[key];\n\n      const isLoaded = displaySets.some(displaySet => displaySet.isLoaded);\n      if (isLoaded) {\n        return;\n      }\n\n      if (displaySets.some(displaySet => displaySet.loadError)) {\n        return;\n      }\n\n      // find most recent and load it.\n      let recentDateTime = 0;\n      let recentDisplaySet = displaySets[0];\n\n      displaySets.forEach(displaySet => {\n        const dateTime = Number(\n          `${displaySet.SeriesDate}${displaySet.SeriesTime}`\n        );\n        if (dateTime > recentDateTime) {\n          recentDateTime = dateTime;\n          recentDisplaySet = displaySet;\n        }\n      });\n\n      try {\n        if (\n          recentDisplaySet.hasOwnProperty('getSourceDisplaySet') &&\n          typeof recentDisplaySet.getSourceDisplaySet === 'function'\n        ) {\n          if (recentDisplaySet.Modality === 'SEG' && logger) {\n            const onDisplaySetLoadFailureHandler = error => {\n              logger.error({ error, message: error.message });\n              snackbar.show({\n                title: 'DICOM Segmentation Loader',\n                message: error.message,\n                type: 'error',\n                autoClose: false,\n              });\n            };\n\n            let activatedLabelmapIndex = -1;\n            while (activatedLabelmapIndex == -1) {\n              const {\n                referencedDisplaySet,\n                activatedLabelmapPromise,\n              } = await recentDisplaySet.getSourceDisplaySet(\n                studies,\n                true,\n                onDisplaySetLoadFailureHandler\n              );\n\n              activatedLabelmapIndex = await activatedLabelmapPromise;\n              const selectionFired = new CustomEvent(\n                'extensiondicomsegmentationsegselected',\n                {\n                  detail: { activatedLabelmapIndex: activatedLabelmapIndex },\n                }\n              );\n              document.dispatchEvent(selectionFired);\n\n              const lastDateTime = Number(\n                `${recentDisplaySet.SeriesDate}${recentDisplaySet.SeriesTime}`\n              );\n              recentDateTime = 0;\n              displaySets.forEach(displaySet => {\n                const dateTime = Number(\n                  `${displaySet.SeriesDate}${displaySet.SeriesTime}`\n                );\n                if (dateTime > recentDateTime && dateTime < lastDateTime) {\n                  recentDateTime = dateTime;\n                  recentDisplaySet = displaySet;\n                }\n              });\n            }\n          } else {\n            await recentDisplaySet.getSourceDisplaySet(studies);\n          }\n        } else {\n          await recentDisplaySet.load(referencedDisplaySet, studies);\n        }\n      } catch (error) {\n        recentDisplaySet.isLoaded = false;\n        recentDisplaySet.loadError = true;\n        logger.error({ error, message: error.message });\n        snackbar.show({\n          title: 'Error loading derived display set:',\n          message: error.message,\n          type: 'error',\n          error,\n          autoClose: false,\n        });\n      }\n    })\n  );\n\n  /*\n   * TODO: Improve the way we notify parts of the app\n   * that depends on derived display sets to be loaded.\n   * (Implement pubsub for better tracking of derived display sets)\n   */\n  const event = new CustomEvent('deriveddisplaysetsloadedandcached');\n  document.dispatchEvent(event);\n}\n\nexport default loadAndCacheDerivedDisplaySets;\n","import lib from 'query-string';\n\nconst PARAM_SEPARATOR = ';';\nconst PARAM_PATTERN_IDENTIFIER = ':';\n\nfunction toLowerCaseFirstLetter(word) {\n  return word[0].toLowerCase() + word.slice(1);\n}\nconst getQueryFilters = (location = {}) => {\n  const { search } = location;\n\n  if (!search) {\n    return;\n  }\n\n  const searchParameters = parse(search);\n  const filters = {};\n\n  Object.entries(searchParameters).forEach(([key, value]) => {\n    filters[toLowerCaseFirstLetter(key)] = value;\n  });\n\n  return filters;\n};\n\nconst decode = (strToDecode = '') => {\n  try {\n    const decoded = window.atob(strToDecode);\n    return decoded;\n  } catch (e) {\n    return strToDecode;\n  }\n};\n\nconst parse = toParse => {\n  if (toParse) {\n    return lib.parse(toParse);\n  }\n\n  return {};\n};\nconst parseParam = paramStr => {\n  const _paramDecoded = decode(paramStr);\n  if (_paramDecoded && typeof _paramDecoded === 'string') {\n    return _paramDecoded.split(PARAM_SEPARATOR);\n  }\n};\n\nconst replaceParam = (path = '', paramKey, paramValue) => {\n  const paramPattern = `${PARAM_PATTERN_IDENTIFIER}${paramKey}`;\n  if (paramValue) {\n    return path.replace(paramPattern, paramValue);\n  }\n\n  return path;\n};\n\nconst isValidPath = path => {\n  const paramPatternPiece = `/${PARAM_PATTERN_IDENTIFIER}`;\n  return path.indexOf(paramPatternPiece) < 0;\n};\n\nconst queryString = {\n  getQueryFilters,\n};\n\nconst paramString = {\n  isValidPath,\n  parseParam,\n  replaceParam,\n};\n\nexport { parse, queryString, paramString };\n","export default function makeDeferred() {\n  let reject, resolve, promise = new Promise(function (res, rej) {\n    resolve = res;\n    reject = rej;\n  });\n  return Object.freeze({ promise, resolve, reject });\n}\n","\nexport default class Queue {\n\n  constructor(limit) {\n    this.limit = limit;\n    this.size = 0;\n    this.awaiting = null;\n  }\n\n  /**\n   * Creates a new \"proxy\" function associated with the current execution queue\n   * instance. When the returned function is invoked, the queue limit is checked\n   * to make sure the limit of scheduled tasks is repected (throwing an\n   * exception when the limit has been reached and before calling the original\n   * function). The original function is only invoked after all the previously\n   * scheduled tasks have finished executing (their returned promises have\n   * resolved/rejected);\n   *\n   * @param {function} task The function whose execution will be associated\n   * with the current Queue instance;\n   * @returns {function} The \"proxy\" function bound to the current Queue\n   * instance;\n   */\n  bind(task) {\n    return bind(this, task);\n  }\n\n  bindSafe(task, onError) {\n    const boundTask = bind(this, task);\n    return async function safeTask(...args) {\n      try {\n        return await boundTask(...args);\n      } catch (e) {\n        onError(e);\n      }\n    };\n  }\n}\n\n/**\n * Utils\n */\n\nfunction bind(queue, task) {\n  const cleaner = clean.bind(null, queue);\n  return async function boundTask(...args) {\n    if (queue.size >= queue.limit) {\n      throw new Error('Queue limit reached');\n    }\n    const promise = chain(queue.awaiting, task, args);\n    queue.awaiting = promise.then(cleaner, cleaner);\n    queue.size++;\n    return promise;\n  };\n}\n\nfunction clean(queue) {\n  if (queue.size > 0 && --queue.size === 0) {\n    queue.awaiting = null;\n  }\n}\n\nasync function chain(prev, task, args) {\n  await prev;\n  return task(...args);\n}\n","/**\n * Constants\n */\n\nconst SEPARATOR = '/';\n\n/**\n * API\n */\n\n/**\n * Add values to a list hierarchically.\n *  @ For example:\n *    addToList([], 'a', 'b', 'c');\n *  will add the following hierarchy to the list:\n *    a > b > c\n *  resulting in the following array:\n *    [['a', [['b', ['c']]]]]\n * @param {Array} list The target list;\n * @param  {...string} values The values to be hierarchically added to the list;\n * @returns {Array} Returns the provided list possibly updated with the given\n *  values or null when a bad list (not an actual array) is provided\n */\nfunction addToList(list, ...values) {\n  if (Array.isArray(list)) {\n    if (values.length > 0) {\n      addValuesToList(list, values);\n    }\n    return list;\n  }\n  return null;\n}\n\n/**\n * Iterates through the provided hierarchical list executing the callback\n * once for each leaf-node of the tree. The ancestors of the leaf-node being\n * visited are passed to the callback function along with the leaf-node in\n * the exact same order they appear on the tree (from root to leaf);\n *  @ For example, if the hierachy `a > b > c` appears on the tree (\"a\" being\n *    the root and \"c\" being the leaf) the callback function will be called as:\n *  callback('a', 'b', 'c');\n * @param {Array} list The hierarchical list to be iterated\n * @param {function} callback The callback which will be exected once for\n *  each leaf-node of the hierarchical list;\n * @returns {Array} Returns the provided list or null for bad arguments;\n */\nfunction forEach(list, callback) {\n  if (Array.isArray(list)) {\n    if (typeof callback === 'function') {\n      forEachValue(list, callback);\n    }\n    return list;\n  }\n  return null;\n}\n\n/**\n * Retrieves an item from the given hierarchical list based on an index (number)\n * or a path (string).\n *  @ For example:\n *    getItem(list, '1/0/4')\n *  will retrieve the fourth grandchild, from the first child of the second\n *  element of the list;\n * @param {Array} list The source list;\n * @param {string|number} indexOrPath The index of the element inside list\n *  (number) or the path to reach the desired element (string). The slash \"/\"\n *  character is cosidered the path separator;\n */\nfunction getItem(list, indexOrPath) {\n  if (Array.isArray(list)) {\n    let subpath = null;\n    let index = typeof indexOrPath === 'number' ? indexOrPath : -1;\n    if (typeof indexOrPath === 'string') {\n      const separator = indexOrPath.indexOf(SEPARATOR);\n      if (separator > 0) {\n        index = parseInt(indexOrPath.slice(0, separator), 10);\n        if (separator + 1 < indexOrPath.length) {\n          subpath = indexOrPath.slice(separator + 1, indexOrPath.length);\n        }\n      } else {\n        index = parseInt(indexOrPath, 10);\n      }\n    }\n    if (index >= 0 && index < list.length) {\n      const item = list[index];\n      if (isSublist(item)) {\n        if (subpath !== null) {\n          return getItem(item[1], subpath);\n        }\n        return item[0];\n      }\n      return item;\n    }\n  }\n}\n\n/**\n * Pretty-print the provided hierarchical list;\n * @param {Array} list The source list;\n * @returns {string} The textual representation of the hierarchical list;\n */\nfunction print(list) {\n  let text = '';\n  if (Array.isArray(list)) {\n    let prev = [];\n    forEachValue(list, function(...args) {\n      let prevLen = prev.length;\n      for (let i = 0, l = args.length; i < l; ++i) {\n        if (i < prevLen && args[i] === prev[i]) {\n          continue;\n        }\n        text += '  '.repeat(i) + args[i] + '\\n';\n      }\n      prev = args;\n    });\n  }\n  return text;\n}\n\n/**\n * Utils\n */\n\nfunction forEachValue(list, callback) {\n  for (let i = 0, l = list.length; i < l; ++i) {\n    let item = list[i];\n    if (isSublist(item)) {\n      if (item[1].length > 0) {\n        forEachValue(item[1], callback.bind(null, item[0]));\n        continue;\n      }\n      item = item[0];\n    }\n    callback(item);\n  }\n}\n\nfunction addValuesToList(list, values) {\n  let value = values.shift();\n  let index = add(list, value);\n  if (index >= 0) {\n    if (values.length > 0) {\n      let sublist = list[index];\n      if (!isSublist(sublist)) {\n        sublist = toSublist(value);\n        list[index] = sublist;\n      }\n      return addValuesToList(sublist[1], values);\n    }\n    return true;\n  }\n  return false;\n}\n\nfunction add(list, value) {\n  let index = find(list, value);\n  if (index === -2) {\n    index = list.push(value) - 1;\n  }\n  return index;\n}\n\nfunction find(list, value) {\n  if (typeof value === 'string') {\n    for (let i = 0, l = list.length; i < l; ++i) {\n      let item = list[i];\n      if (item === value || (isSublist(item) && item[0] === value)) {\n        return i;\n      }\n    }\n    return -2;\n  }\n  return -1;\n}\n\nfunction isSublist(subject) {\n  return (\n    Array.isArray(subject) &&\n    subject.length === 2 &&\n    typeof subject[0] === 'string' &&\n    Array.isArray(subject[1])\n  );\n}\n\nfunction toSublist(value) {\n  return [value + '', []];\n}\n\n/**\n * Exports\n */\n\nexport { addToList, getItem, forEach, print };\n","import makeDeferred from './makeDeferred';\n\n/**\n * Constants\n */\n\nconst TYPE = Symbol('Type');\nconst TASK = Symbol('Task');\nconst LIST = Symbol('List');\n\n/**\n * Public Methods\n */\n\n/**\n * Creates an instance of a task list\n * @returns {Object} A task list object\n */\nfunction createList() {\n  return objectWithType(LIST, {\n    head: null,\n    named: Object.create(null),\n    observers: [],\n  });\n}\n\n/**\n * Checks if the given argument is a List instance\n * @param {any} subject The value to be tested\n * @returns {boolean} true if a valid List instance is given, false otherwise\n */\nfunction isList(subject) {\n  return isOfType(LIST, subject);\n}\n\n/**\n * Creates an instance of a task\n * @param {Object} list The List instance related to this task\n * @param {Object} next The next Task instance to link to\n * @returns {Object} A task object\n */\nfunction createTask(list, next) {\n  return objectWithType(TASK, {\n    list: isList(list) ? list : null,\n    next: isTask(next) ? next : null,\n    failed: false,\n    awaiting: null,\n    progress: 0.0,\n  });\n}\n\n/**\n * Checks if the given argument is a Task instance\n * @param {any} subject The value to be tested\n * @returns {boolean} true if a valid Task instance is given, false otherwise\n */\nfunction isTask(subject) {\n  return isOfType(TASK, subject);\n}\n\n/**\n * Appends a new Task to the given List instance and notifies the list observers\n * @param {Object} list A List instance\n * @returns {Object} The new Task instance appended to the List or null if the\n *  given List instanc is not valid\n */\nfunction increaseList(list) {\n  if (isList(list)) {\n    const task = createTask(list, list.head);\n    list.head = task;\n    notify(list, getOverallProgress(list));\n    return task;\n  }\n  return null;\n}\n\n/**\n * Updates the internal progress value of the given Task instance and notifies\n * the observers of the associated list.\n * @param {Object} task The Task instance to be updated\n * @param {number} value A number between 0 (inclusive) and 1 (exclusive)\n *  indicating the progress of the task;\n * @returns {void} Nothing is returned\n */\nfunction update(task, value) {\n  if (isTask(task) && isValidProgress(value) && value < 1.0) {\n    if (task.progress !== value) {\n      task.progress = value;\n      if (isList(task.list)) {\n        notify(task.list, getOverallProgress(task.list));\n      }\n    }\n  }\n}\n\n/**\n * Sets a Task instance as finished (progress = 1.0), freezes it in order to\n * prevent further modifications and notifies the observers of the associated\n * list.\n * @param {Object} task The Task instance to be finalized\n * @returns {void} Nothing is returned\n */\nfunction finish(task) {\n  if (isTask(task)) {\n    task.progress = 1.0;\n    task.awaiting = null;\n    Object.freeze(task);\n    if (isList(task.list)) {\n      notify(task.list, getOverallProgress(task.list));\n    }\n  }\n}\n\n/**\n * Generate a summarized snapshot of the current status of the given task List\n * @param {Object} list The List instance to be scanned\n * @returns {Object} An obeject representing the summarized status of the list\n */\nfunction getOverallProgress(list) {\n  const status = createStatus();\n  if (isList(list)) {\n    let task = list.head;\n    while (isTask(task)) {\n      status.total++;\n      if (isValidProgress(task.progress)) {\n        status.partial += task.progress;\n        if (task.progress === 1.0 && task.failed) status.failures++;\n      }\n      task = task.next;\n    }\n  }\n  if (status.total > 0) {\n    status.progress = status.partial / status.total;\n  }\n  return Object.freeze(status);\n}\n\n/**\n * Adds a Task instance to the given list that waits on a given \"thenable\". When\n * the thenable resolves the \"finish\" method is called on the newly created\n * instance thus notifying the observers of the list.\n * @param {Object} list The List instance to which the new task will be added\n * @param {Object|Promise} thenable The thenable to be waited on\n * @returns {Object} A reference to the newly created Task;\n */\nfunction waitOn(list, thenable) {\n  const task = increaseList(list);\n  if (isTask(task)) {\n    task.awaiting = Promise.resolve(thenable).then(\n      function() {\n        finish(task);\n      },\n      function() {\n        task.failed = true;\n        finish(task);\n      }\n    );\n    return task;\n  }\n  return null;\n}\n\n/**\n * Adds a Task instance to the given list using a deferred (a Promise that can\n * be externally resolved) notifying the observers of the list.\n * @param {Object} list The List instance to which the new task will be added\n * @returns {Object} An object with references to the created deferred and task\n */\nfunction addDeferred(list) {\n  const deferred = makeDeferred();\n  const task = waitOn(list, deferred.promise);\n  return Object.freeze({\n    deferred,\n    task,\n  });\n}\n\n/**\n * Assigns a name to a specific task of the list\n * @param {Object} list The List instance whose task will be named\n * @param {Object} task The specified Task instance\n * @param {string} name The name of the task\n * @returns {boolean} Returns true on success, false otherwise\n */\nfunction setTaskName(list, task, name) {\n  if (\n    contains(list, task) &&\n    list.named !== null &&\n    typeof list.named === 'object' &&\n    typeof name === 'string'\n  ) {\n    list.named[name] = task;\n    return true;\n  }\n  return false;\n}\n\n/**\n * Retrieves a task by name\n * @param {Object} list The List instance whose task will be retrieved\n * @param {string} name The name of the task to be retrieved\n * @returns {Object} The Task instance or null if not found\n */\nfunction getTaskByName(list, name) {\n  if (\n    isList(list) &&\n    list.named !== null &&\n    typeof list.named === 'object' &&\n    typeof name === 'string'\n  ) {\n    const task = list.named[name];\n    if (isTask(task)) {\n      return task;\n    }\n  }\n  return null;\n}\n\n/**\n * Adds an observer (callback function) to a given List instance\n * @param {Object} list The List instance to which the observer will be appended\n * @param {Function} observer The observer (function) that will be executed\n *  every time a change happens within the list\n * @returns {boolean} Returns true on success and false otherewise\n */\nfunction addObserver(list, observer) {\n  if (\n    isList(list) &&\n    Array.isArray(list.observers) &&\n    typeof observer === 'function'\n  ) {\n    list.observers.push(observer);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Removes an observer (callback function) from a given List instance\n * @param {Object} list The instance List from which the observer will removed\n * @param {Function} observer The observer function to be removed\n * @returns {boolean} Returns true on success and false otherewise\n */\nfunction removeObserver(list, observer) {\n  if (\n    isList(list) &&\n    Array.isArray(list.observers) &&\n    list.observers.length > 0\n  ) {\n    const index = list.observers.indexOf(observer);\n    if (index >= 0) {\n      list.observers.splice(index, 1);\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Utils\n */\n\nfunction createStatus() {\n  return Object.seal({\n    total: 0,\n    partial: 0.0,\n    progress: 0.0,\n    failures: 0,\n  });\n}\n\nfunction objectWithType(type, object) {\n  return Object.seal(Object.defineProperty(object, TYPE, { value: type }));\n}\n\nfunction isOfType(type, subject) {\n  return (\n    subject !== null && typeof subject === 'object' && subject[TYPE] === type\n  );\n}\n\nfunction isValidProgress(value) {\n  return typeof value === 'number' && value >= 0.0 && value <= 1.0;\n}\n\nfunction contains(list, task) {\n  if (isList(list) && isTask(task)) {\n    let item = list.head;\n    while (isTask(item)) {\n      if (item === task) {\n        return true;\n      }\n      item = item.next;\n    }\n  }\n  return false;\n}\n\nfunction notify(list, data) {\n  if (\n    isList(list) &&\n    Array.isArray(list.observers) &&\n    list.observers.length > 0\n  ) {\n    list.observers.slice().forEach(function(observer) {\n      if (typeof observer === 'function') {\n        try {\n          observer(data, list);\n        } catch (e) {\n          /* Oops! */\n        }\n      }\n    });\n  }\n}\n\n/**\n * Exports\n */\n\nexport {\n  createList,\n  isList,\n  createTask,\n  isTask,\n  increaseList,\n  update,\n  finish,\n  getOverallProgress,\n  waitOn,\n  addDeferred,\n  setTaskName,\n  getTaskByName,\n  addObserver,\n  removeObserver,\n};\n","import ObjectPath from './objectPath';\nimport StackManager from './StackManager.js';\nimport absoluteUrl from './absoluteUrl';\nimport addServers from './addServers';\nimport guid from './guid';\nimport sortBy from './sortBy.js';\nimport studyMetadataManager from './studyMetadataManager';\nimport writeScript from './writeScript.js';\nimport DicomLoaderService from './dicomLoaderService.js';\nimport b64toBlob from './b64toBlob.js';\nimport loadAndCacheDerivedDisplaySets from './loadAndCacheDerivedDisplaySets.js';\nimport * as urlUtil from './urlUtil';\nimport makeDeferred from './makeDeferred';\nimport makeCancelable from './makeCancelable';\nimport hotkeys from './hotkeys';\nimport Queue from './Queue';\nimport isDicomUid from './isDicomUid';\nimport resolveObjectPath from './resolveObjectPath';\nimport * as hierarchicalListUtils from './hierarchicalListUtils';\nimport * as progressTrackingUtils from './progressTrackingUtils';\nimport xhrRetryRequestHook from './xhrRetryRequestHook';\n\nconst utils = {\n  guid,\n  ObjectPath,\n  absoluteUrl,\n  addServers,\n  sortBy,\n  writeScript,\n  b64toBlob,\n  StackManager,\n  studyMetadataManager,\n  DicomLoaderService,\n  urlUtil,\n  loadAndCacheDerivedDisplaySets,\n  makeDeferred,\n  makeCancelable,\n  hotkeys,\n  Queue,\n  isDicomUid,\n  resolveObjectPath,\n  hierarchicalListUtils,\n  progressTrackingUtils,\n  xhrRetryRequestHook,\n};\n\nexport {\n  guid,\n  ObjectPath,\n  absoluteUrl,\n  addServers,\n  sortBy,\n  writeScript,\n  b64toBlob,\n  StackManager,\n  studyMetadataManager,\n  DicomLoaderService,\n  urlUtil,\n  loadAndCacheDerivedDisplaySets,\n  makeDeferred,\n  makeCancelable,\n  hotkeys,\n  Queue,\n  isDicomUid,\n  resolveObjectPath,\n  hierarchicalListUtils,\n  progressTrackingUtils,\n  xhrRetryRequestHook,\n};\n\nexport default utils;\n","/* jshint -W060 */\nimport absoluteUrl from './absoluteUrl';\n\nexport default function writeScript(fileName, callback) {\n  const script = document.createElement('script');\n  script.src = absoluteUrl(fileName);\n  script.onload = () => {\n    if (typeof callback === 'function') {\n      callback(script);\n    }\n  };\n\n  document.body.appendChild(script);\n}\n","export default function makeCancelable(thenable) {\n  let isCanceled = false;\n  const promise = Promise.resolve(thenable).then(\n    function(result) {\n      if (isCanceled) throw Object.freeze({ isCanceled });\n      return result;\n    },\n    function(error) {\n      if (isCanceled) throw Object.freeze({ isCanceled, error });\n      throw error;\n    }\n  );\n  return Object.assign(Object.create(promise), {\n    then: promise.then.bind(promise),\n    cancel() {\n      isCanceled = true;\n    },\n  });\n}\n","export default function isDicomUid(subject) {\n  const regex = /^\\d+(?:\\.\\d+)*$/;\n  return typeof subject === 'string' && regex.test(subject.trim());\n}\n","export default function resolveObjectPath(root, path, defaultValue) {\n  if (root !== null && typeof root === 'object' && typeof path === 'string') {\n    let value,\n      separator = path.indexOf('.');\n    if (separator >= 0) {\n      return resolveObjectPath(\n        root[path.slice(0, separator)],\n        path.slice(separator + 1, path.length),\n        defaultValue\n      );\n    }\n    value = root[path];\n    return value === undefined && defaultValue !== undefined\n      ? defaultValue\n      : value;\n  }\n}\n","import cornerstone from 'cornerstone-core';\nimport getImageId from '../utils/getImageId.js';\n\nconst noop = () => {};\n\nexport class StudyPrefetcher {\n  options = {\n    order: 'closest',\n    displaySetCount: 1,\n    onImageCached: noop,\n    requestType: 'prefetch',\n    preventCache: false,\n    prefetchDisplaySetsTimeout: 300,\n    maxNumPrefetchRequests: 100,\n    includeActiveDisplaySet: false,\n  };\n\n  constructor(studies, options) {\n    this.studies = studies || [];\n\n    if (options) {\n      this.options = { ...this.options, ...options };\n      this.options.requestType = 'prefetch';\n    }\n\n    cornerstone.events.addEventListener(\n      'cornerstoneimagecachefull.StudyPrefetcher',\n      this.cacheFullHandler\n    );\n  }\n\n  /**\n   * Remove previously set event listeners and stop prefetching.\n   */\n  destroy() {\n    this.stopPrefetching();\n    cornerstone.events.removeEventListener(\n      'cornerstoneimagecachefull.StudyPrefetcher',\n      this.cacheFullHandler\n    );\n  }\n\n  /**\n   * Get StudyPrefetcher singleton instance.\n   *\n   * @param {array} studies\n   * @param {object} options\n   * @returns\n   */\n  static getInstance(studies = [], options) {\n    if (!StudyPrefetcher.instance) {\n      StudyPrefetcher.instance = new StudyPrefetcher(studies, options);\n    }\n\n    if (options) {\n      this.options = { ...this.options, ...options };\n      this.options.requestType = 'prefetch';\n    }\n\n    return StudyPrefetcher.instance;\n  }\n\n  /**\n   * OHIF study metadata instances.\n   *\n   * @param {array} studies\n   */\n  setStudies(studies) {\n    this.stopPrefetching();\n    this.studies = studies;\n  }\n\n  /**\n   * Get previously prefetched element.\n   *\n   * @returns {HTMLElement} Previously prefetched element.\n   */\n  getElement() {\n    return this.element;\n  }\n\n  /**\n   * Prefetch related display sets based on cornerstone viewport element\n   * with previously set options.\n   *\n   * @param {*} element\n   * @param {string} displaySetInstanceUID the display set instance uid\n   * @returns\n   */\n  prefetch(element, displaySetInstanceUID) {\n    if (!this.studies || !this.studies.length) {\n      return;\n    }\n\n    this.element = element;\n    try {\n      this.enabledElement = cornerstone.getEnabledElement(element);\n    } catch {\n      throw new Error('Failed to find the enabled element');\n    }\n\n    this.stopPrefetching();\n    this.prefetchDisplaySets(displaySetInstanceUID);\n  }\n\n  /**\n   * Stop prefetching images.\n   */\n  stopPrefetching() {\n    cornerstone.imageLoadPoolManager.clearRequestStack('prefetch');\n  }\n\n  /**\n   * Prefetch display sets async.\n   *\n   * @param {HTMLElement} element cornerstone viewport element\n   * @param {number} timeout\n   */\n  prefetchDisplaySetsAsync(element, timeout) {\n    try {\n      this.enabledElement = cornerstone.getEnabledElement(element);\n    } catch {\n      throw new Error('Failed to find the enabled element');\n    }\n    timeout = timeout || this.options.prefetchDisplaySetsTimeout;\n    clearTimeout(this.prefetchDisplaySetsHandler);\n    this.prefetchDisplaySetsHandler = setTimeout(() => {\n      this.prefetchDisplaySets(element);\n    }, timeout);\n  }\n\n  /**\n   * Extract all image ids from all display sets to be fetched and\n   * call method to add images to request pool manager.\n   *\n   * @param {string} displaySetInstanceUID the display set instance uid\n   */\n  prefetchDisplaySets(displaySetInstanceUID) {\n    const displaySetsToPrefetch = this.getDisplaySetsToPrefetch(\n      displaySetInstanceUID\n    );\n    const imageIds = this.getImageIdsFromDisplaySets(displaySetsToPrefetch);\n    this.prefetchImageIds(imageIds);\n  }\n\n  /**\n   * Add image ids to request pool manager.\n   *\n   * @param {array} imageIds\n   */\n  prefetchImageIds(imageIds) {\n    const nonCachedImageIds = this.filterCachedImageIds(imageIds);\n    const imageLoadPoolManager = cornerstone.imageLoadPoolManager;\n\n    imageLoadPoolManager.maxNumRequests = {\n      ...imageLoadPoolManager.maxNumRequests,\n      prefetch: this.options.maxNumPrefetchRequests,\n    };\n\n    let requestFn;\n    if (this.options.preventCache) {\n      requestFn = id => cornerstone.loadImage(id);\n    } else {\n      requestFn = id => cornerstone.loadAndCacheImage(id);\n    }\n\n    nonCachedImageIds.forEach(imageId => {\n      imageLoadPoolManager.addRequest(\n        requestFn.bind(this, imageId),\n        this.options.requestType,\n        {\n          imageId,\n        }\n      );\n    });\n  }\n\n  /**\n   * Get study by cornerstone image instance.\n   *\n   * @param {object} image\n   * @returns\n   */\n  getStudy(image) {\n    const StudyInstanceUID = cornerstone.metaData.get(\n      'StudyInstanceUID',\n      image.imageId\n    );\n    const studies = this.studies;\n    return studies.find(\n      study => study.getData().StudyInstanceUID === StudyInstanceUID\n    );\n  }\n\n  /**\n   * Get study series by cornerstone image instance.\n   *\n   * @param {object} study OHIF study instance\n   * @param {object} image cornerstone image instance object\n   * @returns\n   */\n  getSeries(study, image) {\n    const SeriesInstanceUID = cornerstone.metaData.get(\n      'SeriesInstanceUID',\n      image.imageId\n    );\n    return study.getSeriesByUID(SeriesInstanceUID);\n  }\n\n  /**\n   * Get sop instance by cornerstone image instance.\n   *\n   * @param {array} series\n   * @param {object} image\n   * @returns\n   */\n  getInstance(series, image) {\n    const instanceMetadata = cornerstone.metaData.get(\n      'instance',\n      image.imageId\n    );\n    return series.getInstanceByUID(instanceMetadata.SOPInstanceUID);\n  }\n\n  /**\n   * Returns the display set with given uid.\n   *\n   * @param {string} displaySetInstanceUID the display set instance uid\n   * @returns {object} displaySet\n   */\n  getDisplaySetByUID(displaySetInstanceUID) {\n    let displaySet;\n    this.studies.forEach(study => {\n      const ds = study.displaySets.find(\n        ds => ds.displaySetInstanceUID === displaySetInstanceUID\n      );\n      if (ds) {\n        displaySet = ds;\n      }\n    });\n    return displaySet;\n  }\n\n  /**\n   * Get display set by SOPInstanceUID.\n   *\n   * @param {array} displaySets\n   * @param {object} instance\n   * @returns\n   */\n  getDisplaySetBySOPInstanceUID(displaySets, instance) {\n    return displaySets.find(displaySet => {\n      return displaySet.images.some(displaySetImage => {\n        return displaySetImage.SOPInstanceUID === instance.SOPInstanceUID;\n      });\n    });\n  }\n\n  /**\n   * Get active viewport image based on cornerstone viewport element.\n   * @returns\n   */\n  getActiveViewportImage() {\n    if (!this.enabledElement) {\n      return;\n    }\n\n    return this.enabledElement.image;\n  }\n\n  /**\n   * Prefetch display sets based on cornerstone viewport element image.\n   *\n   * @param {string} displaySetInstanceUID the display set instance uid\n   * @returns {array} displaySets\n   */\n  getDisplaySetsToPrefetch(displaySetInstanceUID) {\n    const image = this.getActiveViewportImage();\n\n    if (!image) {\n      return [];\n    }\n\n    const study = this.getStudy(image);\n    const series = this.getSeries(study, image);\n    const instance = this.getInstance(series, image);\n    const displaySets = study.displaySets;\n    const activeDisplaySet = displaySetInstanceUID\n      ? this.getDisplaySetByUID(displaySetInstanceUID)\n      : this.getDisplaySetBySOPInstanceUID(displaySets, instance);\n\n    const prefetchMethodMap = {\n      topdown: 'getFirstDisplaySets',\n      downward: 'getNextDisplaySets',\n      upward: 'getPreviousDisplaySets',\n      closest: 'getClosestDisplaySets',\n      all: 'getAllDisplaySets',\n    };\n\n    const prefetchOrder = this.options.order;\n    const methodName = prefetchMethodMap[prefetchOrder];\n    const getDisplaySets = this[methodName];\n\n    if (!getDisplaySets) {\n      if (prefetchOrder) {\n        log.warn(`Invalid prefetch order configuration (${prefetchOrder})`);\n      }\n\n      return [];\n    }\n\n    return getDisplaySets.call(\n      this,\n      displaySets,\n      activeDisplaySet,\n      this.options.displaySetCount,\n      this.options.includeActiveDisplaySet\n    );\n  }\n\n  /**\n   * Get all display sets.\n   *\n   * @param {array} displaySets\n   * @param {object} activeDisplaySet\n   * @param {number} displaySetCount\n   * @param {boolean} includeActiveDisplaySet\n   * @returns\n   */\n  getAllDisplaySets(\n    displaySets,\n    activeDisplaySet,\n    displaySetCount,\n    includeActiveDisplaySet\n  ) {\n    const length = displaySets.length;\n    const selectedDisplaySets = [];\n\n    for (let i = 0; i < length; i++) {\n      const displaySet = displaySets[i];\n      selectedDisplaySets.push(displaySet);\n    }\n\n    return selectedDisplaySets;\n  }\n\n  /**\n   * Get all display sets in order after the active display set.\n   *\n   * @param {array} displaySets\n   * @param {object} activeDisplaySet\n   * @param {number} displaySetCount\n   * @param {boolean} includeActiveDisplaySet\n   * @returns\n   */\n  getFirstDisplaySets(\n    displaySets,\n    activeDisplaySet,\n    displaySetCount,\n    includeActiveDisplaySet\n  ) {\n    const length = displaySets.length;\n    const selectedDisplaySets = [];\n\n    for (let i = 0; i < length && displaySetCount; i++) {\n      const displaySet = displaySets[i];\n\n      if (includeActiveDisplaySet || displaySet !== activeDisplaySet) {\n        selectedDisplaySets.push(displaySet);\n        displaySetCount--;\n      }\n    }\n\n    return selectedDisplaySets;\n  }\n\n  /**\n   * Get all display sets before the active display set.\n   *\n   * @param {array} displaySets\n   * @param {object} activeDisplaySet\n   * @param {number} displaySetCount\n   * @param {boolean} includeActiveDisplaySet\n   * @returns\n   */\n  getPreviousDisplaySets(\n    displaySets,\n    activeDisplaySet,\n    displaySetCount,\n    includeActiveDisplaySet\n  ) {\n    const activeDisplaySetIndex = displaySets.indexOf(activeDisplaySet);\n    const end = includeActiveDisplaySet\n      ? activeDisplaySetIndex + 1\n      : activeDisplaySetIndex;\n    const previousDisplaySets = displaySets.slice(0, end);\n    return previousDisplaySets.reverse().slice(0, displaySetCount);\n  }\n\n  /**\n   * Get all display sets after the active display set.\n   *\n   * @param {array} displaySets\n   * @param {object} activeDisplaySet\n   * @param {number} displaySetCount\n   * @param {boolean} includeActiveDisplaySet\n   * @returns\n   */\n  getNextDisplaySets(\n    displaySets,\n    activeDisplaySet,\n    displaySetCount,\n    includeActiveDisplaySet\n  ) {\n    const activeDisplaySetIndex = displaySets.indexOf(activeDisplaySet);\n    const begin = includeActiveDisplaySet\n      ? activeDisplaySetIndex\n      : activeDisplaySetIndex + 1;\n    const end = Math.min(begin + displaySetCount, displaySets.length);\n    return displaySets.slice(begin, end);\n  }\n\n  /**\n   * Get all display set closest to the active display set.\n   *\n   * @param {array} displaySets\n   * @param {object} activeDisplaySet\n   * @param {number} displaySetCount\n   * @param {boolean} includeActiveDisplaySet\n   * @returns\n   */\n  getClosestDisplaySets(\n    displaySets,\n    activeDisplaySet,\n    displaySetCount,\n    includeActiveDisplaySet\n  ) {\n    const activeDisplaySetIndex = displaySets.indexOf(activeDisplaySet);\n    const length = displaySets.length;\n    const selectedDisplaySets = [];\n    let left = activeDisplaySetIndex - 1;\n    let right = activeDisplaySetIndex + 1;\n\n    if (includeActiveDisplaySet) {\n      selectedDisplaySets.push(displaySets[activeDisplaySetIndex]);\n      displaySetCount--;\n    }\n\n    while ((left >= 0 || right < length) && displaySetCount) {\n      if (left >= 0) {\n        selectedDisplaySets.push(displaySets[left]);\n        displaySetCount--;\n        left--;\n      }\n\n      if (right < length && displaySetCount) {\n        selectedDisplaySets.push(displaySets[right]);\n        displaySetCount--;\n        right++;\n      }\n    }\n\n    return selectedDisplaySets;\n  }\n\n  /**\n   * Get all image ids from display sets.\n   *\n   * @param {array} displaySets\n   * @returns {array} image ids\n   */\n  getImageIdsFromDisplaySets(displaySets) {\n    let imageIds = [];\n\n    displaySets.forEach(displaySet => {\n      imageIds = imageIds.concat(this.getImageIdsFromDisplaySet(displaySet));\n    });\n\n    return imageIds;\n  }\n\n  /**\n   * Get all image ids from a given display set.\n   *\n   * @param {array} displaySet\n   * @returns\n   */\n  getImageIdsFromDisplaySet(displaySet) {\n    const imageIds = [];\n\n    if (!displaySet.images || displaySet.images.length < 1) {\n      return [];\n    }\n\n    // TODO: This duplicates work done by the stack manager\n    displaySet.images.forEach(image => {\n      const numFrames = image.numFrames;\n      if (numFrames > 1) {\n        for (let i = 0; i < numFrames; i++) {\n          let imageId = getImageId(image, i);\n          imageIds.push(imageId);\n        }\n      } else {\n        let imageId = getImageId(image);\n        imageIds.push(imageId);\n      }\n    });\n\n    return imageIds;\n  }\n\n  /**\n   * Filter cached image ids from a set of image ids.\n   *\n   * @param {array} imageIds\n   * @returns {array} images not cached\n   */\n  filterCachedImageIds(imageIds) {\n    return imageIds.filter(imageId => !this.isImageCached(imageId));\n  }\n\n  /**\n   * Check if image id is cached in cornerstone.\n   *\n   * @param {string} imageId\n   * @returns\n   */\n  isImageCached(imageId) {\n    const image = cornerstone.imageCache.imageCache[imageId];\n    return image && image.sizeInBytes;\n  }\n\n  /**\n   * Warns that cache is full and stops prefetching.\n   */\n  cacheFullHandler = () => {\n    log.warn('Cache full');\n    this.stopPrefetching();\n  };\n}\n","import cornerstone from 'cornerstone-core';\nimport cornerstoneWADOImageLoader from 'cornerstone-wado-image-loader';\nimport debounce from 'lodash.debounce';\n\nimport StackManager from '../utils/StackManager';\nimport { StudyPrefetcher } from './StudyPrefetcher';\n\nclass BaseLoadingListener {\n  constructor(stack, options = {}) {\n    this.id = BaseLoadingListener.getNewId();\n    this.stack = stack;\n    this.statsItemsLimit = options.statsItemsLimit || 2;\n    this.stats = {\n      items: [],\n      total: 0,\n      elapsedTime: 0,\n      speed: 0,\n    };\n\n    this._setProgressData = options._setProgressData;\n    this._clearProgressById = options._clearProgressById;\n\n    // Register the start point to make it possible to calculate\n    // bytes/s or frames/s when the first byte or frame is received\n    this._addStatsData(0);\n\n    // Update the progress before starting the download\n    // to make it possible to update the UI\n    this._updateProgress();\n  }\n\n  _addStatsData(value) {\n    const date = new Date();\n    const stats = this.stats;\n    const items = stats.items;\n    const newItem = {\n      value,\n      date,\n    };\n\n    items.push(newItem);\n    stats.total += newItem.value;\n\n    // Remove items until it gets below the limit\n    while (items.length > this.statsItemsLimit) {\n      const item = items.shift();\n      stats.total -= item.value;\n    }\n\n    // Update the elapsedTime (seconds) based on first and last\n    // elements and recalculate the speed (bytes/s or frames/s)\n    if (items.length > 1) {\n      const oldestItem = items[0];\n      stats.elapsedTime =\n        (newItem.date.getTime() - oldestItem.date.getTime()) / 1000;\n      stats.speed = (stats.total - oldestItem.value) / stats.elapsedTime;\n    }\n  }\n\n  _getProgressId() {\n    /**\n     * TODO: The id key should be configurable.\n     */\n    const displaySetInstanceUID = this.stack.displaySetInstanceUID;\n    return 'StackProgress:' + displaySetInstanceUID;\n  }\n\n  _clearProgress() {\n    const progressId = this._getProgressId();\n    this._clearProgressById(progressId);\n  }\n\n  startListening() {\n    throw new Error('`startListening` must be implemented by child classes');\n  }\n\n  stopListening() {\n    throw new Error('`stopListening` must be implemented by child classes');\n  }\n\n  destroy() {\n    this.stopListening();\n    this._clearProgress();\n  }\n\n  static getNewId() {\n    const timeSlice = new Date()\n      .getTime()\n      .toString()\n      .slice(-8);\n    const randomNumber = parseInt(Math.random() * 1000000000);\n\n    return timeSlice.toString() + randomNumber.toString();\n  }\n}\n\nclass DICOMFileLoadingListener extends BaseLoadingListener {\n  constructor(stack, options) {\n    super(stack, options);\n\n    this.imageLoadProgressEventHandler = this._imageLoadProgressEventHandler.bind(\n      this\n    );\n\n    this._dataSetUrl = this._getDataSetUrl(stack);\n    this._lastLoaded = 0;\n\n    // Check how many instances has already been download (cached)\n    this._checkCachedData();\n\n    this.startListening();\n  }\n\n  _checkCachedData() {\n    const dataSet = cornerstoneWADOImageLoader.wadouri.dataSetCacheManager.get(\n      this._dataSetUrl\n    );\n\n    if (dataSet) {\n      const dataSetLength = dataSet.byteArray.length;\n\n      this._updateProgress({\n        percentComplete: 100,\n        loaded: dataSetLength,\n        total: dataSetLength,\n      });\n    }\n  }\n\n  _getImageLoadProgressEventName() {\n    // TODO: Add this event as a constant in Cornerstone\n    return 'cornerstoneimageloadprogress.' + this.id;\n  }\n\n  startListening() {\n    const imageLoadProgressEventName = this._getImageLoadProgressEventName();\n\n    this.stopListening();\n\n    cornerstone.events.addEventListener(\n      imageLoadProgressEventName,\n      this.imageLoadProgressEventHandle\n    );\n  }\n\n  stopListening() {\n    const imageLoadProgressEventName = this._getImageLoadProgressEventName();\n    cornerstone.events.removeEventListener(\n      imageLoadProgressEventName,\n      this.imageLoadProgressEventHandle\n    );\n  }\n\n  _imageLoadProgressEventHandler = e => {\n    const eventData = e.detail;\n    const dataSetUrl = this._convertImageIdToDataSetUrl(eventData.imageId);\n    const bytesDiff = eventData.loaded - this._lastLoaded;\n\n    if (!this._dataSetUrl === dataSetUrl) {\n      return;\n    }\n\n    // Add the bytes downloaded to the stats\n    this._addStatsData(bytesDiff);\n\n    // Update the download progress\n    this._updateProgress(eventData);\n\n    // Cache the last eventData.loaded value\n    this._lastLoaded = eventData.loaded;\n  };\n\n  _updateProgress(eventData) {\n    const progressId = this._getProgressId();\n    eventData = eventData || {};\n\n    const progressData = {\n      multiFrame: false,\n      percentComplete: eventData.percentComplete,\n      bytesLoaded: eventData.loaded,\n      bytesTotal: eventData.total,\n      bytesPerSecond: this.stats.speed,\n    };\n\n    this._setProgressData(progressId, progressData);\n  }\n\n  _convertImageIdToDataSetUrl(imageId) {\n    // Remove the prefix (\"dicomweb:\" or \"wadouri:\"\")\n    imageId = imageId.replace(/^(dicomweb:|wadouri:)/i, '');\n\n    // Remove \"frame=999&\" from the imageId\n    imageId = imageId.replace(/frame=\\d+&?/i, '');\n\n    // Remove the last \"&\" like in \"http://...?foo=1&bar=2&\"\n    imageId = imageId.replace(/&$/, '');\n\n    return imageId;\n  }\n\n  _getDataSetUrl(stack) {\n    const imageId = stack.imageIds[0];\n    return this._convertImageIdToDataSetUrl(imageId);\n  }\n}\n\nconst StudyLoadingListenerEvents = {\n  OnProgress: 'StudyLoadingListenerEvents.OnProgress',\n};\n\nfunction promiseState(promise, callback) {\n  // Symbols and RegExps are never content-equal\n  var uniqueValue = window['Symbol'] ? Symbol('unique') : /unique/;\n\n  function notifyPendingOrResolved(value) {\n    if (value === uniqueValue) {\n      return callback('pending');\n    } else {\n      return callback('fulfilled');\n    }\n  }\n\n  function notifyRejected(reason) {\n    return callback('rejected');\n  }\n\n  var race = [promise, Promise.resolve(uniqueValue)];\n  Promise.race(race).then(notifyPendingOrResolved, notifyRejected);\n}\n\nclass StackLoadingListener extends BaseLoadingListener {\n  constructor(stack, options = {}) {\n    options.statsItemsLimit = 20;\n\n    super(stack, options);\n\n    this.imageLoadedEventHandler = this._imageLoadedEventHandler.bind(this);\n    this.imageCachePromiseRemovedEventHandler = this._imageCachePromiseRemovedEventHandler.bind(\n      this\n    );\n\n    this.imageDataMap = this._convertImageIdsArrayToMap(stack.imageIds);\n    this.framesStatus = this._createArray(stack.imageIds.length, false);\n    this.loadedCount = 0;\n\n    // Check how many instances has already been download (cached)\n    this._debouncedSetProgressData = debounce((...args) => {\n      this._setProgressData(...args);\n\n      /** After checking cache, continue prefetch */\n      const studyPrefetcher = StudyPrefetcher.getInstance();\n      studyPrefetcher.prefetch(studyPrefetcher.getElement());\n    }, 300);\n    const debounced = true;\n    this._checkCachedData(debounced);\n\n    this.startListening();\n  }\n\n  _convertImageIdsArrayToMap(imageIds) {\n    const imageIdsMap = new Map();\n\n    for (let i = 0; i < imageIds.length; i++) {\n      imageIdsMap.set(imageIds[i], {\n        index: i,\n        loaded: false,\n      });\n    }\n\n    return imageIdsMap;\n  }\n\n  _createArray(length, defaultValue) {\n    // `new Array(length)` is an anti-pattern in javascript because its\n    // funny API. Otherwise I would go for `new Array(length).fill(false)`\n    const array = [];\n\n    for (let i = 0; i < length; i++) {\n      array[i] = defaultValue;\n    }\n\n    return array;\n  }\n\n  /**\n   * Check if image id is cached in cornerstone.\n   *\n   * @param {string} imageId\n   * @returns\n   */\n  isImageCached(imageId) {\n    const image = cornerstone.imageCache.imageCache[imageId];\n    return image && image.sizeInBytes;\n  }\n\n  _checkCachedData(debounced = false) {\n    const imageIds = this.stack.imageIds;\n\n    for (let i = 0; i < imageIds.length; i++) {\n      const imageId = imageIds[i];\n\n      const imageObject = cornerstone.imageCache.getImageLoadObject(imageId);\n\n      if (this.isImageCached(imageId)) {\n        this._updateFrameStatus(imageId, true, debounced);\n      }\n\n      if (imageObject && imageObject.promise) {\n        promiseState(imageObject.promise, state => {\n          if (state === 'fulfilled') {\n            this._updateFrameStatus(imageId, true, debounced);\n          }\n        });\n      }\n    }\n  }\n\n  _getImageLoadedEventName() {\n    return `${cornerstone.EVENTS.IMAGE_LOADED}.${this.id}`;\n  }\n\n  _getImageCachePromiseRemoveEventName() {\n    return `${cornerstone.EVENTS.IMAGE_CACHE_PROMISE_REMOVED}.${this.id}`;\n  }\n\n  _imageLoadedEventHandler(e) {\n    this._updateFrameStatus(e.detail.image.imageId, true);\n  }\n\n  _imageCachePromiseRemovedEventHandler(e) {\n    this._updateFrameStatus(e.detail.imageId, false);\n  }\n\n  startListening() {\n    const imageLoadedEventName = this._getImageLoadedEventName();\n    const imageCachePromiseRemovedEventName = this._getImageCachePromiseRemoveEventName();\n\n    this.stopListening();\n\n    cornerstone.events.addEventListener(\n      imageLoadedEventName,\n      this.imageLoadedEventHandler\n    );\n    cornerstone.events.addEventListener(\n      imageCachePromiseRemovedEventName,\n      this.imageCachePromiseRemovedEventHandler\n    );\n  }\n\n  stopListening() {\n    const imageLoadedEventName = this._getImageLoadedEventName();\n    const imageCachePromiseRemovedEventName = this._getImageCachePromiseRemoveEventName();\n\n    cornerstone.events.removeEventListener(\n      imageLoadedEventName,\n      this.imageLoadedEventHandler\n    );\n    cornerstone.events.removeEventListener(\n      imageCachePromiseRemovedEventName,\n      this.imageCachePromiseRemovedEventHandler\n    );\n  }\n\n  _updateFrameStatus(imageId, loaded, debounced) {\n    const imageData = this.imageDataMap.get(imageId);\n\n    if (!imageData || imageData.loaded === loaded) {\n      return;\n    }\n\n    // Add one more frame to the stats\n    if (loaded) {\n      this._addStatsData(1);\n    }\n\n    imageData.loaded = loaded;\n    this.framesStatus[imageData.index] = loaded;\n    this.loadedCount += loaded ? 1 : -1;\n    this._updateProgress(debounced);\n  }\n\n  _setProgressData(progressId, progressData) {\n    // TODO: This method (and _clearProgressById) need to access\n    // the Redux store and should therefore be provided from the\n    // application. I've added a workaround to pass this in through\n    // the 'options' variable on instantiation, but this is really ugly.\n    // We could consider making the StudyLoadingListener a higher-order\n    // component which would set this stuff itself.\n    throw new Error(\n      \"The _setProgressData function must be provided in StudyLoadingListener's options\"\n    );\n  }\n\n  _clearProgressById(progressId) {\n    throw new Error(\n      \"The _clearProgressById function must be provided in StudyLoadingListener's options\"\n    );\n  }\n\n  _updateProgress(debounced) {\n    const totalFramesCount = this.stack.imageIds.length;\n    const loadedFramesCount = this.loadedCount;\n    const loadingFramesCount = totalFramesCount - loadedFramesCount;\n    const percentComplete = Math.ceil(\n      (loadedFramesCount / totalFramesCount) * 100\n    );\n    const progressId = this._getProgressId();\n    const progressData = {\n      multiFrame: true,\n      totalFramesCount,\n      loadedFramesCount,\n      loadingFramesCount,\n      percentComplete,\n      framesPerSecond: this.stats.speed,\n      framesStatus: this.framesStatus,\n    };\n\n    if (debounced) {\n      this._debouncedSetProgressData(progressId, progressData);\n      return;\n    }\n\n    this._setProgressData(progressId, progressData);\n  }\n\n  _logProgress() {\n    const totalFramesCount = this.stack.imageIds.length;\n    const displaySetInstanceUID = this.stack.displaySetInstanceUID;\n    let progressBar = '[';\n\n    for (let i = 0; i < totalFramesCount; i++) {\n      const ch = this.framesStatus[i] ? '|' : '.';\n      progressBar += `${ch}`;\n    }\n\n    progressBar += ']';\n    console.info(`${displaySetInstanceUID}: ${progressBar}`);\n  }\n}\n\nclass StudyLoadingListener {\n  static events = StudyLoadingListenerEvents;\n\n  constructor(options) {\n    this.listeners = {};\n    this.options = options;\n  }\n\n  addStack(stack, stackMetaData) {\n    // TODO: Make this work for plugins\n    if (!stack) {\n      //console.log('Skipping adding stack to StudyLoadingListener');\n      return;\n    }\n\n    const displaySetInstanceUID = stack.displaySetInstanceUID;\n\n    if (!this.listeners[displaySetInstanceUID]) {\n      const listener = this._createListener(stack, stackMetaData);\n      if (listener) {\n        this.listeners[displaySetInstanceUID] = listener;\n      }\n    }\n  }\n\n  addStudy(study) {\n    study.displaySets.forEach(displaySet => {\n      const stack = StackManager.findOrCreateStack(study, displaySet);\n\n      // TODO: Make this work for plugins\n      if (!stack) {\n        //console.warn('Skipping adding displaySet to StudyLoadingListener');\n        //console.warn(displaySet);\n        return;\n      }\n\n      this.addStack(stack, {\n        isMultiFrame: displaySet.isMultiFrame,\n      });\n    });\n  }\n\n  addStudies(studies) {\n    if (!studies || !studies.length) {\n      return;\n    }\n\n    studies.forEach(study => this.addStudy(study));\n  }\n\n  clear() {\n    const displaySetInstanceUIDs = Object.keys(this.listeners);\n    const length = displaySetInstanceUIDs.length;\n\n    for (let i = 0; i < length; i++) {\n      const displaySetInstanceUID = displaySetInstanceUIDs[i];\n      const displaySet = this.listeners[displaySetInstanceUID];\n\n      displaySet.destroy();\n    }\n\n    this.listeners = {};\n  }\n\n  _createListener(stack, stackMetaData) {\n    const schema = this._getSchema(stack);\n\n    // A StackLoadingListener can be created if it's wadors or not a multiframe\n    // wadouri instance (single file) that means \"N\" files will have to be\n    // downloaded where \"N\" is the number of frames. DICOMFileLoadingListener\n    // is created only if it's a single DICOM file and there's no way to know\n    // how many frames has already been loaded (bytes/s instead of frames/s).\n    if (schema === 'wadors' || !stackMetaData.isMultiFrame) {\n      return new StackLoadingListener(stack, this.options);\n    } else {\n      return new DICOMFileLoadingListener(stack, this.options);\n    }\n  }\n\n  _getSchema(stack) {\n    const imageId = stack.imageIds[0];\n    if (!imageId) {\n      return;\n    }\n    const colonIndex = imageId.indexOf(':');\n    return imageId.substring(0, colonIndex);\n  }\n\n  static getInstance(options) {\n    /**\n     * TODO: Use a different alternative without the use of events.\n     */\n    const DEFAULT_OPTIONS = {\n      _setProgressData: (progressId, progressData) => {\n        const event = new CustomEvent(StudyLoadingListenerEvents.OnProgress, {\n          detail: { progressId, progressData },\n        });\n        document.dispatchEvent(event);\n      },\n      _clearProgressById: progressId => {\n        const event = new CustomEvent(StudyLoadingListenerEvents.OnProgress, {\n          detail: { progressId, percentComplete: 0 },\n        });\n        document.dispatchEvent(event);\n      },\n    };\n\n    if (!StudyLoadingListener._instance) {\n      StudyLoadingListener._instance = new StudyLoadingListener(\n        options || DEFAULT_OPTIONS\n      );\n    }\n\n    return StudyLoadingListener._instance;\n  }\n}\n\nexport { StudyLoadingListener, StackLoadingListener, DICOMFileLoadingListener };\n","const _subscriptions = Symbol('subscriptions');\nconst _lastSubscriptionId = Symbol('lastSubscriptionId');\n\n/**\n * Class to implement publish/subscribe pattern\n *\n * @class\n * @classdesc Pub/sub mechanism\n */\nexport default class PubSub {\n  constructor() {\n    this[_subscriptions] = {};\n    this[_lastSubscriptionId] = 0;\n  }\n\n  /**\n   * Subscribe to event\n   *\n   * @param {string} eventName Event name\n   * @param {Function} callback Callback function\n   * @returns {void}\n   */\n  subscribe(eventName, callback) {\n    if (eventName === undefined) {\n      throw new Error('Event name is required');\n    }\n\n    if (typeof callback !== 'function') {\n      throw new Error('Callback must be a function');\n    }\n\n    if (!this[_subscriptions].hasOwnProperty(eventName)) {\n      this[_subscriptions][eventName] = {};\n    }\n\n    const subscriptionId = `sub${this[_lastSubscriptionId]++}`;\n    this[_subscriptions][eventName][subscriptionId] = callback;\n  }\n\n  /**\n   * Removes a subscription\n   *\n   * @param {string} eventName Event name\n   * @param {Function} [callback] Callback function\n   * @returns {void}\n   */\n  unsubscribe(eventName, callback) {\n    const callbacks = this[_subscriptions][eventName] || {};\n    for (let subscriptionId in callbacks) {\n      if (!callback) {\n        delete callbacks[subscriptionId];\n      } else if (callbacks[subscriptionId] === callback) {\n        delete callbacks[subscriptionId];\n      }\n    }\n  }\n\n  /**\n   * Publish event to all subscriptions\n   *\n   * @param {String} eventName Event name\n   * @param {any} [payload] Data that will be published\n   * @returns {void}\n   */\n  publish(eventName, ...payload) {\n    if (eventName === undefined) {\n      throw new Error('Event name is required');\n    }\n\n    const callbacks = this[_subscriptions][eventName] || {};\n    for (let subscriptionId in callbacks) {\n      callbacks[subscriptionId](...payload);\n    }\n  }\n}\n","import PubSub from './PubSub';\n\n/** Log Events */\nexport const LogEvents = Object.freeze({\n  OnLog: 'onLog',\n});\n\n/**\n * Log manager that implements pub/sub.\n * This manager can be used to send logs across different packages\n * using previously registered events.\n */\nclass LogManager extends PubSub {\n  EVENTS = LogEvents;\n}\n\n/** Singleton */\nexport default new LogManager();\n","import { studyMetadataManager } from '../utils';\n\nimport OHIFError from './OHIFError';\nimport { StudyMetadata } from './metadata/StudyMetadata';\nimport { StudyMetadataSource } from './StudyMetadataSource.js';\nimport { retrieveStudyMetadata } from '../studies/retrieveStudyMetadata.js';\n\nexport class OHIFStudyMetadataSource extends StudyMetadataSource {\n  /**\n   * Get study metadata for a study with given study InstanceUID\n   * @param server\n   * @param  {String} studyInstanceUID Study InstanceUID\n   * @return {Promise} A Promise object\n   */\n  getByInstanceUID(server, studyInstanceUID) {\n    return retrieveStudyMetadata(server, studyInstanceUID);\n  }\n\n  /**\n   * Load study info (OHIF.viewer.Studies) and study metadata (OHIF.viewer.StudyMetadataList) for a given study.\n   * @param {StudyMetadata} study StudyMetadata object.\n   */\n  loadStudy(study) {\n    if (!(study instanceof StudyMetadata)) {\n      throw new OHIFError(\n        'OHIFStudyMetadataSource::loadStudy study is not an instance of StudyMetadata'\n      );\n    }\n\n    return new Promise((resolve, reject) => {\n      const studyInstanceUID = study.getStudyInstanceUID();\n\n      if (study instanceof StudyMetadata) {\n        const alreadyLoaded = OHIF.viewer.Studies.findBy({\n          StudyInstanceUID: studyInstanceUID,\n        });\n\n        if (!alreadyLoaded) {\n          OHIFStudyMetadataSource._updateStudyCollections(study);\n        }\n\n        resolve(study);\n        return;\n      }\n\n      this.getByInstanceUID(studyInstanceUID)\n        .then(studyInfo => {\n          // Create study metadata object\n          const studyMetadata = new StudyMetadata(\n            studyInfo,\n            studyInfo.StudyInstanceUID\n          );\n\n          // Get Study display sets\n          const displaySets = studyMetadata.createDisplaySets();\n\n          OHIFStudyMetadataSource._updateStudyCollections(studyMetadata);\n          resolve(studyMetadata);\n        })\n        .catch(reject);\n    });\n  }\n\n  // Static methods\n  static _updateStudyCollections(studyMetadata) {\n    const studyInfo = studyMetadata.getData();\n\n    // Set some studyInfo properties\n    studyInfo.selected = true;\n    studyInfo.displaySets = studyMetadata.getDisplaySets();\n    studyMetadataManager.add(studyMetadata);\n  }\n}\n","import { InstanceMetadata, SeriesMetadata, StudyMetadata } from './metadata';\n\nimport CommandsManager from './CommandsManager.js';\nimport { DICOMFileLoadingListener } from './StudyLoadingListener';\nimport HotkeysManager from './HotkeysManager.js';\nimport ImageSet from './ImageSet';\nimport LogManager from './LogManager';\nimport PubSub from './PubSub';\nimport MetadataProvider from './MetadataProvider';\nimport OHIFError from './OHIFError.js';\nimport { OHIFStudyMetadataSource } from './OHIFStudyMetadataSource';\nimport { StackLoadingListener } from './StudyLoadingListener';\nimport { StudyLoadingListener } from './StudyLoadingListener';\nimport { StudyMetadataSource } from './StudyMetadataSource';\nimport { StudyPrefetcher } from './StudyPrefetcher';\nimport { TypeSafeCollection } from './TypeSafeCollection';\n\nexport {\n  OHIFStudyMetadataSource,\n  MetadataProvider,\n  CommandsManager,\n  HotkeysManager,\n  ImageSet,\n  StudyPrefetcher,\n  StudyLoadingListener,\n  StackLoadingListener,\n  DICOMFileLoadingListener,\n  StudyMetadata,\n  SeriesMetadata,\n  InstanceMetadata,\n  TypeSafeCollection,\n  OHIFError,\n  StudyMetadataSource,\n};\n\nconst classes = {\n  OHIFStudyMetadataSource,\n  MetadataProvider,\n  CommandsManager,\n  HotkeysManager,\n  LogManager,\n  ImageSet,\n  PubSub,\n  StudyPrefetcher,\n  StudyLoadingListener,\n  StackLoadingListener,\n  DICOMFileLoadingListener,\n  StudyMetadata,\n  SeriesMetadata,\n  InstanceMetadata,\n  TypeSafeCollection,\n  OHIFError,\n  StudyMetadataSource,\n};\n\nexport default classes;\n","import { sopClassDictionary } from './sopClassDictionary';\n\nconst imagesTypes = [\n  sopClassDictionary.ComputedRadiographyImageStorage,\n  sopClassDictionary.DigitalXRayImageStorageForPresentation,\n  sopClassDictionary.DigitalXRayImageStorageForProcessing,\n  sopClassDictionary.DigitalMammographyXRayImageStorageForPresentation,\n  sopClassDictionary.DigitalMammographyXRayImageStorageForProcessing,\n  sopClassDictionary.DigitalIntraOralXRayImageStorageForPresentation,\n  sopClassDictionary.DigitalIntraOralXRayImageStorageForProcessing,\n  sopClassDictionary.CTImageStorage,\n  sopClassDictionary.EnhancedCTImageStorage,\n  sopClassDictionary.LegacyConvertedEnhancedCTImageStorage,\n  sopClassDictionary.UltrasoundMultiframeImageStorage,\n  sopClassDictionary.MRImageStorage,\n  sopClassDictionary.EnhancedMRImageStorage,\n  sopClassDictionary.EnhancedMRColorImageStorage,\n  sopClassDictionary.LegacyConvertedEnhancedMRImageStorage,\n  sopClassDictionary.UltrasoundImageStorage,\n  sopClassDictionary.SecondaryCaptureImageStorage,\n  sopClassDictionary.MultiframeSingleBitSecondaryCaptureImageStorage,\n  sopClassDictionary.MultiframeGrayscaleByteSecondaryCaptureImageStorage,\n  sopClassDictionary.MultiframeGrayscaleWordSecondaryCaptureImageStorage,\n  sopClassDictionary.MultiframeTrueColorSecondaryCaptureImageStorage,\n  sopClassDictionary.XRayAngiographicImageStorage,\n  sopClassDictionary.EnhancedXAImageStorage,\n  sopClassDictionary.XRayRadiofluoroscopicImageStorage,\n  sopClassDictionary.EnhancedXRFImageStorage,\n  sopClassDictionary.XRay3DAngiographicImageStorage,\n  sopClassDictionary.XRay3DCraniofacialImageStorage,\n  sopClassDictionary.BreastTomosynthesisImageStorage,\n  sopClassDictionary.BreastProjectionXRayImageStorageForPresentation,\n  sopClassDictionary.BreastProjectionXRayImageStorageForProcessing,\n  sopClassDictionary.IntravascularOpticalCoherenceTomographyImageStorageForPresentation,\n  sopClassDictionary.IntravascularOpticalCoherenceTomographyImageStorageForProcessing,\n  sopClassDictionary.NuclearMedicineImageStorage,\n  sopClassDictionary.VLEndoscopicImageStorage,\n  sopClassDictionary.VideoEndoscopicImageStorage,\n  sopClassDictionary.VLMicroscopicImageStorage,\n  sopClassDictionary.VideoMicroscopicImageStorage,\n  sopClassDictionary.VLSlideCoordinatesMicroscopicImageStorage,\n  sopClassDictionary.VLPhotographicImageStorage,\n  sopClassDictionary.VideoPhotographicImageStorage,\n  sopClassDictionary.OphthalmicPhotography8BitImageStorage,\n  sopClassDictionary.OphthalmicPhotography16BitImageStorage,\n  sopClassDictionary.OphthalmicTomographyImageStorage,\n  sopClassDictionary.VLWholeSlideMicroscopyImageStorage,\n  sopClassDictionary.PositronEmissionTomographyImageStorage,\n  sopClassDictionary.EnhancedPETImageStorage,\n  sopClassDictionary.LegacyConvertedEnhancedPETImageStorage,\n  sopClassDictionary.RTImageStorage,\n];\n\n/**\n * Checks whether dicom files with specified SOP Class UID have image data\n * @param {string} SOPClassUID - SOP Class UID to be checked\n * @returns {boolean} - true if it has image data\n */\nexport const isImage = SOPClassUID => {\n  if (!SOPClassUID) return false;\n  return imagesTypes.indexOf(SOPClassUID) !== -1;\n};\n","const LOW_PRIORITY_MODALITIES = Object.freeze([\n  'SEG',\n  'DOC',\n  'RTSTRUCT',\n  'SR',\n  'KO',\n  'PR',\n]);\n\nexport default function isLowPriorityModality(Modality) {\n  return LOW_PRIORITY_MODALITIES.includes(Modality);\n}\n","// Return the array sorting function for its object's properties\nexport default function sortBy() {\n  var fields = [].slice.call(arguments),\n    n_fields = fields.length;\n\n  return function(A, B) {\n    var a, b, field, key, reverse, result, i;\n\n    for (i = 0; i < n_fields; i++) {\n      result = 0;\n      field = fields[i];\n\n      key = typeof field === 'string' ? field : field.name;\n\n      a = A[key];\n      b = B[key];\n\n      if (typeof field.primer !== 'undefined') {\n        a = field.primer(a);\n        b = field.primer(b);\n      }\n\n      reverse = field.reverse ? -1 : 1;\n\n      if (a < b) {\n        result = reverse * -1;\n      }\n\n      if (a > b) {\n        result = reverse * 1;\n      }\n\n      if (result !== 0) {\n        break;\n      }\n    }\n\n    return result;\n  };\n}\n","import OHIFError from '../classes/OHIFError.js';\nimport getImageId from './getImageId';\nimport metadataProvider from '../classes/MetadataProvider.js';\n\nlet stackMap = {};\nlet configuration = {};\nconst stackUpdatedCallbacks = [];\n\n/**\n * Loop through the current series and add metadata to the\n * Cornerstone meta data provider. This will be used to fill information\n * into the viewport overlays, and to calculate reference lines and orientation markers\n * @param  {Object} stackMap              stackMap object\n * @param  {Object} study                 Study object\n * @param  {Object} displaySet            The set of images to make the stack from\n * @return {Array}                        Array with image IDs\n */\nfunction createAndAddStack(stackMap, study, displaySet, stackUpdatedCallbacks) {\n  const images = displaySet.images;\n  if (!images) {\n    return;\n  }\n\n  const numImages = images.length;\n  const imageIds = [];\n  let imageId;\n\n  images.forEach((instance, imageIndex) => {\n    const image = instance.getData();\n    const metaData = {\n      instance: image, // in this context, instance will be the data of the InstanceMetadata object...\n      series: displaySet, // TODO: Check this\n      study,\n      numImages,\n      imageIndex: imageIndex + 1,\n    };\n\n    const naturalizedInstance = image.metadata;\n    const NumberOfFrames = naturalizedInstance.NumberOfFrames;\n\n    if (NumberOfFrames > 1) {\n      for (let i = 0; i < NumberOfFrames; i++) {\n        metaData.frameNumber = i;\n        imageId = getImageId(image, i);\n        imageIds.push(imageId);\n\n        const {\n          StudyInstanceUID,\n          SeriesInstanceUID,\n          SOPInstanceUID,\n        } = instance.getData().metadata;\n\n        metadataProvider.addImageIdToUIDs(imageId, {\n          StudyInstanceUID,\n          SeriesInstanceUID,\n          SOPInstanceUID,\n        });\n      }\n    } else {\n      metaData.frameNumber = 1;\n      imageId = getImageId(image);\n      imageIds.push(imageId);\n\n      const {\n        StudyInstanceUID,\n        SeriesInstanceUID,\n        SOPInstanceUID,\n      } = naturalizedInstance;\n\n      metadataProvider.addImageIdToUIDs(imageId, {\n        StudyInstanceUID,\n        SeriesInstanceUID,\n        SOPInstanceUID,\n      });\n    }\n  });\n\n  const stack = {\n    StudyInstanceUID: study.StudyInstanceUID,\n    displaySetInstanceUID: displaySet.displaySetInstanceUID,\n    imageIds,\n    frameRate: displaySet.frameRate,\n    isClip: displaySet.isClip,\n  };\n\n  stackMap[displaySet.displaySetInstanceUID] = stack;\n\n  return stack;\n}\n\nconfiguration = {\n  createAndAddStack,\n};\n\n/**\n * This object contains all the functions needed for interacting with the stack manager.\n * Generally, findStack is the only function used. If you want to know when new stacks\n * come in, you can register a callback with addStackUpdatedCallback.\n */\nconst StackManager = {\n  /**\n   * Removes all current stacks\n   */\n  clearStacks() {\n    stackMap = {};\n  },\n  /**\n   * Create a stack from an image set, as well as add in the metadata on a per image bases.\n   * @param study The study who's metadata will be added\n   * @param displaySet The set of images to make the stack from\n   * @return {Array} Array with image IDs\n   */\n  makeAndAddStack(study, displaySet) {\n    return configuration.createAndAddStack(\n      stackMap,\n      study,\n      displaySet,\n      stackUpdatedCallbacks\n    );\n  },\n  /**\n   * Find a stack from the currently created stacks.\n   * @param displaySetInstanceUID The UID of the stack to find.\n   * @returns {*} undefined if not found, otherwise the stack object is returned.\n   */\n  findStack(displaySetInstanceUID) {\n    return stackMap[displaySetInstanceUID];\n  },\n  /**\n   * Find a stack or reate one if it has not been created yet\n   * @param study The study who's metadata will be added\n   * @param displaySet The set of images to make the stack from\n   * @return {Array} Array with image IDs\n   */\n  findOrCreateStack(study, displaySet) {\n    let stack = this.findStack(displaySet.displaySetInstanceUID);\n\n    if (!stack || !stack.imageIds) {\n      stack = this.makeAndAddStack(study, displaySet);\n    }\n\n    return stack;\n  },\n  /**\n   * Gets the underlying map of displaySetInstanceUID to stack object.\n   * WARNING: Do not change this object. It directly affects the manager.\n   * @returns {{}} map of displaySetInstanceUID -> stack.\n   */\n  getAllStacks() {\n    return stackMap;\n  },\n  /**\n   * Adds in a callback to be called on a stack being added / updated.\n   * @param callback must accept at minimum one argument,\n   * which is the stack that was added / updated.\n   */\n  addStackUpdatedCallback(callback) {\n    if (typeof callback !== 'function') {\n      throw new OHIFError('callback must be provided as a function');\n    }\n    stackUpdatedCallbacks.push(callback);\n  },\n  /**\n   * Return configuration\n   */\n  getConfiguration() {\n    return configuration;\n  },\n  /**\n   * Set configuration, in order to provide compatibility\n   * with other systems by overriding this functions\n   * @param {Object} config object with functions to be overrided\n   *\n   * For now, only makeAndAddStack can be overrided\n   */\n  setConfiguration(config) {\n    configuration = config;\n  },\n};\n\nexport { StackManager };\nexport default StackManager;\n","import guid from '../utils/guid';\n\n/**\n * Constants\n */\nconst PROPERTY_SEPARATOR = '.';\nconst ORDER_ASC = 'asc';\nconst ORDER_DESC = 'desc';\nconst MIN_COUNT = 0x00000000;\nconst MAX_COUNT = 0x7fffffff;\n\n/**\n * Class Definition\n */\nexport class TypeSafeCollection {\n  constructor() {\n    this._operationCount = MIN_COUNT;\n    this._elementList = [];\n    this._handlers = Object.create(null);\n  }\n\n  /**\n   * Private Methods\n   */\n\n  _invalidate() {\n    let count = this._operationCount;\n    this._operationCount = count < MAX_COUNT ? count + 1 : MIN_COUNT;\n  }\n\n  _elements(silent) {\n    silent === true || this._operationCount;\n    return this._elementList;\n  }\n\n  _elementWithPayload(payload, silent) {\n    return this._elements(silent).find(item => item.payload === payload);\n  }\n\n  _elementWithId(id, silent) {\n    return this._elements(silent).find(item => item.id === id);\n  }\n\n  _trigger(event, data) {\n    let handlers = this._handlers;\n    if (event in handlers) {\n      handlers = handlers[event];\n      if (!(handlers instanceof Array)) {\n        return;\n      }\n      for (let i = 0, limit = handlers.length; i < limit; ++i) {\n        let handler = handlers[i];\n        if (_isFunction(handler)) {\n          handler.call(null, data);\n        }\n      }\n    }\n  }\n\n  /**\n   * Public Methods\n   */\n\n  onInsert(callback) {\n    if (_isFunction(callback)) {\n      let handlers = this._handlers.insert;\n      if (!(handlers instanceof Array)) {\n        handlers = [];\n        this._handlers.insert = handlers;\n      }\n      handlers.push(callback);\n    }\n  }\n\n  /**\n   * Update the payload associated with the given ID to be the new supplied payload.\n   * @param {string} id The ID of the entry that will be updated.\n   * @param {any} payload The element that will replace the previous payload.\n   * @returns {boolean} Returns true if the given ID is present in the collection, false otherwise.\n   */\n  updateById(id, payload) {\n    let result = false,\n      found = this._elementWithPayload(payload, true);\n    if (found) {\n      // nothing to do since the element is already in the collection...\n      if (found.id === id) {\n        // set result to true since the ids match...\n        result = true;\n        this._invalidate();\n      }\n    } else {\n      found = this._elementWithId(id, true);\n      if (found) {\n        found.payload = payload;\n        result = true;\n        this._invalidate();\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Signal that the given element has been changed by notifying reactive data-source observers.\n   * This method is basically a means to invalidate the inernal reactive data-source.\n   * @param {any} payload The element that has been altered.\n   * @returns {boolean} Returns true if the element is present in the collection, false otherwise.\n   */\n  update(payload) {\n    let result = false,\n      found = this._elementWithPayload(payload, true);\n    if (found) {\n      // nothing to do since the element is already in the collection...\n      result = true;\n      this._invalidate();\n    }\n    return result;\n  }\n\n  /**\n   * Insert an element in the collection. On success, the element ID (a unique string) is returned. On failure, returns null.\n   * A failure scenario only happens when the given payload is already present in the collection. Note that NO exceptions are thrown!\n   * @param {any} payload The element to be stored.\n   * @returns {string} The ID of the inserted element or null if the element already exists...\n   */\n  insert(payload) {\n    let id = null,\n      found = this._elementWithPayload(payload, true);\n    if (!found) {\n      id = guid();\n      this._elements(true).push({ id, payload });\n      this._invalidate();\n      this._trigger('insert', { id, data: payload });\n    }\n    return id;\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @returns {void} No meaningful value is returned.\n   */\n  removeAll() {\n    let all = this._elements(true),\n      length = all.length;\n    for (let i = length - 1; i >= 0; i--) {\n      let item = all[i];\n      delete item.id;\n      delete item.payload;\n      all[i] = null;\n    }\n    all.splice(0, length);\n    this._invalidate();\n  }\n\n  /**\n   * Remove elements from the collection that match the criteria given in the property map.\n   * @param {Object} propertyMap A property map that will be macthed against all collection elements.\n   * @returns {Array} A list with all removed elements.\n   */\n  remove(propertyMap) {\n    let found = this.findAllEntriesBy(propertyMap),\n      foundCount = found.length,\n      removed = [];\n    if (foundCount > 0) {\n      const all = this._elements(true);\n      for (let i = foundCount - 1; i >= 0; i--) {\n        let item = found[i];\n        all.splice(item[2], 1);\n        removed.push(item[0]);\n      }\n      this._invalidate();\n    }\n    return removed;\n  }\n\n  /**\n   * Provides the ID of the given element inside the collection.\n   * @param {any} payload The element being searched for.\n   * @returns {string} The ID of the given element or undefined if the element is not present.\n   */\n  getElementId(payload) {\n    let found = this._elementWithPayload(payload);\n    return found && found.id;\n  }\n\n  /**\n   * Provides the position of the given element in the internal list returning -1 if the element is not present.\n   * @param {any} payload The element being searched for.\n   * @returns {number} The position of the given element in the internal list. If the element is not present -1 is returned.\n   */\n  findById(id) {\n    let found = this._elementWithId(id);\n    return found && found.payload;\n  }\n\n  /**\n   * Provides the position of the given element in the internal list returning -1 if the element is not present.\n   * @param {any} payload The element being searched for.\n   * @returns {number} The position of the given element in the internal list. If the element is not present -1 is returned.\n   */\n  indexOfElement(payload) {\n    return this._elements().indexOf(this._elementWithPayload(payload, true));\n  }\n\n  /**\n   * Provides the position of the element associated with the given ID in the internal list returning -1 if the element is not present.\n   * @param {string} id The index of the element.\n   * @returns {number} The position of the element associated with the given ID in the internal list. If the element is not present -1 is returned.\n   */\n  indexOfId(id) {\n    return this._elements().indexOf(this._elementWithId(id, true));\n  }\n\n  /**\n   * Provides a list-like approach to the collection returning an element by index.\n   * @param {number} index The index of the element.\n   * @returns {any} If out of bounds, undefined is returned. Otherwise the element in the given position is returned.\n   */\n  getElementByIndex(index) {\n    let found = this._elements()[index >= 0 ? index : -1];\n    return found && found.payload;\n  }\n\n  /**\n   * Find an element by a criteria defined by the given callback function.\n   * Attention!!! The reactive source will not be notified if no valid callback is supplied...\n   * @param {function} callback A callback function which will define the search criteria. The callback\n   * function will be passed the collection element, its ID and its index in this very order. The callback\n   * shall return true when its criterea has been fulfilled.\n   * @returns {any} The matched element or undefined if not match was found.\n   */\n  find(callback) {\n    let found;\n    if (_isFunction(callback)) {\n      found = this._elements().find((item, index) => {\n        return callback.call(this, item.payload, item.id, index);\n      });\n    }\n    return found && found.payload;\n  }\n\n  /**\n   * Find the first element that strictly matches the specified property map.\n   * @param {Object} propertyMap A property map that will be macthed against all collection elements.\n   * @param {Object} options A set of options. Currently only \"options.sort\" option is supported.\n   * @param {Object.SortingSpecifier} options.sort An optional sorting specifier. If a sorting specifier is supplied\n   * but is not valid, an exception will be thrown.\n   * @returns {Any} The matched element or undefined if not match was found.\n   */\n  findBy(propertyMap, options) {\n    let found;\n    if (_isObject(options)) {\n      // if the \"options\" argument is provided and is a valid object,\n      // it must be applied to the dataset before search...\n      const all = this.all(options);\n      if (all.length > 0) {\n        if (_isObject(propertyMap)) {\n          found = all.find(item =>\n            _compareToPropertyMapStrict(propertyMap, item)\n          );\n        } else {\n          found = all[0]; // simply extract the first element...\n        }\n      }\n    } else if (_isObject(propertyMap)) {\n      found = this._elements().find(item =>\n        _compareToPropertyMapStrict(propertyMap, item.payload)\n      );\n      if (found) {\n        found = found.payload;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * Find all elements that strictly match the specified property map.\n   * Attention!!! The reactive source will not be notified if no valid property map is supplied...\n   * @param {Object} propertyMap A property map that will be macthed against all collection elements.\n   * @returns {Array} An array of entries of all elements that match the given criteria. Each set in\n   * in the array has the following format: [ elementData, elementId, elementIndex ].\n   */\n  findAllEntriesBy(propertyMap) {\n    const found = [];\n    if (_isObject(propertyMap)) {\n      this._elements().forEach((item, index) => {\n        if (_compareToPropertyMapStrict(propertyMap, item.payload)) {\n          // Match! Add it to the found list...\n          found.push([item.payload, item.id, index]);\n        }\n      });\n    }\n    return found;\n  }\n\n  /**\n   * Find all elements that match a specified property map.\n   * Attention!!! The reactive source will not be notified if no valid property map is supplied...\n   * @param {Object} propertyMap A property map that will be macthed against all collection elements.\n   * @param {Object} options A set of options. Currently only \"options.sort\" option is supported.\n   * @param {Object.SortingSpecifier} options.sort An optional sorting specifier. If a sorting specifier is supplied\n   * but is not valid, an exception will be thrown.\n   * @returns {Array} An array with all elements that match the given criteria and sorted in the specified sorting order.\n   */\n  findAllBy(propertyMap, options) {\n    const found = this.findAllEntriesBy(propertyMap).map(item => item[0]); // Only payload is relevant...\n    if (_isObject(options)) {\n      if ('sort' in options) {\n        _sortListBy(found, options.sort);\n      }\n    }\n    return found;\n  }\n\n  /**\n   * Executes the supplied callback function for each element of the collection.\n   * Attention!!! The reactive source will not be notified if no valid property map is supplied...\n   * @param {function} callback The callback function to be executed. The callback is passed the element,\n   * its ID and its index in this very order.\n   * @returns {void} Nothing is returned.\n   */\n  forEach(callback) {\n    if (_isFunction(callback)) {\n      this._elements().forEach((item, index) => {\n        callback.call(this, item.payload, item.id, index);\n      });\n    }\n  }\n\n  /**\n   * Count the number of elements currently in the collection.\n   * @returns {number} The current number of elements in the collection.\n   */\n  count() {\n    return this._elements().length;\n  }\n\n  /**\n   * Returns a list with all elements of the collection optionally sorted by a sorting specifier criteria.\n   * @param {Object} options A set of options. Currently only \"options.sort\" option is supported.\n   * @param {Object.SortingSpecifier} options.sort An optional sorting specifier. If a sorting specifier is supplied\n   * but is not valid, an exception will be thrown.\n   * @returns {Array} An array with all elements stored in the collection.\n   */\n  all(options) {\n    let list = this._elements().map(item => item.payload);\n    if (_isObject(options)) {\n      if ('sort' in options) {\n        _sortListBy(list, options.sort);\n      }\n    }\n    return list;\n  }\n}\n\n/**\n * Utility Functions\n */\n\n/**\n * Test if supplied argument is a valid object for current class purposes.\n * Atention! The underscore version of this function should not be used for performance reasons.\n */\nfunction _isObject(subject) {\n  return (\n    subject instanceof Object ||\n    (typeof subject === 'object' && subject !== null)\n  );\n}\n\n/**\n * Test if supplied argument is a valid string for current class purposes.\n * Atention! The underscore version of this function should not be used for performance reasons.\n */\nfunction _isString(subject) {\n  return typeof subject === 'string';\n}\n\n/**\n * Test if supplied argument is a valid function for current class purposes.\n * Atention! The underscore version of this function should not be used for performance reasons.\n */\nfunction _isFunction(subject) {\n  return typeof subject === 'function';\n}\n\n/**\n * Shortcut for Object's prototype \"hasOwnProperty\" method.\n */\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Retrieve an object's property value by name. Composite property names (e.g., 'address.country.name') are accepted.\n * @param {Object} targetObject The object we want read the property from...\n * @param {String} propertyName The property to be read (e.g., 'address.street.name' or 'address.street.number'\n * to read object.address.street.name or object.address.street.number, respectively);\n * @returns {Any} Returns whatever the property holds or undefined if the property cannot be read or reached.\n */\nfunction _getPropertyValue(targetObject, propertyName) {\n  let propertyValue; // undefined (the default return value)\n  if (_isObject(targetObject) && _isString(propertyName)) {\n    const fragments = propertyName.split(PROPERTY_SEPARATOR);\n    const fragmentCount = fragments.length;\n    if (fragmentCount > 0) {\n      const firstFragment = fragments[0];\n      const remainingFragments =\n        fragmentCount > 1 ? fragments.slice(1).join(PROPERTY_SEPARATOR) : null;\n      propertyValue = targetObject[firstFragment];\n      if (remainingFragments !== null) {\n        propertyValue = _getPropertyValue(propertyValue, remainingFragments);\n      }\n    }\n  }\n  return propertyValue;\n}\n\n/**\n * Compare a property map with a target object using strict comparison.\n * @param {Object} propertyMap The property map whose properties will be used for comparison. Composite\n * property names (e.g., 'address.country.name') will be tested against the \"resolved\" properties from the target object.\n * @param {Object} targetObject The target object whose properties will be tested.\n * @returns {boolean} Returns true if the properties match, false otherwise.\n */\nfunction _compareToPropertyMapStrict(propertyMap, targetObject) {\n  let result = false;\n  // \"for in\" loops do not thown exceptions for invalid data types...\n  for (let propertyName in propertyMap) {\n    if (_hasOwnProperty.call(propertyMap, propertyName)) {\n      if (\n        propertyMap[propertyName] !==\n        _getPropertyValue(targetObject, propertyName)\n      ) {\n        result = false;\n        break;\n      } else if (result !== true) {\n        result = true;\n      }\n    }\n  }\n  return result;\n}\n\n/**\n * Checks if a sorting specifier is valid.\n * A valid sorting specifier consists of an array of arrays being each subarray a pair\n * in the format [\"property name\", \"sorting order\"].\n * The following exemple can be used to sort studies by \"date\"\" and use \"time\" to break ties in descending order.\n * [ [ 'study.date', 'desc' ], [ 'study.time', 'desc' ] ]\n * @param {Array} specifiers The sorting specifier to be tested.\n * @returns {boolean} Returns true if the specifiers are valid, false otherwise.\n */\nfunction _isValidSortingSpecifier(specifiers) {\n  let result = true;\n  if (specifiers instanceof Array && specifiers.length > 0) {\n    for (let i = specifiers.length - 1; i >= 0; i--) {\n      const item = specifiers[i];\n      if (item instanceof Array) {\n        const property = item[0];\n        const order = item[1];\n        if (\n          _isString(property) &&\n          (order === ORDER_ASC || order === ORDER_DESC)\n        ) {\n          continue;\n        }\n      }\n      result = false;\n      break;\n    }\n  }\n  return result;\n}\n\n/**\n * Sorts an array based on sorting specifier options.\n * @param {Array} list The that needs to be sorted.\n * @param {Array} specifiers An array of specifiers. Please read isValidSortingSpecifier method definition for further details.\n * @returns {void} No value is returned. The array is sorted in place.\n */\nfunction _sortListBy(list, specifiers) {\n  if (list instanceof Array && _isValidSortingSpecifier(specifiers)) {\n    const specifierCount = specifiers.length;\n    list.sort(function _sortListByCallback(a, b) {\n      // callback name for stack traces...\n      let index = 0;\n      while (index < specifierCount) {\n        const specifier = specifiers[index];\n        const property = specifier[0];\n        const order = specifier[1] === ORDER_DESC ? -1 : 1;\n        const aValue = _getPropertyValue(a, property);\n        const bValue = _getPropertyValue(b, property);\n        // @TODO: should we check for the types being compared, like:\n        // ~~ if (typeof aValue !== typeof bValue) continue;\n        // Not sure because dates, for example, can be correctly compared to numbers...\n        if (aValue < bValue) {\n          return order * -1;\n        }\n        if (aValue > bValue) {\n          return order * 1;\n        }\n        if (++index >= specifierCount) {\n          return 0;\n        }\n      }\n    });\n  } else {\n    throw new Error('Invalid Arguments');\n  }\n}\n","const displayFunction = data => {\n  return data.text || '';\n};\n\nexport const arrowAnnotate = {\n  id: 'ArrowAnnotate',\n  name: 'ArrowAnnotate',\n  toolGroup: 'allTools',\n  cornerstoneToolType: 'ArrowAnnotate',\n  options: {\n    measurementTable: {\n      displayFunction,\n    },\n    caseProgress: {\n      include: true,\n      evaluate: true,\n    },\n  },\n};\n","const displayFunction = data => {\n  if (data.shortestDiameter) {\n    // TODO: Make this check criteria again to see if we should display shortest x longest\n    return data.longestDiameter + ' x ' + data.shortestDiameter;\n  }\n\n  return data.longestDiameter;\n};\n\nexport const bidirectional = {\n  id: 'Bidirectional',\n  name: 'Target',\n  toolGroup: 'allTools',\n  cornerstoneToolType: 'Bidirectional',\n  options: {\n    measurementTable: {\n      displayFunction,\n    },\n    caseProgress: {\n      include: true,\n      evaluate: true,\n    },\n  },\n};\n","const displayFunction = data => {\n  let meanValue = '';\n  const { cachedStats } = data;\n  if (cachedStats && cachedStats.mean && !isNaN(cachedStats.mean)) {\n    meanValue = cachedStats.mean.toFixed(2) + ' HU';\n  }\n  return meanValue;\n};\n\nexport const ellipticalRoi = {\n  id: 'EllipticalRoi',\n  name: 'Ellipse',\n  toolGroup: 'allTools',\n  cornerstoneToolType: 'EllipticalRoi',\n  options: {\n    measurementTable: {\n      displayFunction,\n    },\n    caseProgress: {\n      include: true,\n      evaluate: true,\n    },\n  },\n};\n","const displayFunction = data => {\n  let meanValue = '';\n  const { cachedStats } = data;\n  if (cachedStats && cachedStats.mean && !isNaN(cachedStats.mean)) {\n    meanValue = cachedStats.mean.toFixed(2) + ' HU';\n  }\n  return meanValue;\n};\n\nexport const circleRoi = {\n  id: 'CircleRoi',\n  name: 'Circle',\n  toolGroup: 'allTools',\n  cornerstoneToolType: 'CircleRoi',\n  options: {\n    measurementTable: {\n      displayFunction,\n    },\n    caseProgress: {\n      include: true,\n      evaluate: true,\n    },\n  },\n};\n","const displayFunction = data => {\n  let meanValue = '';\n  if (data.meanStdDev && data.meanStdDev.mean && !isNaN(data.meanStdDev.mean)) {\n    meanValue = data.meanStdDev.mean.toFixed(2) + ' HU';\n  }\n  return meanValue;\n};\n\nexport const freehandMouse = {\n  id: 'FreehandMouse',\n  name: 'Freehand',\n  toolGroup: 'allTools',\n  cornerstoneToolType: 'FreehandMouse',\n  options: {\n    measurementTable: {\n      displayFunction,\n    },\n    caseProgress: {\n      include: true,\n      evaluate: true,\n    },\n  },\n};\n","const displayFunction = data => {\n  let lengthValue = '';\n  if (data.length && !isNaN(data.length)) {\n    lengthValue = data.length.toFixed(2) + ' mm';\n  }\n  return lengthValue;\n};\n\nexport const length = {\n  id: 'Length',\n  name: 'Length',\n  toolGroup: 'allTools',\n  cornerstoneToolType: 'Length',\n  options: {\n    measurementTable: {\n      displayFunction,\n    },\n    caseProgress: {\n      include: true,\n      evaluate: true,\n    },\n  },\n};\n","export const nonTarget = {\n  id: 'NonTarget',\n  name: 'Non-Target',\n  toolGroup: 'allTools',\n  cornerstoneToolType: 'NonTarget',\n  options: {\n    measurementTable: {\n      displayFunction: data => data.response,\n    },\n    caseProgress: {\n      include: true,\n      evaluate: true,\n    },\n  },\n};\n","const displayFunction = data => {\n  let meanValue = '';\n  const { cachedStats } = data;\n  if (cachedStats && cachedStats.mean && !isNaN(cachedStats.mean)) {\n    meanValue = cachedStats.mean.toFixed(2) + ' HU';\n  }\n  return meanValue;\n};\n\nexport const rectangleRoi = {\n  id: 'RectangleRoi',\n  name: 'Rectangle',\n  toolGroup: 'allTools',\n  cornerstoneToolType: 'RectangleRoi',\n  options: {\n    measurementTable: {\n      displayFunction,\n    },\n    caseProgress: {\n      include: true,\n      evaluate: true,\n    },\n  },\n};\n","const displayFunction = data => {\n  let text = '';\n  if (data.rAngle && !isNaN(data.rAngle)) {\n    text = data.rAngle.toFixed(2) + String.fromCharCode(parseInt('00B0', 16));\n  }\n  return text;\n};\n\nexport const angle = {\n  id: 'Angle',\n  name: 'Angle',\n  toolGroup: 'allTools',\n  cornerstoneToolType: 'Angle',\n  options: {\n    measurementTable: {\n      displayFunction,\n    },\n    caseProgress: {\n      include: true,\n      evaluate: true,\n    },\n  },\n};\n","export const targetCR = {\n  id: 'TargetCR',\n  name: 'CR Target',\n  toolGroup: 'allTools',\n  cornerstoneToolType: 'TargetCR',\n  options: {\n    measurementTable: {\n      displayFunction: data => data.response,\n    },\n    caseProgress: {\n      include: true,\n      evaluate: true,\n    },\n  },\n};\n","export const targetNE = {\n  id: 'TargetNE',\n  name: 'NE Target',\n  toolGroup: 'allTools',\n  cornerstoneToolType: 'TargetNE',\n  options: {\n    measurementTable: {\n      displayFunction: data => data.response,\n    },\n    caseProgress: {\n      include: true,\n      evaluate: true,\n    },\n  },\n};\n","export const targetUN = {\n  id: 'TargetUN',\n  name: 'UN Target',\n  toolGroup: 'allTools',\n  cornerstoneToolType: 'TargetUN',\n  options: {\n    measurementTable: {\n      displayFunction: data => data.response,\n    },\n    caseProgress: {\n      include: true,\n      evaluate: true,\n    },\n  },\n};\n","export const dicomSRDisplayTool = {\n  id: 'DICOMSRDisplayTool',\n  name: 'DICOMSRDisplayTool',\n  toolGroup: 'allTools',\n  cornerstoneToolType: 'DICOMSRDisplayTool',\n  options: {\n    measurementTable: {\n      displayFunction: data => {\n        return `(SR) ${data.TrackingIdentifier ||\n          data.lesionNamingNumber ||\n          data.measurementNumber ||\n          data.text ||\n          ''}`;\n      },\n    },\n    caseProgress: {\n      include: true,\n      evaluate: true,\n    },\n  },\n};\n\nexport default dicomSRDisplayTool;\n","import * as tools from '../tools';\n\nconst childTools = [];\nObject.keys(tools).forEach(key => childTools.push(tools[key]));\n\nexport const allTools = {\n  id: 'allTools',\n  name: 'Measurements',\n  childTools: childTools,\n  options: {\n    caseProgress: {\n      include: true,\n      evaluate: true,\n    },\n  },\n};\n","import { allTools } from './toolGroups/allTools';\nimport {\n  retrieveMeasurements,\n  storeMeasurements,\n  retrieveTimepoints,\n  storeTimepoints,\n  removeTimepoint,\n  updateTimepoint,\n  disassociateStudy,\n} from './dataExchange';\n\nconst measurementApiDefaultConfig = {\n  measurementTools: [allTools],\n  newLesions: [\n    {\n      id: 'newTargets',\n      name: 'New Targets',\n      toolGroupId: 'targets',\n    },\n    {\n      id: 'newNonTargets',\n      name: 'New Non-Targets',\n      toolGroupId: 'nonTargets',\n    },\n  ],\n  dataExchange: {\n    retrieve: retrieveMeasurements,\n    store: storeMeasurements,\n  },\n};\n\nconst timepointApiDefaultConfig = {\n  dataExchange: {\n    retrieve: retrieveTimepoints,\n    store: storeTimepoints,\n    remove: removeTimepoint,\n    update: updateTimepoint,\n    disassociate: disassociateStudy,\n  },\n};\n\nexport { measurementApiDefaultConfig, timepointApiDefaultConfig };\n","import log from '../log';\n\nexport const retrieveMeasurements = (PatientID, timepointIds) => {\n  log.error('retrieveMeasurements');\n  return Promise.resolve();\n};\n\nexport const storeMeasurements = (measurementData, timepointIds) => {\n  log.error('storeMeasurements');\n  return Promise.resolve();\n};\n\nexport const retrieveTimepoints = filter => {\n  log.error('retrieveTimepoints');\n  return Promise.resolve();\n};\n\nexport const storeTimepoints = timepointData => {\n  log.error('storeTimepoints');\n  return Promise.resolve();\n};\n\nexport const updateTimepoint = (timepointData, query) => {\n  log.error('updateTimepoint');\n  return Promise.resolve();\n};\n\nexport const removeTimepoint = timepointId => {\n  log.error('removeTimepoint');\n  return Promise.resolve();\n};\n\nexport const disassociateStudy = (timepointIds, StudyInstanceUID) => {\n  log.error('disassociateStudy');\n  return Promise.resolve();\n};\n","import log from '../../log';\nimport { timepointApiDefaultConfig } from './../configuration.js';\n\nconst configuration = {\n  ...timepointApiDefaultConfig,\n};\n\nconst TIMEPOINT_TYPE_NAMES = {\n  prebaseline: 'Pre-Baseline',\n  baseline: 'Baseline',\n  followup: 'Follow-up',\n};\n\nexport default class TimepointApi {\n  static Instance;\n\n  static setConfiguration(config) {\n    Object.assign(configuration, config);\n  }\n\n  static getConfiguration() {\n    return configuration;\n  }\n\n  constructor(currentTimepointId, options = {}) {\n    if (TimepointApi.Instance) {\n      TimepointApi.Instance.initialize(currentTimepointId, options);\n      return TimepointApi.Instance;\n    }\n\n    this.initialize(currentTimepointId, options);\n    TimepointApi.Instance = this;\n  }\n\n  initialize(currentTimepointId, options = {}) {\n    this.currentTimepointId = currentTimepointId;\n    this.comparisonTimepointKey = options.comparisonTimepointKey || 'baseline';\n    this.options = options;\n    this.timepoints = [];\n  }\n\n  onTimepointsUpdated() {\n    if (typeof this.options.onTimepointsUpdated !== 'function') {\n      log.warn('Timepoints update callback is not defined');\n      return;\n    }\n\n    this.options.onTimepointsUpdated(Object.assign([], this.timepoints));\n  }\n\n  calculateVisitNumber(timepoint) {\n    // Retrieve all of the relevant follow-up timepoints for this patient\n    const sortedTimepoints = this.timepoints.sort((tp1, tp2) => {\n      return tp1.visitDate > tp2.visitDate ? 1 : -1;\n    });\n    const filteredTimepoints = sortedTimepoints.find(\n      tp =>\n        tp.PatientID === timepoint.PatientID &&\n        tp.timepointType === timepoint.timepointType\n    );\n\n    // Create an array of just timepointIds, so we can use indexOf\n    // on it to find the current timepoint's relative position\n    const timepointIds = filteredTimepoints.map(\n      timepoint => timepoint.timepointId\n    );\n\n    // Calculate the index of the current timepoint in the array of all\n    // relevant follow-up timepoints\n    const visitNumber = timepointIds.indexOf(timepoint.timepointId) + 1;\n\n    // If visitNumber is 0, it means that the current timepoint was not in the list\n    if (!visitNumber) {\n      throw new Error(\n        'Current timepoint was not in the list of relevant timepoints?'\n      );\n    }\n\n    return visitNumber;\n  }\n\n  retrieveTimepoints(filter) {\n    const retrievalFn = configuration.dataExchange.retrieve;\n    if (typeof retrievalFn !== 'function') {\n      log.error('Timepoint retrieval function has not been configured.');\n      return;\n    }\n\n    return new Promise((resolve, reject) => {\n      retrievalFn(filter)\n        .then(timepointData => {\n          log.info('Timepoint data retrieval');\n\n          timepointData.forEach(timepoint => {\n            const timepointIndex = this.timepoints.findIndex(\n              tp => tp.timepointId === timepoint.timepointId\n            );\n            if (timepointIndex < 0) {\n              this.timepoints.push(timepoint);\n            } else {\n              this.timepoints[timepointIndex] = timepoint;\n            }\n          });\n\n          // Let others know that the timepoints are updated\n          this.onTimepointsUpdated();\n\n          resolve();\n        })\n        .catch(reason => {\n          log.error(`Timepoint retrieval function failed: ${reason}`);\n          reject(reason);\n        });\n    });\n  }\n\n  storeTimepoints() {\n    const storeFn = configuration.dataExchange.store;\n    if (typeof storeFn !== 'function') {\n      log.error('Timepoint store function has not been configured.');\n      return;\n    }\n\n    log.info('Preparing to store timepoints');\n    log.info(JSON.stringify(this.timepoints, null, 2));\n\n    storeFn(this.timepoints).then(() =>\n      log.info('Timepoint storage completed')\n    );\n  }\n\n  disassociateStudy(timepointIds, StudyInstanceUID) {\n    const disassociateFn = configuration.dataExchange.disassociate;\n    if (typeof disassociateFn !== 'function') {\n      log.error('Study disassociate function has not been configured.');\n      return;\n    }\n\n    disassociateFn(timepointIds, StudyInstanceUID).then(() => {\n      log.info('Disassociation completed');\n\n      this.timepoints = [];\n      this.retrieveTimepoints({});\n    });\n  }\n\n  removeTimepoint(timepointId) {\n    const removeFn = configuration.dataExchange.remove;\n    if (typeof removeFn !== 'function') {\n      log.error('Timepoint remove function has not been configured.');\n      return;\n    }\n\n    const timepointData = {\n      timepointId,\n    };\n\n    log.info('Preparing to remove timepoint');\n    log.info(JSON.stringify(timepointData, null, 2));\n\n    removeFn(timepointData).then(() => {\n      log.info('Timepoint removal completed');\n\n      const tpIndex = this.timepoints.findIndex(\n        tp => tp.timepointId === timepointId\n      );\n      if (tpIndex > -1) {\n        this.timepoints.splice(tpIndex, 1);\n      }\n\n      // Let others know that the timepoints are updated\n      this.onTimepointsUpdated();\n    });\n  }\n\n  updateTimepoint(timepointId, query) {\n    const updateFn = configuration.dataExchange.update;\n    if (typeof updateFn !== 'function') {\n      log.error('Timepoint update function has not been configured.');\n      return;\n    }\n\n    const timepointData = {\n      timepointId,\n    };\n\n    log.info('Preparing to update timepoint');\n    log.info(JSON.stringify(timepointData, null, 2));\n    log.info(JSON.stringify(query, null, 2));\n\n    updateFn(timepointData, query).then(() => {\n      log.info('Timepoint updated completed');\n\n      const tpIndex = this.timepoints.findIndex(\n        tp => tp.timepointId === timepointId\n      );\n      if (tpIndex > -1) {\n        this.timepoints[tpIndex] = Object.assign(\n          {},\n          this.timepoints[tpIndex],\n          query\n        );\n      }\n\n      // Let others know that the timepoints are updated\n      this.onTimepointsUpdated();\n    });\n  }\n\n  // Return all timepoints\n  all(filter) {\n    let timepointsToReturn;\n    if (filter) {\n      timepointsToReturn = this.timepoints.filter(filter);\n    } else {\n      timepointsToReturn = this.timepoints;\n    }\n\n    return timepointsToReturn.sort((tp1, tp2) => {\n      return tp1.visitDate < tp2.visitDate ? 1 : -1;\n    });\n  }\n\n  // Return only the current timepoint\n  current() {\n    return this.timepoints.find(\n      tp => tp.timepointId === this.currentTimepointId\n    );\n  }\n\n  lock() {\n    const tpIndex = this.timepoints.findIndex(\n      tp => tp.timepointId === this.currentTimepointId\n    );\n    if (tpIndex < 0) {\n      return;\n    }\n\n    this.timepoints[tpIndex] = Object.assign({}, this.timepoints[tpIndex], {\n      locked: true,\n    });\n  }\n\n  // Return the prior timepoint\n  prior() {\n    const current = this.current();\n    if (!current) {\n      return;\n    }\n\n    return this.all().find(tp => tp.visitDate < current.visitDate);\n  }\n\n  // Return only the current and prior timepoints\n  currentAndPrior() {\n    const timepoints = [];\n\n    const current = this.current();\n    if (current) {\n      timepoints.push(current);\n    }\n\n    const prior = this.prior();\n    if (current && prior && prior.timepointId !== current.timepointId) {\n      timepoints.push(prior);\n    }\n\n    return timepoints;\n  }\n\n  // Return the current and the comparison timepoints\n  currentAndComparison(comparisonTimepointKey = this.comparisonTimepointKey) {\n    const current = this.current();\n    const comparisonTimepoint = this.comparison(comparisonTimepointKey);\n    const timepoints = [current];\n\n    if (\n      comparisonTimepoint &&\n      !timepoints.find(tp => tp.timepointId === comparisonTimepoint.timepointId)\n    ) {\n      timepoints.push(comparisonTimepoint);\n    }\n\n    return timepoints;\n  }\n\n  /**\n   * Return true if there are 2 or more baseline timepoints before and at the current timepoint, otherwise false\n   * @returns {boolean}\n   */\n  isRebaseline(timepointId) {\n    const current = timepointId\n      ? this.timepoints.find(tp => tp.timepointId === timepointId)\n      : this.current();\n    if (!current) {\n      return false;\n    }\n\n    const baselines = this.timepoints.filter(\n      tp => tp.timepointType === 'baseline' && tp.visitDate <= current.visitDate\n    );\n    return baselines.length > 1;\n  }\n\n  /**\n   * Return the next (closest future) baseline after current timepoint\n   * @returns {*}\n   */\n  nextBaselineAfterCurrent() {\n    let current = this.current();\n\n    //  Get all next timepoints newer than the current timepoint sorted by visitDate ascending\n    const sortedTimepoints = this.timepoints.sort((tp1, tp2) => {\n      return tp1.visitDate > tp2.visitDate ? 1 : -1;\n    });\n    return sortedTimepoints.find(\n      tp => tp.visitDate > current.visitDate && tp.timepointType === 'baseline'\n    );\n  }\n\n  /**\n   * Set the current timepoint id\n   * @param timepointId\n   */\n  setCurrentTimepointId(timepointId) {\n    this.currentTimepointId = timepointId;\n  }\n\n  /**\n   * Set the comparison timepoint that overrides the default comparison timepoint (called based on user selection in a viewport)\n   * @param timepoint\n   */\n  setUserComparison(timepoint) {\n    this.userComparison = timepoint;\n  }\n\n  /**\n   * Return only the comparison timepoint\n   * @param {String} [comparisonTimepointKey]\n   * @return {*}\n   */\n  comparison(comparisonTimepointKey = this.comparisonTimepointKey) {\n    // Return the comparison timepoint set by user if exists\n    if (this.userComparison) {\n      return this.userComparison;\n    }\n\n    const current = this.current();\n    if (!current) {\n      return;\n    }\n\n    // If current timepoint is prebaseline, the first (closest future) BL after current is comparison regardless of default comparison timepoint\n    if (current.timepointType === 'prebaseline') {\n      const nextBaselineAfterCurrent = this.nextBaselineAfterCurrent();\n      // If there is a next baseline, make it comparison, otherwise comparison is done by default comparison timepoint\n      if (nextBaselineAfterCurrent) {\n        return nextBaselineAfterCurrent;\n      }\n    }\n\n    // If current timepoint is baseline, the prior is comparison if exists regardless of default comparison timepoint\n    if (current.timepointType === 'baseline') {\n      const prior = this.prior();\n      if (prior) {\n        return prior;\n      }\n    }\n\n    const comparison = this[comparisonTimepointKey]();\n\n    // Do not return a comparison if it would be identical to\n    // the current.\n    if (comparison && comparison.timepointId === current.timepointId) {\n      return;\n    }\n\n    return comparison;\n  }\n\n  /**\n   * Return the latest initial (prebaseline or baseline) timepoint after current and before the next followup timepoint\n   * @returns {*}\n   */\n  latestInitialTimepointAfterCurrent() {\n    let currentTimepoint = this.current();\n\n    //  Skip if the current timepoint is FU since there is no initial timepoint after follow-up\n    if (currentTimepoint.timepointType === 'followup') {\n      return;\n    }\n\n    //  Get all next timepoints newer than the current timepoint sorted by visitDate ascending\n    const sortedTimepoints = this.timepoints.sort((tp1, tp2) => {\n      return tp1.visitDate > tp2.visitDate ? 1 : -1;\n    });\n    const allNextTimepoints = sortedTimepoints.filter(\n      tp => tp.visitDate > currentTimepoint.visitDate\n    );\n\n    const nextFollowupIndex = allNextTimepoints.findIndex(\n      tp => tp.timepointType === 'followup'\n    );\n    const latestInitialBeforeNextFUIndex = nextFollowupIndex - 1;\n\n    if (latestInitialBeforeNextFUIndex < 0) {\n      //  There is no FU and all next timepoints are initial, so return the last one\n      return allNextTimepoints[allNextTimepoints.length - 1];\n    }\n\n    //  Return the latest initial timepoint before the next FU\n    return allNextTimepoints[latestInitialBeforeNextFUIndex];\n  }\n\n  /**\n   * Return timepoint ids of initial timepoints which are prebaseline and baseline\n   * @returns {*}\n   */\n  initialTimepointIds() {\n    let timepointToCheck = this.current();\n\n    //  If the current timepoint is PBL or BL, then get the recent PBL/BL of the current timepoint by its first FU\n    //      If it does not exist, then there is no newer initial timepoint, so the current timepoint is used to determine initial timepoint ids\n    if (\n      timepointToCheck.timepointType === 'prebaseline' ||\n      timepointToCheck.timepointType === 'baseline'\n    ) {\n      timepointToCheck =\n        this.latestInitialTimepointAfterCurrent() || timepointToCheck;\n    }\n\n    const visitDateToCheck = timepointToCheck.visitDate;\n\n    const preBaselineTimepoints =\n      this.timepoints.filter(\n        tp =>\n          tp.timepointType === 'prebaseline' && tp.visitDate <= visitDateToCheck\n      ) || [];\n    const preBaselineTimepointIds = preBaselineTimepoints.map(\n      timepoint => timepoint.timepointId\n    );\n\n    const baselineTimepoints =\n      this.timepoints.filter(\n        tp =>\n          tp.timepointType === 'baseline' && tp.visitDate <= visitDateToCheck\n      ) || [];\n    const baselineTimepointIds = baselineTimepoints.map(\n      timepoint => timepoint.timepointId\n    );\n\n    return preBaselineTimepointIds.concat(baselineTimepointIds);\n  }\n\n  // Return only the baseline timepoint\n  baseline() {\n    const currentVisitDate = this.current().visitDate;\n    return this.all().find(\n      tp => tp.timepointType === 'baseline' && tp.visitDate <= currentVisitDate\n    );\n  }\n\n  /**\n   * Return only the nadir timepoint. Must be prior to the current timepoint\n   * @return {any}\n   */\n  nadir() {\n    const current = this.current();\n    const nadir = this.all().find(\n      tp =>\n        tp.timepointId !== current.timepointId &&\n        tp.timepointKey === 'nadir' &&\n        tp.visitDate <= current.visitDate\n    );\n\n    // If we have found a nadir, return that\n    if (nadir) {\n      return nadir;\n    }\n\n    // Otherwise, return the most recent baseline\n    // This should only happen if we are only at FU1,\n    // so the baseline is the nadir.\n    return this.baseline();\n  }\n\n  // Return only the key timepoints (current, prior, nadir and baseline)\n  key() {\n    const result = [this.current()];\n    const prior = this.prior();\n    const nadir = this.nadir();\n    const baseline = this.baseline();\n\n    const resultIncludes = timepoint =>\n      !!result.find(x => x.timepointId === timepoint.timepointId);\n\n    if (prior && resultIncludes(prior) === false) {\n      result.push(prior);\n    }\n\n    if (nadir && resultIncludes(nadir) === false) {\n      result.push(nadir);\n    }\n\n    if (baseline && resultIncludes(baseline) === false) {\n      result.push(baseline);\n    }\n\n    return result;\n  }\n\n  // Return only the timepoints for the given study\n  study(StudyInstanceUID) {\n    return this.all().filter(timepoint =>\n      timepoint.studyInstanceUIDs.includes(StudyInstanceUID)\n    );\n  }\n\n  // Return the timepoint's name\n  name(timepoint) {\n    const timepointTypeName = TIMEPOINT_TYPE_NAMES[timepoint.timepointType];\n\n    // Check if this is a Baseline timepoint, if it is, return 'Baseline'\n    if (timepoint.timepointType === 'baseline') {\n      return 'Baseline';\n    } else if (timepoint.visitNumber) {\n      return `${timepointTypeName} ${timepoint.visitNumber}`;\n    }\n\n    const visitNumber = this.calculateVisitNumber(timepoint);\n\n    // Return the timepoint name as 'Follow-up N'\n    return `${timepointTypeName} ${visitNumber}`;\n  }\n\n  // Build the timepoint title based on its date\n  title(timepoint) {\n    const timepointName = this.name(timepoint);\n\n    const all = this.all();\n    let index = -1;\n    let currentIndex = null;\n    for (let i = 0; i < all.length; i++) {\n      const currentTimepoint = all[i];\n\n      // Skip the iterations until we can't find the selected timepoint on study list\n      if (this.currentTimepointId === currentTimepoint.timepointId) {\n        currentIndex = 0;\n      }\n\n      if (currentIndex !== null) {\n        index = currentIndex++;\n      }\n\n      // Break the loop if reached the timepoint to get the title\n      if (currentTimepoint.timepointId === timepoint.timepointId) {\n        break;\n      }\n    }\n\n    const states = {\n      0: ['Current'],\n      1: ['Prior'],\n    };\n    const parenthesis = states[index] || [];\n    const nadir = this.nadir();\n\n    if (nadir && nadir.timepointId === timepoint.timepointId) {\n      parenthesis.push('Nadir');\n    }\n\n    let parenthesisText = '';\n    if (parenthesis.length) {\n      parenthesisText = `(${parenthesis.join(', ')})`;\n    }\n\n    return `${timepointName} ${parenthesisText}`;\n  }\n}\n","export default function(measurement) {\n  if (!measurement) {\n    return;\n  }\n\n  switch (measurement.toolType) {\n    case 'Bidirectional':\n    case 'TargetCR':\n    case 'TargetNE':\n    case 'TargetUN':\n      return `Target ${measurement.lesionNamingNumber}`;\n    case 'NonTarget':\n      return `Non-Target ${measurement.lesionNamingNumber}`;\n  }\n}\n","export default function(measurement) {\n  return measurement.description;\n}\n","import studyMetadataManager from '../../utils/studyMetadataManager';\n\nexport default function(imagePath, thumbnail = false) {\n  const [\n    StudyInstanceUID,\n    SeriesInstanceUID,\n    SOPInstanceUID,\n    frameIndex,\n  ] = imagePath.split('_');\n  const studyMetadata = studyMetadataManager.get(StudyInstanceUID);\n  const series = studyMetadata.getSeriesByUID(SeriesInstanceUID);\n  const instance = series.getInstanceByUID(SOPInstanceUID);\n  return instance.getImageId(frameIndex, thumbnail);\n}\n","import cornerstoneTools from 'cornerstone-tools';\nimport cornerstone from 'cornerstone-core';\nimport log from '../../log';\nimport getLabel from '../lib/getLabel';\nimport getDescription from '../lib/getDescription';\nimport getImageIdForImagePath from '../lib/getImageIdForImagePath';\nimport guid from '../../utils/guid';\nimport studyMetadataManager from '../../utils/studyMetadataManager';\nimport { measurementApiDefaultConfig } from './../configuration.js';\n\nconst configuration = {\n  ...measurementApiDefaultConfig,\n};\n\nexport default class MeasurementApi {\n  static Instance;\n\n  /**\n   * Set configuration: It should merge default configuration with any new one\n   *\n   * @static\n   * @param {Object} config\n   * @param {Object} config.server\n   * @param {string} config.server.type - The server type\n   * @param {string} config.server.wadoRoot - The server wado URL root\n   * @param {Array} config.measurementTools\n   * @param {string} config.measurementTools[].id - The tool group id\n   * @param {string} config.measurementTools[].name - The tool group name\n   * @param {Array} config.measurementTools[].childTools - The child tool's configuration\n   * @param {Object} config.dataExchange\n   * @param {Function} config.dataExchange.store - Function that store measurement data\n   * @param {Function} config.dataExchange.retrieve - Function that retrieves measurement data\n   *\n   * @memberof MeasurementApi\n   */\n  static setConfiguration(config) {\n    Object.assign(configuration, config);\n  }\n\n  static getConfiguration() {\n    return configuration;\n  }\n\n  static getToolsGroupsMap() {\n    const toolsGroupsMap = {};\n    configuration.measurementTools.forEach(toolGroup => {\n      toolGroup.childTools.forEach(\n        tool => (toolsGroupsMap[tool.id] = toolGroup.id)\n      );\n    });\n\n    return toolsGroupsMap;\n  }\n\n  static getToolGroupTools(toolsGroupsMap) {\n    const result = {};\n    Object.keys(toolsGroupsMap).forEach(toolType => {\n      const toolGroupId = toolsGroupsMap[toolType];\n      if (!result[toolGroupId]) {\n        result[toolGroupId] = [];\n      }\n\n      result[toolGroupId].push(toolType);\n    });\n\n    return result;\n  }\n\n  static getToolConfiguration(toolType) {\n    const configuration = MeasurementApi.getConfiguration();\n    const toolsGroupsMap = MeasurementApi.getToolsGroupsMap();\n\n    const toolGroupId = toolsGroupsMap[toolType];\n    const toolGroup = configuration.measurementTools.find(\n      toolGroup => toolGroup.id === toolGroupId\n    );\n\n    let tool;\n    if (toolGroup) {\n      tool = toolGroup.childTools.find(tool => tool.id === toolType);\n    }\n\n    return {\n      toolGroupId,\n      toolGroup,\n      tool,\n    };\n  }\n\n  static syncMeasurementAndToolData(measurement) {\n    log.info('syncMeasurementAndToolData');\n\n    const measurementLabel = getLabel(measurement);\n    if (measurementLabel) {\n      measurement.labels = [measurementLabel];\n    }\n\n    const toolState = cornerstoneTools.globalImageIdSpecificToolStateManager.saveToolState();\n\n    // Stop here if the metadata for the measurement's study is not loaded yet\n    const { StudyInstanceUID } = measurement;\n    const metadata = studyMetadataManager.get(StudyInstanceUID);\n    if (!metadata) return;\n\n    // Iterate each child tool if the current tool has children\n    const toolType = measurement.toolType;\n    const { tool } = MeasurementApi.getToolConfiguration(toolType);\n    if (Array.isArray(tool.childTools)) {\n      tool.childTools.forEach(childToolKey => {\n        const childMeasurement = measurement[childToolKey];\n        if (!childMeasurement) return;\n        childMeasurement._id = measurement._id;\n        childMeasurement.measurementNumber = measurement.measurementNumber;\n        childMeasurement.lesionNamingNumber = measurement.lesionNamingNumber;\n\n        MeasurementApi.syncMeasurementAndToolData(childMeasurement);\n      });\n\n      return;\n    }\n\n    const imageId = getImageIdForImagePath(measurement.imagePath);\n\n    // If no tool state exists for this imageId, create an empty object to store it\n    if (!toolState[imageId]) {\n      toolState[imageId] = {};\n    }\n\n    const currentToolState = toolState[imageId][toolType];\n    const toolData = currentToolState && currentToolState.data;\n\n    // Check if we already have toolData for this imageId and toolType\n    if (toolData && toolData.length) {\n      // If we have toolData, we should search it for any data related to the current Measurement\n      const toolData = toolState[imageId][toolType].data;\n\n      // Create a flag so we know if we've successfully updated the Measurement in the toolData\n      let alreadyExists = false;\n\n      // Loop through the toolData to search for this Measurement\n      toolData.forEach(tool => {\n        // Break the loop if this isn't the Measurement we are looking for\n        if (tool._id !== measurement._id) {\n          return;\n        }\n\n        // If we have found the Measurement, set the flag to True\n        alreadyExists = true;\n\n        // Update the toolData from the Measurement data\n        Object.assign(tool, measurement);\n        return false;\n      });\n\n      // If we have found the Measurement we intended to update, we can stop this function here\n      if (alreadyExists === true) {\n        return;\n      }\n    } else {\n      // If no toolData exists for this toolType, create an empty array to hold some\n      toolState[imageId][toolType] = {\n        data: [],\n      };\n    }\n\n    // If we have reached this point, it means we haven't found the Measurement we are looking for\n    // in the current toolData. This means we need to add it.\n\n    // Add the MeasurementData into the toolData for this imageId\n    toolState[imageId][toolType].data.push(measurement);\n\n    cornerstoneTools.globalImageIdSpecificToolStateManager.restoreToolState(\n      toolState\n    );\n  }\n\n  static isToolIncluded(tool) {\n    return (\n      tool.options &&\n      tool.options.caseProgress &&\n      tool.options.caseProgress.include\n    );\n  }\n\n  constructor(timepointApi, options = {}) {\n    if (MeasurementApi.Instance) {\n      MeasurementApi.Instance.initialize(timepointApi, options);\n      return MeasurementApi.Instance;\n    }\n\n    this.initialize(timepointApi, options);\n    MeasurementApi.Instance = this;\n  }\n\n  initialize(timepointApi, options = {}) {\n    this.timepointApi = timepointApi;\n    this.options = options;\n    this.toolGroups = {};\n    this.tools = {};\n    this.toolsGroupsMap = MeasurementApi.getToolsGroupsMap();\n    this.toolGroupTools = MeasurementApi.getToolGroupTools(this.toolsGroupsMap);\n\n    // Iterate over each tool group and create collection\n    configuration.measurementTools.forEach(toolGroup => {\n      this.toolGroups[toolGroup.id] = [];\n\n      // Iterate over each tool group child tools (e.g. bidirectional, targetCR, etc.) and create collection\n      toolGroup.childTools.forEach(tool => {\n        this.tools[tool.id] = [];\n      });\n    });\n  }\n\n  onMeasurementsUpdated() {\n    if (typeof this.options.onMeasurementsUpdated !== 'function') {\n      log.warn('Measurements update callback is not defined');\n      return;\n    }\n\n    this.options.onMeasurementsUpdated(Object.assign({}, this.tools));\n  }\n\n  retrieveMeasurements(PatientID, timepointIds) {\n    const retrievalFn = configuration.dataExchange.retrieve;\n    const { server } = configuration;\n    if (typeof retrievalFn !== 'function') {\n      log.error('Measurement retrieval function has not been configured.');\n      return;\n    }\n\n    return new Promise((resolve, reject) => {\n      retrievalFn(server).then(measurementData => {\n        if (measurementData) {\n          log.info('Measurement data retrieval');\n          log.info(measurementData);\n\n          Object.keys(measurementData).forEach(measurementTypeId => {\n            const measurements = measurementData[measurementTypeId];\n\n            measurements.forEach(measurement => {\n              const { toolType } = measurement;\n\n              this.addMeasurement(toolType, measurement);\n            });\n          });\n        }\n\n        resolve();\n\n        // Synchronize the new tool data\n        this.syncMeasurementsAndToolData();\n\n        cornerstone.getEnabledElements().forEach(enabledElement => {\n          if (enabledElement.image) {\n            cornerstone.updateImage(enabledElement.element);\n          }\n        });\n\n        // Let others know that the measurements are updated\n        this.onMeasurementsUpdated();\n      }, reject);\n    });\n  }\n\n  storeMeasurements(timepointId) {\n    const { server } = configuration;\n    const storeFn = configuration.dataExchange.store;\n    if (typeof storeFn !== 'function') {\n      log.error('Measurement store function has not been configured.');\n      return;\n    }\n\n    let measurementData = {};\n    configuration.measurementTools.forEach(toolGroup => {\n      // Skip the tool groups excluded from case progress\n      if (!MeasurementApi.isToolIncluded(toolGroup)) {\n        return;\n      }\n\n      toolGroup.childTools.forEach(tool => {\n        // Skip the tools excluded from case progress\n        if (!MeasurementApi.isToolIncluded(tool)) {\n          return;\n        }\n\n        if (!measurementData[toolGroup.id]) {\n          measurementData[toolGroup.id] = [];\n        }\n\n        measurementData[toolGroup.id] = measurementData[toolGroup.id].concat(\n          this.tools[tool.id]\n        );\n      });\n    });\n\n    const timepointFilter = timepointId\n      ? tp => tp.timepointId === timepointId\n      : null;\n    const timepoints = this.timepointApi.all(timepointFilter);\n    const timepointIds = timepoints.map(t => t.timepointId);\n    const PatientID = timepoints[0].PatientID;\n    const filter = {\n      PatientID,\n      timepointIds,\n    };\n\n    log.info('Saving Measurements for timepoints:', timepoints);\n    return storeFn(measurementData, filter, server).then(result => {\n      log.info('Measurement storage completed');\n      return result;\n    });\n  }\n\n  calculateLesionNamingNumber(measurements) {\n    const sortedMeasurements = measurements.sort((a, b) => {\n      if (a.lesionNamingNumber > b.lesionNamingNumber) {\n        return 1;\n      } else if (a.lesionNamingNumber < b.lesionNamingNumber) {\n        return -1;\n      }\n\n      return 0;\n    });\n\n    //  Calculate lesion naming number starting from 1 not to miss any measurement (as seen in MM)\n    //      A measurement from beginning of the list might be deleted, so a new measurement should replace that\n    let i;\n    for (i = 1; i < sortedMeasurements.length + 1; i++) {\n      if (i < sortedMeasurements[i - 1].lesionNamingNumber) {\n        break;\n      }\n    }\n\n    return i;\n  }\n\n  fetch(toolGroupId, filter) {\n    if (!this.toolGroups[toolGroupId]) {\n      throw new Error(\n        `MeasurementApi: No Collection with the id: ${toolGroupId}`\n      );\n    }\n\n    let items;\n    if (filter) {\n      items = this.toolGroups[toolGroupId].filter(filter);\n    } else {\n      items = this.toolGroups[toolGroupId];\n    }\n\n    return items.map(item => {\n      if (item.toolId) {\n        return this.tools[item.toolId].find(\n          tool => tool._id === item.toolItemId\n        );\n      }\n\n      return { lesionNamingNumber: item.lesionNamingNumber };\n    });\n  }\n\n  getFirstMeasurement(timepointId) {\n    // Get child tools from all included tool groups\n    let childTools = [];\n    configuration.measurementTools.forEach(toolGroup => {\n      // Skip the tool groups excluded from case progress\n      if (!MeasurementApi.isToolIncluded(toolGroup)) {\n        return false;\n      }\n\n      childTools = childTools.concat(toolGroup.childTools);\n    });\n\n    // Get all included child tools\n    const includedChildTools = childTools.filter(tool =>\n      MeasurementApi.isToolIncluded(tool)\n    );\n\n    // Get the first measurement for the given timepoint\n    let measurement = undefined;\n    includedChildTools.every(tool => {\n      measurement = this.tools[tool.id].find(\n        t => t.timepointId === timepointId && t.measurementNumber === 1\n      );\n\n      return !measurement;\n    });\n\n    // Return the found measurement object or undefined if not found\n    return measurement;\n  }\n\n  lesionExistsAtTimepoints(lesionNamingNumber, toolGroupId, timepointIds) {\n    // Retrieve all the data for the given tool group (e.g. 'targets')\n    const measurementsAtTimepoint = this.fetch(toolGroupId, tool =>\n      timepointIds.includes(tool.timepointId)\n    );\n\n    // Return whether or not any lesion at this timepoint has the same lesionNamingNumber\n    return !!measurementsAtTimepoint.find(\n      m => m.lesionNamingNumber === lesionNamingNumber\n    );\n  }\n\n  isNewLesionsMeasurement(measurementData) {\n    if (!measurementData) {\n      return;\n    }\n\n    const toolConfig = MeasurementApi.getToolConfiguration(\n      measurementData.toolType\n    );\n    const toolType = toolConfig.tool.parentTool || measurementData.toolType;\n    const { timepointApi } = this;\n    const currentMeasurement =\n      this.tools[toolType].find(tool => tool._id === measurementData._id) || {};\n    const timepointId =\n      currentMeasurement.timepointId || measurementData.timepointId;\n    const lesionNamingNumber =\n      currentMeasurement.lesionNamingNumber ||\n      measurementData.lesionNamingNumber;\n\n    // Stop here if the needed information is not set\n    if (!timepointApi || !timepointId || !toolConfig) {\n      return;\n    }\n\n    const { toolGroupId } = toolConfig;\n    const current = timepointApi.timepoints.find(\n      tp => tp.timepointId === timepointId\n    );\n    const initialTimepointIds = timepointApi.initialTimepointIds();\n\n    // Stop here if there's no initial timepoint, or if the current is any initial\n    if (\n      !initialTimepointIds ||\n      initialTimepointIds.length < 1 ||\n      initialTimepointIds.some(\n        initialtpid => initialtpid === current.timepointId\n      )\n    ) {\n      return false;\n    }\n\n    return (\n      this.lesionExistsAtTimepoints(\n        lesionNamingNumber,\n        toolGroupId,\n        initialTimepointIds\n      ) === false\n    );\n  }\n\n  calculateLesionMaxMeasurementNumber(groupId, filter) {\n    let measurements = [];\n    if (groupId) {\n      // Get the measurements of the group\n      measurements = this.toolGroups[groupId] || [];\n    } else {\n      // Get all measurements of all groups\n      measurements = Object.keys(this.toolGroups).reduce((acc, val) => {\n        acc.push(...this.toolGroups[val]);\n        return acc;\n      }, []);\n    }\n\n    const sortedMeasurements = measurements.filter(filter).sort((tp1, tp2) => {\n      return tp1.measurementNumber < tp2.measurementNumber ? 1 : -1;\n    });\n\n    for (let i = 0; i < sortedMeasurements.length; i++) {\n      const toolGroupMeasurement = sortedMeasurements[i];\n      const measurement = this.tools[toolGroupMeasurement.toolId].find(\n        tool => tool._id === toolGroupMeasurement.toolItemId\n      );\n      const isNew = this.isNewLesionsMeasurement(measurement);\n      if (!isNew) {\n        return measurement.measurementNumber;\n      }\n    }\n\n    return 0;\n  }\n\n  calculateNewLesionMaxMeasurementNumber(groupId, filter) {\n    const sortedMeasurements = this.toolGroups[groupId]\n      .filter(filter)\n      .sort((tp1, tp2) => {\n        return tp1.measurementNumber < tp2.measurementNumber ? 1 : -1;\n      });\n\n    for (let i = 0; i < sortedMeasurements.length; i++) {\n      const toolGroupMeasurement = sortedMeasurements[i];\n      const measurement = this.tools[toolGroupMeasurement.toolId].find(\n        tool => tool._id === toolGroupMeasurement.toolItemId\n      );\n      const isNew = this.isNewLesionsMeasurement(measurement);\n      if (isNew) {\n        return measurement.measurementNumber;\n      }\n    }\n\n    return 0;\n  }\n\n  calculateMeasurementNumber(measurement) {\n    const toolGroupId = this.toolsGroupsMap[measurement.toolType];\n\n    const filter = tool => tool._id !== measurement._id;\n\n    const isNew = this.isNewLesionsMeasurement(measurement);\n\n    if (isNew) {\n      const maxTargetMeasurementNumber = this.calculateLesionMaxMeasurementNumber(\n        'targets',\n        filter\n      );\n      const maxNonTargetMeasurementNumber = this.calculateLesionMaxMeasurementNumber(\n        'nonTargets',\n        filter\n      );\n      const maxNewTargetMeasurementNumber = this.calculateNewLesionMaxMeasurementNumber(\n        'targets',\n        filter\n      );\n      if (toolGroupId === 'targets') {\n        return Math.max(\n          maxTargetMeasurementNumber,\n          maxNonTargetMeasurementNumber,\n          maxNewTargetMeasurementNumber\n        );\n      } else if (toolGroupId === 'nonTargets') {\n        const maxNewNonTargetMeasurementNumber = this.calculateNewLesionMaxMeasurementNumber(\n          'nonTargets',\n          filter\n        );\n        return Math.max(\n          maxTargetMeasurementNumber,\n          maxNonTargetMeasurementNumber,\n          maxNewTargetMeasurementNumber,\n          maxNewNonTargetMeasurementNumber\n        );\n      }\n    } else {\n      const maxTargetMeasurementNumber = this.calculateLesionMaxMeasurementNumber(\n        'targets',\n        filter\n      );\n      if (toolGroupId === 'targets') {\n        return maxTargetMeasurementNumber;\n      } else if (toolGroupId === 'nonTargets') {\n        const maxNonTargetMeasurementNumber = this.calculateLesionMaxMeasurementNumber(\n          'nonTargets',\n          filter\n        );\n        return Math.max(\n          maxTargetMeasurementNumber,\n          maxNonTargetMeasurementNumber\n        );\n      } else {\n        return this.calculateLesionMaxMeasurementNumber(null, filter);\n      }\n    }\n\n    return 0;\n  }\n\n  getPreviousMeasurement(measurementData) {\n    if (!measurementData) {\n      return;\n    }\n\n    const { timepointId, toolType, lesionNamingNumber } = measurementData;\n    if (!timepointId || !toolType || !lesionNamingNumber) {\n      return;\n    }\n\n    const toolGroupId = this.toolsGroupsMap[measurementData.toolType];\n\n    // TODO: Remove TrialPatientLocationUID from here and override it somehow\n    // by dependant applications. Here we should use the location attribute instead of the uid\n    let filter;\n    const uid =\n      measurementData.additionalData &&\n      measurementData.additionalData.TrialPatientLocationUID;\n    if (uid) {\n      filter = tool =>\n        tool._id !== measurementData._id &&\n        tool.additionalData &&\n        tool.additionalData.TrialPatientLocationUID === uid;\n    } else {\n      filter = tool =>\n        tool._id !== measurementData._id &&\n        tool.lesionNamingNumber === lesionNamingNumber;\n    }\n\n    const childToolTypes = this.toolGroupTools[toolGroupId];\n    for (let i = 0; i < childToolTypes.length; i++) {\n      const childToolType = childToolTypes[i];\n      const toolCollection = this.tools[childToolType];\n      const item = toolCollection.find(filter);\n\n      if (item) {\n        return item;\n      }\n    }\n  }\n\n  hasDuplicateMeasurementNumber(measurementData) {\n    if (!measurementData) {\n      return;\n    }\n\n    const { toolType, measurementNumber } = measurementData;\n    if (!toolType || !measurementNumber) {\n      return;\n    }\n\n    const filter = tool =>\n      tool._id !== measurementData._id &&\n      tool.measurementNumber === measurementData.measurementNumber;\n\n    return configuration.measurementTools\n      .filter(toolGroup => toolGroup.id !== 'temp')\n      .some(toolGroup => {\n        if (this.toolGroups[toolGroup.id].find(filter)) {\n          return true;\n        }\n        return toolGroup.childTools.some(tool => {\n          if (this.tools[tool.id].find(filter)) {\n            return true;\n          }\n        });\n      });\n  }\n\n  updateNumbering(collectionToUpdate, propertyFilter, propertyName, increment) {\n    collectionToUpdate.filter(propertyFilter).forEach(item => {\n      item[propertyName] += increment;\n    });\n  }\n\n  updateMeasurementNumberForAllMeasurements(measurement, increment) {\n    const filter = tool =>\n      tool._id !== measurement._id &&\n      tool.measurementNumber >= measurement.measurementNumber;\n\n    configuration.measurementTools\n      .filter(toolGroup => toolGroup.id !== 'temp')\n      .forEach(toolGroup => {\n        this.updateNumbering(\n          this.toolGroups[toolGroup.id],\n          filter,\n          'measurementNumber',\n          increment\n        );\n\n        toolGroup.childTools.forEach(tool => {\n          this.updateNumbering(\n            this.tools[tool.id],\n            filter,\n            'measurementNumber',\n            increment\n          );\n        });\n      });\n  }\n\n  addMeasurement(toolType, measurement) {\n    const toolGroup = this.toolsGroupsMap[toolType];\n    const groupCollection = this.toolGroups[toolGroup];\n    const collection = this.tools[toolType];\n\n    // Get the related measurement by the measurement number and use its location if defined\n    const relatedMeasurement = collection.find(\n      t =>\n        t.lesionNamingNumber === measurement.lesionNamingNumber &&\n        t.toolType === measurement.toolType\n    );\n\n    // Use the related measurement location if found and defined\n    if (relatedMeasurement && relatedMeasurement.location) {\n      measurement.location = relatedMeasurement.location;\n    }\n\n    // Use the related measurement description if found and defined\n    if (relatedMeasurement && relatedMeasurement.description) {\n      measurement.description = relatedMeasurement.description;\n    }\n\n    measurement._id = guid();\n\n    // Get the timepoint\n    let timepoint;\n    if (measurement.StudyInstanceUID) {\n      timepoint = this.timepointApi.study(measurement.StudyInstanceUID)[0];\n    } else {\n      const { timepointId } = measurement;\n      timepoint = this.timepointApi.timepoints.find(\n        t => t.timepointId === timepointId\n      );\n    }\n\n    // Preventing errors thrown when non-associated (standalone) study is opened...\n    // @TODO: Make sure this logic is correct.\n    if (!timepoint) return;\n\n    // Empty Item is the lesion just added in cornerstoneTools, but does not have measurement data yet\n    const emptyItem = groupCollection.find(\n      groupTool =>\n        !groupTool.toolId && groupTool.timepointId === timepoint.timepointId\n    );\n\n    // Set the timepointId attribute to measurement to make it easier to filter measurements by timepoint\n    measurement.timepointId = timepoint.timepointId;\n\n    // Check if the measurement data is just added by a cornerstone tool and is still empty\n    if (emptyItem) {\n      // Set relevant initial data and measurement number to the measurement\n      measurement.lesionNamingNumber = emptyItem.lesionNamingNumber;\n      measurement.measurementNumber = emptyItem.measurementNumber;\n\n      groupCollection\n        .filter(\n          groupTool =>\n            groupTool.timepointId === timepoint.timepointId &&\n            groupTool.lesionNamingNumber === measurement.lesionNamingNumber\n        )\n        .forEach(groupTool => {\n          groupTool.toolId = tool.id;\n          groupTool.toolItemId = measurement._id;\n          groupTool.createdAt = measurement.createdAt;\n          groupTool.measurementNumber = measurement.measurementNumber;\n        });\n    } else {\n      // Handle measurements not added by cornerstone tools and update its number\n      const measurementsInTimepoint = groupCollection.filter(\n        groupTool => groupTool.timepointId === timepoint.timepointId\n      );\n      measurement.lesionNamingNumber = this.calculateLesionNamingNumber(\n        measurementsInTimepoint\n      );\n      measurement.measurementNumber =\n        measurement.measurementNumber ||\n        this.calculateMeasurementNumber(measurement) + 1;\n    }\n\n    // Define an update object to reflect the changes in the collection\n    const updateObject = {\n      timepointId: timepoint.timepointId,\n      lesionNamingNumber: measurement.lesionNamingNumber,\n      measurementNumber: measurement.measurementNumber,\n    };\n\n    // Find the matched measurement from other timepoints\n    const found = this.getPreviousMeasurement(measurement);\n\n    // Check if a previous related meausurement was found on other timepoints\n    if (found) {\n      // Use the same number as the previous measurement\n      measurement.lesionNamingNumber = found.lesionNamingNumber;\n      measurement.measurementNumber = found.measurementNumber;\n\n      // TODO: Remove TrialPatientLocationUID from here and override it somehow\n      // by dependant applications\n\n      // Change the update object to set the same number, additionalData,\n      // location, label and description to the current measurement\n      updateObject.lesionNamingNumber = found.lesionNamingNumber;\n      updateObject.measurementNumber = found.measurementNumber;\n      updateObject.additionalData = measurement.additionalData || {};\n      updateObject.additionalData.TrialPatientLocationUID =\n        found.additionalData && found.additionalData.TrialPatientLocationUID;\n      updateObject.location = found.location;\n      updateObject.label = found.label;\n      updateObject.description = found.description;\n      updateObject.isSplitLesion = found.isSplitLesion;\n      updateObject.isNodal = found.isNodal;\n\n      const description = getDescription(found, measurement);\n      if (description) {\n        updateObject.description = description;\n      }\n    } else if (this.hasDuplicateMeasurementNumber(measurement)) {\n      // Update measurementNumber for the measurements with masurementNumber greater or equal than\n      //  measurementNumber of the added measurement (except the added one)\n      //   only if there is another measurement with the same measurementNumber\n      this.updateMeasurementNumberForAllMeasurements(measurement, 1);\n    }\n\n    let addedMeasurement;\n\n    // Upsert the measurement in collection\n    const toolIndex = collection.findIndex(\n      tool => tool._id === measurement._id\n    );\n    if (toolIndex > -1) {\n      addedMeasurement = Object.assign({}, collection[toolIndex], updateObject);\n      collection[toolIndex] = addedMeasurement;\n    } else {\n      addedMeasurement = Object.assign({}, measurement, updateObject);\n      collection.push(addedMeasurement);\n    }\n\n    if (measurement.isReadOnly) {\n      addedMeasurement.isReadOnly = measurement.isReadOnly;\n    }\n\n    if (!emptyItem) {\n      // Reflect the entry in the tool group collection\n      groupCollection.push({\n        toolId: toolType,\n        toolItemId: addedMeasurement._id,\n        timepointId: timepoint.timepointId,\n        StudyInstanceUID: addedMeasurement.StudyInstanceUID,\n        createdAt: addedMeasurement.createdAt,\n        lesionNamingNumber: addedMeasurement.lesionNamingNumber,\n        measurementNumber: addedMeasurement.measurementNumber,\n      });\n    }\n\n    // Let others know that the measurements are updated\n    this.onMeasurementsUpdated();\n\n    // TODO: Enable reactivity\n    // this.timepointChanged.set(timepoint.timepointId);\n\n    return addedMeasurement;\n  }\n\n  updateMeasurement(toolType, measurement) {\n    const collection = this.tools[toolType];\n\n    const toolIndex = collection.findIndex(\n      tool => tool._id === measurement._id\n    );\n    if (toolIndex < 0) {\n      return;\n    }\n\n    collection[toolIndex] = Object.assign({}, measurement);\n\n    // Let others know that the measurements are updated\n    this.onMeasurementsUpdated();\n\n    // TODO: Enable reactivity\n    // this.timepointChanged.set(timepoint.timepointId);\n  }\n\n  onMeasurementRemoved(toolType, measurement) {\n    const { lesionNamingNumber, measurementNumber } = measurement;\n\n    const toolGroupId = this.toolsGroupsMap[toolType];\n    const groupCollection = this.toolGroups[toolGroupId];\n\n    const groupIndex = groupCollection.findIndex(\n      group => group.toolItemId === measurement._id\n    );\n    if (groupIndex < 0) {\n      return;\n    }\n\n    //  Remove the deleted measurement only in its timepoint from the collection\n    groupCollection.splice(groupIndex, 1);\n\n    //  Check which timepoints have the deleted measurement\n    const timepointsWithDeletedMeasurement = groupCollection\n      .filter(tool => tool.measurementNumber === measurementNumber)\n      .map(tool => tool.timepointId);\n\n    //  Update lesionNamingNumber and measurementNumber only if there is no timepoint with that measurement\n    if (timepointsWithDeletedMeasurement.length < 1) {\n      //  Decrease lesionNamingNumber of all measurements with lesionNamingNumber greater than lesionNamingNumber of the deleted measurement by 1\n      const lesionNamingNumberFilter = tool =>\n        tool.lesionNamingNumber >= lesionNamingNumber;\n      this.updateNumbering(\n        groupCollection,\n        lesionNamingNumberFilter,\n        'lesionNamingNumber',\n        -1\n      );\n\n      const toolGroup = configuration.measurementTools.find(\n        tGroup => tGroup.id === toolGroupId\n      );\n      if (toolGroup && toolGroup.childTools) {\n        toolGroup.childTools.forEach(childTool => {\n          const collection = this.tools[childTool.id];\n          this.updateNumbering(\n            collection,\n            lesionNamingNumberFilter,\n            'lesionNamingNumber',\n            -1\n          );\n        });\n      }\n\n      //  Decrease measurementNumber of all measurements with measurementNumber greater than measurementNumber of the deleted measurement by 1\n      this.updateMeasurementNumberForAllMeasurements(measurement, -1);\n    }\n\n    // Synchronize the new tool data\n    this.syncMeasurementsAndToolData();\n\n    // Let others know that the measurements are updated\n    this.onMeasurementsUpdated();\n\n    // TODO: Enable reactivity\n    // this.timepointChanged.set(timepoint.timepointId);\n  }\n\n  syncMeasurementsAndToolData() {\n    configuration.measurementTools.forEach(toolGroup => {\n      // Skip the tool groups excluded from case progress\n      if (!MeasurementApi.isToolIncluded(toolGroup)) {\n        return;\n      }\n      toolGroup.childTools.forEach(tool => {\n        // Skip the tools excluded from case progress\n        if (!MeasurementApi.isToolIncluded(tool)) {\n          return;\n        }\n        const measurements = this.tools[tool.id];\n        measurements.forEach(measurement => {\n          MeasurementApi.syncMeasurementAndToolData(measurement);\n        });\n      });\n    });\n  }\n\n  deleteMeasurements(toolType, measurementTypeId, filter) {\n    const filterKeys = Object.keys(filter);\n    const groupCollection = this.toolGroups[measurementTypeId];\n\n    // Stop here if it is a temporary toolGroups\n    if (!groupCollection) return;\n\n    // Get the entries information before removing them\n    const groupItems = groupCollection.filter(toolGroup => {\n      return filterKeys.every(\n        filterKey => toolGroup[filterKey] === filter[filterKey]\n      );\n    });\n    const entries = [];\n    groupItems.forEach(groupItem => {\n      if (!groupItem.toolId) {\n        return;\n      }\n\n      const collection = this.tools[groupItem.toolId];\n      const toolIndex = collection.findIndex(\n        tool => tool._id === groupItem.toolItemId\n      );\n      if (toolIndex > -1) {\n        entries.push(collection[toolIndex]);\n        collection.splice(toolIndex, 1);\n      }\n    });\n\n    // Stop here if no entries were found\n    if (!entries.length) {\n      return;\n    }\n\n    // If the filter doesn't have the measurement number, get it from the first entry\n    const lesionNamingNumber =\n      filter.lesionNamingNumber || entries[0].lesionNamingNumber;\n\n    // Synchronize the new data with cornerstone tools\n    const toolState = cornerstoneTools.globalImageIdSpecificToolStateManager.saveToolState();\n\n    entries.forEach(entry => {\n      const measurementsData = [];\n      const { tool } = MeasurementApi.getToolConfiguration(entry.toolType);\n      if (Array.isArray(tool.childTools)) {\n        tool.childTools.forEach(key => {\n          const childMeasurement = entry[key];\n          if (!childMeasurement) return;\n          measurementsData.push(childMeasurement);\n        });\n      } else {\n        measurementsData.push(entry);\n      }\n\n      measurementsData.forEach(measurementData => {\n        const { imagePath, toolType } = measurementData;\n        const imageId = getImageIdForImagePath(imagePath);\n        if (imageId && toolState[imageId]) {\n          const toolData = toolState[imageId][toolType];\n          const measurementEntries = toolData && toolData.data;\n          const measurementEntry = measurementEntries.find(\n            mEntry => mEntry._id === entry._id\n          );\n          if (measurementEntry) {\n            const index = measurementEntries.indexOf(measurementEntry);\n            measurementEntries.splice(index, 1);\n          }\n        }\n      });\n\n      this.onMeasurementRemoved(toolType, entry);\n    });\n\n    cornerstoneTools.globalImageIdSpecificToolStateManager.restoreToolState(\n      toolState\n    );\n\n    // Synchronize the updated measurements with Cornerstone Tools\n    // toolData to make sure the displayed measurements show 'Target X' correctly\n    const syncFilter = Object.assign({}, filter);\n    delete syncFilter.timepointId;\n    delete syncFilter.lesionNamingNumber;\n\n    const syncFilterKeys = Object.keys(syncFilter);\n\n    const toolTypes = [...new Set(entries.map(entry => entry.toolType))];\n    toolTypes.forEach(toolType => {\n      const collection = this.tools[toolType];\n      collection\n        .filter(tool => {\n          return (\n            tool.lesionNamingNumber > lesionNamingNumber - 1 &&\n            syncFilterKeys.every(\n              syncFilterKey => tool[syncFilterKey] === filter[syncFilterKey]\n            )\n          );\n        })\n        .forEach(measurement => {\n          MeasurementApi.syncMeasurementAndToolData(measurement);\n        });\n    });\n  }\n}\n","export class BaseCriterion {\n  constructor(options, criterionName) {\n    this.options = options;\n    this.criterionName = criterionName;\n  }\n\n  generateResponse(message, measurements) {\n    const passed = !message;\n    const isGlobal = !measurements || !measurements.length;\n\n    return {\n      passed,\n      isGlobal,\n      message,\n      measurements,\n      criterionName: this.criterionName,\n    };\n  }\n\n  getNewTargetNumbers(data) {\n    const { options } = this;\n    const baselineMeasurementNumbers = [];\n    const newTargetNumbers = new Set();\n\n    if (options.newTarget) {\n      data.targets.forEach(target => {\n        const { measurementNumber } = target.measurement;\n        if (target.timepoint.timepointType === 'baseline') {\n          baselineMeasurementNumbers.push(measurementNumber);\n        }\n      });\n      data.targets.forEach(target => {\n        const { measurementNumber } = target.measurement;\n        if (target.timepoint.timepointType === 'followup') {\n          if (!baselineMeasurementNumbers.includes(measurementNumber)) {\n            newTargetNumbers.add(measurementNumber);\n          }\n        }\n      });\n    }\n\n    return newTargetNumbers;\n  }\n}\n","import { BaseCriterion } from './BaseCriterion';\n\nexport const LocationSchema = {\n  type: 'object',\n};\n\n/* LocationCriterion\n *   Check if the there are non-target measurements with response different than \"present\" on baseline\n */\nexport class LocationCriterion extends BaseCriterion {\n  constructor(...props) {\n    super(...props);\n  }\n\n  evaluate(data) {\n    const items = data.targets.concat(data.nonTargets);\n    const measurements = [];\n    let message;\n\n    items.forEach(item => {\n      const measurement = item.measurement;\n\n      if (!measurement.location) {\n        measurements.push(measurement);\n      }\n    });\n\n    if (measurements.length) {\n      message = 'All measurements should have a location';\n    }\n\n    return this.generateResponse(message, measurements);\n  }\n}\n","import { BaseCriterion } from './BaseCriterion';\n\nexport const MaxTargetsPerOrganSchema = {\n  type: 'object',\n  properties: {\n    limit: {\n      label: 'Max targets allowed per organ',\n      type: 'integer',\n      minimum: 1,\n    },\n    newTarget: {\n      label: 'Flag to evaluate only new targets',\n      type: 'boolean',\n    },\n    isNodal: {\n      label: 'Filter to evaluate only nodal or extranodal measurements',\n      type: 'boolean'\n    },\n    message: {\n      label: 'Message to be displayed in case of nonconformity',\n      type: 'string',\n    }\n  },\n  required: ['limit'],\n};\n\n/*\n * MaxTargetsPerOrganCriterion\n *   Check if the number of target measurements per organ exceeded the limit allowed\n * Options:\n *   limit: Max targets allowed in study\n *   newTarget: Flag to evaluate only new targets (must be evaluated on both)\n *   isNodal: Filter to evaluate only nodal or extranodal measurements\n *   message: Message to be displayed in case of nonconformity\n */\nexport class MaxTargetsPerOrganCriterion extends BaseCriterion {\n  constructor(...props) {\n    super(...props);\n  }\n\n  evaluate(data) {\n    const { options } = this;\n    const targetsPerOrgan = {};\n    let measurements = [];\n\n    const newTargetNumbers = this.getNewTargetNumbers(data);\n    data.targets.forEach(target => {\n      const { measurement } = target;\n      const { location, measurementNumber, isSplitLesion, isNodal } = measurement;\n\n      if (isSplitLesion)\n        return;\n\n      if (typeof isNodal === 'boolean' && typeof options.isNodal === 'boolean' && options.isNodal !== isNodal)\n        return;\n\n      if (!targetsPerOrgan[location]) {\n        targetsPerOrgan[location] = new Set();\n      }\n\n      if (!options.newTarget || newTargetNumbers.has(measurementNumber)) {\n        targetsPerOrgan[location].add(measurementNumber);\n      }\n\n      if (targetsPerOrgan[location].size > options.limit) {\n        measurements.push(measurement);\n      }\n    });\n\n    let message;\n    if (measurements.length) {\n      const increment = options.newTarget ? 'new ' : '';\n      message =\n        options.message ||\n        `Each organ should not have more than ${\n        options.limit\n        } ${increment}targets.`;\n    }\n\n    return this.generateResponse(message, measurements);\n  }\n}\n","import { BaseCriterion } from './BaseCriterion';\n\nexport const MaxTargetsSchema = {\n  type: 'object',\n  properties: {\n    limit: {\n      label: 'Max targets allowed in study',\n      type: 'integer',\n      minimum: 0,\n    },\n    newTarget: {\n      label: 'Flag to evaluate only new targets',\n      type: 'boolean',\n    },\n    locationIn: {\n      label:\n        'Filter to evaluate only measurements with the specified locations',\n      type: 'array',\n      items: {\n        type: 'string',\n      },\n      minItems: 1,\n      uniqueItems: true,\n    },\n    locationNotIn: {\n      label:\n        'Filter to evaluate only measurements without the specified locations',\n      type: 'array',\n      items: {\n        type: 'string',\n      },\n      minItems: 1,\n      uniqueItems: true,\n    },\n    isNodal: {\n      label: 'Filter to evaluate only nodal or extranodal measurements',\n      type: 'boolean'\n    },\n    message: {\n      label: 'Message to be displayed in case of nonconformity',\n      type: 'string',\n    }\n  },\n  required: ['limit'],\n};\n\n/* MaxTargetsCriterion\n *   Check if the number of target measurements exceeded the limit allowed\n * Options:\n *   limit: Max targets allowed in study\n *   newTarget: Flag to evaluate only new targets (must be evaluated on both)\n *   locationIn: Filter to evaluate only measurements with the specified locations\n *   locationNotIn: Filter to evaluate only measurements without the specified locations\n *   isNodal: Filter to evaluate only nodal or extranodal measurements\n *   message: Message to be displayed in case of nonconformity\n */\nexport class MaxTargetsCriterion extends BaseCriterion {\n  constructor(...props) {\n    super(...props);\n  }\n\n  evaluate(data) {\n    const { options } = this;\n\n    const newTargetNumbers = this.getNewTargetNumbers(data);\n    const measurementNumbers = [];\n    data.targets.forEach(target => {\n      const { location, measurementNumber, isSplitLesion, isNodal } = target.measurement;\n\n      if (isSplitLesion)\n        return;\n\n      if (typeof isNodal === 'boolean' && typeof options.isNodal === 'boolean' && options.isNodal !== isNodal)\n        return;\n\n      if (options.newTarget && !newTargetNumbers.has(measurementNumber))\n        return;\n\n      if (options.locationIn && options.locationIn.indexOf(location) === -1)\n        return;\n\n      if (options.locationNotIn && options.locationNotIn.indexOf(location) > -1)\n        return;\n\n      measurementNumbers.push(measurementNumber);\n    });\n\n    let lesionType = '';\n    if (typeof options.isNodal === 'boolean') {\n      lesionType = options.isNodal ? 'nodal ' : 'extranodal ';\n    }\n\n    let message;\n    if (measurementNumbers.length > options.limit) {\n      const increment = options.newTarget ? 'new ' : '';\n      const plural = options.limit === 1 ? '' : 's';\n      const amount = options.limit === 0 ? '' : `more than ${options.limit}`;\n      message =\n        options.message ||\n        `The study should not have ${amount} ${increment}${lesionType}target${plural}.`;\n    }\n\n    return this.generateResponse(message);\n  }\n}\n","import { BaseCriterion } from './BaseCriterion';\n\nexport const MeasurementsLengthSchema = {\n  type: 'object',\n  properties: {\n    longAxis: {\n      label: 'Minimum length of long axis',\n      type: 'number',\n      minimum: 0,\n    },\n    shortAxis: {\n      label: 'Minimum length of short axis',\n      type: 'number',\n      minimum: 0,\n    },\n    longAxisSliceThicknessMultiplier: {\n      label: 'Length of long axis multiplier',\n      type: 'number',\n      minimum: 0,\n    },\n    shortAxisSliceThicknessMultiplier: {\n      label: 'Length of short axis multiplier',\n      type: 'number',\n      minimum: 0,\n    },\n    modalityIn: {\n      label:\n        'Filter to evaluate only measurements with the specified modalities',\n      type: 'array',\n      items: {\n        type: 'string',\n      },\n      minItems: 1,\n      uniqueItems: true,\n    },\n    modalityNotIn: {\n      label:\n        'Filter to evaluate only measurements without the specified modalities',\n      type: 'array',\n      items: {\n        type: 'string',\n      },\n      minItems: 1,\n      uniqueItems: true,\n    },\n    locationIn: {\n      label:\n        'Filter to evaluate only measurements with the specified locations',\n      type: 'array',\n      items: {\n        type: 'string',\n      },\n      minItems: 1,\n      uniqueItems: true,\n    },\n    locationNotIn: {\n      label:\n        'Filter to evaluate only measurements without the specified locations',\n      type: 'array',\n      items: {\n        type: 'string',\n      },\n      minItems: 1,\n      uniqueItems: true,\n    },\n    isNodal: {\n      label: 'Filter to evaluate only nodal or extranodal measurements',\n      type: 'boolean',\n    },\n    message: {\n      label: 'Message to be displayed in case of nonconformity',\n      type: 'string',\n    },\n  },\n  anyOf: [\n    { required: ['message', 'longAxis'] },\n    { required: ['message', 'shortAxis'] },\n    { required: ['message', 'longAxisSliceThicknessMultiplier'] },\n    { required: ['message', 'shortAxisSliceThicknessMultiplier'] },\n  ],\n};\n\n/*\n * MeasurementsLengthCriterion\n *   Check the measurements of all bidirectional tools based on\n *   short axis, long axis, modalities, location and slice thickness\n * Options:\n *   longAxis: Minimum length of long axis\n *   shortAxis: Minimum length of short axis\n *   longAxisSliceThicknessMultiplier: Length of long axis multiplier\n *   shortAxisSliceThicknessMultiplier: Length of short axis multiplier\n *   modalityIn: Filter to evaluate only measurements with the specified modalities\n *   modalityNotIn: Filter to evaluate only measurements without the specified modalities\n *   locationIn: Filter to evaluate only measurements with the specified locations\n *   locationNotIn: Filter to evaluate only measurements without the specified locations\n *   isNodal: Filter to evaluate only nodal or extranodal measurements\n *   message: Message to be displayed in case of nonconformity\n */\nexport class MeasurementsLengthCriterion extends BaseCriterion {\n  constructor(...props) {\n    super(...props);\n  }\n\n  evaluate(data) {\n    let message;\n    let measurements = [];\n    const { options } = this;\n    const longMultiplier = options.longAxisSliceThicknessMultiplier;\n    const shortMultiplier = options.shortAxisSliceThicknessMultiplier;\n\n    data.targets.forEach(item => {\n      const { metadata, measurement } = item;\n      const { location } = measurement;\n\n      let { longestDiameter, shortestDiameter, isNodal } = measurement;\n      if (measurement.childToolsCount) {\n        const child = measurement.bidirectional;\n        longestDiameter = (child && child.longestDiameter) || 0;\n        shortestDiameter = (child && child.shortestDiameter) || 0;\n      }\n\n      const { SliceThickness } = metadata;\n\n      const Modality = metadata.getTagValue('Modality') || '';\n\n      // Stop here if the measurement does not match the Modality and location filters\n      if (\n        typeof isNodal === 'boolean' &&\n        typeof options.isNodal === 'boolean' &&\n        options.isNodal !== isNodal\n      )\n        return;\n      if (options.locationIn && options.locationIn.indexOf(location) === -1)\n        return;\n      if (options.modalityIn && options.modalityIn.indexOf(Modality) === -1)\n        return;\n      if (options.locationNotIn && options.locationNotIn.indexOf(location) > -1)\n        return;\n      if (options.modalityNotIn && options.modalityNotIn.indexOf(Modality) > -1)\n        return;\n\n      // Check the measurement length\n      const failed =\n        (options.longAxis && longestDiameter < options.longAxis) ||\n        (options.shortAxis && shortestDiameter < options.shortAxis) ||\n        (longMultiplier &&\n          !isNaN(SliceThickness) &&\n          longestDiameter < longMultiplier * SliceThickness) ||\n        (shortMultiplier &&\n          !isNaN(SliceThickness) &&\n          shortestDiameter < shortMultiplier * SliceThickness);\n\n      // Mark this measurement as invalid if some of the checks have failed\n      if (failed) {\n        measurements.push(measurement);\n      }\n    });\n\n    // Use the options' message if some measurement is invalid\n    if (measurements.length) {\n      message = options.message;\n    }\n\n    return this.generateResponse(message, measurements);\n  }\n}\n","import { BaseCriterion } from './BaseCriterion';\n\nexport const ModalitySchema = {\n  type: 'object',\n  properties: {\n    method: {\n      label: 'Specify if it\\'s goinig to \"allow\" or \"deny\" the modalities',\n      type: 'string',\n      enum: ['allow', 'deny'],\n    },\n    measurementTypes: {\n      label: 'List of measurement types that will be evaluated',\n      type: 'array',\n      items: {\n        type: 'string',\n      },\n      minItems: 1,\n      uniqueItems: true,\n    },\n    modalities: {\n      label: 'List of allowed/denied modalities',\n      type: 'array',\n      items: {\n        type: 'string',\n      },\n      minItems: 1,\n      uniqueItems: true,\n    },\n  },\n  required: ['method', 'modalities'],\n};\n\n/*\n * ModalityCriteria\n *   Check if a Modality is allowed or denied\n * Options:\n *   method (string): Specify if it\\'s goinig to \"allow\" or \"deny\" the modalities\n *   measurementTypes (string[]): List of measurement types that will be evaluated\n *   modalities (string[]): List of allowed/denied modalities\n */\nexport class ModalityCriterion extends BaseCriterion {\n  constructor(...props) {\n    super(...props);\n  }\n\n  evaluate(data) {\n    const measurementTypes = this.options.measurementTypes || ['targets'];\n    const modalitiesSet = new Set(this.options.modalities);\n    const validationMethod = this.options.method;\n    const measurements = [];\n    const invalidModalities = new Set();\n    let message;\n\n    measurementTypes.forEach(measurementType => {\n      const items = data[measurementType];\n\n      items.forEach(item => {\n        const { measurement, metadata } = item;\n        const Modality = metadata.getTagValue('Modality') || '';\n\n        if (\n          (validationMethod === 'allow' && !modalitiesSet.has(Modality)) ||\n          (validationMethod === 'deny' && modalitiesSet.has(Modality))\n        ) {\n          measurements.push(measurement);\n          invalidModalities.add(Modality);\n        }\n      });\n    });\n\n    if (measurements.length) {\n      const uniqueModalities = Array.from(invalidModalities);\n      const uniqueModalitiesText = uniqueModalities.join(', ');\n      const modalityText =\n        uniqueModalities.length > 1 ? 'modalities' : 'Modality';\n\n      message = `The ${modalityText} ${uniqueModalitiesText} should not be used as a method of measurement`;\n    }\n\n    return this.generateResponse(message, measurements);\n  }\n}\n","import { BaseCriterion } from './BaseCriterion';\n\nexport const NonTargetResponseSchema = {\n  type: 'object',\n};\n\n/* NonTargetResponseCriterion\n *   Check if the there are non-target measurements with response different than \"present\" on baseline\n */\nexport class NonTargetResponseCriterion extends BaseCriterion {\n  constructor(...props) {\n    super(...props);\n  }\n\n  evaluate(data) {\n    const items = data.nonTargets;\n    const measurements = [];\n    let message;\n\n    items.forEach(item => {\n      const measurement = item.measurement;\n      const response = (measurement.response || '').toLowerCase();\n\n      if (response !== 'present') {\n        measurements.push(measurement);\n      }\n    });\n\n    if (measurements.length) {\n      message = 'Non-targets can only be assessed as \"present\"';\n    }\n\n    return this.generateResponse(message, measurements);\n  }\n}\n","import { BaseCriterion } from './BaseCriterion';\n\nexport const TargetTypeSchema = {\n  type: 'object',\n};\n\n/* TargetTypeCriterion\n *   Check if the there are non-bidirectional target measurements on baseline\n */\nexport class TargetTypeCriterion extends BaseCriterion {\n  constructor(...props) {\n    super(...props);\n  }\n\n  evaluate(data) {\n    const items = data.targets;\n    const measurements = [];\n    let message;\n\n    items.forEach(item => {\n      const measurement = item.measurement;\n\n      if (\n        measurement.toolType !== 'Bidirectional' &&\n        !measurement.bidirectional\n      ) {\n        measurements.push(measurement);\n      }\n    });\n\n    if (measurements.length) {\n      message =\n        'Target lesions must have measurements (cannot be assessed as CR, UN/NE, EX)';\n    }\n\n    return this.generateResponse(message, measurements);\n  }\n}\n","import { BaseCriterion } from './criteria/BaseCriterion';\nimport * as initialCriteria from './criteria';\nimport Ajv from 'ajv';\n\nconst Criteria = Object.assign({}, initialCriteria);\n\nexport class CriteriaEvaluator {\n  constructor(criteriaObject) {\n    const criteriaValidator = this.getCriteriaValidator();\n    this.criteria = [];\n\n    if (!criteriaValidator(criteriaObject)) {\n      let message = '';\n      criteriaValidator.errors.forEach(error => {\n        message += `\\noptions${error.dataPath} ${error.message}`;\n      });\n      throw new Error(message);\n    }\n\n    Object.keys(criteriaObject).forEach(criterionkey => {\n      const optionsObject = criteriaObject[criterionkey];\n      const Criterion = Criteria[`${criterionkey}Criterion`];\n      const optionsArray =\n        optionsObject instanceof Array ? optionsObject : [optionsObject];\n      optionsArray.forEach(options =>\n        this.criteria.push(new Criterion(options, criterionkey))\n      );\n    });\n  }\n\n  getMaxTargets(newTarget = false) {\n    let result = 0;\n    this.criteria.forEach(criterion => {\n      const newTargetMatch = newTarget === !!criterion.options.newTarget;\n      if (criterion instanceof Criteria.MaxTargetsCriterion && newTargetMatch) {\n        const { limit } = criterion.options;\n        if (limit > result) {\n          result = limit;\n        }\n      }\n    });\n    return result;\n  }\n\n  getCriteriaValidator() {\n    if (CriteriaEvaluator.criteriaValidator) {\n      return CriteriaEvaluator.criteriaValidator;\n    }\n\n    const schema = {\n      properties: {},\n      definitions: {},\n    };\n\n    Object.keys(Criteria).forEach(key => {\n      const Criterion = Criteria[key];\n      if (Criterion.prototype instanceof BaseCriterion) {\n        const criterionkey = key.replace(/Criterion$/, '');\n        const criterionDefinition = `#/definitions/${criterionkey}`;\n\n        schema.definitions[criterionkey] = Criteria[`${criterionkey}Schema`];\n        schema.properties[criterionkey] = {\n          oneOf: [\n            { $ref: criterionDefinition },\n            {\n              type: 'array',\n              items: {\n                $ref: criterionDefinition,\n              },\n            },\n          ],\n        };\n      }\n    });\n\n    CriteriaEvaluator.criteriaValidator = new Ajv().compile(schema);\n    return CriteriaEvaluator.criteriaValidator;\n  }\n\n  evaluate(data) {\n    const nonconformities = [];\n    this.criteria.forEach(criterion => {\n      const criterionResult = criterion.evaluate(data);\n      if (!criterionResult.passed) {\n        nonconformities.push(criterionResult);\n      }\n    });\n    return nonconformities;\n  }\n\n  static setCriterion(criterionKey, criterionDefinitions) {\n    Criteria[criterionKey] = criterionDefinitions;\n  }\n}\n","import * as recistEvaluation from './recist.json';\n\nexport const recist11 = recistEvaluation;\n","import { CriteriaEvaluator } from './CriteriaEvaluator';\nimport * as initialEvaluations from './evaluations';\nimport log from '../../log';\n\nconst evaluations = Object.assign({}, initialEvaluations);\n\nconst BASELINE = 'baseline';\nconst FOLLOWUP = 'followup';\nconst BOTH = 'both';\nconst TARGETS = 'targets';\nconst NONTARGETS = 'nonTargets';\n\nclass ConformanceCriteria {\n  constructor(measurementApi, timepointApi, options = {}) {\n    this.measurementApi = measurementApi;\n    this.timepointApi = timepointApi;\n    this.nonconformities = [];\n    this.groupedNonConformities = [];\n    this.maxTargets = null;\n    this.maxNewTargets = null;\n    this.options = options;\n  }\n\n  loadStudy(StudyInstanceUID) {\n    if (typeof this.options.loadStudy !== 'function') {\n      throw new Error('loadStudy callback is not defined');\n    }\n\n    return this.options.loadStudy(null, StudyInstanceUID);\n  }\n\n  async validate(trialCriteriaType) {\n    const baselinePromise = this.getData(BASELINE);\n    const followupPromise = this.getData(FOLLOWUP);\n    const [baselineData, followupData] = await Promise.all([\n      baselinePromise,\n      followupPromise,\n    ]);\n    const mergedData = {\n      targets: [],\n      nonTargets: [],\n    };\n\n    mergedData.targets = mergedData.targets.concat(baselineData.targets);\n    mergedData.targets = mergedData.targets.concat(followupData.targets);\n    mergedData.nonTargets = mergedData.nonTargets.concat(\n      baselineData.nonTargets\n    );\n    mergedData.nonTargets = mergedData.nonTargets.concat(\n      followupData.nonTargets\n    );\n\n    this.maxTargets = null;\n    this.maxNewTargets = null;\n    const resultBoth = this.validateTimepoint(\n      BOTH,\n      trialCriteriaType,\n      mergedData\n    );\n    const resultBaseline = this.validateTimepoint(\n      BASELINE,\n      trialCriteriaType,\n      baselineData\n    );\n    const resultFollowup = this.validateTimepoint(\n      FOLLOWUP,\n      trialCriteriaType,\n      followupData\n    );\n    const nonconformities = resultBaseline\n      .concat(resultFollowup)\n      .concat(resultBoth);\n    const groupedNonConformities = this.groupNonConformities(nonconformities);\n\n    // Keep both? Group the data only on viewer/measurementTable views?\n    // Work with not grouped data (worse lookup performance on measurementTableRow)?\n    this.nonconformities = nonconformities;\n    this.groupedNonConformities = groupedNonConformities;\n\n    console.warn('nonconformities');\n    console.warn(nonconformities);\n    console.warn('groupedNonConformities');\n    console.warn(groupedNonConformities);\n\n    return nonconformities;\n  }\n\n  groupNonConformities(nonconformities) {\n    const groups = {};\n    const toolsGroupsMap = this.measurementApi.toolsGroupsMap;\n\n    nonconformities.forEach(nonConformity => {\n      if (nonConformity.isGlobal) {\n        groups.globals = groups.globals || { messages: [] };\n        groups.globals.messages.push(nonConformity.message);\n\n        return;\n      }\n\n      nonConformity.measurements.forEach(measurement => {\n        const groupName = toolsGroupsMap[measurement.toolType];\n        groups[groupName] = groups[groupName] || { measurementNumbers: {} };\n\n        const group = groups[groupName];\n        const measureNumber = measurement.measurementNumber;\n        let measurementNumbers = group.measurementNumbers[measureNumber];\n\n        if (!measurementNumbers) {\n          measurementNumbers = group.measurementNumbers[measureNumber] = {\n            messages: [],\n            measurements: [],\n          };\n        }\n\n        measurementNumbers.messages.push(nonConformity.message);\n        measurementNumbers.measurements.push(measurement);\n      });\n    });\n\n    return groups;\n  }\n\n  validateTimepoint(timepointType, trialCriteriaType, data) {\n    const evaluators = this.getEvaluators(timepointType, trialCriteriaType);\n    let nonconformities = [];\n\n    evaluators.forEach(evaluator => {\n      const maxTargets = evaluator.getMaxTargets(false);\n      const maxNewTargets = evaluator.getMaxTargets(true);\n      if (maxTargets) {\n        this.maxTargets = maxTargets;\n      }\n\n      if (maxNewTargets) {\n        this.maxNewTargets = maxNewTargets;\n      }\n\n      const result = evaluator.evaluate(data);\n\n      if (result.length > 0) {\n        result.forEach(resultItem => {\n          resultItem.timepointType = timepointType;\n        });\n      }\n\n      nonconformities = nonconformities.concat(result);\n    });\n\n    return nonconformities;\n  }\n\n  getEvaluators(timepointType, trialCriteriaType) {\n    const evaluators = [];\n    console.warn(evaluations);\n    const trialCriteriaTypeId = trialCriteriaType.id.toLowerCase();\n    const evaluation = evaluations[trialCriteriaTypeId];\n\n    if (evaluation) {\n      const evaluationTimepoint = evaluation[timepointType];\n\n      if (evaluationTimepoint) {\n        evaluators.push(new CriteriaEvaluator(evaluationTimepoint));\n      }\n    }\n\n    return evaluators;\n  }\n\n  /*\n   * Build the data that will be used to do the conformance criteria checks\n   */\n  async getData(timepointType) {\n    const data = {\n      targets: [],\n      nonTargets: [],\n    };\n\n    const studyPromises = [];\n\n    const fillData = measurementType => {\n      const measurements = this.measurementApi.fetch(measurementType);\n\n      measurements.forEach(measurement => {\n        const { StudyInstanceUID } = measurement;\n\n        const timepointId = measurement.timepointId;\n        const timepoint =\n          timepointId &&\n          this.timepointApi.timepoints.find(a => a.timepointId === timepointId);\n\n        if (\n          !timepoint ||\n          (timepointType !== BOTH && timepoint.timepointType !== timepointType)\n        ) {\n          return;\n        }\n\n        const promise = this.loadStudy(StudyInstanceUID);\n        promise.then(\n          studyMetadata => {\n            data[measurementType].push({\n              measurement,\n              metadata: studyMetadata.getFirstInstance(),\n              timepoint,\n            });\n          },\n          error => {\n            throw new Error(error);\n          }\n        );\n        studyPromises.push(promise);\n      });\n    };\n\n    fillData(TARGETS);\n    fillData(NONTARGETS);\n\n    await Promise.all(studyPromises);\n\n    return data;\n  }\n\n  static setEvaluationDefinitions(evaluationKey, evaluationDefinitions) {\n    evaluations[evaluationKey] = evaluationDefinitions;\n  }\n}\n\nexport default ConformanceCriteria;\n//OHIF.measurements.ConformanceCriteria = ConformanceCriteria;\n","import cornerstone from 'cornerstone-core';\n\nexport default function(element, imageId) {\n  if (!imageId) {\n    // Get the Cornerstone imageId\n    const enabledElement = cornerstone.getEnabledElement(element);\n    imageId = enabledElement.image.imageId;\n  }\n\n  // Get StudyInstanceUID & PatientID\n  const {\n    StudyInstanceUID,\n    PatientID,\n    SeriesInstanceUID,\n    SOPInstanceUID,\n  } = cornerstone.metaData.get('instance', imageId);\n\n  const splitImageId = imageId.split('&frame');\n  const frameIndex =\n    splitImageId[1] !== undefined ? Number(splitImageId[1]) : 0;\n\n  const imagePath = [\n    StudyInstanceUID,\n    SeriesInstanceUID,\n    SOPInstanceUID,\n    frameIndex,\n  ].join('_');\n\n  return {\n    PatientID,\n    StudyInstanceUID,\n    SeriesInstanceUID,\n    SOPInstanceUID,\n    frameIndex,\n    imagePath,\n  };\n}\n","import cornerstone from 'cornerstone-core';\n\nexport default function refreshCornerstoneViewports() {\n  cornerstone.getEnabledElements().forEach(enabledElement => {\n    if (enabledElement.image) {\n      cornerstone.updateImage(enabledElement.element);\n    }\n  });\n}\n","import cornerstone from 'cornerstone-core';\nimport { MeasurementApi } from '../classes';\nimport log from '../../log';\nimport user from '../../user';\nimport getImageAttributes from '../lib/getImageAttributes';\nimport getLabel from '../lib/getLabel';\nimport refreshCornerstoneViewports from '../lib/refreshCornerstoneViewports';\n\nexport default function handleSingleMeasurementAdded({ eventData, tool }) {\n  const measurementApi = MeasurementApi.Instance;\n  if (!measurementApi) {\n    log.warn('Measurement API is not initialized');\n  }\n\n  const { measurementData, toolType } = eventData;\n\n  const collection = measurementApi.tools[toolType];\n\n  // Stop here if the tool data shall not be persisted (e.g. temp tools)\n  if (!collection) return;\n\n  // Stop here if there's no measurement data or if it was cancelled\n  if (!measurementData || measurementData.cancelled) return;\n\n  log.info('CornerstoneToolsMeasurementAdded');\n\n  const imageAttributes = getImageAttributes(eventData.element);\n  const measurement = Object.assign({}, measurementData, imageAttributes, {\n    lesionNamingNumber: measurementData.lesionNamingNumber,\n    userId: user.getUserId(),\n    toolType,\n  });\n\n  const addedMeasurement = measurementApi.addMeasurement(toolType, measurement);\n  Object.assign(measurementData, addedMeasurement);\n\n  const measurementLabel = getLabel(measurementData);\n  if (measurementLabel) {\n    measurementData.labels = [measurementLabel];\n  }\n\n  // TODO: This is very hacky, but will work for now\n  refreshCornerstoneViewports();\n\n  // TODO: Notify about the last activated measurement\n\n  if (MeasurementApi.isToolIncluded(tool)) {\n    // TODO: Notify that viewer suffered changes\n  }\n}\n","import cornerstone from 'cornerstone-core';\nimport { MeasurementApi } from '../classes';\nimport log from '../../log';\nimport user from '../../user';\nimport getImageAttributes from '../lib/getImageAttributes';\nimport getLabel from '../lib/getLabel';\nimport refreshCornerstoneViewports from '../lib/refreshCornerstoneViewports';\n\nexport default function({ eventData, tool, toolGroupId, toolGroup }) {\n  const measurementApi = MeasurementApi.Instance;\n  if (!measurementApi) {\n    log.warn('Measurement API is not initialized');\n  }\n\n  const { measurementData } = eventData;\n\n  const collection = measurementApi.tools[tool.parentTool];\n\n  // Stop here if the tool data shall not be persisted (e.g. temp tools)\n  if (!collection) return;\n\n  // Stop here if there's no measurement data or if it was cancelled\n  if (!measurementData || measurementData.cancelled) return;\n\n  log.info('CornerstoneToolsMeasurementAdded');\n\n  const imageAttributes = getImageAttributes(eventData.element);\n\n  const additionalProperties = Object.assign(imageAttributes, {\n    userId: user.getUserId(),\n  });\n\n  const childMeasurement = Object.assign(\n    {},\n    measurementData,\n    additionalProperties\n  );\n\n  const parentMeasurement = collection.find(\n    t =>\n      t.toolType === tool.parentTool &&\n      t.PatientID === imageAttributes.PatientID &&\n      t[tool.attribute] === null\n  );\n\n  // Check if a measurement to fit this child tool already exists\n  if (parentMeasurement) {\n    const key = tool.attribute;\n\n    // Add the createdAt attribute\n    childMeasurement.createdAt = new Date();\n\n    // Update the parent measurement\n    parentMeasurement[key] = childMeasurement;\n    parentMeasurement.childToolsCount =\n      (parentMeasurement.childToolsCount || 0) + 1;\n    measurementApi.updateMeasurement(tool.parentTool, parentMeasurement);\n\n    // Update the measurementData ID and lesionNamingNumber\n    measurementData._id = parentMeasurement._id;\n    measurementData.lesionNamingNumber = parentMeasurement.lesionNamingNumber;\n  } else {\n    const measurement = {\n      toolType: tool.parentTool,\n      lesionNamingNumber: measurementData.lesionNamingNumber,\n      userId: user.getUserId(),\n      PatientID: imageAttributes.PatientID,\n      StudyInstanceUID: imageAttributes.StudyInstanceUID,\n    };\n\n    measurement[tool.attribute] = Object.assign(\n      {},\n      measurementData,\n      additionalProperties\n    );\n\n    const addedMeasurement = measurementApi.addMeasurement(\n      tool.parentTool,\n      measurement\n    );\n    Object.assign(measurementData, addedMeasurement);\n  }\n\n  const measurementLabel = getLabel(measurementData);\n  if (measurementLabel) {\n    measurementData.labels = [measurementLabel];\n  }\n\n  // TODO: This is very hacky, but will work for now\n  refreshCornerstoneViewports();\n\n  // TODO: Notify about the last activated measurement\n\n  if (MeasurementApi.isToolIncluded(tool)) {\n    // TODO: Notify that viewer suffered changes\n  }\n}\n","import cornerstone from 'cornerstone-core';\nimport { MeasurementApi } from '../classes';\nimport log from '../../log';\n\nexport default function({ eventData, tool, toolGroupId, toolGroup }) {\n  const measurementApi = MeasurementApi.Instance;\n  if (!measurementApi) {\n    log.warn('Measurement API is not initialized');\n  }\n\n  const { measurementData, toolType } = eventData;\n\n  const collection = measurementApi.tools[toolType];\n\n  // Stop here if the tool data shall not be persisted (e.g. temp tools)\n  if (!collection) return;\n\n  log.info('CornerstoneToolsMeasurementModified');\n  let measurement = collection.find(t => t._id === measurementData._id);\n\n  // Stop here if the measurement is already deleted\n  if (!measurement) return;\n\n  measurement = Object.assign(measurement, measurementData);\n  measurement.viewport = cornerstone.getViewport(eventData.element);\n\n  measurementApi.updateMeasurement(toolType, measurement);\n\n  // TODO: Notify about the last activated measurement\n\n  if (MeasurementApi.isToolIncluded(tool)) {\n    // TODO: Notify that viewer suffered changes\n  }\n}\n","import cornerstone from 'cornerstone-core';\nimport { MeasurementApi } from '../classes';\nimport log from '../../log';\n\nexport default function({ eventData, tool, toolGroupId, toolGroup }) {\n  const measurementApi = MeasurementApi.Instance;\n  if (!measurementApi) {\n    log.warn('Measurement API is not initialized');\n  }\n\n  const { measurementData } = eventData;\n\n  const collection = measurementApi.tools[tool.parentTool];\n\n  // Stop here if the tool data shall not be persisted (e.g. temp tools)\n  if (!collection) return;\n\n  log.info('CornerstoneToolsMeasurementModified');\n\n  const measurement = collection.find(t => t._id === measurementData._id);\n  let childMeasurement = measurement && measurement[tool.attribute];\n\n  // Stop here if the measurement is already deleted\n  if (!childMeasurement) return;\n\n  childMeasurement = Object.assign(childMeasurement, measurementData);\n  childMeasurement.viewport = cornerstone.getViewport(eventData.element);\n\n  // Update the parent measurement\n  measurement[tool.attribute] = childMeasurement;\n  measurementApi.updateMeasurement(tool.parentTool, measurement);\n\n  // TODO: Notify about the last activated measurement\n\n  if (MeasurementApi.isToolIncluded(tool)) {\n    // TODO: Notify that viewer suffered changes\n  }\n}\n","import cornerstone from 'cornerstone-core';\nimport { MeasurementApi } from '../classes';\nimport log from '../../log';\nimport refreshCornerstoneViewports from '../lib/refreshCornerstoneViewports';\n\nexport default function handleSingleMeasurementRemoved({\n  eventData,\n  tool,\n  toolGroupId,\n  toolGroup,\n}) {\n  log.info('CornerstoneToolsMeasurementRemoved');\n  const { measurementData, toolType } = eventData;\n\n  const measurementApi = MeasurementApi.Instance;\n  if (!measurementApi) {\n    log.warn('Measurement API is not initialized');\n  }\n\n  const collection = measurementApi.tools[toolType];\n\n  // Stop here if the tool data shall not be persisted (e.g. temp tools)\n  if (!collection) return;\n\n  const measurementTypeId = measurementApi.toolsGroupsMap[toolType];\n  const measurement = collection.find(t => t._id === measurementData._id);\n\n  // Stop here if the measurement is already gone or never existed\n  if (!measurement) return;\n\n  // Remove all the measurements with the given type and number\n  const { lesionNamingNumber, timepointId } = measurement;\n  measurementApi.deleteMeasurements(toolType, measurementTypeId, {\n    lesionNamingNumber,\n    timepointId,\n  });\n\n  // TODO: This is very hacky, but will work for now\n  refreshCornerstoneViewports();\n\n  if (MeasurementApi.isToolIncluded(tool)) {\n    // TODO: Notify that viewer suffered changes\n  }\n}\n","import cornerstone from 'cornerstone-core';\nimport { MeasurementApi } from '../classes';\nimport log from '../../log';\nimport refreshCornerstoneViewports from '../lib/refreshCornerstoneViewports';\n\nexport default function({ eventData, tool, toolGroupId, toolGroup }) {\n  log.info('CornerstoneToolsMeasurementRemoved');\n  const { measurementData } = eventData;\n\n  const measurementApi = MeasurementApi.Instance;\n  if (!measurementApi) {\n    log.warn('Measurement API is not initialized');\n  }\n\n  const collection = measurementApi.tools[tool.parentTool];\n\n  // Stop here if the tool data shall not be persisted (e.g. temp tools)\n  if (!collection) return;\n\n  const measurementIndex = collection.findIndex(\n    t => t._id === measurementData._id\n  );\n  const measurement =\n    measurementIndex > -1 ? collection[measurementIndex] : null;\n\n  // Stop here if the measurement is already gone or never existed\n  if (!measurement) return;\n\n  if (measurement.childToolsCount === 1) {\n    // Remove the measurement\n    collection.splice(measurementIndex, 1);\n    measurementApi.onMeasurementRemoved(tool.parentTool, measurement);\n  } else {\n    // Update the measurement\n    measurement[tool.attribute] = null;\n    measurement.childToolsCount = (measurement.childToolsCount || 0) - 1;\n    measurementApi.updateMeasurement(tool.parentTool, measurement);\n  }\n\n  // TODO: This is very hacky, but will work for now\n  refreshCornerstoneViewports();\n\n  if (MeasurementApi.isToolIncluded(tool)) {\n    // TODO: Notify that viewer suffered changes\n  }\n}\n","import { MeasurementApi } from '../classes';\nimport handleSingleMeasurementAdded from './handleSingleMeasurementAdded';\nimport handleChildMeasurementAdded from './handleChildMeasurementAdded';\nimport handleSingleMeasurementModified from './handleSingleMeasurementModified';\nimport handleChildMeasurementModified from './handleChildMeasurementModified';\nimport handleSingleMeasurementRemoved from './handleSingleMeasurementRemoved';\nimport handleChildMeasurementRemoved from './handleChildMeasurementRemoved';\n\nconst getEventData = event => {\n  const eventData = event.detail;\n  if (eventData.toolName) {\n    eventData.toolType = eventData.toolName;\n  }\n\n  return eventData;\n};\n\nconst MeasurementHandlers = {\n  handleSingleMeasurementAdded,\n  handleChildMeasurementAdded,\n  handleSingleMeasurementModified,\n  handleChildMeasurementModified,\n  handleSingleMeasurementRemoved,\n  handleChildMeasurementRemoved,\n\n  onAdded(event) {\n    const eventData = getEventData(event);\n    const { toolType } = eventData;\n    const {\n      toolGroupId,\n      toolGroup,\n      tool,\n    } = MeasurementApi.getToolConfiguration(toolType);\n    const params = {\n      eventData,\n      tool,\n      toolGroupId,\n      toolGroup,\n    };\n\n    if (!tool) return;\n\n    if (tool.parentTool) {\n      handleChildMeasurementAdded(params);\n    } else {\n      handleSingleMeasurementAdded(params);\n    }\n  },\n\n  onModified(event) {\n    const eventData = getEventData(event);\n    const { toolType } = eventData;\n    const {\n      toolGroupId,\n      toolGroup,\n      tool,\n    } = MeasurementApi.getToolConfiguration(toolType);\n    const params = {\n      eventData,\n      tool,\n      toolGroupId,\n      toolGroup,\n    };\n\n    if (!tool) return;\n\n    if (tool.parentTool) {\n      handleChildMeasurementModified(params);\n    } else {\n      handleSingleMeasurementModified(params);\n    }\n  },\n\n  onRemoved(event) {\n    const eventData = getEventData(event);\n    const { toolType } = eventData;\n    const {\n      toolGroupId,\n      toolGroup,\n      tool,\n    } = MeasurementApi.getToolConfiguration(toolType);\n    const params = {\n      eventData,\n      tool,\n      toolGroupId,\n      toolGroup,\n    };\n\n    if (!tool) return;\n\n    if (tool.parentTool) {\n      handleChildMeasurementRemoved(params);\n    } else {\n      handleSingleMeasurementRemoved(params);\n    }\n  },\n};\n\nexport default MeasurementHandlers;\n","import { bidirectional, targetCR, targetUN, targetNE } from '../tools';\n\nexport const targets = {\n  id: 'targets',\n  name: 'Targets',\n  childTools: [bidirectional, targetCR, targetUN, targetNE],\n  options: {\n    caseProgress: {\n      include: true,\n      evaluate: true,\n    },\n  },\n};\n","import { nonTarget } from '../tools';\n\nexport const nonTargets = {\n  id: 'nonTargets',\n  name: 'Non-Targets',\n  childTools: [nonTarget],\n  options: {\n    caseProgress: {\n      include: true,\n      evaluate: true,\n    },\n  },\n};\n","import { length, ellipticalRoi } from '../tools';\nimport cloneDeep from 'lodash.clonedeep';\n\nconst childTools = cloneDeep([length, ellipticalRoi]);\n\n// Exclude temp tools from case progress\nchildTools.forEach(childTool => {\n  childTool.options = Object.assign({}, childTool.options, {\n    caseProgress: {\n      include: false,\n      evaluate: false,\n    },\n  });\n});\n\nexport const temp = {\n  id: 'temp',\n  name: 'Temporary',\n  childTools,\n  options: {\n    caseProgress: {\n      include: false,\n      evaluate: false,\n    },\n  },\n};\n","import { targets } from './toolGroups/targets';\nimport { nonTargets } from './toolGroups/nonTargets';\nimport { temp } from './toolGroups/temp';\nimport cloneDeep from 'lodash.clonedeep';\n\nconst ltTools = cloneDeep([targets, nonTargets, temp]);\n\nltTools.forEach(toolGroup => {\n  toolGroup.childTools.forEach(tool => {\n    tool.toolGroup = toolGroup.id;\n  });\n});\n\nexport default ltTools;\n","import * as tools from './tools';\n\nimport { MeasurementApi, TimepointApi } from './classes';\nimport { ConformanceCriteria } from './conformance';\nimport MeasurementHandlers from './measurementHandlers';\nimport getDescription from './lib/getDescription';\nimport getImageAttributes from './lib/getImageAttributes';\nimport getImageIdForImagePath from './lib/getImageIdForImagePath';\nimport getLabel from './lib/getLabel';\nimport ltTools from './ltTools';\n\nconst measurements = {\n  TimepointApi,\n  MeasurementApi,\n  ConformanceCriteria,\n  MeasurementHandlers,\n  ltTools,\n  tools,\n  getLabel,\n  getDescription,\n  getImageAttributes,\n  getImageIdForImagePath,\n};\n\nexport default measurements;\n","import DICOMWeb from '../../../DICOMWeb/';\nimport { api } from 'dicomweb-client';\n\nimport errorHandler from '../../../errorHandler';\n\n/**\n * Parses data returned from a QIDO search and transforms it into\n * an array of series that are present in the study\n *\n * @param server The DICOM server\n * @param StudyInstanceUID\n * @param resultData\n * @returns {Array} Series List\n */\nfunction resultDataToStudyMetadata(server, StudyInstanceUID, resultData) {\n  const seriesMap = {};\n  const series = [];\n\n  resultData.forEach(function(instance) {\n    // Use seriesMap to cache series data\n    // If the series instance UID has already been used to\n    // process series data, continue using that series\n    var SeriesInstanceUID = DICOMWeb.getString(instance['0020000E']);\n    var series = seriesMap[SeriesInstanceUID];\n\n    // If no series data exists in the seriesMap cache variable,\n    // process any available series data\n    if (!series) {\n      series = {\n        SeriesInstanceUID: SeriesInstanceUID,\n        SeriesNumber: DICOMWeb.getString(instance['00200011']),\n        instances: [],\n      };\n\n      // Save this data in the seriesMap cache variable\n      seriesMap[SeriesInstanceUID] = series;\n      series.push(series);\n    }\n\n    // The uri for the dicomweb\n    // NOTE: DCM4CHEE seems to return the data zipped\n    // NOTE: Orthanc returns the data with multi-part mime which cornerstoneWADOImageLoader doesn't\n    //       know how to parse yet\n    //var uri = DICOMWeb.getString(instance['00081190']);\n    //uri = uri.replace('wado-rs', 'dicom-web');\n\n    // manually create a WADO-URI from the UIDs\n    // NOTE: Haven't been able to get Orthanc's WADO-URI to work yet - maybe its not configured?\n    var SOPInstanceUID = DICOMWeb.getString(instance['00080018']);\n    var uri =\n      server.wadoUriRoot +\n      '?requestType=WADO&studyUID=' +\n      StudyInstanceUID +\n      '&seriesUID=' +\n      SeriesInstanceUID +\n      '&objectUID=' +\n      SOPInstanceUID +\n      '&contentType=application%2Fdicom';\n\n    // Add this instance to the current series\n    series.instances.push({\n      SOPClassUID: DICOMWeb.getString(instance['00080016']),\n      SOPInstanceUID: SOPInstanceUID,\n      uri: uri,\n      InstanceNumber: DICOMWeb.getString(instance['00200013']),\n    });\n  });\n  return series;\n}\n\n/**\n * Retrieve a set of instances using a QIDO call\n * @param server\n * @param StudyInstanceUID\n * @throws ECONNREFUSED\n * @returns {{wadoUriRoot: String, StudyInstanceUID: String, series: Array}}\n */\nexport default function Instances(server, StudyInstanceUID) {\n  // TODO: Are we using this function anywhere?? Can we remove it?\n\n  const config = {\n    url: server.qidoRoot,\n    headers: DICOMWeb.getAuthorizationHeader(server),\n    errorInterceptor: errorHandler.getHTTPErrorHandler(),\n  };\n  const dicomWeb = new api.DICOMwebClient(config);\n  const queryParams = getQIDOQueryParams(\n    filter,\n    server.qidoSupportsIncludeField\n  );\n  const options = {\n    studyInstanceUID: StudyInstanceUID,\n  };\n\n  return dicomWeb.searchForInstances(options).then(result => {\n    return {\n      wadoUriRoot: server.wadoUriRoot,\n      StudyInstanceUID: StudyInstanceUID,\n      series: resultDataToStudyMetadata(server, StudyInstanceUID, result.data),\n    };\n  });\n}\n","import { api } from 'dicomweb-client';\nimport StaticWadoClient from './StaticWadoClient';\nimport DICOMWeb from '../../../DICOMWeb/';\n\nimport errorHandler from '../../../errorHandler';\nimport getXHRRetryRequestHook from '../../../utils/xhrRetryRequestHook';\n\n/**\n * Creates a QIDO date string for a date range query\n * Assumes the year is positive, at most 4 digits long.\n *\n * @param date The Date object to be formatted\n * @returns {string} The formatted date string\n */\nfunction dateToString(date) {\n  if (!date) return '';\n  let year = date.getFullYear().toString();\n  let month = (date.getMonth() + 1).toString();\n  let day = date.getDate().toString();\n  year = '0'.repeat(4 - year.length).concat(year);\n  month = '0'.repeat(2 - month.length).concat(month);\n  day = '0'.repeat(2 - day.length).concat(day);\n  return ''.concat(year, month, day);\n}\n\n/**\n * Produces a QIDO URL given server details and a set of specified search filter\n * items\n *\n * @param filter\n * @param serverSupportsQIDOIncludeField\n * @returns {string} The URL with encoded filter query data\n */\nfunction getQIDOQueryParams(filter, serverSupportsQIDOIncludeField) {\n  const commaSeparatedFields = [\n    '00081030', // Study Description\n    '00080060', // Modality\n    // Add more fields here if you want them in the result\n  ].join(',');\n\n  const parameters = {\n    PatientName: filter.PatientName,\n    PatientID: filter.PatientID,\n    AccessionNumber: filter.AccessionNumber,\n    StudyDescription: filter.StudyDescription,\n    ModalitiesInStudy: filter.ModalitiesInStudy,\n    limit: filter.limit,\n    offset: filter.offset,\n    fuzzymatching: filter.fuzzymatching,\n    includefield: serverSupportsQIDOIncludeField ? commaSeparatedFields : 'all',\n  };\n\n  // build the StudyDate range parameter\n  if (filter.studyDateFrom || filter.studyDateTo) {\n    const dateFrom = dateToString(new Date(filter.studyDateFrom));\n    const dateTo = dateToString(new Date(filter.studyDateTo));\n    parameters.StudyDate = `${dateFrom}-${dateTo}`;\n  }\n\n  // Build the StudyInstanceUID parameter\n  if (filter.StudyInstanceUID) {\n    let studyUIDs = filter.StudyInstanceUID;\n    studyUIDs = Array.isArray(studyUIDs) ? studyUIDs.join() : studyUIDs;\n    studyUIDs = studyUIDs.replace(/[^0-9.]+/g, '\\\\');\n    parameters.StudyInstanceUID = studyUIDs;\n  }\n\n  // Clean query params of undefined values.\n  const params = {};\n  Object.keys(parameters).forEach(key => {\n    if (parameters[key] !== undefined && parameters[key] !== '') {\n      params[key] = parameters[key];\n    }\n  });\n\n  return params;\n}\n\n/**\n * Parses resulting data from a QIDO call into a set of Study MetaData\n *\n * @param resultData\n * @returns {Array} An array of Study MetaData objects\n */\nfunction resultDataToStudies(resultData) {\n  const studies = [];\n\n  if (!resultData || !resultData.length) return;\n\n  resultData.forEach(study =>\n    studies.push({\n      StudyInstanceUID: DICOMWeb.getString(study['0020000D']),\n      // 00080005 = SpecificCharacterSet\n      StudyDate: DICOMWeb.getString(study['00080020']),\n      StudyTime: DICOMWeb.getString(study['00080030']),\n      AccessionNumber: DICOMWeb.getString(study['00080050']),\n      referringPhysicianName: DICOMWeb.getString(study['00080090']),\n      // 00081190 = URL\n      PatientName: DICOMWeb.getName(study['00100010']),\n      PatientID: DICOMWeb.getString(study['00100020']),\n      PatientBirthdate: DICOMWeb.getString(study['00100030']),\n      patientSex: DICOMWeb.getString(study['00100040']),\n      studyId: DICOMWeb.getString(study['00200010']),\n      numberOfStudyRelatedSeries: DICOMWeb.getString(study['00201206']),\n      numberOfStudyRelatedInstances: DICOMWeb.getString(study['00201208']),\n      StudyDescription: DICOMWeb.getString(study['00081030']),\n      // Modality: DICOMWeb.getString(study['00080060']),\n      // ModalitiesInStudy: DICOMWeb.getString(study['00080061']),\n      modalities: DICOMWeb.getString(\n        DICOMWeb.getModalities(study['00080060'], study['00080061'])\n      ),\n    })\n  );\n\n  return studies;\n}\n\nexport default function Studies(server, filter) {\n  const { staticWado } = server;\n  const config = {\n    ...server,\n    url: server.qidoRoot,\n    headers: DICOMWeb.getAuthorizationHeader(server),\n    errorInterceptor: errorHandler.getHTTPErrorHandler(),\n    requestHooks: [getXHRRetryRequestHook()],\n  };\n\n  const dicomWeb = staticWado\n    ? new StaticWadoClient(config)\n    : new api.DICOMwebClient(config);\n  server.qidoSupportsIncludeField =\n    server.qidoSupportsIncludeField === undefined\n      ? true\n      : server.qidoSupportsIncludeField;\n  const queryParams = getQIDOQueryParams(\n    filter,\n    server.qidoSupportsIncludeField\n  );\n  const options = {\n    queryParams,\n  };\n\n  return dicomWeb.searchForStudies(options).then(resultDataToStudies);\n}\n","// DICOMWeb instance, study, and metadata retrieval\nimport Instances from './qido/instances.js';\nimport Studies from './qido/studies.js';\nimport RetrieveMetadata from './wado/retrieveMetadata.js';\n\nconst WADO = {\n  RetrieveMetadata,\n};\n\nconst QIDO = {\n  Studies,\n  Instances,\n};\n\nexport { QIDO, WADO };\n","import Studies from './services/qido/studies';\n\nconst studySearchPromises = new Map();\n\n/**\n * Search for studies information by the given filter\n *\n * @param {Object} filter Filter that will be used on search\n * @returns {Promise} resolved with an array of studies information or rejected with an error\n */\nexport default function searchStudies(server, filter) {\n  const promiseKeyObj = {\n    qidoRoot: server.qidoRoot,\n    filter,\n  };\n  const promiseKey = JSON.stringify(promiseKeyObj);\n  if (studySearchPromises.has(promiseKey)) {\n    return studySearchPromises.get(promiseKey);\n  } else {\n    const promise = Studies(server, filter);\n\n    studySearchPromises.set(promiseKey, promise);\n\n    return promise;\n  }\n}\n","import { QIDO, WADO } from './services/';\nimport {\n  deleteStudyMetadataPromise,\n  retrieveStudyMetadata,\n} from './retrieveStudyMetadata.js';\n\nimport getStudyBoxData from './getStudyBoxData';\nimport retrieveStudiesMetadata from './retrieveStudiesMetadata.js';\nimport searchStudies from './searchStudies';\nimport sortStudy from './sortStudy';\n\nconst studies = {\n  services: {\n    QIDO,\n    WADO,\n  },\n  loadingDict: {},\n  retrieveStudyMetadata,\n  deleteStudyMetadataPromise,\n  retrieveStudiesMetadata,\n  getStudyBoxData,\n  searchStudies,\n  sortStudy,\n};\n\nexport default studies;\n","import log from '../log.js';\nimport { retrieveStudyMetadata } from './retrieveStudyMetadata';\n\n/**\n * Retrieves metaData for multiple studies at once.\n *\n * This function calls retrieveStudyMetadata several times, asynchronously,\n * and waits for all of the results to be returned.\n *\n * @param {Object} server Object with server configuration parameters\n * @param {Array} studyInstanceUIDs The UIDs of the Studies to be retrieved\n * @param {Object} [filters] - Object containing filters to be applied on retrieve metadata process\n * @param {string} [filter.seriesInstanceUID] - series instance uid to filter results against\n * @param {boolean} [separateSeriesInstanceUIDFilters = false] - If true, split filtered metadata calls into multiple calls,\n * as some DICOMWeb implementations only support single filters.\n * @returns {Promise} that will be resolved with the metadata or rejected with the error\n */\nexport default function retrieveStudiesMetadata(\n  server,\n  studyInstanceUIDs,\n  filters,\n  separateSeriesInstanceUIDFilters = false\n) {\n  // Create an empty array to store the Promises for each metaData retrieval call\n  const promises = [];\n\n  // Loop through the array of studyInstanceUIDs\n  studyInstanceUIDs.forEach(function(StudyInstanceUID) {\n    // Send the call and resolve or reject the related promise based on its outcome\n    const promise = retrieveStudyMetadata(\n      server,\n      StudyInstanceUID,\n      filters,\n      separateSeriesInstanceUIDFilters\n    );\n\n    // Add the current promise to the array of promises\n    promises.push(promise);\n  });\n\n  // When all of the promises are complete, this callback runs\n  const promise = Promise.all(promises);\n\n  // Warn the error on console if some retrieval failed\n  promise.catch(error => log.warn(error));\n\n  return promise;\n}\n","/**\n * Overridable namespace to allow getting study boxes data externally.\n *\n * The function must handle the first parameter as a studyInformation object containing at least the\n * StudyInstanceUID attribute.\n *\n * Shall return a promise that will be resolved with an object containing those attributes:\n * - StudyInstanceUID {String}: copy of studyInformation.StudyInstanceUID\n * - modalities {String}: 2 uppercase letters for each Modality split by any non-alphabetical char(s)\n * - StudyDate {String}: date formatted as YYYYMMDD\n * - StudyDescription {String}: study description string\n */\n// TODO: What is this for?\nconst getStudyBoxData = false;\n\nexport default getStudyBoxData;\n","function getWADORSImageUrl(instance, frame) {\n  let wadorsuri = instance.wadorsuri;\n\n  if (!wadorsuri) {\n    return;\n  }\n\n  // Use null to obtain an imageId which represents the instance\n  if (frame === null) {\n    wadorsuri = wadorsuri.replace(/frames\\/(\\d+)/, '');\n  } else {\n    // We need to sum 1 because WADO-RS frame number is 1-based\n    frame = frame ? parseInt(frame) + 1 : 1;\n\n    // Replaces /frame/1 by /frame/{frame}\n    wadorsuri = wadorsuri.replace(/frames\\/(\\d+)/, `frames/${frame}`);\n  }\n\n  return wadorsuri;\n}\n\n/**\n * Obtain an imageId for Cornerstone based on the WADO-RS scheme\n *\n * @param {object} instanceMetada metadata object (InstanceMetadata)\n * @param {(string\\|number)} [frame] the frame number\n * @returns {string} The imageId to be used by Cornerstone\n */\nexport default function getWADORSImageId(instance, frame) {\n  const uri = getWADORSImageUrl(instance, frame);\n\n  if (!uri) {\n    return;\n  }\n\n  return `wadors:${uri}`;\n}\n","import DICOMWeb from '../DICOMWeb/';\nimport isLowPriorityModality from '../utils/isLowPriorityModality';\n\nconst INFO = Symbol('INFO');\n\n/**\n * Creates an object with processed series information and saves its reference\n * inside the series object itself.\n * @param {Object} series The raw series object\n * @returns {Object} object containing some useful info from given series\n */\nexport default function getSeriesInfo(series) {\n  let info = series[INFO];\n  if (!info) {\n    const Modality = DICOMWeb.getString(series['00080060'], '').toUpperCase();\n    info = Object.freeze({\n      Modality,\n      isLowPriority: isLowPriorityModality(Modality),\n      SeriesInstanceUID: DICOMWeb.getString(series['0020000E']),\n      SeriesNumber: DICOMWeb.getNumber(series['00200011'], 0) || 0,\n    });\n    series[INFO] = info;\n  }\n  return info;\n}\n","import getSeriesInfo from './getSeriesInfo';\n\n/**\n * Series sorting criteria: series considered low priority are moved to the end\n * of the list and series number is used to break ties\n * @param {Object} firstSeries\n * @param {Object} secondSeries\n */\nfunction seriesInfoSortingCriteria(firstSeries, secondSeries) {\n  const a = getSeriesInfo(firstSeries);\n  const b = getSeriesInfo(secondSeries);\n  if (!a.isLowPriority && b.isLowPriority) {\n    return -1;\n  }\n  if (a.isLowPriority && !b.isLowPriority) {\n    return 1;\n  }\n  return a.SeriesNumber - b.SeriesNumber;\n}\n\nconst seriesSortCriteria = {\n  default: (a, b) => a.SeriesNumber - b.SeriesNumber,\n  seriesInfoSortingCriteria,\n};\n\nconst instancesSortCriteria = {\n  default: (a, b) => a.InstanceNumber - b.InstanceNumber,\n};\n\nconst sortingCriteria = {\n  seriesSortCriteria,\n  instancesSortCriteria,\n};\n\n/**\n * Sorts given series (given param is modified)\n * The default criteria is based on series number in ascending order.\n *\n * @param {Array} series List of series\n * @param {function} seriesSortingCriteria method for sorting\n * @returns {Array} sorted series object\n */\nconst sortStudySeries = (\n  series,\n  seriesSortingCriteria = seriesSortCriteria.default\n) => {\n  return series.sort(seriesSortingCriteria);\n};\n\n/**\n * Sorts given instancesList (given param is modified)\n * The default criteria is based on instance number in ascending order.\n *\n * @param {Array} instancesList List of series\n * @param {function} instancesSortingCriteria method for sorting\n * @returns {Array} sorted instancesList object\n */\nconst sortStudyInstances = (\n  instancesList,\n  instancesSortingCriteria = instancesSortCriteria.default\n) => {\n  return instancesList.sort(instancesSortingCriteria);\n};\n\n/**\n * Sorts the series and instances (by default) inside a study instance based on sortingCriteria (given param is modified)\n * The default criteria is based on series and instance numbers in ascending order.\n *\n * @param {Object} study The study instance\n * @param {boolean} [deepSort = true] to sort instance also\n * @param {function} [seriesSortingCriteria = seriesSortCriteria.default] method for sorting series\n * @param {function} [instancesSortingCriteria = instancesSortCriteria.default] method for sorting instances\n * @returns {Object} sorted study object\n */\nexport default function sortStudy(\n  study,\n  deepSort = true,\n  seriesSortingCriteria = seriesSortCriteria.default,\n  instancesSortingCriteria = instancesSortCriteria.default\n) {\n  if (!study || !study.series) {\n    throw new Error('Insufficient study data was provided to sortStudy');\n  }\n\n  sortStudySeries(study.series, seriesSortingCriteria);\n\n  if (deepSort) {\n    study.series.forEach(series => {\n      sortStudyInstances(series.instances, instancesSortingCriteria);\n    });\n  }\n\n  return study;\n}\n\nexport { sortStudySeries, sortStudyInstances, sortingCriteria };\n","import { asyncComponent, retryImport } from '@ohif/ui';\nimport OHIF from '@ohif/core';\n\nconst { urlUtil: UrlUtil } = OHIF.utils;\n\n// Dynamic Import Routes (CodeSplitting)\nconst IHEInvokeImageDisplay = asyncComponent(() =>\n  retryImport(() =>\n    import(/* webpackChunkName: \"IHEInvokeImageDisplay\" */ './IHEInvokeImageDisplay.js')\n  )\n);\nconst ViewerRouting = asyncComponent(() =>\n  retryImport(() => import(/* webpackChunkName: \"ViewerRouting\" */ './ViewerRouting.js'))\n);\n\nconst StudyListRouting = asyncComponent(() =>\n  retryImport(() => import(\n    /* webpackChunkName: \"StudyListRouting\" */ '../studylist/StudyListRouting.js'\n  ))\n);\nconst StandaloneRouting = asyncComponent(() =>\n  retryImport(() => import(\n    /* webpackChunkName: \"ConnectedStandaloneRouting\" */ '../connectedComponents/ConnectedStandaloneRouting.js'\n  ))\n);\nconst ViewerLocalFileData = asyncComponent(() =>\n  retryImport(() => import(\n    /* webpackChunkName: \"ViewerLocalFileData\" */ '../connectedComponents/ViewerLocalFileData.js'\n  ))\n);\n\nconst reload = () => window.location.reload();\n\nconst ROUTES_DEF = {\n  default: {\n    viewer: {\n      path: '/viewer/:studyInstanceUIDs',\n      component: ViewerRouting,\n    },\n    standaloneViewer: {\n      path: '/viewer',\n      component: StandaloneRouting,\n    },\n    list: {\n      path: ['/studylist', '/'],\n      component: StudyListRouting,\n      condition: appConfig => {\n        return appConfig.showStudyList;\n      },\n    },\n    local: {\n      path: '/local',\n      component: ViewerLocalFileData,\n    },\n    IHEInvokeImageDisplay: {\n      path: '/IHEInvokeImageDisplay',\n      component: IHEInvokeImageDisplay\n    },\n  },\n  gcloud: {\n    viewer: {\n      path:\n        '/projects/:project/locations/:location/datasets/:dataset/dicomStores/:dicomStore/study/:studyInstanceUIDs',\n      component: ViewerRouting,\n      condition: appConfig => {\n        return !!appConfig.enableGoogleCloudAdapter;\n      },\n    },\n    list: {\n      path:\n        '/projects/:project/locations/:location/datasets/:dataset/dicomStores/:dicomStore',\n      component: StudyListRouting,\n      condition: appConfig => {\n        const showList = appConfig.showStudyList;\n\n        return showList && !!appConfig.enableGoogleCloudAdapter;\n      },\n    },\n  },\n};\n\nconst getRoutes = appConfig => {\n  const routes = [];\n  for (let keyConfig in ROUTES_DEF) {\n    const routesConfig = ROUTES_DEF[keyConfig];\n\n    for (let routeKey in routesConfig) {\n      const route = routesConfig[routeKey];\n      const validRoute =\n        typeof route.condition === 'function'\n          ? route.condition(appConfig)\n          : true;\n\n      if (validRoute) {\n        routes.push({\n          path: route.path,\n          Component: route.component,\n        });\n      }\n    }\n  }\n\n  return routes;\n};\n\nconst parsePath = (path, server, params) => {\n  let _path = path;\n  const _paramsCopy = Object.assign({}, server, params);\n\n  for (let key in _paramsCopy) {\n    _path = UrlUtil.paramString.replaceParam(_path, key, _paramsCopy[key]);\n  }\n\n  return _path;\n};\n\nconst parseViewerPath = (appConfig = {}, server = {}, params) => {\n  let viewerPath = ROUTES_DEF.default.viewer.path;\n  if (appConfig.enableGoogleCloudAdapter) {\n    viewerPath = ROUTES_DEF.gcloud.viewer.path;\n  }\n\n  return parsePath(viewerPath, server, params);\n};\n\nconst parseStudyListPath = (appConfig = {}, server = {}, params) => {\n  let studyListPath = ROUTES_DEF.default.list.path;\n  if (appConfig.enableGoogleCloudAdapter) {\n    studyListPath = ROUTES_DEF.gcloud.list.path || studyListPath;\n  }\n\n  return parsePath(studyListPath, server, params);\n};\n\nexport { getRoutes, parseViewerPath, parseStudyListPath, reload };\n","import DICOMWeb from '../../../DICOMWeb';\n\n/**\n * Function to get series sequence (sequence of pepeating items where each\n * item includes the attributes of one or more series) based on a given sopInstance.\n *\n * @param {Object} instance The sop instance\n * @returns {Promise} Referenced series sequence\n */\nconst getReferencedSeriesSequence = instance => {\n  const referencedSeriesSequenceRaw = instance['00081115'];\n\n  const referencedSeriesSequence = [];\n\n  if (referencedSeriesSequenceRaw && referencedSeriesSequenceRaw.Value) {\n    referencedSeriesSequenceRaw.Value.forEach(referencedSeries => {\n      const referencedSeriesInstanceUID = DICOMWeb.getString(\n        referencedSeries['0020000E']\n      );\n\n      const referencedInstanceSequenceRaw = referencedSeries['0008114A'];\n      const referencedInstanceSequence = [];\n\n      referencedInstanceSequenceRaw.Value.forEach(referencedInstance => {\n        referencedInstanceSequence.push({\n          referencedSOPClassUID: DICOMWeb.getString(\n            referencedInstance['00081150']\n          ),\n          referencedSOPInstanceUID: DICOMWeb.getString(\n            referencedInstance['00081155']\n          ),\n        });\n      });\n\n      referencedSeriesSequence.push({\n        referencedSeriesInstanceUID,\n        referencedInstanceSequence,\n      });\n    });\n  }\n\n  return referencedSeriesSequence;\n};\n\nexport default getReferencedSeriesSequence;\n","import DICOMWeb from '../../../DICOMWeb';\nimport metadataProvider from '../../../classes/MetadataProvider';\nimport getWADORSImageId from '../../../utils/getWADORSImageId';\nimport cornerstoneWADOImageLoader from 'cornerstone-wado-image-loader';\nimport getReferencedSeriesSequence from './getReferencedSeriesSequence';\n\n/**\n * Create a plain JS object that describes a study (a study descriptor object)\n * @param {Object} server Object with server configuration parameters\n * @param {Object} aSopInstance a SOP Instance from which study information will be added\n */\nfunction createStudy(server, aSopInstance) {\n  // TODO: Pass a reference ID to the server instead of including the URLs here\n  return {\n    series: [],\n    seriesMap: Object.create(null),\n    seriesLoader: null,\n    wadoUriRoot: server.wadoUriRoot,\n    wadoRoot: server.wadoRoot,\n    qidoRoot: server.qidoRoot,\n    PatientName: DICOMWeb.getName(aSopInstance['00100010']),\n    PatientID: DICOMWeb.getString(aSopInstance['00100020']),\n    PatientAge: DICOMWeb.getNumber(aSopInstance['00101010']),\n    PatientSize: DICOMWeb.getNumber(aSopInstance['00101020']),\n    PatientWeight: DICOMWeb.getNumber(aSopInstance['00101030']),\n    AccessionNumber: DICOMWeb.getString(aSopInstance['00080050']),\n    StudyTime: DICOMWeb.getString(aSopInstance['00080030']),\n    StudyDate: DICOMWeb.getString(aSopInstance['00080020']),\n    FrameOfReferenceUID: DICOMWeb.getString(aSopInstance['00200052']),\n    ReferencedSeriesSequence: getReferencedSeriesSequence(aSopInstance),\n    modalities: DICOMWeb.getString(aSopInstance['00080061']), // TODO -> Rename this.. it'll take a while to not mess this one up.\n    StudyDescription: DICOMWeb.getString(aSopInstance['00081030']),\n    NumberOfStudyRelatedInstances: DICOMWeb.getString(aSopInstance['00201208']),\n    StudyInstanceUID: DICOMWeb.getString(aSopInstance['0020000D']),\n    InstitutionName: DICOMWeb.getString(aSopInstance['00080080']),\n  };\n}\n\n/** Returns a WADO url for an instance\n *\n * @param StudyInstanceUID\n * @param SeriesInstanceUID\n * @param SOPInstanceUID\n * @returns  {string}\n */\nfunction buildInstanceWadoUrl(\n  server,\n  StudyInstanceUID,\n  SeriesInstanceUID,\n  SOPInstanceUID\n) {\n  // TODO: This can be removed, since DICOMWebClient has the same function. Not urgent, though\n  const params = [];\n\n  params.push('requestType=WADO');\n  params.push(`studyUID=${StudyInstanceUID}`);\n  params.push(`seriesUID=${SeriesInstanceUID}`);\n  params.push(`objectUID=${SOPInstanceUID}`);\n  params.push('contentType=application/dicom');\n  params.push('transferSyntax=*');\n\n  const paramString = params.join('&');\n\n  return `${server.wadoUriRoot}?${paramString}`;\n}\n\nfunction buildInstanceWadoRsUri(\n  server,\n  StudyInstanceUID,\n  SeriesInstanceUID,\n  SOPInstanceUID\n) {\n  return `${server.wadoRoot}/studies/${StudyInstanceUID}/series/${SeriesInstanceUID}/instances/${SOPInstanceUID}`;\n}\n\nfunction buildInstanceFrameWadoRsUri(\n  server,\n  StudyInstanceUID,\n  SeriesInstanceUID,\n  SOPInstanceUID,\n  frame\n) {\n  const baseWadoRsUri = buildInstanceWadoRsUri(\n    server,\n    StudyInstanceUID,\n    SeriesInstanceUID,\n    SOPInstanceUID\n  );\n  frame = frame != null || 1;\n\n  return `${baseWadoRsUri}/frames/${frame}`;\n}\n\nasync function makeSOPInstance(server, study, instance) {\n  const naturalizedInstance = await metadataProvider.addInstance(instance, {\n    server,\n  });\n\n  const {\n    StudyInstanceUID,\n    SeriesInstanceUID,\n    SOPInstanceUID,\n  } = naturalizedInstance;\n\n  const validate = string => {\n    let rgx = /[^.0-9]+/g;\n    return string.match(rgx);\n  };\n\n  if (StudyInstanceUID === undefined || validate(StudyInstanceUID)) {\n    const error =\n      'makeSOPInstance: StudyInstanceUID is not conforming with the UID (DICOM UI VR) character repertoire, skipping SOPInstance.';\n    console.error(error);\n\n    return;\n  }\n\n  if (SeriesInstanceUID === undefined || validate(SeriesInstanceUID)) {\n    const error =\n      'makeSOPInstance: SeriesInstanceUID is not conforming with the UID (DICOM UI VR) character repertoire, skipping SOPInstance.';\n    console.error(error);\n\n    return;\n  }\n\n  if (SOPInstanceUID === undefined || validate(SOPInstanceUID)) {\n    const error =\n      'makeSOPInstance: SOPInstanceUID is not conforming with the UID (DICOM UI VR) character repertoire, skipping SOPInstance.';\n    console.error(error);\n\n    return;\n  }\n\n  let series = study.seriesMap[SeriesInstanceUID];\n\n  if (!series) {\n    series = {\n      SeriesInstanceUID,\n      SeriesDescription: naturalizedInstance.SeriesDescription,\n      Modality: naturalizedInstance.Modality,\n      SeriesNumber: naturalizedInstance.SeriesNumber,\n      SeriesDate: naturalizedInstance.SeriesDate,\n      SeriesTime: naturalizedInstance.SeriesTime,\n      instances: [],\n    };\n    study.seriesMap[SeriesInstanceUID] = series;\n    study.series.push(series);\n  } else {\n    if (series.SeriesDate === undefined)\n      series.SeriesDate = naturalizedInstance.SeriesDate;\n    if (series.SeriesTime === undefined)\n      series.SeriesTime = naturalizedInstance.SeriesTime;\n  }\n\n  const wadouri = buildInstanceWadoUrl(\n    server,\n    StudyInstanceUID,\n    SeriesInstanceUID,\n    SOPInstanceUID\n  );\n  const baseWadoRsUri = buildInstanceWadoRsUri(\n    server,\n    StudyInstanceUID,\n    SeriesInstanceUID,\n    SOPInstanceUID\n  );\n  const wadorsuri = buildInstanceFrameWadoRsUri(\n    server,\n    StudyInstanceUID,\n    SeriesInstanceUID,\n    SOPInstanceUID\n  );\n\n  const sopInstance = {\n    metadata: naturalizedInstance,\n    baseWadoRsUri,\n    wadouri,\n    wadorsuri,\n    wadoRoot: server.wadoRoot,\n    imageRendering: server.imageRendering,\n    thumbnailRendering: server.thumbnailRendering,\n  };\n\n  series.instances.push(sopInstance);\n\n  if (\n    sopInstance.thumbnailRendering === 'wadors' ||\n    sopInstance.imageRendering === 'wadors'\n  ) {\n    // If using WADO-RS for either images or thumbnails,\n    // Need to add this to cornerstoneWADOImageLoader's provider\n    // (it won't be hit on cornerstone.metaData.get, but cornerstoneWADOImageLoader\n    // will cry if you don't add data to cornerstoneWADOImageLoader.wadors.metaDataManager).\n\n    const wadoRSMetadata = Object.assign(instance);\n\n    const { NumberOfFrames } = sopInstance.metadata;\n\n    if (NumberOfFrames) {\n      for (let i = 0; i < NumberOfFrames; i++) {\n        const wadorsImageId = getWADORSImageId(sopInstance, i);\n\n        cornerstoneWADOImageLoader.wadors.metaDataManager.add(\n          wadorsImageId,\n          wadoRSMetadata\n        );\n      }\n    } else {\n      const wadorsImageId = getWADORSImageId(sopInstance);\n\n      cornerstoneWADOImageLoader.wadors.metaDataManager.add(\n        wadorsImageId,\n        wadoRSMetadata\n      );\n    }\n  }\n\n  return sopInstance;\n}\n\n/**\n * Add a list of SOP Instances to a given study object descriptor\n * @param {Object} server Object with server configuration parameters\n * @param {Object} study The study descriptor to which the given SOP instances will be added\n * @param {Array} sopInstanceList A list of SOP instance objects\n */\nasync function addInstancesToStudy(server, study, sopInstanceList) {\n  return Promise.all(\n    sopInstanceList.map(function(sopInstance) {\n      return makeSOPInstance(server, study, sopInstance);\n    })\n  );\n}\n\nconst createStudyFromSOPInstanceList = async (server, sopInstanceList) => {\n  if (Array.isArray(sopInstanceList) && sopInstanceList.length > 0) {\n    const firstSopInstance = sopInstanceList[0];\n    const study = createStudy(server, firstSopInstance);\n    await addInstancesToStudy(server, study, sopInstanceList);\n    return study;\n  }\n  throw new Error('Failed to create study out of provided SOP instance list');\n};\n\nexport { createStudyFromSOPInstanceList, addInstancesToStudy };\n","/**\n * Class to define inheritance of load retrieve strategy.\n * The process can be async load (lazy) or sync load\n *\n * There are methods that must be implemented at consumer level\n * To retrieve study call execLoad\n */\nexport default class RetrieveMetadataLoader {\n  /**\n   * @constructor\n   * @param {Object} server Object with server configuration parameters\n   * @param {Array} studyInstanceUID Study instance ui to be retrieved\n   * @param {Object} [filters] - Object containing filters to be applied on retrieve metadata process\n   * @param {string} [filter.seriesInstanceUID] - series instance uid to filter results against\n   */\n  constructor(server, studyInstanceUID, filters = {}) {\n    this.server = server;\n    this.studyInstanceUID = studyInstanceUID;\n    this.filters = filters;\n  }\n\n  async execLoad() {\n    await this.configLoad();\n    const preLoadData = await this.preLoad();\n    const loadData = await this.load(preLoadData);\n    const postLoadData = await this.posLoad(loadData);\n\n    return postLoadData;\n  }\n\n  /**\n   * It iterates over given loaders running each one. Loaders parameters must be bind when getting it.\n   * @param {Array} loaders - array of loader to retrieve data.\n   */\n  async runLoaders(loaders) {\n    let result;\n    for (const loader of loaders) {\n      try {\n        result = await loader();\n        if (result && result.length) {\n          break; // closes iterator in case data is retrieved successfully\n        }\n      } catch (e) {\n        throw e;\n      }\n    }\n\n    if (loaders.next().done && !result) {\n      throw new Error('RetrieveMetadataLoader failed');\n    }\n\n    return result;\n  }\n\n  // Methods to be overwrite\n  async configLoad() {}\n  async preLoad() {}\n  async load(preLoadData) {}\n  async posLoad(loadData) {}\n}\n","import { api } from 'dicomweb-client';\nimport DICOMWeb from '../../../DICOMWeb/';\nimport { createStudyFromSOPInstanceList } from './studyInstanceHelpers';\nimport RetrieveMetadataLoader from './retrieveMetadataLoader';\n\nimport errorHandler from '../../../errorHandler';\nimport getXHRRetryRequestHook from '../../../utils/xhrRetryRequestHook';\n\n/**\n * Class for sync load of study metadata.\n * It inherits from RetrieveMetadataLoader\n *\n * A list of loaders (getLoaders) can be created so, it will be applied a fallback load strategy.\n * I.e Retrieve metadata using all loaders possibilities.\n */\nexport default class RetrieveMetadataLoaderSync extends RetrieveMetadataLoader {\n  getOptions() {\n    const { studyInstanceUID, filters } = this;\n\n    const options = {\n      studyInstanceUID,\n    };\n\n    const { seriesInstanceUID } = filters;\n    if (seriesInstanceUID) {\n      options['seriesInstanceUID'] = seriesInstanceUID;\n    }\n\n    return options;\n  }\n\n  /**\n   * @returns {Array} Array of loaders. To be consumed as queue\n   */\n  *getLoaders() {\n    const loaders = [];\n    const {\n      studyInstanceUID,\n      filters: { seriesInstanceUID } = {},\n      client,\n    } = this;\n\n    if (seriesInstanceUID) {\n      loaders.push(\n        client.retrieveSeriesMetadata.bind(client, {\n          studyInstanceUID,\n          seriesInstanceUID,\n        })\n      );\n    }\n\n    loaders.push(\n      client.retrieveStudyMetadata.bind(client, { studyInstanceUID })\n    );\n\n    yield* loaders;\n  }\n\n  configLoad() {\n    const { server } = this;\n    const client = new api.DICOMwebClient({\n      url: server.wadoRoot,\n      headers: DICOMWeb.getAuthorizationHeader(server),\n      errorInterceptor: errorHandler.getHTTPErrorHandler(),\n      requestHooks: [getXHRRetryRequestHook()],\n    });\n\n    this.client = client;\n  }\n\n  async load(preLoadData) {\n    const loaders = this.getLoaders();\n    const result = this.runLoaders(loaders);\n    return result;\n  }\n\n  async posLoad(loadData) {\n    const { server } = this;\n    return createStudyFromSOPInstanceList(server, loadData);\n  }\n}\n","import StaticWadoClient from '../qido/StaticWadoClient';\nimport dcmjs from 'dcmjs';\nimport DICOMWeb from '../../../DICOMWeb/';\nimport RetrieveMetadataLoader from './retrieveMetadataLoader';\nimport { sortStudySeries, sortingCriteria } from '../../sortStudy';\nimport getSeriesInfo from '../../getSeriesInfo';\nimport {\n  createStudyFromSOPInstanceList,\n  addInstancesToStudy,\n} from './studyInstanceHelpers';\n\nimport errorHandler from '../../../errorHandler';\nimport { getXHRRetryRequestHook } from '../../../utils/xhrRetryRequestHook';\n\nconst { naturalizeDataset } = dcmjs.data.DicomMetaDictionary;\n\n/**\n * Map series to an array of SeriesInstanceUID\n * @param {Arrays} series list of Series Instance UIDs\n * @returns {Arrays} A list of Series Instance UIDs\n */\nfunction mapStudySeries(series) {\n  return series.map(series => getSeriesInfo(series).SeriesInstanceUID);\n}\n\nfunction attachSeriesLoader(server, study, seriesLoader) {\n  study.seriesLoader = Object.freeze({\n    hasNext() {\n      return seriesLoader.hasNext();\n    },\n    async next() {\n      const series = await seriesLoader.next();\n      await addInstancesToStudy(server, study, series.sopInstances);\n      return study.seriesMap[series.seriesInstanceUID];\n    },\n  });\n}\n\n/**\n * Creates an immutable series loader object which loads each series sequentially using the iterator interface\n * @param {DICOMWebClient} dicomWebClient The DICOMWebClient instance to be used for series load\n * @param {string} studyInstanceUID The Study Instance UID from which series will be loaded\n * @param {Array} seriesInstanceUIDList A list of Series Instance UIDs\n * @returns {Object} Returns an object which supports loading of instances from each of given Series Instance UID\n */\nfunction makeSeriesAsyncLoader(\n  dicomWebClient,\n  studyInstanceUID,\n  seriesInstanceUIDList\n) {\n  return Object.freeze({\n    hasNext() {\n      return seriesInstanceUIDList.length > 0;\n    },\n    async next() {\n      const seriesInstanceUID = seriesInstanceUIDList.shift();\n      const sopInstances = await dicomWebClient.retrieveSeriesMetadata({\n        studyInstanceUID,\n        seriesInstanceUID,\n      });\n      return { studyInstanceUID, seriesInstanceUID, sopInstances };\n    },\n  });\n}\n\n/**\n * Class for async load of study metadata.\n * It inherits from RetrieveMetadataLoader\n *\n * It loads the one series and then append to seriesLoader the others to be consumed/loaded\n */\nexport default class RetrieveMetadataLoaderAsync extends RetrieveMetadataLoader {\n  configLoad() {\n    const { server } = this;\n\n    const client = new StaticWadoClient({\n      ...server,\n      url: server.qidoRoot,\n      headers: DICOMWeb.getAuthorizationHeader(server),\n      errorInterceptor: errorHandler.getHTTPErrorHandler(),\n      requestHooks: [getXHRRetryRequestHook()],\n    });\n\n    this.client = client;\n  }\n\n  /**\n   * @returns {Array} Array of preLoaders. To be consumed as queue\n   */\n  *getPreLoaders() {\n    const preLoaders = [];\n    const {\n      studyInstanceUID,\n      filters: { seriesInstanceUID } = {},\n      client,\n    } = this;\n\n    if (seriesInstanceUID) {\n      const options = {\n        studyInstanceUID,\n        queryParams: { SeriesInstanceUID: seriesInstanceUID },\n      };\n      preLoaders.push(client.searchForSeries.bind(client, options));\n    }\n    // Fallback preloader\n    preLoaders.push(client.searchForSeries.bind(client, { studyInstanceUID }));\n\n    yield* preLoaders;\n  }\n\n  async preLoad() {\n    const preLoaders = this.getPreLoaders();\n\n    // seriesData is the result of the QIDO-RS Search For Series request\n    // It's an array of Objects containing DICOM Tag values at the Series level\n    const seriesData = await this.runLoaders(preLoaders);\n\n    const seriesSorted = sortStudySeries(\n      seriesData,\n      sortingCriteria.seriesSortCriteria.seriesInfoSortingCriteria\n    );\n    const seriesInstanceUIDsMap = mapStudySeries(seriesSorted);\n\n    return {\n      seriesInstanceUIDsMap,\n      seriesData,\n    };\n  }\n\n  async load(preLoadData) {\n    const { client, studyInstanceUID } = this;\n\n    const seriesAsyncLoader = makeSeriesAsyncLoader(\n      client,\n      studyInstanceUID,\n      preLoadData.seriesInstanceUIDsMap\n    );\n\n    const firstSeries = await seriesAsyncLoader.next();\n\n    return {\n      sopInstances: firstSeries.sopInstances,\n      asyncLoader: seriesAsyncLoader,\n      seriesData: preLoadData.seriesData,\n    };\n  }\n\n  async posLoad(loadData) {\n    const { server } = this;\n\n    const { sopInstances, asyncLoader, seriesData } = loadData;\n\n    const study = await createStudyFromSOPInstanceList(server, sopInstances);\n\n    // TODO: Should this be in a helper\n    const seriesDataNaturalized = seriesData.map(naturalizeDataset);\n\n    seriesDataNaturalized.forEach((series, idx) => {\n      const seriesDataFromQIDO = {\n        SeriesInstanceUID: series.SeriesInstanceUID,\n        SeriesDescription: series.SeriesDescription,\n        SeriesNumber: series.SeriesNumber,\n        Modality: series.Modality,\n        instances: [],\n      };\n\n      if (study.series[idx]) {\n        study.series[idx] = Object.assign(\n          seriesDataFromQIDO,\n          study.series[idx]\n        );\n      } else {\n        study.series[idx] = seriesDataFromQIDO;\n      }\n\n      study.seriesMap[series.SeriesInstanceUID] = study.series[idx];\n    });\n\n    if (asyncLoader.hasNext()) {\n      attachSeriesLoader(server, study, asyncLoader);\n    }\n\n    return study;\n  }\n}\n","import RetrieveMetadataLoaderSync from './retrieveMetadataLoaderSync';\nimport RetrieveMetadataLoaderAsync from './retrieveMetadataLoaderAsync';\n\n/**\n * Retrieve Study metadata from a DICOM server. If the server is configured to use lazy load, only the first series\n * will be loaded and the property \"studyLoader\" will be set to let consumer load remaining series as needed.\n *\n * @param {Object} server Object with server configuration parameters\n * @param {string} StudyInstanceUID The Study Instance UID of the study which needs to be loaded\n * @param {Object} [filters] - Object containing filters to be applied on retrieve metadata process\n * @param {string} [filter.seriesInstanceUID] - series instance uid to filter results against\n * @returns {Object} A study descriptor object\n */\nasync function RetrieveMetadata(server, StudyInstanceUID, filters = {}) {\n  const RetrieveMetadataLoader =\n    server.enableStudyLazyLoad != false\n      ? RetrieveMetadataLoaderAsync\n      : RetrieveMetadataLoaderSync;\n\n  const retrieveMetadataLoader = new RetrieveMetadataLoader(\n    server,\n    StudyInstanceUID,\n    filters\n  );\n  const studyMetadata = retrieveMetadataLoader.execLoad();\n\n  return studyMetadata;\n}\n\nexport default RetrieveMetadata;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport function ViewportErrorIndicator(props) {\n  return (\n    <div\n      className=\"loadingIndicator\"\n      style={{\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        margin: 'auto',\n        textAlign: 'center',\n        pointerEvents: 'none',\n      }}\n    >\n      <p>Error</p>\n      <p className=\"description\">An error has occurred.</p>\n      <p className=\"details\">{props.details}</p>\n    </div>\n  );\n}\n\nViewportErrorIndicator.propTypes = {\n  details: PropTypes.string,\n};\n\nexport default ViewportErrorIndicator;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport function ViewportLoadingIndicator(props) {\n  return (\n    <div\n      className=\"loading-indicator\"\n      style={{\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        margin: 'auto',\n        textAlign: 'center',\n        pointerEvents: 'none',\n      }}\n    >\n      Loading {props.percentComplete}\n    </div>\n  );\n}\n\nViewportLoadingIndicator.propTypes = {\n  percentComplete: PropTypes.number,\n};\n\nexport default ViewportLoadingIndicator;\n","/* global cornerstone */\nimport './ImageThumbnail.styl';\n\nimport { utils } from '@ohif/core';\nimport React, { useState, useEffect, createRef, useCallback } from 'react';\nimport classNames from 'classnames';\n\nimport PropTypes from 'prop-types';\nimport ViewportErrorIndicator from '../../viewer/ViewportErrorIndicator';\nimport ViewportLoadingIndicator from '../../viewer/ViewportLoadingIndicator';\n\n// TODO: How should we have this component depend on Cornerstone?\n// - Passed in as a prop?\n// - Set as external dependency?\n// - Pass in the entire load and render function as a prop?\n//import cornerstone from 'cornerstone-core';\nfunction ImageThumbnail(props) {\n  const {\n    active,\n    width,\n    height,\n    imageSrc,\n    imageId,\n    stackPercentComplete,\n    error: propsError,\n    showProgressBar,\n  } = props;\n\n  const [isLoading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [image, setImage] = useState({});\n  const canvasRef = createRef();\n\n  let loadingOrError;\n  let cancelablePromise;\n\n  if (propsError || error) {\n    loadingOrError = <ViewportErrorIndicator />;\n  } else if (isLoading) {\n    loadingOrError = <ViewportLoadingIndicator />;\n  }\n\n  const showStackLoadingProgressBar =\n    showProgressBar && stackPercentComplete !== undefined;\n\n  const shouldRenderToCanvas = () => {\n    return imageId && !imageSrc;\n  };\n\n  const fetchImagePromise = () => {\n    if (!cancelablePromise) {\n      return;\n    }\n\n    setLoading(true);\n    cancelablePromise\n      .then(response => {\n        setImage(response);\n      })\n      .catch(error => {\n        if (error.isCanceled) return;\n        // setLoading(false);\n        // setError(true);\n        // throw new Error(error);\n      });\n  };\n\n  const setImagePromise = () => {\n    if (shouldRenderToCanvas()) {\n      cancelablePromise = utils.makeCancelable(\n        cornerstone.loadAndCacheImage(imageId)\n      );\n    }\n  };\n\n  const purgeCancelablePromise = useCallback(() => {\n    if (cancelablePromise) {\n      cancelablePromise.cancel();\n    }\n  });\n\n  useEffect(() => {\n    return () => {\n      purgeCancelablePromise();\n    };\n  }, [purgeCancelablePromise]);\n\n  useEffect(() => {\n    if (image.imageId) {\n      cornerstone.renderToCanvas(canvasRef.current, image);\n      setLoading(false);\n    }\n  }, [canvasRef, image, image.imageId]);\n\n  useEffect(() => {\n    if (!image.imageId || image.imageId !== imageId) {\n      purgeCancelablePromise();\n      setImagePromise();\n      fetchImagePromise();\n    }\n  }, [\n    fetchImagePromise,\n    image.imageId,\n    imageId,\n    purgeCancelablePromise,\n    setImagePromise,\n  ]);\n\n  return (\n    <div className={classNames('ImageThumbnail', { active: active })}>\n      <div className=\"image-thumbnail-canvas\">\n        {shouldRenderToCanvas() ? (\n          <canvas ref={canvasRef} width={width} height={height} />\n        ) : (\n          <img\n            className=\"static-image\"\n            src={imageSrc}\n            //width={this.props.width}\n            height={height}\n            alt={''}\n          />\n        )}\n      </div>\n      {loadingOrError}\n      {showStackLoadingProgressBar && (\n        <div className=\"image-thumbnail-progress-bar\">\n          <div\n            className=\"image-thumbnail-progress-bar-inner\"\n            style={{ width: `${stackPercentComplete}%` }}\n          />\n        </div>\n      )}\n      {isLoading && <div className=\"image-thumbnail-loading-indicator\"></div>}\n    </div>\n  );\n}\n\nImageThumbnail.propTypes = {\n  active: PropTypes.bool,\n  imageSrc: PropTypes.string,\n  imageId: PropTypes.string,\n  error: PropTypes.bool,\n  width: PropTypes.number,\n  height: PropTypes.number,\n  stackPercentComplete: PropTypes.number.isRequired,\n  showProgressBar: PropTypes.bool,\n};\n\nImageThumbnail.defaultProps = {\n  active: false,\n  error: false,\n  stackPercentComplete: 0,\n  width: 217,\n  height: 123,\n  showProgressBar: true,\n};\n\nexport default ImageThumbnail;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport throttle from 'lodash.throttle';\nimport { useDrag } from 'react-dnd';\nimport { classes } from '@ohif/core';\nimport ImageThumbnail from './ImageThumbnail';\nimport classNames from 'classnames';\nimport { Icon } from './../../elements/Icon';\nimport { Tooltip } from './../tooltip';\nimport { OverlayTrigger } from './../overlayTrigger';\nimport './Thumbnail.styl';\n\nconst StudyLoadingListener = classes.StudyLoadingListener;\n\nfunction ThumbnailFooter({\n  SeriesDescription,\n  SeriesNumber,\n  numImageFrames,\n  hasWarnings,\n  hasDerivedDisplaySets,\n}) {\n  const [inconsistencyWarnings, inconsistencyWarningsSet] = useState([]);\n  const [derivedDisplaySetsActive, derivedDisplaySetsActiveSet] = useState([]);\n\n  useEffect(() => {\n    let unmounted = false;\n    hasWarnings.then(response => {\n      if (!unmounted) {\n        inconsistencyWarningsSet(response);\n      }\n    });\n    hasDerivedDisplaySets.then(response => {\n      if (!unmounted) {\n        derivedDisplaySetsActiveSet(response);\n      }\n    });\n    return () => {\n      unmounted = true;\n    };\n  }, [hasWarnings, hasDerivedDisplaySets]);\n\n  const infoOnly = !SeriesDescription;\n\n  const getInfo = (value, icon, className = '') => {\n    return (\n      <div className={classNames('item item-series', className)}>\n        <div className=\"icon\">{icon}</div>\n        <div className=\"value\">{value}</div>\n      </div>\n    );\n  };\n\n  const getWarningContent = inconsistencyWarnings => {\n    if (Array.isArray(inconsistencyWarnings)) {\n      const listedWarnings = inconsistencyWarnings.map((warn, index) => {\n        return <li key={index}>{warn}</li>;\n      });\n\n      return <ol>{listedWarnings}</ol>;\n    } else {\n      return <React.Fragment>{inconsistencyWarnings}</React.Fragment>;\n    }\n  };\n\n  const getWarningInfo = (SeriesNumber, inconsistencyWarnings) => {\n    return (\n      <React.Fragment>\n        {inconsistencyWarnings && inconsistencyWarnings.length != 0 ? (\n          <OverlayTrigger\n            key={SeriesNumber}\n            placement=\"left\"\n            overlay={\n              <Tooltip\n                placement=\"left\"\n                className=\"in tooltip-warning\"\n                id=\"tooltip-left\"\n              >\n                <div className=\"warningTitle\">Series Inconsistencies</div>\n                <div className=\"warningContent\">\n                  {getWarningContent(inconsistencyWarnings)}\n                </div>\n              </Tooltip>\n            }\n          >\n            <div className={classNames('warning')}>\n              <span className=\"warning-icon\">\n                <Icon name=\"exclamation-triangle\" />\n              </span>\n            </div>\n          </OverlayTrigger>\n        ) : (\n          <React.Fragment></React.Fragment>\n        )}\n      </React.Fragment>\n    );\n  };\n\n  const getDerivedInfo = derivedDisplaySetsActive => {\n    return (\n      <React.Fragment>\n        {derivedDisplaySetsActive ? (\n          <div className=\"derived\">\n            <Icon name=\"link\" />\n          </div>\n        ) : (\n          <React.Fragment></React.Fragment>\n        )}\n      </React.Fragment>\n    );\n  };\n\n  const getSeriesInformation = (\n    SeriesNumber,\n    numImageFrames,\n    inconsistencyWarnings,\n    derivedDisplaySetsActive\n  ) => {\n    if (!SeriesNumber && !numImageFrames) {\n      return;\n    }\n    const seriesInformation = (\n      <div className=\"series-information\">\n        <React.Fragment>\n          {SeriesNumber !== undefined ? (\n            getInfo(SeriesNumber, 'S:')\n          ) : (\n            <React.Fragment></React.Fragment>\n          )}\n        </React.Fragment>\n        <React.Fragment>\n          {numImageFrames !== undefined ? (\n            getInfo(numImageFrames, '', 'image-frames')\n          ) : (\n            <React.Fragment></React.Fragment>\n          )}\n        </React.Fragment>\n        {getDerivedInfo(derivedDisplaySetsActive)}\n        {getWarningInfo(SeriesNumber, inconsistencyWarnings)}\n      </div>\n    );\n\n    return seriesInformation;\n  };\n\n  return (\n    <div className={classNames('series-details', { 'info-only': infoOnly })}>\n      <div className=\"series-description\">{SeriesDescription}</div>\n      {getSeriesInformation(\n        SeriesNumber,\n        numImageFrames,\n        inconsistencyWarnings,\n        derivedDisplaySetsActive\n      )}\n    </div>\n  );\n}\n\nfunction Thumbnail(props) {\n  const {\n    active,\n    altImageText,\n    error,\n    displaySetInstanceUID,\n    imageId,\n    imageSrc,\n    StudyInstanceUID,\n    onClick,\n    onDoubleClick,\n    onMouseDown,\n    supportsDrag,\n    showProgressBar,\n  } = props;\n\n  const [stackPercentComplete, setStackPercentComplete] = useState(0);\n  useEffect(() => {\n    const onProgressChange = throttle(({ detail }) => {\n      const { progressId, progressData } = detail;\n      if (`StackProgress:${displaySetInstanceUID}` === progressId) {\n        const percent = progressData ? progressData.percentComplete : 0;\n        if (percent > stackPercentComplete) {\n          setStackPercentComplete(percent);\n        }\n      }\n    }, 100);\n\n    document.addEventListener(\n      StudyLoadingListener.events.OnProgress,\n      onProgressChange\n    );\n\n    return () => {\n      document.removeEventListener(\n        StudyLoadingListener.events.OnProgress,\n        onProgressChange\n      );\n    };\n  }, [displaySetInstanceUID]);\n\n  const [collectedProps, drag, dragPreview] = useDrag({\n    // `droppedItem` in `dropTarget`\n    // The only data it will have access to\n    item: {\n      StudyInstanceUID,\n      displaySetInstanceUID,\n      type: 'thumbnail', // Has to match `dropTarget`'s type\n    },\n    canDrag: function(monitor) {\n      return supportsDrag;\n    },\n  });\n\n  const hasImage = imageSrc || imageId;\n  const hasAltText = altImageText !== undefined;\n\n  return (\n    <div\n      ref={drag}\n      className={classNames('thumbnail', { active: active })}\n      onClick={onClick}\n      onDoubleClick={onDoubleClick}\n      onMouseDown={onMouseDown}\n    >\n      {/* SHOW IMAGE */}\n      {hasImage && (\n        <ImageThumbnail\n          active={active}\n          imageSrc={imageSrc}\n          imageId={imageId}\n          error={error}\n          stackPercentComplete={stackPercentComplete}\n          showProgressBar={showProgressBar}\n        />\n      )}\n      {/* SHOW TEXT ALTERNATIVE */}\n      {!hasImage && hasAltText && (\n        <div className={'alt-image-text p-x-1'}>\n          <h1>{altImageText}</h1>\n        </div>\n      )}\n      {ThumbnailFooter(props)}\n    </div>\n  );\n}\n\nconst noop = () => {};\n\nThumbnail.propTypes = {\n  supportsDrag: PropTypes.bool,\n  id: PropTypes.string.isRequired,\n  displaySetInstanceUID: PropTypes.string.isRequired,\n  StudyInstanceUID: PropTypes.string.isRequired,\n  imageSrc: PropTypes.string,\n  imageId: PropTypes.string,\n  error: PropTypes.bool,\n  active: PropTypes.bool,\n  stackPercentComplete: PropTypes.number,\n  /**\n  altImageText will be used when no imageId or imageSrc is provided.\n  It will be displayed inside the <div>. This is useful when it is difficult\n  to make a preview for a type of DICOM series (e.g. DICOM-SR)\n  */\n  altImageText: PropTypes.string,\n  SeriesDescription: PropTypes.string,\n  SeriesNumber: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  hasWarnings: PropTypes.instanceOf(Promise),\n  hasDerivedDisplaySets: PropTypes.instanceOf(Promise),\n  numImageFrames: PropTypes.number,\n  onDoubleClick: PropTypes.func,\n  onClick: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  showProgressBar: PropTypes.bool,\n};\n\nThumbnail.defaultProps = {\n  supportsDrag: false,\n  active: false,\n  error: false,\n  stackPercentComplete: 0,\n  onDoubleClick: noop,\n  onClick: noop,\n  onMouseDown: noop,\n};\n\nexport { Thumbnail };\n","import { api } from 'dicomweb-client';\n\n/**\n * An implementation of the static wado client, that fetches data from\n * a static response rather than actually doing real queries.  This allows\n * fast encoding of test data, but because it is static, anything actually\n * performing searches doesn't work.  This version fixes the query issue\n * by manually implementing a query option.\n */\nexport default class StaticWadoClient extends api.DICOMwebClient {\n  static filterKeys = {\n    \"StudyInstanceUID\": \"0020000D\",\n    \"PatientName\": \"00100010\",\n    \"00100020\": \"mrn\",\n    \"PatientID\": \"00100020\",\n    \"StudyDescription\": \"00081030\",\n    \"StudyDate\": \"00080020\",\n    \"ModalitiesInStudy\": \"00080061\",\n    AccessionNumber: \"00080050\",\n  };\n\n  constructor(qidoConfig) {\n    super(qidoConfig);\n    this.staticWado = qidoConfig.staticWado;\n  }\n\n  /**\n   * Replace the search for studies remote query with a local version which\n   * retrieves a complete query list and then sub-selects from it locally.\n   * @param {*} options\n   * @returns\n   */\n  async searchForStudies(options) {\n    if (!this.staticWado) return super.searchForStudies(options);\n\n    let searchResult = await super.searchForStudies(options);\n    const { queryParams } = options;\n    if (!queryParams) return searchResult;\n    const filtered = searchResult.filter(study => {\n      for (const key of Object.keys(StaticWadoClient.filterKeys)) {\n        if (!this.filterItem(key, queryParams, study)) return false;\n      }\n      return true;\n    });\n    return filtered;\n  }\n\n  /**\n   * Compares values, matching any instance of desired to any instance of\n   * actual by recursively go through the paired set of values.  That is,\n   * this is O(m*n) where m is how many items in desired and n is the length of actual\n   * Then, at the individual item node, compares the Alphabetic name if present,\n   * and does a sub-string matching on string values, and otherwise does an\n   * exact match comparison.\n   *\n   * @param {*} desired\n   * @param {*} actual\n   * @returns true if the values match\n   */\n  compareValues(desired, actual) {\n    if (Array.isArray(desired)) {\n      return desired.find(item => this.compareValues(item, actual));\n    }\n    if (Array.isArray(actual)) {\n      return actual.find(actualItem => this.compareValues(desired, actualItem));\n    }\n    if (actual && actual.Alphabetic) {\n      actual = actual.Alphabetic;\n    }\n    if (typeof (actual) == 'string') {\n      if (actual.length === 0) return true;\n      if (desired.length === 0 || desired === '*') return true;\n      if (desired[0] === '*' && desired[desired.length - 1] === '*') {\n        console.log(`Comparing ${actual} to ${desired.substring(1, desired.length - 1)}`)\n        return actual.indexOf(desired.substring(1, desired.length - 1)) != -1;\n      } else if (desired[desired.length - 1] === '*') {\n        return actual.indexOf(desired.substring(0, desired.length - 1)) != -1;\n      } else if (desired[0] === '*') {\n        return actual.indexOf(desired.substring(1)) === actual.length - desired.length + 1;\n      }\n    }\n    return desired === actual;\n  }\n\n  /** Compares a pair of dates to see if the value is within the range */\n  compareDateRange(range, value) {\n    if (!value) return true;\n    const dash = range.indexOf('-');\n    if (dash === -1) return this.compareValues(range, value);\n    const start = range.substring(0, dash);\n    const end = range.substring(dash + 1);\n    return (!start || value >= start) &&\n      (!end || value <= end);\n  }\n\n  /**\n   * Filters the return list by the query parameters.\n   *\n   * @param {*} key\n   * @param {*} queryParams\n   * @param {*} study\n   * @returns\n   */\n  filterItem(key, queryParams, study) {\n    const altKey = StaticWadoClient.filterKeys[key] || key;\n    if (!queryParams) return true;\n    const testValue = queryParams[key] || queryParams[altKey];\n    if (!testValue) return true;\n    const valueElem = study[key] || study[altKey];\n    if (!valueElem) return false;\n    if (valueElem.vr == 'DA') return this.compareDateRange(testValue, valueElem.Value[0]);\n    const value = valueElem.Value;\n    return this.compareValues(testValue, value) && true;\n  }\n}\n","import { createSelector } from 'reselect';\n\nconst getActiveViewportIndex = state => state.viewports.activeViewportIndex;\nconst getLayoutViewports = state => state.viewports.layout.viewports;\nconst getViewportSpecificData = state => state.viewports.viewportSpecificData;\n\n/**\n * Think of this as a computed getter for our store. It lets us watch parts of\n * our redux state, and only update/recalculate when those values change.\n */\nexport const getActiveContexts = createSelector(\n  [getActiveViewportIndex, getLayoutViewports, getViewportSpecificData],\n  (activeViewportIndex, layoutViewports, viewportSpecificData) => {\n    const activeContexts = ['VIEWER'];\n    const activeLayoutViewport = layoutViewports[activeViewportIndex] || {};\n    const activeViewportSpecificData =\n      viewportSpecificData[activeViewportIndex] || {};\n    const activeViewportPluginName =\n      activeLayoutViewport.plugin || activeViewportSpecificData.plugin;\n\n    if (activeViewportPluginName) {\n      const activeViewportExtension = `ACTIVE_VIEWPORT::${activeViewportPluginName.toUpperCase()}`;\n      activeContexts.push(activeViewportExtension);\n    }\n\n    return activeContexts;\n  }\n);\n","import OHIFLogo from '../components/OHIFLogo/OHIFLogo.js';\nimport React from 'react';\n\nconst defaultContextValues = {\n  createLogoComponentFn: React => OHIFLogo(),\n};\n\nconst WhiteLabelingContext = React.createContext(defaultContextValues);\n\nexport default WhiteLabelingContext;\n","import log from '../log.js';\n\n/**\n * The definition of a command\n *\n * @typedef {Object} CommandDefinition\n * @property {Function} commandFn - Command to call\n * @property {Array} storeContexts - Array of string of modules required from store\n * @property {Object} options - Object of params to pass action\n */\n\n/**\n * The Commands Manager tracks named commands (or functions) that are scoped to\n * a context. When we attempt to run a command with a given name, we look for it\n * in our active contexts. If found, we run the command, passing in any application\n * or call specific data specified in the command's definition.\n *\n * NOTE: A more robust version of the CommandsManager lives in v1. If you're looking\n * to extend this class, please check it's source before adding new methods.\n */\nexport class CommandsManager {\n  constructor({ getAppState, getActiveContexts } = {}) {\n    this.contexts = {};\n\n    if (!getAppState || !getActiveContexts) {\n      log.warn(\n        'CommandsManager was instantiated without getAppState() or getActiveContexts()'\n      );\n    }\n\n    this._getAppState = getAppState;\n    this._getActiveContexts = getActiveContexts;\n  }\n\n  /**\n   * Allows us to create commands \"per context\". An example would be the \"Cornerstone\"\n   * context having a `SaveImage` command, and the \"VTK\" context having a `SaveImage`\n   * command. The distinction of a context allows us to call the command in either\n   * context, and have faith that the correct command will be run.\n   *\n   * @method\n   * @param {string} contextName - Namespace for commands\n   * @returns {undefined}\n   */\n  createContext(contextName) {\n    if (!contextName) {\n      return;\n    }\n\n    if (this.contexts[contextName]) {\n      return this.clearContext(contextName);\n    }\n\n    this.contexts[contextName] = {};\n  }\n\n  /**\n   * Returns all command definitions for a given context\n   *\n   * @method\n   * @param {string} contextName - Namespace for commands\n   * @returns {Object} - the matched context\n   */\n  getContext(contextName) {\n    const context = this.contexts[contextName];\n\n    if (!context) {\n      return;\n    }\n\n    return context;\n  }\n\n  /**\n   * Clears all registered commands for a given context.\n   *\n   * @param {string} contextName - Namespace for commands\n   * @returns {undefined}\n   */\n  clearContext(contextName) {\n    if (!contextName) {\n      return;\n    }\n\n    this.contexts[contextName] = {};\n  }\n\n  /**\n   * Register a new command with the command manager. Scoped to a context, and\n   * with a definition to assist command callers w/ providing the necessary params\n   *\n   * @method\n   * @param {string} contextName - Namespace for command; often scoped to the extension that added it\n   * @param {string} commandName - Unique name identifying the command\n   * @param {CommandDefinition} definition - {@link CommandDefinition}\n   */\n  registerCommand(contextName, commandName, definition) {\n    if (typeof definition !== 'object') {\n      return;\n    }\n\n    const context = this.getContext(contextName);\n    if (!context) {\n      return;\n    }\n\n    context[commandName] = definition;\n  }\n\n  /**\n   * Finds a command with the provided name if it exists in the specified context,\n   * or a currently active context.\n   *\n   * @method\n   * @param {String} commandName - Command to find\n   * @param {String} [contextName] - Specific command to look in. Defaults to current activeContexts\n   */\n  getCommand(commandName, contextName) {\n    let contexts = [];\n\n    if (contextName) {\n      const context = this.getContext(contextName);\n      if (context) {\n        contexts.push(context);\n      }\n    } else {\n      const activeContexts = this._getActiveContexts();\n      activeContexts.forEach(activeContext => {\n        const context = this.getContext(activeContext);\n        if (context) {\n          contexts.push(context);\n        }\n      });\n    }\n\n    if (contexts.length === 0) {\n      return;\n    }\n\n    let foundCommand;\n    contexts.forEach(context => {\n      if (context[commandName]) {\n        foundCommand = context[commandName];\n      }\n    });\n\n    return foundCommand;\n  }\n\n  /**\n   *\n   * @method\n   * @param {String} commandName\n   * @param {Object} [options={}] - Extra options to pass the command. Like a mousedown event\n   * @param {String} [contextName]\n   */\n  runCommand(commandName, options = {}, contextName) {\n    const definition = this.getCommand(commandName, contextName);\n    if (!definition) {\n      log.warn(`Command \"${commandName}\" not found in current context`);\n      return;\n    }\n\n    const { commandFn, storeContexts = [] } = definition;\n    const definitionOptions = definition.options;\n\n    let commandParams = {};\n    const appState = this._getAppState();\n    storeContexts.forEach(context => {\n      commandParams[context] = appState[context];\n    });\n\n    commandParams = Object.assign(\n      {},\n      commandParams, // Required store contexts\n      definitionOptions, // \"Command configuration\"\n      options // \"Time of call\" info\n    );\n\n    if (typeof commandFn !== 'function') {\n      log.warn(`No commandFn was defined for command \"${commandName}\"`);\n      return;\n    } else {\n      return commandFn(commandParams);\n    }\n  }\n}\n\nexport default CommandsManager;\n","import hotkeys from './../utils/hotkeys';\nimport log from './../log.js';\n\n/**\n *\n *\n * @typedef {Object} HotkeyDefinition\n * @property {String} commandName - Command to call\n * @property {String} label - Display name for hotkey\n * @property {String[]} keys - Keys to bind; Follows Mousetrap.js binding syntax\n */\n\nexport class HotkeysManager {\n  constructor(commandsManager, servicesManager) {\n    this.hotkeyDefinitions = {};\n    this.hotkeyDefaults = [];\n    this.isEnabled = true;\n\n    if (!commandsManager) {\n      log.warn(\n        'HotkeysManager instantiated without a commandsManager. Hotkeys will be unable to find and run commands.'\n      );\n    }\n\n    this._servicesManager = servicesManager;\n    this._commandsManager = commandsManager;\n  }\n\n  /**\n   * Exposes Mousetrap.js's `.record` method, added by the record plugin.\n   *\n   * @param {*} event\n   */\n  record(event) {\n    return hotkeys.record(event);\n  }\n\n  /**\n   * Disables all hotkeys. Hotkeys added while disabled will not listen for\n   * input.\n   */\n  disable() {\n    this.isEnabled = false;\n    hotkeys.pause();\n  }\n\n  /**\n   * Enables all hotkeys.\n   */\n  enable() {\n    this.isEnabled = true;\n    hotkeys.unpause();\n  }\n\n  /**\n   * Registers a list of hotkeydefinitions.\n   *\n   * @param {HotkeyDefinition[] | Object} [hotkeyDefinitions=[]] Contains hotkeys definitions\n   */\n  setHotkeys(hotkeyDefinitions = []) {\n    try {\n      const definitions = this._getValidDefinitions(hotkeyDefinitions);\n\n      definitions.forEach(definition => this.registerHotkeys(definition));\n    } catch (error) {\n      const {\n        UINotificationService,\n        LoggerService,\n      } = this._servicesManager.services;\n      const message = 'Error while setting hotkeys';\n      LoggerService.error({ error, message });\n      UINotificationService.show({\n        title: 'Hotkeys Manager',\n        message,\n        type: 'error',\n        autoClose: false,\n      });\n    }\n  }\n\n  /**\n   * Set default hotkey bindings. These\n   * values are used in `this.restoreDefaultBindings`.\n   *\n   * @param {HotkeyDefinition[] | Object} [hotkeyDefinitions=[]] Contains hotkeys definitions\n   */\n  setDefaultHotKeys(hotkeyDefinitions = []) {\n    const definitions = this._getValidDefinitions(hotkeyDefinitions);\n\n    this.hotkeyDefaults = definitions;\n  }\n\n  /**\n   * Take hotkey definitions that can be an array or object and make sure that it\n   * returns an array of hotkeys\n   *\n   * @param {HotkeyDefinition[] | Object} [hotkeyDefinitions=[]] Contains hotkeys definitions\n   */\n  _getValidDefinitions(hotkeyDefinitions) {\n    const definitions = Array.isArray(hotkeyDefinitions)\n      ? [...hotkeyDefinitions]\n      : this._parseToArrayLike(hotkeyDefinitions);\n\n    return definitions;\n  }\n\n  /**\n   * It parses given object containing hotkeyDefinition to array like.\n   * Each property of given object will be mapped to an object of an array. And its property name will be the value of a property named as commandName\n   *\n   * @param {HotkeyDefinition[] | Object} [hotkeyDefinitions={}] Contains hotkeys definitions\n   * @returns {HotkeyDefinition[]}\n   */\n  _parseToArrayLike(hotkeyDefinitionsObj = {}) {\n    const copy = { ...hotkeyDefinitionsObj };\n    return Object.entries(copy).map(entryValue =>\n      this._parseToHotKeyObj(entryValue[0], entryValue[1])\n    );\n  }\n\n  /**\n   * Return HotkeyDefinition object like based on given property name and property value\n   * @param {string} propertyName property name of hotkey definition object\n   * @param {object} propertyValue property value of hotkey definition object\n   *\n   * @example\n   *\n   * const hotKeyObj = {hotKeyDefA: {keys:[],....}}\n   *\n   * const parsed = _parseToHotKeyObj(Object.keys(hotKeyDefA)[0], hotKeyObj[hotKeyDefA]);\n   *  {\n   *   commandName: hotKeyDefA,\n   *   keys: [],\n   *   ....\n   *  }\n   *\n   */\n  _parseToHotKeyObj(propertyName, propertyValue) {\n    return {\n      commandName: propertyName,\n      ...propertyValue,\n    };\n  }\n\n  /**\n   * (unbinds and) binds the specified command to one or more key combinations.\n   * When a hotkey combination is triggered, the command name and active contexts\n   * are used to locate the correct command to call.\n   *\n   * @param {HotkeyDefinition} commandName\n   * @param {String} extension\n   * @returns {undefined}\n   */\n  registerHotkeys({ commandName, keys, label } = {}, extension) {\n    if (!commandName) {\n      log.warn(`No command was defined for hotkey \"${keys}\"`);\n      return;\n    }\n\n    const previouslyRegisteredDefinition = this.hotkeyDefinitions[commandName];\n\n    if (previouslyRegisteredDefinition) {\n      const previouslyRegisteredKeys = previouslyRegisteredDefinition.keys;\n      this._unbindHotkeys(commandName, previouslyRegisteredKeys);\n      log.info(`Unbinding ${commandName} from ${previouslyRegisteredKeys}`);\n    }\n\n    // Set definition & bind\n    this.hotkeyDefinitions[commandName] = { keys, label };\n    this._bindHotkeys(commandName, keys);\n    log.info(`Binding ${commandName} to ${keys}`);\n  }\n\n  /**\n   * Uses most recent\n   *\n   * @returns {undefined}\n   */\n  restoreDefaultBindings() {\n    this.setHotkeys(this.hotkeyDefaults);\n  }\n\n  /**\n   *\n   */\n  destroy() {\n    this.hotkeyDefaults = [];\n    this.hotkeyDefinitions = {};\n    hotkeys.reset();\n  }\n\n  /**\n   * Binds one or more set of hotkey combinations for a given command\n   *\n   * @private\n   * @param {string} commandName - The name of the command to trigger when hotkeys are used\n   * @param {string[]} keys - One or more key combinations that should trigger command\n   * @returns {undefined}\n   */\n  _bindHotkeys(commandName, keys) {\n    const isKeyDefined = keys === '' || keys === undefined;\n    if (isKeyDefined) {\n      return;\n    }\n\n    const isKeyArray = keys instanceof Array;\n    const combinedKeys = isKeyArray ? keys.join('+') : keys;\n\n    hotkeys.bind(combinedKeys, evt => {\n      evt.preventDefault();\n      evt.stopPropagation();\n      this._commandsManager.runCommand(commandName, { evt });\n    });\n  }\n\n  /**\n   * unbinds one or more set of hotkey combinations for a given command\n   *\n   * @private\n   * @param {string} commandName - The name of the previously bound command\n   * @param {string[]} keys - One or more sets of previously bound keys\n   * @returns {undefined}\n   */\n  _unbindHotkeys(commandName, keys) {\n    const isKeyDefined = keys !== '' && keys !== undefined;\n    if (!isKeyDefined) {\n      return;\n    }\n\n    const isKeyArray = keys instanceof Array;\n    if (isKeyArray) {\n      const combinedKeys = keys.join('+');\n      this._unbindHotkeys(commandName, combinedKeys);\n      return;\n    }\n\n    hotkeys.unbind(keys);\n  }\n}\n\nexport default HotkeysManager;\n\n// Commands Contexts:\n\n// --> Name and Priority\n// GLOBAL: 0\n// VIEWER::CORNERSTONE: 1\n// VIEWER::VTK: 1\n","export const CodeNameCodeSequenceValues = {\n  ImagingMeasurementReport: '126000',\n  ImageLibrary: '111028',\n  ImagingMeasurements: '126010',\n  MeasurementGroup: '125007',\n  ImageLibraryGroup: '126200',\n  TrackingUniqueIdentifier: '112040',\n  TrackingIdentifier: '112039',\n  Finding: '121071',\n  FindingSite: 'G-C0E3', // SRT\n  CornerstoneFreeText: 'CORNERSTONEFREETEXT', // CST4\n  Score: '246262008',\n};\n\nexport const RELATIONSHIP_TYPE = {\n  INFERRED_FROM: 'INFERRED FROM',\n  SELECTED_FROM: 'SELECTED FROM',\n};\n\nexport const CodingSchemeDesignators = {\n  SRT: 'SRT',\n  cornerstoneTools4: 'CST4',\n};\n\nexport default {\n  CodeNameCodeSequenceValues,\n  RELATIONSHIP_TYPE,\n  CodingSchemeDesignators,\n};\n","const getSequenceAsArray = sequence =>\n  Array.isArray(sequence) ? sequence : [sequence];\n\nexport default getSequenceAsArray;\n","const getLabelFromMeasuredValueSequence = (\n  ConceptNameCodeSequence,\n  MeasuredValueSequence\n) => {\n  const { CodeMeaning } = ConceptNameCodeSequence;\n  const { NumericValue, MeasurementUnitsCodeSequence } = MeasuredValueSequence;\n  const { CodeValue } = MeasurementUnitsCodeSequence;\n\n  const formatedNumericValue = NumericValue\n    ? Number(NumericValue).toFixed(1)\n    : '';\n\n  return {\n    label: CodeMeaning,\n    value: `${formatedNumericValue} ${CodeValue}`,\n  }; // E.g. Long Axis: 31.0 mm\n};\n\nexport default getLabelFromMeasuredValueSequence;\n","const getCoordsFromSCOORDOrSCOORD3D = graphicItem => {\n  const { ValueType, GraphicType, GraphicData } = graphicItem;\n  const coords = { ValueType, GraphicType, GraphicData };\n\n  if (ValueType === 'SCOORD') {\n    const { ReferencedSOPSequence } = graphicItem.ContentSequence;\n    coords.ReferencedSOPSequence = ReferencedSOPSequence;\n  } else if (ValueType === 'SCOORD3D') {\n    if (graphicItem.ReferencedFrameOfReferenceUID) {\n      coords.ReferencedFrameOfReferenceSequence =\n        graphicItem.ReferencedFrameOfReferenceUID;\n    } else if (graphicItem.ContentSequence) {\n      const {\n        ReferencedFrameOfReferenceSequence,\n      } = graphicItem.ContentSequence;\n      coords.ReferencedFrameOfReferenceSequence = ReferencedFrameOfReferenceSequence;\n    }\n  }\n\n  return coords;\n};\n\nexport default getCoordsFromSCOORDOrSCOORD3D;\n","import getLabelFromMeasuredValueSequence from './getLabelFromMeasuredValueSequence';\nimport getCoordsFromSCOORDOrSCOORD3D from './getCoordsFromSCOORDOrSCOORD3D';\nimport { RELATIONSHIP_TYPE, CodeNameCodeSequenceValues } from '../enums';\n\n/**\n * TID 1410 Planar ROI Measurements and Qualitative Evaluations.\n *\n * @param {*} contentSequence\n * @returns\n */\nconst processTID1410Measurement = contentSequence => {\n  // Need to deal with TID 1410 style measurements, which will have a SCOORD or SCOORD3D at the top level,\n  // And non-geometric representations where each NUM has \"INFERRED FROM\" SCOORD/SCOORD3D\n\n  const graphicItem = contentSequence.find(\n    group => group.ValueType === 'SCOORD' || group.ValueType === 'SCOORD3D'\n  );\n\n  if (!graphicItem) {\n    console.warn(\n      `graphic ValueType ${graphicItem.ValueType} not currently supported, skipping annotation.`\n    );\n    return;\n  }\n\n  const UIDREFContentItem = contentSequence.find(\n    group => group.ValueType === 'UIDREF'\n  );\n\n  const TrackingIdentifierContentItem = contentSequence.find(\n    item =>\n      item.ConceptNameCodeSequence.CodeValue ===\n      CodeNameCodeSequenceValues.TrackingIdentifier\n  );\n\n  const NUMContentItems = contentSequence.filter(\n    group => group.ValueType === 'NUM'\n  );\n\n  const measurement = {\n    loaded: false,\n    labels: [],\n    coords: [getCoordsFromSCOORDOrSCOORD3D(graphicItem)],\n    TrackingUniqueIdentifier: UIDREFContentItem.UID,\n    TrackingIdentifier: TrackingIdentifierContentItem.TextValue,\n  };\n\n  NUMContentItems.forEach(item => {\n    const {\n      ConceptNameCodeSequence,\n      ContentSequence,\n      MeasuredValueSequence,\n    } = item;\n\n    if (\n      item.ConceptNameCodeSequence.CodeValue ===\n      CodeNameCodeSequenceValues.Score\n    ) {\n      ContentSequence.forEach(item => {\n        if (\n          [\n            RELATIONSHIP_TYPE.SELECTED_FROM,\n            RELATIONSHIP_TYPE.INFERRED_FROM,\n          ].includes(item.RelationshipType)\n        ) {\n          if (item.ReferencedSOPSequence) {\n            measurement.coords.forEach(coord => {\n              coord.ReferencedSOPSequence = item.ReferencedSOPSequence;\n            });\n          }\n        }\n      });\n    }\n\n    if (MeasuredValueSequence) {\n      measurement.labels.push(\n        getLabelFromMeasuredValueSequence(\n          ConceptNameCodeSequence,\n          MeasuredValueSequence\n        )\n      );\n    }\n  });\n\n  return measurement;\n};\n\nexport default processTID1410Measurement;\n","export default {\n  TEXT: 'TEXT',\n  POINT: 'POINT',\n  MULTIPOINT: 'MULTIPOINT',\n  POLYLINE: 'POLYLINE',\n  CIRCLE: 'CIRCLE',\n  ELLIPSE: 'ELLIPSE',\n  POLYGON: 'POLYGON',\n};\n","import getLabelFromMeasuredValueSequence from './getLabelFromMeasuredValueSequence';\nimport getCoordsFromSCOORDOrSCOORD3D from './getCoordsFromSCOORDOrSCOORD3D';\nimport { CodeNameCodeSequenceValues, CodingSchemeDesignators } from '../enums';\nimport SCOORD_TYPES from '../constants/scoordTypes';\n\nconst CORNERSTONE_FREETEXT_CODE_VALUE = 'CORNERSTONEFREETEXT';\n\nconst processNonGeometricallyDefinedMeasurement = contentSequence => {\n  const NUMContentItems = contentSequence.filter(\n    group => group.ValueType === 'NUM'\n  );\n\n  const CODEContentItems = contentSequence.filter(\n    group => group.ValueType === 'CODE'\n  );\n\n  const UIDREFContentItem = contentSequence.find(\n    group => group.ValueType === 'UIDREF'\n  );\n\n  const IMAGEContentItem = contentSequence.find(\n    group => group.ValueType === 'IMAGE'\n  );\n\n  const TrackingIdentifierContentItem = contentSequence.find(\n    item =>\n      item.ConceptNameCodeSequence.CodeValue ===\n      CodeNameCodeSequenceValues.TrackingIdentifier\n  );\n\n  const Finding = contentSequence.find(\n    item =>\n      item.ConceptNameCodeSequence.CodeValue ===\n      CodeNameCodeSequenceValues.Finding\n  );\n\n  const FindingSites = contentSequence.filter(\n    item =>\n      item.ConceptNameCodeSequence.CodingSchemeDesignator ===\n        CodingSchemeDesignators.SRT &&\n      item.ConceptNameCodeSequence.CodeValue ===\n        CodeNameCodeSequenceValues.FindingSite\n  );\n\n  const measurement = {\n    loaded: false,\n    labels: [],\n    coords: [],\n    TrackingUniqueIdentifier: UIDREFContentItem.UID,\n    TrackingIdentifier: TrackingIdentifierContentItem.TextValue,\n  };\n\n  if (\n    Finding &&\n    Finding.ConceptCodeSequence.CodingSchemeDesignator ===\n      CodingSchemeDesignators.cornerstoneTools4 &&\n    Finding.ConceptCodeSequence.CodeValue ===\n      CodeNameCodeSequenceValues.CornerstoneFreeText\n  ) {\n    measurement.labels.push({\n      label: CORNERSTONE_FREETEXT_CODE_VALUE,\n      value: Finding.ConceptCodeSequence.CodeMeaning,\n    });\n  }\n\n  // TODO -> Eventually hopefully support SNOMED or some proper code library, just free text for now.\n  if (FindingSites.length) {\n    const cornerstoneFreeTextFindingSite = FindingSites.find(\n      FindingSite =>\n        FindingSite.ConceptCodeSequence.CodingSchemeDesignator ===\n          CodingSchemeDesignators.cornerstoneTools4 &&\n        FindingSite.ConceptCodeSequence.CodeValue ===\n          CodeNameCodeSequenceValues.CornerstoneFreeText\n    );\n\n    if (cornerstoneFreeTextFindingSite) {\n      measurement.labels.push({\n        label: CORNERSTONE_FREETEXT_CODE_VALUE,\n        value: cornerstoneFreeTextFindingSite.ConceptCodeSequence.CodeMeaning,\n      });\n    }\n  }\n\n  NUMContentItems.forEach(item => {\n    const {\n      ConceptNameCodeSequence,\n      ContentSequence,\n      MeasuredValueSequence,\n    } = item;\n\n    if (!ContentSequence) {\n      console.warn(`Graphic ${ContentSequence} missing, skipping annotation.`);\n\n      return;\n    }\n\n    const { ValueType } = ContentSequence;\n\n    if (!ValueType === 'SCOORD' && !ValueType === 'SCOORD3D') {\n      console.warn(\n        `Graphic ${ValueType} not currently supported, skipping annotation.`\n      );\n\n      return;\n    }\n\n    const coords = getCoordsFromSCOORDOrSCOORD3D(ContentSequence);\n\n    if (coords) {\n      measurement.coords.push(coords);\n    }\n\n    if (MeasuredValueSequence) {\n      measurement.labels.push(\n        getLabelFromMeasuredValueSequence(\n          ConceptNameCodeSequence,\n          MeasuredValueSequence\n        )\n      );\n    }\n  });\n\n  if (NUMContentItems.length === 0 && IMAGEContentItem) {\n    CODEContentItems.forEach(item => {\n      const { ConceptCodeSequence, ConceptNameCodeSequence } = item;\n\n      if (!ConceptCodeSequence || !ConceptNameCodeSequence) {\n        console.warn(`Graphic missing, skipping annotation.`);\n\n        return;\n      }\n\n      const GraphicData = [0, 0];\n      const GraphicType = SCOORD_TYPES.TEXT;\n      const { ValueType } = item;\n      const ReferencedSOPSequence = IMAGEContentItem.ReferencedSOPSequence;\n      const coord = {\n        ValueType,\n        GraphicType,\n        GraphicData,\n        ReferencedSOPSequence,\n      };\n      measurement.coords.push(coord);\n      measurement.labels.push({\n        label: ConceptNameCodeSequence.CodeMeaning,\n        labelCodingSchemeDesignator:\n          ConceptNameCodeSequence.CodingSchemeDesignator,\n        value: ConceptCodeSequence.CodeMeaning,\n        valueCodingSchemeDesignator: ConceptCodeSequence.CodingSchemeDesignator,\n      });\n    });\n  }\n\n  return measurement;\n};\n\nexport default processNonGeometricallyDefinedMeasurement;\n","import processTID1410Measurement from './processTID1410Measurement';\nimport processNonGeometricallyDefinedMeasurement from './processNonGeometricallyDefinedMeasurement';\n\nconst processMeasurement = contentSequence => {\n  if (\n    contentSequence.some(\n      group => group.ValueType === 'SCOORD' || group.ValueType === 'SCOORD3D'\n    )\n  ) {\n    return processTID1410Measurement(contentSequence);\n  }\n\n  return processNonGeometricallyDefinedMeasurement(contentSequence);\n};\n\nexport default processMeasurement;\n","import { CodeNameCodeSequenceValues } from '../enums';\nimport getSequenceAsArray from './getSequenceAsArray';\nimport getMergedContentSequencesByTrackingUniqueIdentifiers from './getMergedContentSequencesByTrackingUniqueIdentifiers';\nimport processMeasurement from './processMeasurement';\n\nconst getMeasurements = ImagingMeasurementReportContentSequence => {\n  const ImagingMeasurements = ImagingMeasurementReportContentSequence.find(\n    item =>\n      item.ConceptNameCodeSequence.CodeValue ===\n      CodeNameCodeSequenceValues.ImagingMeasurements\n  );\n\n  const MeasurementGroups = getSequenceAsArray(\n    ImagingMeasurements.ContentSequence\n  ).filter(\n    item =>\n      item.ConceptNameCodeSequence.CodeValue ===\n      CodeNameCodeSequenceValues.MeasurementGroup\n  );\n\n  /* const mergedContentSequencesByTrackingUniqueIdentifiers = getMergedContentSequencesByTrackingUniqueIdentifiers(\n    MeasurementGroups\n  );*/\n\n  let measurements = [];\n\n  MeasurementGroups.forEach(MeasurementGroup => {\n    const contentSequence = MeasurementGroup.ContentSequence;\n    const measurement = processMeasurement(contentSequence);\n    if (measurement) {\n      measurements.push(measurement);\n    }\n  });\n\n  return measurements;\n};\n\nexport default getMeasurements;\n","import getSequenceAsArray from './getSequenceAsArray';\nimport { CodeNameCodeSequenceValues } from '../enums';\n\nconst getReferencedImagesList = ImagingMeasurementReportContentSequence => {\n  const referencedImages = [];\n\n  const ImageLibrary = ImagingMeasurementReportContentSequence.find(\n    item =>\n      item.ConceptNameCodeSequence.CodeValue ===\n        CodeNameCodeSequenceValues.ImageLibrary ||\n      item.ConceptNameCodeSequence.CodeValue ===\n        CodeNameCodeSequenceValues.ImagingMeasurements\n  );\n\n  if (!ImageLibrary || !ImageLibrary.ContentSequence) {\n    return referencedImages;\n  }\n\n  const ImageLibraryGroup = getSequenceAsArray(\n    ImageLibrary.ContentSequence\n  ).find(\n    item =>\n      item.ConceptNameCodeSequence.CodeValue ===\n        CodeNameCodeSequenceValues.ImageLibraryGroup ||\n      item.ConceptNameCodeSequence.CodeValue ===\n        CodeNameCodeSequenceValues.MeasurementGroup\n  );\n\n  if (!ImageLibraryGroup || !ImageLibraryGroup.ContentSequence) {\n    return referencedImages;\n  }\n\n  getSequenceAsArray(ImageLibraryGroup.ContentSequence).forEach(item => {\n    const { ReferencedSOPSequence } = item;\n    if (ReferencedSOPSequence) {\n      const {\n        ReferencedSOPClassUID,\n        ReferencedSOPInstanceUID,\n      } = ReferencedSOPSequence;\n\n      referencedImages.push({\n        ReferencedSOPClassUID,\n        ReferencedSOPInstanceUID,\n      });\n    }\n  });\n\n  return referencedImages;\n};\n\nexport default getReferencedImagesList;\n","import { adapters } from 'dcmjs';\n\nconst cornerstoneAdapters = adapters.Cornerstone;\n\n/**\n * Checks if the given `displaySet`can be rehydrated into the `MeasurementService`.\n *\n * @param {object} displaySet The SR `displaySet` to check.\n * @param {object[]} mappings The CornerstoneTools 4 mappings to the `MeasurementService`.\n * @returns {boolean} True if the SR can be rehydrated into the `MeasurementService`.\n */\nexport default function isRehydratable(displaySet, mappings) {\n  if (!mappings || !mappings.length) {\n    return false;\n  }\n\n  const mappingDefinitions = mappings.map(m => m.definition);\n  const { measurements } = displaySet;\n\n  const adapterKeys = Object.keys(cornerstoneAdapters).filter(\n    adapterKey =>\n      typeof cornerstoneAdapters[adapterKey]\n        .isValidCornerstoneTrackingIdentifier === 'function'\n  );\n\n  const adapters = [];\n\n  adapterKeys.forEach(key => {\n    if (mappingDefinitions.includes(key)) {\n      // Must have both a dcmjs adapter and a MeasurementService\n      // Definition in order to be a candidate for import.\n      adapters.push(cornerstoneAdapters[key]);\n    }\n  });\n\n  for (let i = 0; i < measurements.length; i++) {\n    const TrackingIdentifier = measurements[i].TrackingIdentifier;\n    const hydratable = adapters.some(adapter =>\n      adapter.isValidCornerstoneTrackingIdentifier(TrackingIdentifier)\n    );\n\n    if (hydratable) {\n      return true;\n    }\n  }\n\n  return false;\n}\n","const TOOL_NAMES = {\n  DICOM_SR_DISPLAY_TOOL: 'DICOMSRDisplayTool',\n};\n\nexport default TOOL_NAMES;\n","import csMath from 'cornerstone-math';\nimport SCOORD_TYPES from '../constants/scoordTypes';\nimport { inv } from 'mathjs';\n\nconst getRenderableData = (\n  GraphicType,\n  GraphicData,\n  ValueType,\n  imageMetadata\n) => {\n  let renderableData;\n\n  const orientation = imageMetadata.ImageOrientationPatient;\n  const position = imageMetadata.ImagePositionPatient;\n  const pixelSpacing = imageMetadata.PixelSpacing;\n  const sliceSpacing = imageMetadata.SliceThickness\n    ? imageMetadata.SliceThickness\n    : 1;\n  //  https://nipy.org/nibabel/dicom/dicom_orientation.html\n  const M = [\n    [\n      orientation[0] * pixelSpacing[0],\n      orientation[3] * pixelSpacing[1],\n      sliceSpacing,\n      position[0],\n    ],\n    [\n      orientation[1] * pixelSpacing[0],\n      orientation[4] * pixelSpacing[1],\n      sliceSpacing,\n      position[1],\n    ],\n    [\n      orientation[2] * pixelSpacing[0],\n      orientation[5] * pixelSpacing[1],\n      sliceSpacing,\n      position[2],\n    ],\n    [0, 0, 0, 1],\n  ];\n\n  // we need to go from 3D to pixel (cornerstone2D works in pixel coordinates),\n  // we take the inverse.\n  const M1 = inv(M);\n\n  const worldToIJK = (point, M1) => {\n    const worldPoint = {\n      x:\n        M1[0][0] * point.x + M1[0][1] * point.y + M1[0][2] * point.z + M1[0][3],\n      y:\n        M1[1][0] * point.x + M1[1][1] * point.y + M1[1][2] * point.z + M1[1][3],\n      z:\n        M1[2][0] * point.x + M1[2][1] * point.y + M1[2][2] * point.z + M1[2][3],\n    };\n    return worldPoint;\n  };\n\n  // https://dicom.innolitics.com/ciods/procedure-log/sr-document-content/00700023\n  switch (GraphicType) {\n    case SCOORD_TYPES.TEXT:\n      renderableData = [{ x: GraphicData[0], y: GraphicData[1] }];\n\n      break;\n    case SCOORD_TYPES.POINT:\n      renderableData = [];\n\n      if (ValueType === 'SCOORD3D') {\n        for (let i = 0; i < GraphicData.length; i += 3) {\n          const point = {\n            x: GraphicData[i],\n            y: GraphicData[i + 1],\n            z: GraphicData[i + 2],\n          };\n\n          renderableData.push(worldToIJK(point, M1));\n        }\n      } else {\n        for (let i = 0; i < GraphicData.length; i += 2) {\n          renderableData.push({ x: GraphicData[i], y: GraphicData[i + 1] });\n        }\n      }\n\n      break;\n    case SCOORD_TYPES.MULTIPOINT:\n      renderableData = [];\n\n      if (ValueType === 'SCOORD3D') {\n        for (let i = 0; i < GraphicData.length; i += 3) {\n          const point = {\n            x: GraphicData[i],\n            y: GraphicData[i + 1],\n            z: GraphicData[i + 2],\n          };\n\n          renderableData.push(worldToIJK(point, M1));\n        }\n      } else {\n        for (let i = 0; i < GraphicData.length; i += 2) {\n          renderableData.push({ x: GraphicData[i], y: GraphicData[i + 1] });\n        }\n      }\n\n      break;\n    case SCOORD_TYPES.POLYLINE:\n      renderableData = [];\n\n      if (ValueType === 'SCOORD3D') {\n        for (let i = 0; i < GraphicData.length; i += 3) {\n          const point = {\n            x: GraphicData[i],\n            y: GraphicData[i + 1],\n            z: GraphicData[i + 2],\n          };\n\n          renderableData.push(worldToIJK(point, M1));\n        }\n      } else {\n        for (let i = 0; i < GraphicData.length; i += 2) {\n          renderableData.push({ x: GraphicData[i], y: GraphicData[i + 1] });\n        }\n      }\n\n      break;\n    case SCOORD_TYPES.POLYGON:\n      // this is only scoord3d\n      renderableData = [];\n      for (let i = 0; i < GraphicData.length; i += 3) {\n        const point = {\n          x: GraphicData[i],\n          y: GraphicData[i + 1],\n          z: GraphicData[i + 2],\n        };\n\n        renderableData.push(worldToIJK(point, M1));\n      }\n      break;\n    case SCOORD_TYPES.CIRCLE: {\n      // this is only scoord\n      const center = { x: GraphicData[0], y: GraphicData[1] };\n      const onPerimeter = { x: GraphicData[2], y: GraphicData[3] };\n\n      const radius = csMath.point.distance(center, onPerimeter);\n\n      renderableData = {\n        center,\n        radius,\n      };\n      break;\n    }\n    case SCOORD_TYPES.ELLIPSE: {\n      console.warn('ROTATED ELLIPSE NOT YET SUPPORTED!');\n      // To Do: scoord3d ellips, need data for testing\n      const majorAxis = [\n        { x: GraphicData[0], y: GraphicData[1] },\n        { x: GraphicData[2], y: GraphicData[3] },\n      ];\n      const minorAxis = [\n        { x: GraphicData[4], y: GraphicData[5] },\n        { x: GraphicData[6], y: GraphicData[7] },\n      ];\n\n      // Calculate two opposite corners of box defined by two axes.\n\n      const minorAxisLength = csMath.point.distance(minorAxis[0], minorAxis[1]);\n\n      const minorAxisDirection = {\n        x: (minorAxis[1].x - minorAxis[0].x) / minorAxisLength,\n        y: (minorAxis[1].y - minorAxis[0].y) / minorAxisLength,\n      };\n\n      const halfMinorAxisLength = minorAxisLength / 2;\n\n      // First end point of major axis + half minor axis vector\n      const corner1 = {\n        x: majorAxis[0].x + minorAxisDirection.x * halfMinorAxisLength,\n        y: majorAxis[0].y + minorAxisDirection.y * halfMinorAxisLength,\n      };\n\n      // Second end point of major axis - half of minor axis vector\n      const corner2 = {\n        x: majorAxis[1].x - minorAxisDirection.x * halfMinorAxisLength,\n        y: majorAxis[1].y - minorAxisDirection.y * halfMinorAxisLength,\n      };\n\n      renderableData = {\n        corner1,\n        corner2,\n      };\n      break;\n    }\n  }\n\n  return renderableData;\n};\n\nexport default getRenderableData;\n","import csTools from 'cornerstone-tools';\nimport OHIF from '../../../';\n\n/** Internal imports */\nimport TOOL_NAMES from '../constants/toolNames';\nimport getRenderableData from './getRenderableData';\n\nconst globalImageIdSpecificToolStateManager =\n  csTools.globalImageIdSpecificToolStateManager;\n\n/**\n * Add a measurement to a display set.\n *\n * @param {*} measurement\n * @param {*} imageId\n * @param {*} displaySetInstanceUID\n */\nexport default function addMeasurement(\n  measurement,\n  imageId,\n  imageMetadata,\n  displaySetInstanceUID\n) {\n  // TODO -> Render rotated ellipse .\n  const toolName = TOOL_NAMES.DICOM_SR_DISPLAY_TOOL;\n\n  const measurementData = {\n    TrackingUniqueIdentifier: measurement.TrackingUniqueIdentifier,\n    TrackingIdentifier: measurement.TrackingIdentifier,\n    renderableData: {},\n    labels: measurement.labels,\n    isSRText: measurement.isSRText,\n  };\n\n  measurement.coords.forEach(coord => {\n    const { GraphicType, GraphicData, ValueType } = coord;\n\n    if (measurementData.renderableData[GraphicType] === undefined) {\n      measurementData.renderableData[GraphicType] = [];\n    }\n    measurementData.renderableData[GraphicType].push(\n      getRenderableData(GraphicType, GraphicData, ValueType, imageMetadata)\n    );\n  });\n\n  const toolState = globalImageIdSpecificToolStateManager.saveToolState();\n\n  if (toolState[imageId] === undefined) {\n    toolState[imageId] = {};\n  }\n\n  const imageIdToolState = toolState[imageId];\n\n  // If we don't have tool state for this type of tool, add an empty object\n  if (imageIdToolState[toolName] === undefined) {\n    imageIdToolState[toolName] = {\n      data: [],\n    };\n  }\n\n  const toolData = imageIdToolState[toolName];\n\n  measurementData.description = `Read-only annotation`;\n  measurementData.isReadOnly = true;\n  toolData.data.push(measurementData);\n\n  addToMeasurementApi({ measurementData, toolName, imageId });\n\n  measurement.loaded = true;\n  measurement.imageId = imageId;\n  measurement.displaySetInstanceUID = displaySetInstanceUID;\n\n  // Remove the unneeded coord now its processed, but keep the SOPInstanceUID.\n  // NOTE: We assume that each SCOORD in the MeasurementGroup maps onto one frame,\n  // It'd be super werid if it didn't anyway as a SCOORD.\n  measurement.ReferencedSOPInstanceUID =\n    measurement.coords[0].ReferencedSOPSequence.ReferencedSOPInstanceUID;\n\n  return measurement;\n}\n\nconst addToMeasurementApi = ({ measurementData, toolName, imageId }) => {\n  const measurementApi = OHIF.measurements.MeasurementApi.Instance;\n\n  const toolType = toolName;\n  const collection = measurementApi.tools[toolType];\n  if (!collection) return;\n  if (!measurementData || measurementData.cancelled) return;\n\n  const imageAttributes = OHIF.measurements.getImageAttributes(null, imageId);\n  const measurement = Object.assign({}, measurementData, imageAttributes, {\n    lesionNamingNumber: measurementData.lesionNamingNumber,\n    userId: OHIF.user.getUserId(),\n    toolType,\n  });\n\n  const addedMeasurement = measurementApi.addMeasurement(toolType, measurement);\n  Object.assign(measurementData, addedMeasurement);\n\n  const measurementLabel = OHIF.measurements.getLabel(measurementData);\n  if (measurementLabel) {\n    measurementData.labels = [measurementLabel];\n  }\n};\n","import { ImageSet } from '../../classes';\nimport getMeasurements from './utils/getMeasurements';\nimport getReferencedImagesList from './utils/getReferencedImagesList';\nimport isRehydratable from './utils/isRehydratable';\nimport addMeasurement from './utils/addMeasurement';\n\nconst parseSCOORD3D = ({ servicesManager, displaySets }) => {\n  const { MeasurementService } = servicesManager.services;\n\n  const srDisplaySets = displaySets.filter(ds => ds.Modality === 'SR');\n  const imageDisplaySets = displaySets.filter(\n    ds =>\n      ds.Modality !== 'SR' &&\n      ds.Modality !== 'SEG' &&\n      ds.Modality !== 'RTSTRUCT'\n  );\n\n  imageDisplaySets.forEach(imageDisplaySet => {\n    imageDisplaySet.SRLabels = [];\n  });\n\n  srDisplaySets.forEach(srDisplaySet => {\n    const firstInstance = srDisplaySet.metadata;\n    if (!firstInstance) {\n      return;\n    }\n\n    const { ContentSequence } = firstInstance;\n\n    srDisplaySet.referencedImages = getReferencedImagesList(ContentSequence);\n    srDisplaySet.measurements = getMeasurements(ContentSequence);\n    const mappings = MeasurementService.getSourceMappings(\n      'CornerstoneTools',\n      '4'\n    );\n\n    srDisplaySet.isHydrated = false;\n    srDisplaySet.isRehydratable = isRehydratable(srDisplaySet, mappings);\n    srDisplaySet.isLoaded = true;\n\n    imageDisplaySets.forEach(imageDisplaySet => {\n      // Check currently added displaySets and add measurements if the sources exist.\n      checkIfCanAddMeasurementsToDisplaySet(srDisplaySet, imageDisplaySet);\n    });\n  });\n};\n\nconst checkIfCanAddMeasurementsToDisplaySet = (\n  srDisplaySet,\n  imageDisplaySet\n) => {\n  let measurements = srDisplaySet.measurements;\n\n  /**\n   * Look for image sets.\n   * This also filters out _this_ displaySet, as it is not an image set.\n   */\n  if (!(imageDisplaySet instanceof ImageSet)) {\n    return;\n  }\n\n  const { sopClassUIDs, images } = imageDisplaySet;\n\n  /**\n   * Filter measurements that references the correct sop class.\n   */\n  measurements = measurements.filter(measurement => {\n    return measurement.coords.some(coord => {\n      if (coord.ReferencedSOPSequence === undefined) {\n        /** we miss the referenced information. We can compare the annotation SCOORD3D coordinates with\n         * the ImagePatientPosition of the frames. However (WARNING!!!),\n         * if more than a source series is present, this logic can find the wrong frame\n         * (i.e. two source series, with the same frameOfReferenceUID,\n         * that have each a frame with the same ImagePositionPatient of the annotation 3D coordinates)\n         */\n        for (let i = 0; i < images.length; ++i) {\n          const imageMetadata = images[i].getData().metadata;\n          if (\n            imageMetadata.FrameOfReferenceUID !==\n            coord.ReferencedFrameOfReferenceSequence\n          ) {\n            continue;\n          }\n\n          let sliceNormal = [0, 0, 0];\n          const orientation = imageMetadata.ImageOrientationPatient;\n          sliceNormal[0] =\n            orientation[1] * orientation[5] - orientation[2] * orientation[4];\n          sliceNormal[1] =\n            orientation[2] * orientation[3] - orientation[0] * orientation[5];\n          sliceNormal[2] =\n            orientation[0] * orientation[4] - orientation[1] * orientation[3];\n\n          let distanceAlongNormal = 0;\n          for (let j = 0; j < 3; ++j) {\n            distanceAlongNormal +=\n              sliceNormal[j] * imageMetadata.ImagePositionPatient[j];\n          }\n\n          // assuming 1 mm tolerance\n          if (Math.abs(distanceAlongNormal - coord.GraphicData[2]) > 1) {\n            continue;\n          }\n\n          coord.ReferencedSOPSequence = {\n            ReferencedSOPClassUID: imageMetadata.SOPClassUID,\n            ReferencedSOPInstanceUID: imageMetadata.SOPInstanceUID,\n          };\n\n          break;\n        }\n\n        if (coord.ReferencedSOPSequence === undefined) {\n          return false;\n        }\n      }\n\n      return sopClassUIDs.includes(\n        coord.ReferencedSOPSequence.ReferencedSOPClassUID\n      );\n    });\n  });\n\n  /**\n   * New display set doesn't have measurements that references the correct sop class.\n   */\n  if (measurements.length === 0) {\n    return;\n  }\n\n  const imageIds = images.map(i => i.getImageId());\n  const SOPInstanceUIDs = images.map(i => i.SOPInstanceUID);\n  const colors = new Map();\n  measurements.forEach(measurement => {\n    const { coords } = measurement;\n    coords.forEach((coord, index) => {\n      if (coord.ReferencedSOPSequence !== undefined) {\n        const imageIndex = SOPInstanceUIDs.findIndex(\n          SOPInstanceUID =>\n            SOPInstanceUID ===\n            coord.ReferencedSOPSequence.ReferencedSOPInstanceUID\n        );\n        if (imageIndex > -1) {\n          if (!srDisplaySet.referencedDisplaySets.includes(imageDisplaySet)) {\n            srDisplaySet.referencedDisplaySets.push(imageDisplaySet);\n          }\n\n          const imageId = imageIds[imageIndex];\n          const imageMetadata = images[imageIndex].getData().metadata;\n\n          if (coord.GraphicType === 'TEXT') {\n            const key =\n              measurement.labels[index].label + measurement.labels[index].value;\n            let color = colors.get(key);\n            if (!color) {\n              // random dark color\n              color =\n                'hsla(' + Math.floor(Math.random() * 360) + ', 70%, 30%, 1)';\n              colors.set(key, color);\n            }\n\n            measurement.labels[index].color = color;\n            measurement.isSRText = true;\n            measurement.labels[index].visible = true;\n\n            imageDisplaySet.SRLabels.push({\n              ReferencedSOPInstanceUID:\n                coord.ReferencedSOPSequence.ReferencedSOPInstanceUID,\n              labels: measurement.labels[index],\n            });\n\n            if (index === 0) {\n              addMeasurement(\n                measurement,\n                imageId,\n                imageMetadata,\n                imageDisplaySet.displaySetInstanceUID\n              );\n            }\n          } else {\n            addMeasurement(\n              measurement,\n              imageId,\n              imageMetadata,\n              imageDisplaySet.displaySetInstanceUID\n            );\n          }\n        }\n      }\n    });\n  });\n};\n\nexport default parseSCOORD3D;\n","/**\n *  Should Find the requested instance metadata into the displaySets and return\n *\n * @param {Array} displaySets - List of displaySets\n * @param {string} SOPInstanceUID - sopInstanceUID to look for\n * @returns {Object} - instance metadata found\n */\nconst findInstanceMetadataBySopInstanceUID = (displaySets, SOPInstanceUID) => {\n  let instanceFound;\n\n  displaySets.find(displaySet => {\n    if (!displaySet.images) return false;\n\n    instanceFound = displaySet.images.find(\n      instanceMetadata =>\n        instanceMetadata.getSOPInstanceUID() === SOPInstanceUID\n    );\n\n    return !!instanceFound;\n  });\n\n  return instanceFound;\n};\n\nexport default findInstanceMetadataBySopInstanceUID;\n","import dcmjs from 'dcmjs';\nimport classes from '../classes';\nimport parseSCOORD3D from './SCOORD3D/parseSCOORD3D';\n\nimport findInstanceMetadataBySopInstanceUID from './utils/findInstanceMetadataBySopInstanceUid';\n\nconst { LogManager } = classes;\n\n/**\n * Function to parse the part10 array buffer that comes from a DICOM Structured report into measurementData\n * measurementData format is a viewer specific format to be stored into the redux and consumed by other components\n * (e.g. measurement table)\n *\n * @param {ArrayBuffer} part10SRArrayBuffer\n * @param {Array} displaySets\n * @param {object} external\n * @returns\n */\nconst parseDicomStructuredReport = (\n  part10SRArrayBuffer,\n  displaySets,\n  external\n) => {\n  // Get the dicom data as an Object\n  const dicomData = dcmjs.data.DicomMessage.readFile(part10SRArrayBuffer);\n  const dataset = dcmjs.data.DicomMetaDictionary.naturalizeDataset(\n    dicomData.dict\n  );\n\n  const {\n    LoggerService,\n    UINotificationService,\n  } = external.servicesManager.services;\n  if (external && external.servicesManager) {\n    try {\n      parseSCOORD3D({ servicesManager: external.servicesManager, displaySets });\n    } catch (error) {\n      const seriesDescription = dataset.SeriesDescription || '';\n      LoggerService.error({ error, message: error.message });\n      UINotificationService.show({\n        title: `Failed to parse ${seriesDescription} SR display set`,\n        message: error.message,\n        type: 'error',\n        autoClose: false,\n      });\n      return;\n    }\n  }\n\n  const { MeasurementReport } = dcmjs.adapters.Cornerstone;\n\n  let storedMeasurementByToolType;\n  try {\n    storedMeasurementByToolType = MeasurementReport.generateToolState(dataset);\n  } catch (error) {\n    const seriesDescription = dataset.SeriesDescription || '';\n    LoggerService.error({ error, message: error.message });\n    UINotificationService.show({\n      title: `Failed to parse ${seriesDescription} measurement report`,\n      message: error.message,\n      type: 'error',\n      autoClose: false,\n    });\n    return;\n  }\n\n  const measurementData = {};\n  let measurementNumber = 0;\n\n  Object.keys(storedMeasurementByToolType).forEach(toolName => {\n    const measurements = storedMeasurementByToolType[toolName];\n    measurementData[toolName] = [];\n\n    measurements.forEach(measurement => {\n      const instanceMetadata = findInstanceMetadataBySopInstanceUID(\n        displaySets,\n        measurement.sopInstanceUid\n      );\n\n      const { _study: study, _series: series } = instanceMetadata;\n      const { StudyInstanceUID, PatientID } = study;\n      const { SeriesInstanceUID } = series;\n      const { sopInstanceUid, frameIndex } = measurement;\n      const imagePath = getImagePath(\n        StudyInstanceUID,\n        SeriesInstanceUID,\n        sopInstanceUid,\n        frameIndex\n      );\n\n      const imageId = instanceMetadata.getImageId();\n      if (!imageId) {\n        return;\n      }\n\n      // TODO: We need the currentTimepointID set into the viewer\n      const currentTimepointId = 'TimepointId';\n\n      const toolData = Object.assign({}, measurement, {\n        imageId,\n        imagePath,\n        SOPInstanceUID: sopInstanceUid,\n        SeriesInstanceUID,\n        StudyInstanceUID,\n        PatientID,\n        measurementNumber: ++measurementNumber,\n        timepointId: currentTimepointId,\n        toolType: toolName,\n        _id: imageId + measurementNumber,\n      });\n\n      measurementData[toolName].push(toolData);\n    });\n  });\n\n  return measurementData;\n};\n\n/**\n * Function to create imagePath with all imageData related\n * @param {string} StudyInstanceUID\n * @param {string} SeriesInstanceUID\n * @param {string} SOPInstanceUID\n * @param {string} frameIndex\n * @returns\n */\nconst getImagePath = (\n  StudyInstanceUID,\n  SeriesInstanceUID,\n  SOPInstanceUID,\n  frameIndex\n) => {\n  return [StudyInstanceUID, SeriesInstanceUID, SOPInstanceUID, frameIndex].join(\n    '_'\n  );\n};\n\nexport default parseDicomStructuredReport;\n","import dcmjs from 'dcmjs';\n\n/**\n *  Checks if dcmjs has support to determined tool\n *\n * @param {string} toolName\n * @returns {boolean}\n */\nconst isToolSupported = toolName => {\n  const adapter = dcmjs.adapters.Cornerstone;\n  return !!adapter[toolName];\n};\n\nexport default isToolSupported;\n","import dcmjs from 'dcmjs';\nimport cornerstone from 'cornerstone-core';\n\nimport log from '../log';\nimport measurements from '../measurements';\nimport isToolSupported from './utils/isToolSupported';\n\n/**\n * Function to parse OHIF viewer measurementData into a dcmjs MeasurementReport\n *\n * @param {Object} measurementsData - OHIF measurementData object\n * @returns {Object} Dataset: measurement report from dcmjs\n */\nconst parseMeasurementsData = measurementsData => {\n  const { MeasurementReport } = dcmjs.adapters.Cornerstone;\n  const { getImageIdForImagePath } = measurements;\n\n  const toolState = {};\n  const unsupportedTools = [];\n\n  Object.keys(measurementsData).forEach(measurementType => {\n    const annotations = measurementsData[measurementType];\n\n    annotations.forEach(annotation => {\n      const { toolType, imagePath } = annotation;\n\n      if (isToolSupported(toolType)) {\n        const imageId = getImageIdForImagePath(imagePath);\n        toolState[imageId] = toolState[imageId] || {};\n        toolState[imageId][toolType] = toolState[imageId][toolType] || {\n          data: [],\n        };\n\n        toolState[imageId][toolType].data.push(annotation);\n      } else {\n        unsupportedTools.push(toolType);\n      }\n    });\n  });\n\n  if (unsupportedTools.length > 0) {\n    log.warn(\n      `[DICOMSR] Tooltypes not supported: ${unsupportedTools.join(', ')}`\n    );\n  }\n\n  const report = MeasurementReport.generateReport(\n    toolState,\n    cornerstone.metaData\n  );\n\n  return {\n    dataset: report.dataset,\n  };\n};\n\nexport default parseMeasurementsData;\n","/**\n * Retrieve a list of all displaySets of all studies\n *\n * @param {Object} studies - List of studies loaded into the viewer\n * @returns {Object} List of DisplaySets\n */\nconst getAllDisplaySets = studies => {\n  let allDisplaySets = [];\n\n  studies.forEach(study => {\n    if (study.getDisplaySets) {\n      allDisplaySets = allDisplaySets.concat(study.getDisplaySets());\n    }\n  });\n\n  return allDisplaySets;\n};\n\nexport default getAllDisplaySets;\n","import dcmjs from 'dcmjs';\nimport { api } from 'dicomweb-client';\n\nimport DICOMWeb from '../DICOMWeb';\nimport parseDicomStructuredReport from './parseDicomStructuredReport';\nimport parseMeasurementsData from './parseMeasurementsData';\nimport getAllDisplaySets from './utils/getAllDisplaySets';\nimport errorHandler from '../errorHandler';\nimport getXHRRetryRequestHook from '../utils/xhrRetryRequestHook';\n\nconst VERSION_NAME = 'dcmjs-0.0';\nconst TRANSFER_SYNTAX_UID = '1.2.840.10008.1.2.1';\n\n/**\n * Function to retrieve measurements from DICOM Structured Reports coming from determined server\n *\n * @param {Array} series - List of all series metaData loaded\n * @param {Array} studies - List of all studies metaData loaded\n * @param {string} serverUrl - Server URL to be used on request\n * @param {object} external\n * @returns {Object} MeasurementData\n */\nconst retrieveMeasurementFromSR = async (\n  series,\n  studies,\n  serverUrl,\n  external\n) => {\n  const config = {\n    url: serverUrl,\n    headers: DICOMWeb.getAuthorizationHeader(),\n    errorInterceptor: errorHandler.getHTTPErrorHandler(),\n    requestHooks: [getXHRRetryRequestHook()],\n  };\n\n  const dicomWeb = new api.DICOMwebClient(config);\n\n  const instance = series.getFirstInstance();\n  const options = {\n    studyInstanceUID: instance.getStudyInstanceUID(),\n    seriesInstanceUID: instance.getSeriesInstanceUID(),\n    sopInstanceUID: instance.getSOPInstanceUID(),\n  };\n\n  const part10SRArrayBuffer = await dicomWeb.retrieveInstance(options);\n  const displaySets = getAllDisplaySets(studies);\n  const measurementsData = parseDicomStructuredReport(\n    part10SRArrayBuffer,\n    displaySets,\n    external\n  );\n\n  return measurementsData;\n};\n\n/**\n * Function to store measurements to DICOM Structured Reports in determined server\n *\n * @param {Object} measurements - OHIF measurementData object\n * @param {string} serverUrl - Server URL to be used on request\n * @returns {Promise}\n */\nconst stowSRFromMeasurements = async (measurements, serverUrl) => {\n  const { dataset } = parseMeasurementsData(measurements);\n  const { DicomMetaDictionary, DicomDict } = dcmjs.data;\n  const meta = {\n    FileMetaInformationVersion: dataset._meta.FileMetaInformationVersion.Value,\n    MediaStorageSOPClassUID: dataset.SOPClassUID,\n    MediaStorageSOPInstanceUID: dataset.SOPInstanceUID,\n    TransferSyntaxUID: TRANSFER_SYNTAX_UID,\n    ImplementationClassUID: DicomMetaDictionary.uid(),\n    ImplementationVersionName: VERSION_NAME,\n  };\n\n  const denaturalized = DicomMetaDictionary.denaturalizeDataset(meta);\n  const dicomDict = new DicomDict(denaturalized);\n\n  dicomDict.dict = DicomMetaDictionary.denaturalizeDataset(dataset);\n\n  const part10Buffer = dicomDict.write();\n\n  const config = {\n    url: serverUrl,\n    headers: DICOMWeb.getAuthorizationHeader(),\n    errorInterceptor: errorHandler.getHTTPErrorHandler(),\n    requestHooks: [getXHRRetryRequestHook()],\n  };\n\n  const dicomWeb = new api.DICOMwebClient(config);\n  const options = {\n    datasets: [part10Buffer],\n  };\n\n  await dicomWeb.storeInstances(options);\n};\n\nexport { retrieveMeasurementFromSR, stowSRFromMeasurements };\n","/**\n * Should find the most recent Structured Report metadata\n *\n * @param {Array} studies\n * @returns {Object} Series\n */\nconst findMostRecentStructuredReport = studies => {\n  let mostRecentStructuredReport;\n\n  studies.forEach(study => {\n    const allSeries = study.getSeries ? study.getSeries() : [];\n    allSeries.forEach(series => {\n      // Skip series that may not have instances yet\n      // This can happen if we have retrieved just the initial\n      // details about the series via QIDO-RS, but not the full metadata\n      if (!series || series.getInstanceCount() === 0) {\n        return;\n      }\n\n      if (isStructuredReportSeries(series)) {\n        if (\n          !mostRecentStructuredReport ||\n          compareSeriesDate(series, mostRecentStructuredReport)\n        ) {\n          mostRecentStructuredReport = series;\n        }\n      }\n    });\n  });\n\n  return mostRecentStructuredReport;\n};\n\n/**\n *  Checks if series sopClassUID matches with the supported Structured Reports sopClassUID\n *\n * @param {Object} series - Series metadata\n * @returns {boolean}\n */\nconst isStructuredReportSeries = series => {\n  const supportedSopClassUIDs = [\n    '1.2.840.10008.5.1.4.1.1.88.22',\n    '1.2.840.10008.5.1.4.1.1.11.1',\n    '1.2.840.10008.5.1.4.1.1.88.34', // COMPREHENSIVE_3D_SR\n  ];\n\n  const firstInstance = series.getFirstInstance();\n  const SOPClassUID = firstInstance.getData().metadata.SOPClassUID;\n\n  return supportedSopClassUIDs.includes(SOPClassUID);\n};\n\n/**\n *  Checkes if series1 is newer than series2\n *\n * @param {Object} series1 - Series Metadata 1\n * @param {Object} series2 - Series Metadata 2\n * @returns {boolean} true/false if series1 is newer than series2\n */\nconst compareSeriesDate = (series1, series2) => {\n  return (\n    series1._data.SeriesDate > series2._data.SeriesDate ||\n    (series1._data.SeriesDate === series2._data.SeriesDate &&\n      series1._data.SeriesTime > series2._data.SeriesTime)\n  );\n};\n\nexport default findMostRecentStructuredReport;\n","import log from '../log';\nimport studies from '../studies';\nimport utils from '../utils';\nimport {\n  retrieveMeasurementFromSR,\n  stowSRFromMeasurements,\n} from './handleStructuredReport';\nimport findMostRecentStructuredReport from './utils/findMostRecentStructuredReport';\n\n/**\n *\n * @typedef serverType\n * @property {string} type - type of the server\n * @property {string} wadoRoot - server wado root url\n *\n */\n\n/**\n * Function to be registered into MeasurementAPI to retrieve measurements from DICOM Structured Reports\n *\n * @param {serverType} server\n * @param {object} external\n * @returns {Promise} Should resolve with OHIF measurementData object\n */\nconst retrieveMeasurements = (server, external = {}) => {\n  log.info('[DICOMSR] retrieveMeasurements');\n\n  if (!server || server.type !== 'dicomWeb') {\n    log.error('[DICOMSR] DicomWeb server is required!');\n    return Promise.reject({});\n  }\n\n  const serverUrl = server.wadoRoot;\n  const studies = utils.studyMetadataManager.all();\n\n  const latestSeries = findMostRecentStructuredReport(studies);\n\n  if (!latestSeries) return Promise.resolve({});\n\n  return retrieveMeasurementFromSR(latestSeries, studies, serverUrl, external);\n};\n\n/**\n *  Function to be registered into MeasurementAPI to store measurements into DICOM Structured Reports\n *\n * @param {Object} measurementData - OHIF measurementData object\n * @param {Object} filter\n * @param {serverType} server\n * @returns {Object} With message to be displayed on success\n */\nconst storeMeasurements = async (measurementData, filter, server) => {\n  log.info('[DICOMSR] storeMeasurements');\n\n  if (!server || server.type !== 'dicomWeb') {\n    log.error('[DICOMSR] DicomWeb server is required!');\n    return Promise.reject({});\n  }\n\n  const serverUrl = server.wadoRoot;\n  const firstMeasurementKey = Object.keys(measurementData)[0];\n  const firstMeasurement = measurementData[firstMeasurementKey][0];\n  const StudyInstanceUID =\n    firstMeasurement && firstMeasurement.StudyInstanceUID;\n\n  try {\n    await stowSRFromMeasurements(measurementData, serverUrl);\n    if (StudyInstanceUID) {\n      studies.deleteStudyMetadataPromise(StudyInstanceUID);\n    }\n\n    return {\n      message: 'Measurements saved successfully',\n    };\n  } catch (error) {\n    log.error(\n      `[DICOMSR] Error while saving the measurements: ${error.message}`\n    );\n    throw new Error('Error while saving the measurements.');\n  }\n};\n\nexport { retrieveMeasurements, storeMeasurements };\n","import { retrieveMeasurements, storeMeasurements } from './dataExchange';\nimport isToolSupported from './utils/isToolSupported';\n\nconst DICOMSR = {\n  retrieveMeasurements,\n  storeMeasurements,\n  isToolSupported,\n};\n\nexport default DICOMSR;\n","/**\n * VIEWPORT\n */\nexport const SET_VIEWPORT = 'VIEWPORT::SET';\nexport const SET_VIEWPORT_ACTIVE = 'VIEWPORT::SET_ACTIVE';\nexport const SET_VIEWPORT_LAYOUT = 'VIEWPORT::SET_LAYOUT';\nexport const SET_VIEWPORT_LAYOUT_AND_DATA =\n  'VIEWPORT::SET_VIEWPORT_LAYOUT_AND_DATA';\nexport const CLEAR_VIEWPORT = 'VIEWPORT::CLEAR';\nexport const SET_SPECIFIC_DATA = 'VIEWPORT::SET_SPECIFIC_DATA';\nexport const SET_ACTIVE_SPECIFIC_DATA = 'VIEWPORT::SET_ACTIVE_SPECIFIC_DATA';\n\n/**\n * SERVERS\n */\nexport const ADD_SERVER = 'ADD_SERVER';\nexport const SET_SERVERS = 'SET_SERVERS';\n\n/**\n * EXTENSIONS\n */\nexport const SET_EXTENSION_DATA = 'SET_EXTENSION_DATA';\n\n/**\n * PREFERENCES\n * */\nexport const SET_USER_PREFERENCES = 'SET_USER_PREFERENCES';\n","/** Action Creators:\n *  https://redux.js.org/basics/actions#action-creators\n */\n\nimport {\n  CLEAR_VIEWPORT,\n  SET_ACTIVE_SPECIFIC_DATA,\n  SET_SERVERS,\n  SET_VIEWPORT,\n  SET_VIEWPORT_ACTIVE,\n  SET_VIEWPORT_LAYOUT,\n  SET_VIEWPORT_LAYOUT_AND_DATA,\n  SET_USER_PREFERENCES,\n} from './constants/ActionTypes.js';\n\n/**\n * The definition of a viewport layout.\n *\n * @typedef {Object} ViewportLayout\n * @property {number} numRows -\n * @property {number} numColumns -\n * @property {array} viewports -\n */\n\n/**\n * VIEWPORT\n */\nexport const setViewportSpecificData = (\n  viewportIndex,\n  viewportSpecificData\n) => ({\n  type: SET_VIEWPORT,\n  viewportIndex,\n  viewportSpecificData,\n});\n\nexport const setViewportActive = viewportIndex => ({\n  type: SET_VIEWPORT_ACTIVE,\n  viewportIndex,\n});\n\n/**\n * @param {ViewportLayout} layout\n */\nexport const setLayout = ({ numRows, numColumns, viewports }) => ({\n  type: SET_VIEWPORT_LAYOUT,\n  numRows,\n  numColumns,\n  viewports,\n});\n\n/**\n * @param {number} layout.numRows\n * @param {number} layout.numColumns\n * @param {array} viewports\n */\nexport const setViewportLayoutAndData = (\n  { numRows, numColumns, viewports },\n  viewportSpecificData\n) => ({\n  type: SET_VIEWPORT_LAYOUT_AND_DATA,\n  numRows,\n  numColumns,\n  viewports,\n  viewportSpecificData,\n});\n\nexport const clearViewportSpecificData = viewportIndex => ({\n  type: CLEAR_VIEWPORT,\n  viewportIndex,\n});\n\nexport const setActiveViewportSpecificData = viewportSpecificData => ({\n  type: SET_ACTIVE_SPECIFIC_DATA,\n  viewportSpecificData,\n});\n\n/**\n * NOT-VIEWPORT\n */\nexport const setUserPreferences = state => ({\n  type: SET_USER_PREFERENCES,\n  state,\n});\n\nexport const setExtensionData = (extension, data) => ({\n  type: 'SET_EXTENSION_DATA',\n  extension,\n  data,\n});\n\nexport const setTimepoints = state => ({\n  type: 'SET_TIMEPOINTS',\n  state,\n});\n\nexport const setMeasurements = state => ({\n  type: 'SET_MEASUREMENTS',\n  state,\n});\n\nexport const setStudyData = (StudyInstanceUID, data) => ({\n  type: 'SET_STUDY_DATA',\n  StudyInstanceUID,\n  data,\n});\n\nexport const setServers = servers => ({\n  type: SET_SERVERS,\n  servers,\n});\n\nconst actions = {\n  /**\n   * VIEWPORT\n   */\n  setViewportActive,\n  setViewportSpecificData,\n  setViewportLayoutAndData,\n  setLayout,\n  clearViewportSpecificData,\n  setActiveViewportSpecificData,\n  /**\n   * NOT-VIEWPORT\n   */\n  setUserPreferences,\n  setExtensionData,\n  setTimepoints,\n  setMeasurements,\n  setStudyData,\n  setServers,\n};\n\nexport default actions;\n","export const defaultState = {};\n\nconst extensions = (state = defaultState, action) => {\n  switch (action.type) {\n    case 'SET_EXTENSION_DATA':\n      const extensionName = action.extension;\n      const currentData = state[extensionName] || {};\n\n      const incomingData = action.data;\n\n      const extension = {\n        [extensionName]: {\n          ...currentData,\n          ...incomingData,\n        },\n      };\n\n      return { ...state, ...extension };\n\n    default:\n      return state;\n  }\n};\n\nexport default extensions;\n","const defaultState = {\n  windowLevelData: {\n    1: { description: 'Soft tissue', window: '550', level: '40' },\n    2: { description: 'Lung', window: '150', level: '-600' },\n    3: { description: 'Liver', window: '150', level: '90' },\n    4: { description: 'Bone', window: '2500', level: '480' },\n    5: { description: 'Brain', window: '80', level: '40' },\n    6: { description: 'Trest', window: '1', level: '1' },\n    7: { description: '', window: '', level: '' },\n    8: { description: '', window: '', level: '' },\n    9: { description: '', window: '', level: '' },\n    10: { description: '', window: '', level: '' },\n  },\n  generalPreferences: {\n    // language: 'en-US'\n  },\n};\n\nconst preferences = (state = defaultState, action) => {\n  switch (action.type) {\n    case 'SET_USER_PREFERENCES': {\n      return Object.assign({}, state, action.state);\n    }\n    default:\n      return state;\n  }\n};\n\nexport { defaultState };\nexport default preferences;\n","import uniqBy from 'lodash/uniqBy';\n\nexport const defaultState = {\n  servers: [],\n};\n\nconst servers = (state = defaultState, action) => {\n  switch (action.type) {\n    case 'ADD_SERVER':\n      let servers = uniqBy([...state.servers, action.server], 'id');\n      servers.forEach(s => (s.active = true));\n      return { ...state, servers };\n\n    case 'ACTIVATE_SERVER': {\n      const newServer = { ...action.server, active: true };\n      const newServers = state.servers;\n      newServers.forEach(s => (s.active = false));\n      return {\n        ...state,\n        servers: uniqBy([...newServers, newServer], 'wadoRoot'),\n      };\n    }\n\n    case 'SET_SERVERS':\n      return { ...state, servers: action.servers };\n\n    default:\n      return state;\n  }\n};\n\nexport default servers;\n","import cloneDeep from 'lodash.clonedeep';\n\nconst defaultState = {\n  studyData: {},\n};\n\nconst servers = (state = defaultState, action) => {\n  switch (action.type) {\n    case 'SET_STUDY_DATA': {\n      const updatedStudyData = cloneDeep(state.studyData);\n      updatedStudyData[action.StudyInstanceUID] = cloneDeep(action.data);\n\n      return Object.assign({}, state, { studyData: updatedStudyData });\n    }\n    default:\n      return state;\n  }\n};\n\nexport default servers;\n","const defaultState = {\n  timepoints: [],\n  measurements: [],\n};\n\nconst timepointManager = (state = defaultState, action) => {\n  switch (action.type) {\n    case 'SET_TIMEPOINTS':\n      return Object.assign({}, state, { timepoints: action.state });\n    case 'SET_MEASUREMENTS':\n      return Object.assign({}, state, { measurements: action.state });\n    default:\n      return state;\n  }\n};\n\nexport default timepointManager;\n","import cloneDeep from 'lodash.clonedeep';\nimport produce, { setAutoFreeze } from 'immer';\n\nimport {\n  CLEAR_VIEWPORT,\n  SET_ACTIVE_SPECIFIC_DATA,\n  SET_SPECIFIC_DATA,\n  SET_VIEWPORT,\n  SET_VIEWPORT_ACTIVE,\n  SET_VIEWPORT_LAYOUT,\n  SET_VIEWPORT_LAYOUT_AND_DATA,\n} from './../constants/ActionTypes.js';\n\nsetAutoFreeze(false);\n\nexport const DEFAULT_STATE = {\n  numRows: 1,\n  numColumns: 1,\n  activeViewportIndex: 0,\n  layout: {\n    viewports: [{}],\n  },\n  viewportSpecificData: {},\n};\n\n/**\n *  Take the new number of Rows and Columns, delete all not used viewport data and also set\n *  active viewport as default in case current one is not available anymore.\n *\n * @param {Number} numRows\n * @param {Number} numColumns\n * @param {Object} currentViewportSpecificData\n * @returns\n */\nconst findActiveViewportSpecificData = (\n  numRows,\n  numColumns,\n  currentViewportSpecificData = {}\n) => {\n  const numberOfViewports = numRows * numColumns;\n  const viewportSpecificData = cloneDeep(currentViewportSpecificData);\n\n  if (numberOfViewports < Object.keys(viewportSpecificData).length) {\n    Object.keys(viewportSpecificData).forEach(key => {\n      if (key > numberOfViewports - 1) {\n        delete viewportSpecificData[key];\n      }\n    });\n  }\n\n  return viewportSpecificData;\n};\n/**\n *  Take new number of Rows and Columns and make sure the current active viewport index is still available, if not, return the default\n *\n * @param {Number} numRows\n * @param {Number} numColumns\n * @param {Number} currentActiveViewportIndex\n * @returns\n */\nconst getActiveViewportIndex = (\n  numRows,\n  numColumns,\n  currentActiveViewportIndex\n) => {\n  const numberOfViewports = numRows * numColumns;\n\n  return currentActiveViewportIndex > numberOfViewports - 1\n    ? DEFAULT_STATE.activeViewportIndex\n    : currentActiveViewportIndex;\n};\n\n/**\n * The definition of a viewport action.\n *\n * @typedef {Object} ViewportAction\n * @property {string} type -\n * @property {Object} data -\n * @property {Object} layout -\n * @property {number} viewportIndex -\n * @property {Object} viewportSpecificData -\n */\n\n/**\n * @param {Object} [state=DEFAULT_STATE] The current viewport state.\n * @param {ViewportAction} action A viewport action.\n */\nconst viewports = (state = DEFAULT_STATE, action) => {\n  let useActiveViewport = false;\n\n  switch (action.type) {\n    /**\n     * Sets the active viewport index.\n     *\n     * @return {Object} New state.\n     */\n    case SET_VIEWPORT_ACTIVE: {\n      return produce(state, draftState => {\n        draftState.activeViewportIndex = getActiveViewportIndex(\n          draftState.numRows,\n          draftState.numColumns,\n          action.viewportIndex\n        );\n      });\n    }\n\n    /**\n     * Sets viewport layout.\n     *\n     * @return {Object} New state.\n     */\n    case SET_VIEWPORT_LAYOUT: {\n      const { numRows, numColumns } = action;\n      const viewportSpecificData = findActiveViewportSpecificData(\n        numRows,\n        numColumns,\n        state.viewportSpecificData\n      );\n      const activeViewportIndex = getActiveViewportIndex(\n        numRows,\n        numColumns,\n        state.activeViewportIndex\n      );\n\n      return {\n        ...state,\n        numRows: action.numRows,\n        numColumns: action.numColumns,\n        layout: { viewports: [...action.viewports] },\n        viewportSpecificData,\n        activeViewportIndex,\n      };\n    }\n\n    /**\n     * Sets viewport layout and data.\n     *\n     * @return {Object} New state.\n     */\n    case SET_VIEWPORT_LAYOUT_AND_DATA: {\n      const { numRows, numColumns } = action;\n      const viewportSpecificData = findActiveViewportSpecificData(\n        numRows,\n        numColumns,\n        action.viewportSpecificData\n      );\n      const activeViewportIndex = getActiveViewportIndex(\n        numRows,\n        numColumns,\n        state.activeViewportIndex\n      );\n\n      return {\n        ...state,\n        numRows: action.numRows,\n        numColumns: action.numColumns,\n        layout: { viewports: [...action.viewports] },\n        viewportSpecificData,\n        activeViewportIndex,\n      };\n    }\n\n    /**\n     * Sets viewport specific data of active viewport.\n     *\n     * @return {Object} New state.\n     */\n    case SET_VIEWPORT: {\n      return produce(state, draftState => {\n        draftState.viewportSpecificData[action.viewportIndex] =\n          draftState.viewportSpecificData[action.viewportIndex] || {};\n\n        Object.keys(action.viewportSpecificData).forEach(key => {\n          draftState.viewportSpecificData[action.viewportIndex][key] =\n            action.viewportSpecificData[key];\n        });\n\n        if (action.viewportSpecificData && action.viewportSpecificData.plugin) {\n          draftState.layout.viewports[action.viewportIndex].plugin =\n            action.viewportSpecificData.plugin;\n        }\n      });\n    }\n\n    /**\n     * Sets viewport specific data of active/any viewport.\n     *\n     * @return {Object} New state.\n     */\n    case SET_ACTIVE_SPECIFIC_DATA:\n      useActiveViewport = true;\n    // Allow fall-through\n    // eslint-disable-next-line\n    case SET_SPECIFIC_DATA: {\n      const layout = cloneDeep(state.layout);\n      const viewportIndex = useActiveViewport\n        ? state.activeViewportIndex\n        : action.viewportIndex;\n\n      let viewportSpecificData = cloneDeep(state.viewportSpecificData);\n      viewportSpecificData[viewportIndex] = {\n        ...action.viewportSpecificData,\n      };\n\n      if (action.viewportSpecificData && action.viewportSpecificData.plugin) {\n        layout.viewports[viewportIndex].plugin =\n          action.viewportSpecificData.plugin;\n      }\n\n      return { ...state, layout, viewportSpecificData };\n    }\n\n    /**\n     * Clears viewport specific data of any viewport.\n     *\n     * @return {Object} New state.\n     */\n    case CLEAR_VIEWPORT: {\n      let viewportSpecificData = cloneDeep(state.viewportSpecificData);\n\n      if (action.viewportIndex) {\n        viewportSpecificData[action.viewportIndex] = {};\n        return { ...state, viewportSpecificData };\n      } else {\n        return DEFAULT_STATE;\n      }\n    }\n\n    /**\n     * Returns the current application state.\n     *\n     * @return {Object} The current state.\n     */\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default viewports;\n","import extensions from './extensions';\nimport preferences from './preferences';\nimport servers from './servers';\nimport studies from './studies';\nimport timepointManager from './timepointManager';\nimport viewports from './viewports';\n\nconst reducers = {\n  extensions,\n  preferences,\n  servers,\n  studies,\n  timepointManager,\n  viewports,\n};\n\nexport default reducers;\n","const LocalStorageApi = window.localStorage;\nconst localStorageKey = 'state';\nexport const loadState = () => {\n  try {\n    const serializedState = LocalStorageApi.getItem(localStorageKey);\n    if (!serializedState) {\n      return undefined;\n    }\n\n    return JSON.parse(serializedState);\n  } catch (e) {\n    return undefined;\n  }\n};\n\nexport const saveState = state => {\n  try {\n    const serializedState = JSON.stringify(state);\n    LocalStorageApi.setItem(localStorageKey, serializedState);\n  } catch (e) {}\n};\n\nconst localStorage = {\n  saveState,\n  loadState,\n};\n\nexport default localStorage;\n","const SessionStorageApi = window.sessionStorage;\nconst sessionStorageKey = 'state';\nexport const loadState = () => {\n  try {\n    const serializedState = SessionStorageApi.getItem(sessionStorageKey);\n    if (!serializedState) {\n      return undefined;\n    }\n\n    return JSON.parse(serializedState);\n  } catch (e) {\n    return undefined;\n  }\n};\n\nexport const saveState = state => {\n  try {\n    const serializedState = JSON.stringify(state);\n    SessionStorageApi.setItem(sessionStorageKey, serializedState);\n  } catch (e) {}\n};\n\nconst sessionStorage = {\n  saveState,\n  loadState,\n};\n\nexport default sessionStorage;\n","import actions from './actions.js';\nimport reducers from './reducers';\nimport localStorage from './localStorage.js';\nimport sessionStorage from './sessionStorage.js';\n\nconst redux = {\n  reducers,\n  actions,\n  localStorage,\n  sessionStorage,\n};\n\nexport default redux;\n","import Hammer from 'hammerjs';\nimport cornerstone from 'cornerstone-core';\nimport cornerstoneMath from 'cornerstone-math';\nimport cornerstoneTools from 'cornerstone-tools';\nimport OHIF from '@ohif/core';\n\nconst { log } = OHIF;\n\nexport default function(configuration = {}) {\n  // For debugging\n  window.cornerstoneTools = cornerstoneTools;\n\n  cornerstoneTools.external.cornerstone = cornerstone;\n  cornerstoneTools.external.Hammer = Hammer;\n  cornerstoneTools.external.cornerstoneMath = cornerstoneMath;\n  cornerstoneTools.init(configuration);\n\n  cornerstoneTools.loadHandlerManager.setErrorLoadingHandler(\n    (element, imageId, error) => {\n      log.error(imageId);\n      throw error;\n    }\n  );\n\n  // Set the tool font and font size\n  // context.font = \"[style] [variant] [weight] [size]/[line height] [font family]\";\n  const fontFamily =\n    'Roboto, OpenSans, HelveticaNeue-Light, Helvetica Neue Light, Helvetica Neue, Helvetica, Arial, Lucida Grande, sans-serif';\n  cornerstoneTools.textStyle.setFont(`16px ${fontFamily}`);\n\n  // Tool styles/colors\n  cornerstoneTools.toolStyle.setToolWidth(2);\n  cornerstoneTools.toolColors.setToolColor('rgb(255, 255, 0)');\n  cornerstoneTools.toolColors.setActiveColor('rgb(0, 255, 0)');\n\n  cornerstoneTools.store.state.touchProximity = 40;\n\n  // Configure stack prefetch\n  cornerstoneTools.stackPrefetch.setConfiguration({\n    maxImagesToPrefetch: configuration.maxImagesToPrefetch,\n    preserveExistingPool: configuration.preserveExistingPool,\n    maxSimultaneousRequests: configuration.maxSimultaneousRequests,\n  });\n}\n","import cornerstone from 'cornerstone-core';\n\nconst SUPPORTED_TOOLS = [\n  'Length',\n  'EllipticalRoi',\n  'RectangleRoi',\n  'ArrowAnnotate',\n];\n\nconst measurementServiceMappingsFactory = measurementService => {\n  /**\n   * Maps measurement service format object to cornerstone annotation object.\n   *\n   * @param {Measurement} measurement The measurement instance\n   * @param {string} definition The source definition\n   * @return {Object} Cornerstone annotation data\n   */\n  const toAnnotation = (measurement, definition) => {\n    const {\n      id,\n      label,\n      description,\n      points,\n      unit,\n      SOPInstanceUID,\n      FrameOfReferenceUID,\n      referenceSeriesUID,\n    } = measurement;\n\n    return {\n      toolName: definition,\n      measurementData: {\n        sopInstanceUid: SOPInstanceUID,\n        frameOfReferenceUID: FrameOfReferenceUID,\n        SeriesInstanceUID: referenceSeriesUID,\n        unit,\n        text: label,\n        description,\n        handles: _getHandlesFromPoints(points),\n        _measurementServiceId: id,\n      },\n    };\n  };\n\n  /**\n   * Maps cornerstone annotation event data to measurement service format.\n   *\n   * @param {Object} cornerstone Cornerstone event data\n   * @return {Measurement} Measurement instance\n   */\n  const toMeasurement = csToolsAnnotation => {\n    const { element, measurementData } = csToolsAnnotation;\n    const tool =\n      csToolsAnnotation.toolType ||\n      csToolsAnnotation.toolName ||\n      measurementData.toolType;\n\n    const validToolType = toolName => SUPPORTED_TOOLS.includes(toolName);\n\n    if (!validToolType(tool)) {\n      throw new Error('Tool not supported');\n    }\n\n    const {\n      SOPInstanceUID,\n      FrameOfReferenceUID,\n      SeriesInstanceUID,\n    } = _getAttributes(element);\n\n    const points = [];\n    points.push(measurementData.handles);\n\n    return {\n      id: measurementData._measurementServiceId,\n      SOPInstanceUID: SOPInstanceUID,\n      FrameOfReferenceUID,\n      referenceSeriesUID: SeriesInstanceUID,\n      label: measurementData.text,\n      description: measurementData.description,\n      unit: measurementData.unit,\n      area:\n        measurementData.cachedStats &&\n        measurementData.cachedStats\n          .area /* TODO: Add concept names instead (descriptor) */,\n      type: _getValueTypeFromToolType(tool),\n      points: _getPointsFromHandles(measurementData.handles),\n    };\n  };\n\n  const _getAttributes = element => {\n    const enabledElement = cornerstone.getEnabledElement(element);\n    const imageId = enabledElement.image.imageId;\n    const instance = cornerstone.metaData.get('instance', imageId);\n\n    return {\n      SOPInstanceUID: instance.SOPInstanceUID,\n      FrameOfReferenceUID: instance.FrameOfReferenceUID,\n      SeriesInstanceUID: instance.SeriesInstanceUID,\n    };\n  };\n\n  const _getValueTypeFromToolType = toolType => {\n    const { POLYLINE, ELLIPSE, POINT } = measurementService.VALUE_TYPES;\n\n    /* TODO: Relocate static value types */\n    const TOOL_TYPE_TO_VALUE_TYPE = {\n      Length: POLYLINE,\n      EllipticalRoi: ELLIPSE,\n      RectangleRoi: POLYLINE,\n      ArrowAnnotate: POINT,\n    };\n\n    return TOOL_TYPE_TO_VALUE_TYPE[toolType];\n  };\n\n  const _getPointsFromHandles = handles => {\n    let points = [];\n    Object.keys(handles).map(handle => {\n      if (['start', 'end'].includes(handle)) {\n        let point = {};\n        if (handles[handle].x) point.x = handles[handle].x;\n        if (handles[handle].y) point.y = handles[handle].y;\n        points.push(point);\n      }\n    });\n    return points;\n  };\n\n  const _getHandlesFromPoints = points => {\n    return points\n      .map((p, i) => (i % 10 === 0 ? { start: p } : { end: p }))\n      .reduce((obj, item) => Object.assign(obj, { ...item }), {});\n  };\n\n  return {\n    toAnnotation,\n    toMeasurement,\n  };\n};\n\nexport default measurementServiceMappingsFactory;\n","import cornerstone from 'cornerstone-core';\n\nconst state = {\n  TrackingUniqueIdentifier: null,\n  trackingIdentifiersByEnabledElementUUID: {},\n};\n\nfunction setTrackingUniqueIdentifiersForElement(\n  element,\n  trackingUniqueIdentifiers,\n  activeIndex = 0\n) {\n  const enabledElement = cornerstone.getEnabledElement(element);\n  const { uuid } = enabledElement;\n\n  state.trackingIdentifiersByEnabledElementUUID[uuid] = {\n    trackingUniqueIdentifiers,\n    activeIndex,\n  };\n}\n\nfunction setActiveTrackingUniqueIdentifierForElement(\n  element,\n  TrackingUniqueIdentifier\n) {\n  const enabledElement = cornerstone.getEnabledElement(element);\n  const { uuid } = enabledElement;\n\n  const trackingIdentifiersForElement =\n    state.trackingIdentifiersByEnabledElementUUID[uuid];\n\n  if (trackingIdentifiersForElement) {\n    const activeIndex = trackingIdentifiersForElement.trackingUniqueIdentifiers.findIndex(\n      tuid => tuid === TrackingUniqueIdentifier\n    );\n\n    trackingIdentifiersForElement.activeIndex = activeIndex;\n  }\n}\n\nfunction getTrackingUniqueIdentifiersForElement(element) {\n  const enabledElement = cornerstone.getEnabledElement(element);\n  const { uuid } = enabledElement;\n\n  if (state.trackingIdentifiersByEnabledElementUUID[uuid]) {\n    return state.trackingIdentifiersByEnabledElementUUID[uuid];\n  }\n\n  return { trackingUniqueIdentifiers: [] };\n}\n\nexport default {\n  state,\n  getters: {\n    trackingUniqueIdentifiersForElement: getTrackingUniqueIdentifiersForElement,\n  },\n  setters: {\n    trackingUniqueIdentifiersForElement: setTrackingUniqueIdentifiersForElement,\n    activeTrackingUniqueIdentifierForElement: setActiveTrackingUniqueIdentifierForElement,\n  },\n};\n","import OHIF from '@ohif/core';\nimport { SimpleDialog } from '@ohif/ui';\nimport cornerstone from 'cornerstone-core';\nimport csTools from 'cornerstone-tools';\nimport merge from 'lodash.merge';\nimport initCornerstoneTools from './initCornerstoneTools.js';\nimport measurementServiceMappingsFactory from './utils/measurementServiceMappings/measurementServiceMappingsFactory';\nimport dicomSRModule from './tools/modules/dicomSRModule';\nimport srModuleId from './tools/id';\n\n/**\n *\n * @param {Object} servicesManager\n * @param {Object} configuration\n * @param {Object|Array} configuration.csToolsConfig\n */\nexport default function init({ servicesManager, configuration }) {\n  const { UIDialogService, MeasurementService } = servicesManager.services;\n\n  csTools.register('module', srModuleId, dicomSRModule);\n\n  const callInputDialog = (data, event, callback) => {\n    if (UIDialogService) {\n      let dialogId = UIDialogService.create({\n        centralize: true,\n        isDraggable: false,\n        content: SimpleDialog.InputDialog,\n        useLastPosition: false,\n        showOverlay: true,\n        contentProps: {\n          title: 'Enter your annotation',\n          label: 'New label',\n          measurementData: data ? { description: data.text } : {},\n          onClose: () => UIDialogService.dismiss({ id: dialogId }),\n          onSubmit: value => {\n            callback(value);\n            UIDialogService.dismiss({ id: dialogId });\n          },\n        },\n      });\n    }\n  };\n\n  const {\n    csToolsConfig,\n    stackPrefetch = {\n      maxImagesToPrefetch: Infinity,\n      preserveExistingPool: false,\n      maxSimultaneousRequests: 20,\n    },\n  } = configuration;\n  const metadataProvider = OHIF.cornerstone.metadataProvider;\n\n  cornerstone.metaData.addProvider(\n    metadataProvider.get.bind(metadataProvider),\n    9999\n  );\n\n  // ~~\n  const defaultCsToolsConfig = csToolsConfig || {\n    globalToolSyncEnabled: true,\n    showSVGCursors: true,\n    autoResizeViewports: false,\n  };\n\n  initCornerstoneTools({ ...defaultCsToolsConfig, ...stackPrefetch });\n\n  const toolsGroupedByType = {\n    touch: [csTools.PanMultiTouchTool, csTools.ZoomTouchPinchTool],\n    annotations: [\n      csTools.ArrowAnnotateTool,\n      csTools.BidirectionalTool,\n      csTools.LengthTool,\n      csTools.AngleTool,\n      csTools.FreehandRoiTool,\n      csTools.EllipticalRoiTool,\n      csTools.DragProbeTool,\n      csTools.RectangleRoiTool,\n    ],\n    other: [\n      csTools.PanTool,\n      csTools.ZoomTool,\n      csTools.WwwcTool,\n      csTools.WwwcRegionTool,\n      csTools.MagnifyTool,\n      csTools.StackScrollTool,\n      csTools.StackScrollMouseWheelTool,\n      csTools.OverlayTool,\n    ],\n  };\n\n  let tools = [];\n  Object.keys(toolsGroupedByType).forEach(toolsGroup =>\n    tools.push(...toolsGroupedByType[toolsGroup])\n  );\n\n  /* Measurement Service */\n  _connectToolsToMeasurementService(MeasurementService);\n\n  /* Add extension tools configuration here. */\n  const internalToolsConfig = {\n    ArrowAnnotate: {\n      configuration: {\n        getTextCallback: (callback, eventDetails) =>\n          callInputDialog(null, eventDetails, callback),\n        changeTextCallback: (data, eventDetails, callback) =>\n          callInputDialog(data, eventDetails, callback),\n      },\n    },\n  };\n\n  /* Abstract tools configuration using extension configuration. */\n  const parseToolProps = (props, tool) => {\n    const { annotations } = toolsGroupedByType;\n    // An alternative approach would be to remove the `drawHandlesOnHover` config\n    // from the supported configuration properties in `cornerstone-tools`\n    const toolsWithHideableHandles = annotations.filter(\n      tool => !['RectangleRoiTool', 'EllipticalRoiTool'].includes(tool.name)\n    );\n\n    let parsedProps = { ...props };\n\n    /**\n     * drawHandles - Never/Always show handles\n     * drawHandlesOnHover - Only show handles on handle hover (pointNearHandle)\n     *\n     * Does not apply to tools where handles aren't placed in predictable\n     * locations.\n     */\n    if (\n      configuration.hideHandles !== false &&\n      toolsWithHideableHandles.includes(tool)\n    ) {\n      if (props.configuration) {\n        parsedProps.configuration.drawHandlesOnHover = true;\n      } else {\n        parsedProps.configuration = { drawHandlesOnHover: true };\n      }\n    }\n\n    return parsedProps;\n  };\n\n  /* Add tools with its custom props through extension configuration. */\n  tools.forEach(tool => {\n    const toolName = tool.name.replace('Tool', '');\n    const externalToolsConfig = configuration.tools || {};\n    const externalToolProps = externalToolsConfig[toolName] || {};\n    const internalToolProps = internalToolsConfig[toolName] || {};\n    const props = merge(\n      internalToolProps,\n      parseToolProps(externalToolProps, tool)\n    );\n    csTools.addTool(tool, props);\n  });\n\n  // TODO -> We need a better way to do this with maybe global tool state setting all tools passive.\n  const BaseAnnotationTool = csTools.importInternal('base/BaseAnnotationTool');\n  tools.forEach(tool => {\n    if (tool.prototype instanceof BaseAnnotationTool) {\n      // BaseAnnotationTool would likely come from csTools lib exports\n      const toolName = new tool().name;\n      csTools.setToolPassive(toolName); // there may be a better place to determine name; may not be on uninstantiated class\n    }\n  });\n\n  csTools.setToolActive('Pan', { mouseButtonMask: 4 });\n  csTools.setToolActive('Zoom', { mouseButtonMask: 2 });\n  csTools.setToolActive('Wwwc', { mouseButtonMask: 1 });\n  csTools.setToolActive('StackScrollMouseWheel', {}); // TODO: Empty options should not be required\n  csTools.setToolActive('PanMultiTouch', { pointers: 2 }); // TODO: Better error if no options\n  csTools.setToolActive('ZoomTouchPinch', {});\n  csTools.setToolEnabled('Overlay', {});\n}\n\nconst _initMeasurementService = measurementService => {\n  /* Initialization */\n  const { toAnnotation, toMeasurement } = measurementServiceMappingsFactory(\n    measurementService\n  );\n  const csToolsVer4MeasurementSource = measurementService.createSource(\n    'CornerstoneTools',\n    '4'\n  );\n\n  /* Matching Criterias */\n  const matchingCriteria = {\n    valueType: measurementService.VALUE_TYPES.POLYLINE,\n    points: 2,\n  };\n\n  /* Mappings */\n  measurementService.addMapping(\n    csToolsVer4MeasurementSource,\n    'Length',\n    matchingCriteria,\n    toAnnotation,\n    toMeasurement\n  );\n\n  return csToolsVer4MeasurementSource;\n};\n\nconst _connectToolsToMeasurementService = measurementService => {\n  const csToolsVer4MeasurementSource = _initMeasurementService(\n    measurementService\n  );\n  const {\n    id: sourceId,\n    addOrUpdate,\n    getAnnotation,\n  } = csToolsVer4MeasurementSource;\n\n  /* Measurement Service Events */\n  cornerstone.events.addEventListener(\n    cornerstone.EVENTS.ELEMENT_ENABLED,\n    event => {\n      const {\n        MEASUREMENT_ADDED,\n        MEASUREMENT_UPDATED,\n      } = measurementService.EVENTS;\n\n      measurementService.subscribe(\n        MEASUREMENT_ADDED,\n        ({ source, measurement }) => {\n          if (![sourceId].includes(source.id)) {\n            const annotation = getAnnotation('Length', measurement.id);\n\n            console.log(\n              'Measurement Service [Cornerstone]: Measurement added',\n              measurement\n            );\n            console.log('Mapped annotation:', annotation);\n          }\n        }\n      );\n\n      measurementService.subscribe(\n        MEASUREMENT_UPDATED,\n        ({ source, measurement }) => {\n          if (![sourceId].includes(source.id)) {\n            const annotation = getAnnotation('Length', measurement.id);\n\n            console.log(\n              'Measurement Service [Cornerstone]: Measurement updated',\n              measurement\n            );\n            console.log('Mapped annotation:', annotation);\n          }\n        }\n      );\n\n      const addOrUpdateMeasurement = csToolsAnnotation => {\n        try {\n          const { toolName, toolType, measurementData } = csToolsAnnotation;\n          const csTool = toolName || measurementData.toolType || toolType;\n          csToolsAnnotation.id = measurementData._measurementServiceId;\n          const measurementServiceId = addOrUpdate(csTool, csToolsAnnotation);\n\n          if (!measurementData._measurementServiceId) {\n            addMeasurementServiceId(measurementServiceId, csToolsAnnotation);\n          }\n        } catch (error) {\n          console.warn('Failed to add or update measurement:', error);\n        }\n      };\n\n      const addMeasurementServiceId = (id, csToolsAnnotation) => {\n        const { measurementData } = csToolsAnnotation;\n        Object.assign(measurementData, { _measurementServiceId: id });\n      };\n\n      [\n        csTools.EVENTS.MEASUREMENT_ADDED,\n        csTools.EVENTS.MEASUREMENT_MODIFIED,\n      ].forEach(csToolsEvtName => {\n        event.detail.element.addEventListener(\n          csToolsEvtName,\n          ({ detail: csToolsAnnotation }) => {\n            console.log(`Cornerstone Element Event: ${csToolsEvtName}`);\n            addOrUpdateMeasurement(csToolsAnnotation);\n          }\n        );\n      });\n    }\n  );\n};\n","import { redux } from '@ohif/core';\n\nconst { setLayout } = redux.actions;\n\n/**\n * Update the current layout with a simple Cornerstone one\n *\n * @return void\n */\nconst setCornerstoneLayout = () => {\n  const layout = {\n    numRows: 1,\n    numColumns: 1,\n    viewports: [{ plugin: 'cornerstone' }],\n  };\n\n  const action = setLayout(layout);\n\n  window.store.dispatch(action);\n}\n\nexport default setCornerstoneLayout;\n","import React from 'react';\nimport cornerstone from 'cornerstone-core';\nimport cornerstoneTools from 'cornerstone-tools';\nimport PropTypes from 'prop-types';\n\nimport { ViewportDownloadForm } from '@ohif/ui';\nimport { utils } from '@ohif/core';\n\nimport { getEnabledElement } from './state';\n\nconst MINIMUM_SIZE = 100;\nconst DEFAULT_SIZE = 512;\nconst MAX_TEXTURE_SIZE = 10000;\n\nconst CornerstoneViewportDownloadForm = ({ onClose, activeViewportIndex }) => {\n  const activeEnabledElement = getEnabledElement(activeViewportIndex);\n\n  const enableViewport = viewportElement => {\n    if (viewportElement) {\n      cornerstone.enable(viewportElement);\n    }\n  };\n\n  const disableViewport = viewportElement => {\n    if (viewportElement) {\n      cornerstone.disable(viewportElement);\n    }\n  };\n\n  const updateViewportPreview = (viewportElement, downloadCanvas, fileType) =>\n    new Promise(resolve => {\n      cornerstone.fitToWindow(viewportElement);\n\n      viewportElement.addEventListener(\n        'cornerstoneimagerendered',\n        function updateViewport(event) {\n          const enabledElement = cornerstone.getEnabledElement(event.target)\n            .element;\n          const type = 'image/' + fileType;\n          const dataUrl = downloadCanvas.toDataURL(type, 1);\n\n          let newWidth = enabledElement.offsetHeight;\n          let newHeight = enabledElement.offsetWidth;\n\n          if (newWidth > DEFAULT_SIZE || newHeight > DEFAULT_SIZE) {\n            const multiplier = DEFAULT_SIZE / Math.max(newWidth, newHeight);\n            newHeight *= multiplier;\n            newWidth *= multiplier;\n          }\n\n          resolve({ dataUrl, width: newWidth, height: newHeight });\n\n          viewportElement.removeEventListener(\n            'cornerstoneimagerendered',\n            updateViewport\n          );\n        }\n      );\n    });\n\n  const loadImage = (activeViewport, viewportElement, width, height) =>\n    new Promise(resolve => {\n      if (activeViewport && viewportElement) {\n        const enabledElement = cornerstone.getEnabledElement(activeViewport);\n        const viewport = Object.assign({}, enabledElement.viewport);\n        delete viewport.scale;\n        viewport.translation = {\n          x: 0,\n          y: 0,\n        };\n\n        cornerstone.loadImage(enabledElement.image.imageId).then(image => {\n          cornerstone.displayImage(viewportElement, image);\n          cornerstone.setViewport(viewportElement, viewport);\n          cornerstone.resize(viewportElement, true);\n\n          const newWidth = Math.min(width || image.width, MAX_TEXTURE_SIZE);\n          const newHeight = Math.min(height || image.height, MAX_TEXTURE_SIZE);\n\n          resolve({ image, width: newWidth, height: newHeight });\n        });\n      }\n    });\n\n  const toggleAnnotations = (toggle, viewportElement) => {\n    cornerstoneTools.store.state.tools.forEach(({ name }) => {\n      if (toggle) {\n        cornerstoneTools.setToolEnabledForElement(viewportElement, name);\n      } else {\n        cornerstoneTools.setToolDisabledForElement(viewportElement, name);\n      }\n    });\n  };\n\n  const downloadBlob = (\n    filename,\n    fileType,\n    viewportElement,\n    downloadCanvas\n  ) => {\n    const file = `${filename}.${fileType}`;\n    const mimetype = `image/${fileType}`;\n\n    /* Handles JPEG images for IE11 */\n    if (downloadCanvas.msToBlob && fileType === 'jpeg') {\n      const image = downloadCanvas.toDataURL(mimetype, 1);\n      const blob = utils.b64toBlob(\n        image.replace('data:image/jpeg;base64,', ''),\n        mimetype\n      );\n      return window.navigator.msSaveBlob(blob, file);\n    }\n\n    viewportElement.querySelector('canvas').toBlob(blob => {\n      const URLObj = window.URL || window.webkitURL;\n      const a = document.createElement('a');\n      a.href = URLObj.createObjectURL(blob);\n      a.download = file;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    });\n  };\n\n  return (\n    <ViewportDownloadForm\n      onClose={onClose}\n      minimumSize={MINIMUM_SIZE}\n      maximumSize={MAX_TEXTURE_SIZE}\n      defaultSize={DEFAULT_SIZE}\n      canvasClass={'cornerstone-canvas'}\n      activeViewport={activeEnabledElement}\n      enableViewport={enableViewport}\n      disableViewport={disableViewport}\n      updateViewportPreview={updateViewportPreview}\n      loadImage={loadImage}\n      toggleAnnotations={toggleAnnotations}\n      downloadBlob={downloadBlob}\n    />\n  );\n};\n\nCornerstoneViewportDownloadForm.propTypes = {\n  onClose: PropTypes.func,\n  activeViewportIndex: PropTypes.number.isRequired,\n};\n\nexport default CornerstoneViewportDownloadForm;\n","import cornerstone from 'cornerstone-core';\nimport cornerstoneTools from 'cornerstone-tools';\nimport OHIF from '@ohif/core';\n\nimport setCornerstoneLayout from './utils/setCornerstoneLayout.js';\nimport { getEnabledElement } from './state';\nimport CornerstoneViewportDownloadForm from './CornerstoneViewportDownloadForm';\nconst scroll = cornerstoneTools.import('util/scroll');\n\nconst { studyMetadataManager } = OHIF.utils;\nconst { setViewportSpecificData } = OHIF.redux.actions;\n\nconst refreshCornerstoneViewports = () => {\n  cornerstone.getEnabledElements().forEach(enabledElement => {\n    if (enabledElement.image) {\n      cornerstone.updateImage(enabledElement.element);\n    }\n  });\n};\n\nconst commandsModule = ({ servicesManager }) => {\n  const actions = {\n    rotateViewport: ({ viewports, rotation }) => {\n      const enabledElement = getEnabledElement(viewports.activeViewportIndex);\n\n      if (enabledElement) {\n        let viewport = cornerstone.getViewport(enabledElement);\n        viewport.rotation += rotation;\n        cornerstone.setViewport(enabledElement, viewport);\n      }\n    },\n    flipViewportHorizontal: ({ viewports }) => {\n      const enabledElement = getEnabledElement(viewports.activeViewportIndex);\n\n      if (enabledElement) {\n        let viewport = cornerstone.getViewport(enabledElement);\n        viewport.hflip = !viewport.hflip;\n        cornerstone.setViewport(enabledElement, viewport);\n      }\n    },\n    flipViewportVertical: ({ viewports }) => {\n      const enabledElement = getEnabledElement(viewports.activeViewportIndex);\n\n      if (enabledElement) {\n        let viewport = cornerstone.getViewport(enabledElement);\n        viewport.vflip = !viewport.vflip;\n        cornerstone.setViewport(enabledElement, viewport);\n      }\n    },\n    scaleViewport: ({ direction, viewports }) => {\n      const enabledElement = getEnabledElement(viewports.activeViewportIndex);\n      const step = direction * 0.15;\n\n      if (enabledElement) {\n        if (step) {\n          let viewport = cornerstone.getViewport(enabledElement);\n          viewport.scale += step;\n          cornerstone.setViewport(enabledElement, viewport);\n        } else {\n          cornerstone.fitToWindow(enabledElement);\n        }\n      }\n    },\n    resetViewport: ({ viewports }) => {\n      const enabledElement = getEnabledElement(viewports.activeViewportIndex);\n\n      if (enabledElement) {\n        cornerstone.reset(enabledElement);\n      }\n    },\n    invertViewport: ({ viewports }) => {\n      const enabledElement = getEnabledElement(viewports.activeViewportIndex);\n\n      if (enabledElement) {\n        let viewport = cornerstone.getViewport(enabledElement);\n        viewport.invert = !viewport.invert;\n        cornerstone.setViewport(enabledElement, viewport);\n      }\n    },\n    // TODO: this is receiving `evt` from `ToolbarRow`. We could use it to have\n    //       better mouseButtonMask sets.\n    setToolActive: ({ toolName }) => {\n      if (!toolName) {\n        console.warn('No toolname provided to setToolActive command');\n      }\n      cornerstoneTools.setToolActive(toolName, { mouseButtonMask: 1 });\n    },\n    clearAnnotations: ({ viewports }) => {\n      const element = getEnabledElement(viewports.activeViewportIndex);\n      if (!element) {\n        return;\n      }\n\n      const enabledElement = cornerstone.getEnabledElement(element);\n      if (!enabledElement || !enabledElement.image) {\n        return;\n      }\n\n      const {\n        toolState,\n      } = cornerstoneTools.globalImageIdSpecificToolStateManager;\n      if (\n        !toolState ||\n        toolState.hasOwnProperty(enabledElement.image.imageId) === false\n      ) {\n        return;\n      }\n\n      const imageIdToolState = toolState[enabledElement.image.imageId];\n\n      const measurementsToRemove = [];\n\n      Object.keys(imageIdToolState).forEach(toolType => {\n        const { data } = imageIdToolState[toolType];\n\n        data.forEach(measurementData => {\n          const {\n            _id,\n            lesionNamingNumber,\n            measurementNumber,\n          } = measurementData;\n          if (!_id) {\n            return;\n          }\n\n          measurementsToRemove.push({\n            toolType,\n            _id,\n            lesionNamingNumber,\n            measurementNumber,\n          });\n        });\n      });\n\n      measurementsToRemove.forEach(measurementData => {\n        OHIF.measurements.MeasurementHandlers.onRemoved({\n          detail: {\n            toolType: measurementData.toolType,\n            measurementData,\n          },\n        });\n      });\n    },\n    nextImage: ({ viewports }) => {\n      const enabledElement = getEnabledElement(viewports.activeViewportIndex);\n      scroll(enabledElement, 1);\n    },\n    previousImage: ({ viewports }) => {\n      const enabledElement = getEnabledElement(viewports.activeViewportIndex);\n      scroll(enabledElement, -1);\n    },\n    getActiveViewportEnabledElement: ({ viewports }) => {\n      const enabledElement = getEnabledElement(viewports.activeViewportIndex);\n      return enabledElement;\n    },\n    showDownloadViewportModal: ({ title, viewports }) => {\n      const activeViewportIndex = viewports.activeViewportIndex;\n      const { UIModalService } = servicesManager.services;\n      if (UIModalService) {\n        UIModalService.show({\n          content: CornerstoneViewportDownloadForm,\n          title,\n          contentProps: {\n            activeViewportIndex,\n            onClose: UIModalService.hide,\n          },\n        });\n      }\n    },\n    updateTableWithNewMeasurementData({\n      toolType,\n      measurementNumber,\n      location,\n      description,\n    }) {\n      // Update all measurements by measurement number\n      const measurementApi = OHIF.measurements.MeasurementApi.Instance;\n      const measurements = measurementApi.tools[toolType].filter(\n        m => m.measurementNumber === measurementNumber\n      );\n\n      measurements.forEach(measurement => {\n        measurement.location = location;\n        measurement.description = description;\n\n        measurementApi.updateMeasurement(measurement.toolType, measurement);\n      });\n\n      measurementApi.syncMeasurementsAndToolData();\n\n      refreshCornerstoneViewports();\n    },\n    getNearbyToolData({ element, canvasCoordinates, availableToolTypes }) {\n      const nearbyTool = {};\n      let pointNearTool = false;\n\n      availableToolTypes.forEach(toolType => {\n        const elementToolData = cornerstoneTools.getToolState(\n          element,\n          toolType\n        );\n\n        if (!elementToolData) {\n          return;\n        }\n\n        elementToolData.data.forEach((toolData, index) => {\n          let elementToolInstance = cornerstoneTools.getToolForElement(\n            element,\n            toolType\n          );\n\n          if (!elementToolInstance) {\n            elementToolInstance = cornerstoneTools.getToolForElement(\n              element,\n              `${toolType}Tool`\n            );\n          }\n\n          if (!elementToolInstance) {\n            console.warn('Tool not found.');\n            return undefined;\n          }\n\n          if (\n            elementToolInstance.pointNearTool(\n              element,\n              toolData,\n              canvasCoordinates\n            )\n          ) {\n            pointNearTool = true;\n            nearbyTool.tool = toolData;\n            nearbyTool.index = index;\n            nearbyTool.toolType = toolType;\n          }\n        });\n\n        if (pointNearTool) {\n          return false;\n        }\n      });\n\n      return pointNearTool ? nearbyTool : undefined;\n    },\n    removeToolState: ({ element, toolType, tool }) => {\n      cornerstoneTools.removeToolState(element, toolType, tool);\n      cornerstone.updateImage(element);\n    },\n    setCornerstoneLayout: () => {\n      setCornerstoneLayout();\n    },\n    setWindowLevel: ({ viewports, window, level }) => {\n      const enabledElement = getEnabledElement(viewports.activeViewportIndex);\n\n      if (enabledElement) {\n        let viewport = cornerstone.getViewport(enabledElement);\n\n        viewport.voi = {\n          windowWidth: Number(window),\n          windowCenter: Number(level),\n        };\n        cornerstone.setViewport(enabledElement, viewport);\n      }\n    },\n    jumpToImage: ({\n      StudyInstanceUID,\n      SOPInstanceUID,\n      frameIndex,\n      activeViewportIndex,\n      refreshViewports = true,\n    }) => {\n      const study = studyMetadataManager.get(StudyInstanceUID);\n\n      const displaySet = study.findDisplaySet(ds => {\n        return (\n          ds.images &&\n          ds.images.find(i => i.getSOPInstanceUID() === SOPInstanceUID)\n        );\n      });\n\n      if (!displaySet) {\n        return;\n      }\n\n      displaySet.SOPInstanceUID = SOPInstanceUID;\n      displaySet.frameIndex = frameIndex;\n\n      window.store.dispatch(\n        setViewportSpecificData(activeViewportIndex, displaySet)\n      );\n\n      if (refreshViewports) {\n        refreshCornerstoneViewports();\n      }\n    },\n  };\n\n  const definitions = {\n    jumpToImage: {\n      commandFn: actions.jumpToImage,\n      storeContexts: [],\n      options: {},\n    },\n    getNearbyToolData: {\n      commandFn: actions.getNearbyToolData,\n      storeContexts: [],\n      options: {},\n    },\n    removeToolState: {\n      commandFn: actions.removeToolState,\n      storeContexts: [],\n      options: {},\n    },\n    updateTableWithNewMeasurementData: {\n      commandFn: actions.updateTableWithNewMeasurementData,\n      storeContexts: [],\n      options: {},\n    },\n    showDownloadViewportModal: {\n      commandFn: actions.showDownloadViewportModal,\n      storeContexts: ['viewports'],\n      options: {},\n    },\n    getActiveViewportEnabledElement: {\n      commandFn: actions.getActiveViewportEnabledElement,\n      storeContexts: ['viewports'],\n      options: {},\n    },\n    rotateViewportCW: {\n      commandFn: actions.rotateViewport,\n      storeContexts: ['viewports'],\n      options: { rotation: 90 },\n    },\n    rotateViewportCCW: {\n      commandFn: actions.rotateViewport,\n      storeContexts: ['viewports'],\n      options: { rotation: -90 },\n    },\n    invertViewport: {\n      commandFn: actions.invertViewport,\n      storeContexts: ['viewports'],\n      options: {},\n    },\n    flipViewportVertical: {\n      commandFn: actions.flipViewportVertical,\n      storeContexts: ['viewports'],\n      options: {},\n    },\n    flipViewportHorizontal: {\n      commandFn: actions.flipViewportHorizontal,\n      storeContexts: ['viewports'],\n      options: {},\n    },\n    scaleUpViewport: {\n      commandFn: actions.scaleViewport,\n      storeContexts: ['viewports'],\n      options: { direction: 1 },\n    },\n    scaleDownViewport: {\n      commandFn: actions.scaleViewport,\n      storeContexts: ['viewports'],\n      options: { direction: -1 },\n    },\n    fitViewportToWindow: {\n      commandFn: actions.scaleViewport,\n      storeContexts: ['viewports'],\n      options: { direction: 0 },\n    },\n    resetViewport: {\n      commandFn: actions.resetViewport,\n      storeContexts: ['viewports'],\n      options: {},\n    },\n    clearAnnotations: {\n      commandFn: actions.clearAnnotations,\n      storeContexts: ['viewports'],\n      options: {},\n    },\n    nextImage: {\n      commandFn: actions.nextImage,\n      storeContexts: ['viewports'],\n      options: {},\n    },\n    previousImage: {\n      commandFn: actions.previousImage,\n      storeContexts: ['viewports'],\n      options: {},\n    },\n    // TOOLS\n    setToolActive: {\n      commandFn: actions.setToolActive,\n      storeContexts: [],\n      options: {},\n    },\n    setZoomTool: {\n      commandFn: actions.setToolActive,\n      storeContexts: [],\n      options: { toolName: 'Zoom' },\n    },\n    setCornerstoneLayout: {\n      commandFn: actions.setCornerstoneLayout,\n      storeContexts: [],\n      options: {},\n      context: 'VIEWER',\n    },\n    setWindowLevel: {\n      commandFn: actions.setWindowLevel,\n      storeContexts: ['viewports'],\n      options: {},\n    },\n  };\n\n  return {\n    actions,\n    definitions,\n    defaultContext: 'ACTIVE_VIEWPORT::CORNERSTONE',\n  };\n};\n\nexport default commandsModule;\n","// TODO: A way to add Icons that don't already exist?\n// - Register them and add\n// - Include SVG Source/Inline?\n// - By URL, or own component?\n\n// What KINDS of toolbar buttons do we have...\n// - One's that dispatch commands\n// - One's that set tool's active\n// - More custom, like CINE\n//    - Built in for one's like this, or custom components?\n\n// Visible?\n// Disabled?\n// Based on contexts or misc. criteria?\n//  -- ACTIVE_ROUTE::VIEWER\n//  -- ACTIVE_VIEWPORT::CORNERSTONE\n// setToolActive commands should receive the button event that triggered\n// so we can do the \"bind to this button\" magic\n\nconst TOOLBAR_BUTTON_TYPES = {\n  COMMAND: 'command',\n  SET_TOOL_ACTIVE: 'setToolActive',\n  BUILT_IN: 'builtIn',\n};\n\nconst TOOLBAR_BUTTON_BEHAVIORS = {\n  CINE: 'CINE',\n  DOWNLOAD_SCREEN_SHOT: 'DOWNLOAD_SCREEN_SHOT',\n};\n\n/* TODO: Export enums through a extension manager. */\nconst enums = {\n  TOOLBAR_BUTTON_TYPES,\n  TOOLBAR_BUTTON_BEHAVIORS,\n};\n\nconst definitions = [\n  {\n    id: 'StackScroll',\n    label: 'Stack Scroll',\n    icon: 'bars',\n    //\n    type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\n    commandName: 'setToolActive',\n    commandOptions: { toolName: 'StackScroll' },\n  },\n  {\n    id: 'Zoom',\n    label: 'Zoom',\n    icon: 'search-plus',\n    //\n    type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\n    commandName: 'setToolActive',\n    commandOptions: { toolName: 'Zoom' },\n  },\n  {\n    id: 'Wwwc',\n    label: 'Levels',\n    icon: 'level',\n    //\n    type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\n    commandName: 'setToolActive',\n    commandOptions: { toolName: 'Wwwc' },\n  },\n  {\n    id: 'Pan',\n    label: 'Pan',\n    icon: 'arrows',\n    //\n    type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\n    commandName: 'setToolActive',\n    commandOptions: { toolName: 'Pan' },\n  },\n  {\n    id: 'Length',\n    label: 'Length',\n    icon: 'measure-temp',\n    //\n    type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\n    commandName: 'setToolActive',\n    commandOptions: { toolName: 'Length' },\n  },\n  {\n    id: 'ArrowAnnotate',\n    label: 'Annotate',\n    icon: 'measure-non-target',\n    //\n    type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\n    commandName: 'setToolActive',\n    commandOptions: { toolName: 'ArrowAnnotate' },\n  },\n  {\n    id: 'Angle',\n    label: 'Angle',\n    icon: 'angle-left',\n    //\n    type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\n    commandName: 'setToolActive',\n    commandOptions: { toolName: 'Angle' },\n  },\n  {\n    id: 'Reset',\n    label: 'Reset',\n    icon: 'reset',\n    //\n    type: TOOLBAR_BUTTON_TYPES.COMMAND,\n    commandName: 'resetViewport',\n  },\n  {\n    id: 'Cine',\n    label: 'CINE',\n    icon: 'youtube',\n    //\n    type: TOOLBAR_BUTTON_TYPES.BUILT_IN,\n    options: {\n      behavior: TOOLBAR_BUTTON_BEHAVIORS.CINE,\n    },\n  },\n  {\n    id: 'More',\n    label: 'More',\n    icon: 'ellipse-circle',\n    buttons: [\n      {\n        id: 'Magnify',\n        label: 'Magnify',\n        icon: 'circle',\n        //\n        type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\n        commandName: 'setToolActive',\n        commandOptions: { toolName: 'Magnify' },\n      },\n      {\n        id: 'WwwcRegion',\n        label: 'ROI Window',\n        icon: 'stop',\n        //\n        type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\n        commandName: 'setToolActive',\n        commandOptions: { toolName: 'WwwcRegion' },\n      },\n      {\n        id: 'DragProbe',\n        label: 'Probe',\n        icon: 'dot-circle',\n        //\n        type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\n        commandName: 'setToolActive',\n        commandOptions: { toolName: 'DragProbe' },\n      },\n      {\n        id: 'EllipticalRoi',\n        label: 'Ellipse',\n        icon: 'circle-o',\n        //\n        type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\n        commandName: 'setToolActive',\n        commandOptions: { toolName: 'EllipticalRoi' },\n      },\n      {\n        id: 'RectangleRoi',\n        label: 'Rectangle',\n        icon: 'square-o',\n        //\n        type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\n        commandName: 'setToolActive',\n        commandOptions: { toolName: 'RectangleRoi' },\n      },\n      {\n        id: 'Invert',\n        label: 'Invert',\n        icon: 'adjust',\n        //\n        type: TOOLBAR_BUTTON_TYPES.COMMAND,\n        commandName: 'invertViewport',\n      },\n      {\n        id: 'RotateRight',\n        label: 'Rotate Right',\n        icon: 'rotate-right',\n        //\n        type: TOOLBAR_BUTTON_TYPES.COMMAND,\n        commandName: 'rotateViewportCW',\n      },\n      {\n        id: 'FlipH',\n        label: 'Flip H',\n        icon: 'ellipse-h',\n        //\n        type: TOOLBAR_BUTTON_TYPES.COMMAND,\n        commandName: 'flipViewportHorizontal',\n      },\n      {\n        id: 'FlipV',\n        label: 'Flip V',\n        icon: 'ellipse-v',\n        //\n        type: TOOLBAR_BUTTON_TYPES.COMMAND,\n        commandName: 'flipViewportVertical',\n      },\n      {\n        id: 'Clear',\n        label: 'Clear',\n        icon: 'trash',\n        //\n        type: TOOLBAR_BUTTON_TYPES.COMMAND,\n        commandName: 'clearAnnotations',\n      },\n      {\n        id: 'Bidirectional',\n        label: 'Bidirectional',\n        icon: 'measure-target',\n        //\n        type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\n        commandName: 'setToolActive',\n        commandOptions: { toolName: 'Bidirectional' },\n      },\n      {\n        id: 'Download',\n        label: 'Download',\n        icon: 'create-screen-capture',\n        //\n        type: TOOLBAR_BUTTON_TYPES.BUILT_IN,\n        options: {\n          behavior: TOOLBAR_BUTTON_BEHAVIORS.DOWNLOAD_SCREEN_SHOT,\n          togglable: true,\n        },\n      },\n    ],\n  },\n  {\n    id: 'Exit2DMPR',\n    label: 'Exit 2D MPR',\n    icon: 'times',\n    //\n    type: TOOLBAR_BUTTON_TYPES.COMMAND,\n    commandName: 'setCornerstoneLayout',\n    context: 'ACTIVE_VIEWPORT::VTK',\n  },\n];\n\nexport default {\n  definitions,\n  defaultContext: 'ACTIVE_VIEWPORT::CORNERSTONE',\n};\n","import React from 'react';\nimport init from './init.js';\nimport commandsModule from './commandsModule.js';\nimport toolbarModule from './toolbarModule.js';\nimport CornerstoneViewportDownloadForm from './CornerstoneViewportDownloadForm';\nimport { version } from '../package.json';\n\nconst Component = React.lazy(() => {\n  return import('./OHIFCornerstoneViewport');\n});\n\nconst OHIFCornerstoneViewport = props => {\n  return (\n    <React.Suspense fallback={<div>Loading...</div>}>\n      <Component {...props} />\n    </React.Suspense>\n  );\n};\n\n/**\n *\n */\nexport default {\n  /**\n   * Only required property. Should be a unique value across all extensions.\n   */\n  id: 'cornerstone',\n  version,\n\n  /**\n   *\n   *\n   * @param {object} [configuration={}]\n   * @param {object|array} [configuration.csToolsConfig] - Passed directly to `initCornerstoneTools`\n   */\n  preRegistration({ servicesManager, configuration = {} }) {\n    init({ servicesManager, configuration });\n  },\n  getViewportModule({ commandsManager, appConfig }) {\n    const ExtendedOHIFCornerstoneViewport = props => {\n      /**\n       * TODO: This appears to be used to set the redux parameters for\n       * the viewport when new images are loaded. It's very ugly\n       * and we should remove it.\n       */\n      const onNewImageHandler = jumpData => {\n        /** Do not trigger all viewports to render unnecessarily */\n        jumpData.refreshViewports = false;\n        commandsManager.runCommand('jumpToImage', jumpData);\n      };\n\n      const { studyPrefetcher } = appConfig;\n      const isStackPrefetchEnabled =\n        studyPrefetcher && !studyPrefetcher.enabled;\n\n      return (\n        <OHIFCornerstoneViewport\n          {...props}\n          onNewImage={onNewImageHandler}\n          isStackPrefetchEnabled={isStackPrefetchEnabled}\n        />\n      );\n    };\n\n    return ExtendedOHIFCornerstoneViewport;\n  },\n  getToolbarModule() {\n    return toolbarModule;\n  },\n  getCommandsModule({ servicesManager }) {\n    return commandsModule({ servicesManager });\n  },\n};\n\nexport { CornerstoneViewportDownloadForm };\n","export default '0.0.50';\n","// https://github.com/maxmantz/redux-oidc/blob/master/docs/API.md\nimport { loadUser, createUserManager } from 'redux-oidc';\n\n/**\n * Creates a userManager from oidcSettings;\n * loads the user into the provided redux store\n * LINK: https://github.com/IdentityModel/oidc-client-js/wiki#configuration\n *\n * @param {*} store\n * @param {Object} oidcSettings\n * @param {string} oidcSettings.authServerUrl,\n * @param {string} oidcSettings.clientId,\n * @param {string} oidcSettings.authRedirectUri,\n * @param {string} oidcSettings.postLogoutRedirectUri,\n * @param {string} oidcSettings.responseType,\n * @param {string} oidcSettings.extraQueryParams,\n */\nexport default function(store, oidcSettings) {\n  if (!store || !oidcSettings) {\n    return;\n  }\n\n  const settings = {\n    ...oidcSettings,\n    automaticSilentRenew: true,\n    revokeAccessTokenOnSignout: true,\n    filterProtocolClaims: true,\n  };\n\n  const userManager = createUserManager(settings);\n\n  loadUser(store, userManager);\n\n  return userManager;\n}\n","import cornerstoneWADOImageLoader from 'cornerstone-wado-image-loader';\n\nlet initialized = false;\n\nconst MAX_CONCURRENCY = 6;\n\nexport default function initWebWorkers() {\n  const config = {\n    maxWebWorkers: Math.max(Math.min(navigator.hardwareConcurrency - 1, MAX_CONCURRENCY), 1),\n    startWebWorkersOnDemand: true,\n    taskConfiguration: {\n      decodeTask: {\n        initializeCodecsOnStartup: false,\n        usePDFJS: false,\n        strict: false,\n      },\n    },\n  };\n\n  if (!initialized) {\n    cornerstoneWADOImageLoader.webWorkerManager.initialize(config);\n    initialized = true;\n  }\n}\n","import {\n  applyMiddleware,\n  combineReducers,\n  createStore,\n  compose,\n} from 'redux/es/redux.js';\n\n// import { createLogger } from 'redux-logger';\nimport { reducer as oidcReducer } from 'redux-oidc';\nimport { redux } from '@ohif/core';\nimport thunkMiddleware from 'redux-thunk';\n\n// Combine our @ohif/core and oidc reducers\n// Set init data, using values found in localStorage\nconst { reducers, localStorage, sessionStorage } = redux;\nconst middleware = [thunkMiddleware];\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nreducers.oidc = oidcReducer;\n\nconst rootReducer = combineReducers(reducers);\nconst preloadedState = {\n  ...localStorage.loadState(),\n  ...sessionStorage.loadState(),\n};\n\nif (window.config && window.config.disableServersCache === true) {\n  delete preloadedState.servers;\n}\n\nconst store = createStore(\n  rootReducer,\n  preloadedState,\n  composeEnhancers(applyMiddleware(...middleware))\n);\n\n// When the store's preferences change,\n// Update our cached preferences in localStorage\nstore.subscribe(() => {\n  localStorage.saveState({\n    preferences: store.getState().preferences,\n  });\n  sessionStorage.saveState({\n    servers: store.getState().servers,\n  });\n});\n\nexport default store;\n","import { redux, utils } from '@ohif/core';\nimport store from './../../store';\n\nconst commandsModule = ({ commandsManager }) => {\n  const { setViewportActive, setActiveViewportSpecificData } = redux.actions;\n\n  const actions = {\n    updateActiveViewport: ({ viewports, direction }) => {\n      const { viewportSpecificData, activeViewportIndex } = viewports;\n      const maxIndex = Object.keys(viewportSpecificData).length - 1;\n\n      let newIndex = activeViewportIndex + direction;\n      newIndex = newIndex > maxIndex ? 0 : newIndex;\n      newIndex = newIndex < 0 ? maxIndex : newIndex;\n\n      store.dispatch(setViewportActive(newIndex));\n    },\n    setWindowLevelPreset: ({ viewports, preset }) => {\n      const state = store.getState();\n      const { preferences = {} } = state;\n      const { window, level } =\n        preferences.windowLevelData && preferences.windowLevelData[preset];\n\n      if (window && level) {\n        commandsManager.runCommand('setWindowLevel', {\n          viewports,\n          window,\n          level,\n        });\n      }\n    },\n    updateViewportDisplaySet: ({ viewports, direction }) => {\n      const viewportSpecificData = { ...viewports.viewportSpecificData };\n      const activeViewport =\n        viewportSpecificData[viewports.activeViewportIndex];\n      const studyMetadata = utils.studyMetadataManager.get(\n        activeViewport.StudyInstanceUID\n      );\n\n      if (!studyMetadata) {\n        return;\n      }\n\n      const allDisplaySets = studyMetadata.getDisplaySets();\n      const currentDisplaySetIndex = allDisplaySets.findIndex(\n        displaySet =>\n          displaySet.displaySetInstanceUID ===\n          activeViewport.displaySetInstanceUID\n      );\n      if (currentDisplaySetIndex < 0) {\n        return;\n      }\n\n      const newDisplaySetIndex = currentDisplaySetIndex + direction;\n      const newDisplaySetData = allDisplaySets[newDisplaySetIndex];\n      if (!newDisplaySetData) {\n        return;\n      }\n\n      store.dispatch(setActiveViewportSpecificData(newDisplaySetData));\n    },\n  };\n\n  const definitions = {\n    // Next/Previous active viewport\n    incrementActiveViewport: {\n      commandFn: actions.updateActiveViewport,\n      storeContexts: ['viewports'],\n      options: { direction: 1 },\n    },\n    decrementActiveViewport: {\n      commandFn: actions.updateActiveViewport,\n      storeContexts: ['viewports'],\n      options: { direction: -1 },\n    },\n    // Window level Presets\n    windowLevelPreset1: {\n      commandFn: actions.setWindowLevelPreset,\n      storeContexts: ['viewports'],\n      options: { preset: 1 },\n    },\n    windowLevelPreset2: {\n      commandFn: actions.setWindowLevelPreset,\n      storeContexts: ['viewports'],\n      options: { preset: 2 },\n    },\n    windowLevelPreset3: {\n      commandFn: actions.setWindowLevelPreset,\n      storeContexts: ['viewports'],\n      options: { preset: 3 },\n    },\n    windowLevelPreset4: {\n      commandFn: actions.setWindowLevelPreset,\n      storeContexts: ['viewports'],\n      options: { preset: 4 },\n    },\n    windowLevelPreset5: {\n      commandFn: actions.setWindowLevelPreset,\n      storeContexts: ['viewports'],\n      options: { preset: 5 },\n    },\n    windowLevelPreset6: {\n      commandFn: actions.setWindowLevelPreset,\n      storeContexts: ['viewports'],\n      options: { preset: 6 },\n    },\n    windowLevelPreset7: {\n      commandFn: actions.setWindowLevelPreset,\n      storeContexts: ['viewports'],\n      options: { preset: 7 },\n    },\n    windowLevelPreset8: {\n      commandFn: actions.setWindowLevelPreset,\n      storeContexts: ['viewports'],\n      options: { preset: 8 },\n    },\n    windowLevelPreset9: {\n      commandFn: actions.setWindowLevelPreset,\n      storeContexts: ['viewports'],\n      options: { preset: 9 },\n    },\n    nextViewportDisplaySet: {\n      commandFn: actions.updateViewportDisplaySet,\n      storeContexts: ['viewports'],\n      options: { direction: 1 },\n    },\n    previousViewportDisplaySet: {\n      commandFn: actions.updateViewportDisplaySet,\n      storeContexts: ['viewports'],\n      options: { direction: -1 },\n    },\n  };\n\n  return {\n    definitions,\n    defaultContext: 'VIEWER',\n  };\n};\n\nexport default commandsModule;\n","import commandsModule from './commandsModule.js';\n\nexport default {\n  id: 'generic-viewer-commands',\n  get version() {\n    return window.version;\n  },\n  getCommandsModule({ commandsManager }) {\n    return commandsModule({ commandsManager });\n  },\n};\n","import { measurements, utils } from '@ohif/core';\nimport { servicesManager } from './../../App.js';\nconst { MeasurementApi } = measurements;\nconst { studyMetadataManager } = utils;\n\n// TODO: Move this function to OHIF itself so we can use it on the OHIF measurment table (when it is finished)\n\n/**\n * Activates a set of measurements\n *\n * @param measurementData\n * @param viewportsState\n * @param timepointManagerState\n * @param options\n */\nexport default function jumpToRowItem(\n  measurementData,\n  viewportsState,\n  timepointManagerState,\n  options = { invertViewportTimepointsOrder: false, childToolKey: null }\n) {\n  const viewports = viewportsState.layout.viewports;\n  const activeViewportIndex = viewportsState.activeViewportIndex;\n  const activeViewport = viewports[activeViewportIndex];\n  if (activeViewport.vtk) {\n    const error = new Error('Measurements are not supported by the MPR mode.');\n    const { UINotificationService, LoggerService } = servicesManager.services;\n    LoggerService.error({ error, message: error.message });\n    UINotificationService.show({\n      title: 'Measurements panel',\n      message: error.message,\n      type: 'warning',\n      autoClose: true,\n    });\n    return {\n      viewportSpecificData: [],\n      layout: [], // TODO: if we need to change layout, we should return this here\n    };\n  }\n\n  const numViewports = viewportsState.layout.viewports.length;\n  const numTimepoints = timepointManagerState.timepoints.length;\n  const { measurements, timepoints } = timepointManagerState;\n  const numViewportsToUpdate = Math.min(numTimepoints, numViewports);\n  const { toolType, measurementNumber } = measurementData;\n\n  if (options.invertViewportTimepointsOrder) {\n    timepoints.reverse();\n  }\n\n  const measurementsForToolGroup = measurements[toolType];\n\n  // Retrieve the measurements data\n  const measurementsToJumpTo = [];\n  for (let i = 0; i < numViewportsToUpdate; i++) {\n    const { timepointId } = timepoints[i];\n\n    const dataAtThisTimepoint = measurementsForToolGroup.find(entry => {\n      return (\n        entry.timepointId === timepointId &&\n        entry.measurementNumber === measurementNumber\n      );\n    });\n\n    if (!dataAtThisTimepoint) {\n      measurementsToJumpTo.push(null);\n      continue;\n    }\n\n    let measurement = dataAtThisTimepoint;\n\n    const { tool } = MeasurementApi.getToolConfiguration(toolType);\n    if (options.childToolKey) {\n      measurement = dataAtThisTimepoint[options.childToolKey];\n    } else if (Array.isArray(tool.childTools)) {\n      const key = tool.childTools.find(key => !!dataAtThisTimepoint[key]);\n      measurement = dataAtThisTimepoint[key];\n    }\n\n    measurementsToJumpTo.push(measurement);\n  }\n\n  // TODO: Add a single viewports state action which allows\n  // - viewportData to be set\n  // - layout to be set\n  // - activeViewport to be set\n\n  // Needs to update viewports.viewportData state to set image set data\n\n  const displaySetContainsSopInstance = (displaySet, SOPInstanceUID) => {\n    if (!displaySet.images || !displaySet.images.length) {\n      return;\n    }\n\n    return displaySet.images.find(\n      image => image.getSOPInstanceUID() === SOPInstanceUID\n    );\n  };\n\n  const viewportSpecificData = [];\n  measurementsToJumpTo.forEach((data, viewportIndex) => {\n    // Skip if there is no measurement to jump\n    if (!data) {\n      return;\n    }\n\n    const study = studyMetadataManager.get(data.StudyInstanceUID);\n    if (!study) {\n      throw new Error('Study not found.');\n    }\n\n    const displaySet = study.findDisplaySet(displaySet => {\n      return displaySetContainsSopInstance(displaySet, data.SOPInstanceUID);\n    });\n\n    if (!displaySet) {\n      throw new Error('Display set not found.');\n    }\n\n    displaySet.SOPInstanceUID = data.SOPInstanceUID;\n    if (data.frameIndex) {\n      displaySet.frameIndex = data.frameIndex;\n    }\n\n    viewportIndex =\n      (viewportIndex + viewportsState.activeViewportIndex) % numViewports;\n    viewportSpecificData.push({\n      viewportIndex,\n      displaySet,\n    });\n  });\n\n  return {\n    viewportSpecificData,\n    layout: [], // TODO: if we need to change layout, we should return this here\n  };\n}\n","import { connect } from 'react-redux';\nimport { MeasurementTable } from '@ohif/ui';\nimport OHIF, { DICOMSR } from '@ohif/core';\nimport moment from 'moment';\nimport cornerstone from 'cornerstone-core';\n\nimport jumpToRowItem from './jumpToRowItem.js';\n\nconst { setViewportSpecificData } = OHIF.redux.actions;\nconst { MeasurementApi } = OHIF.measurements;\n\n/**\n * Takes a list of objects and a property and return the list grouped by the property\n *\n * @param {Array} list - The objects to be grouped by\n * @param {string} props - The property to group the objects\n * @returns {Object}\n */\nfunction groupBy(list, props) {\n  return list.reduce((a, b) => {\n    (a[b[props]] = a[b[props]] || []).push(b);\n    return a;\n  }, {});\n}\n\n/**\n *  Takes a list of tools grouped and return all tools separately\n *\n * @param {Array} [toolGroups=[]] - The grouped tools\n * @returns {Array} - The list of all tools on all groups\n */\nfunction getAllTools(toolGroups = []) {\n  let tools = [];\n  toolGroups.forEach(toolGroup => (tools = tools.concat(toolGroup.childTools)));\n\n  return tools;\n}\n\n/**\n * Takes measurementData and build the measurement text to be used into the table\n *\n * @param {Object} [measurementData={}]\n * @param {string} measurementData.location - The measurement location\n * @param {string} measurementData.description - The measurement description\n * @returns {string}\n */\nfunction getMeasurementText(measurementData = {}) {\n  const defaultText = '...';\n  const { location = '', description = '' } = measurementData;\n  const result = location + (description ? ` (${description})` : '');\n\n  return result || defaultText;\n}\n\n/**\n * Takes a list of measurements grouped by measurement numbers and return each measurement data by available timepoint\n *\n * @param {Array} measurementNumberList - The list of measurements\n * @param {Array} timepoints - The list of available timepoints\n * @param {Function} displayFunction - The function that builds the display text by each tool\n * @returns\n */\nfunction getDataForEachMeasurementNumber(\n  measurementNumberList,\n  timepoints,\n  displayFunction\n) {\n  const data = [];\n  // on each measurement number we should get each measurement data by available timepoint\n  measurementNumberList.forEach(measurement => {\n    timepoints.forEach(timepoint => {\n      const eachData = {\n        displayText: '...',\n      };\n      if (measurement.timepointId === timepoint.timepointId) {\n        eachData.displayText = displayFunction(measurement);\n      }\n      data.push(eachData);\n    });\n  });\n\n  return data;\n}\n\n/**\n * Take a measurement toolName and return if any warnings\n *\n * @param {string} toolName - The tool name\n * @returns {string}\n */\nfunction getWarningsForMeasurement(toolName) {\n  const isToolSupported = DICOMSR.isToolSupported(toolName);\n\n  return {\n    hasWarnings: !isToolSupported,\n    warningTitle: isToolSupported ? '' : 'Unsupported Tool',\n    warningList: isToolSupported\n      ? []\n      : [`${toolName} cannot be persisted at this time`],\n  };\n}\n\n/**\n * Take measurements from MeasurementAPI structure and convert into a measurementTable structure\n *\n * @param {Object} toolCollections - The list of all measurement grouped by groupTool and toolName\n * @param {Array} timepoints - The list of available timepoints\n * @returns\n */\nfunction convertMeasurementsToTableData(toolCollections, timepoints) {\n  const config = OHIF.measurements.MeasurementApi.getConfiguration();\n  const toolGroups = config.measurementTools;\n  const tools = getAllTools(toolGroups);\n\n  const tableMeasurements = toolGroups.map(toolGroup => {\n    return {\n      groupName: toolGroup.name,\n      groupId: toolGroup.id,\n      measurements: [],\n    };\n  });\n\n  Object.keys(toolCollections).forEach(toolId => {\n    const toolMeasurements = toolCollections[toolId];\n\n    const tool = tools.find(tool => tool.id === toolId);\n    const { displayFunction } = tool.options.measurementTable;\n\n    // Group by measurementNumber so we can display then all in the same line\n    const groupedMeasurements = groupBy(toolMeasurements, 'measurementNumber');\n\n    Object.keys(groupedMeasurements).forEach(groupedMeasurementsIndex => {\n      const measurementNumberList =\n        groupedMeasurements[groupedMeasurementsIndex];\n\n      const measurementData = measurementNumberList[0];\n      const {\n        measurementNumber,\n        lesionNamingNumber,\n        toolType,\n        isReadOnly,\n      } = measurementData;\n      const measurementId = measurementData._id;\n\n      const {\n        hasWarnings,\n        warningTitle,\n        warningList,\n      } = getWarningsForMeasurement(toolType);\n\n      //check if all measurements with same measurementNumber will have same LABEL\n      const tableMeasurement = {\n        itemNumber: lesionNamingNumber,\n        label: getMeasurementText(measurementData),\n        labels: measurementData.labels,\n        isSRText: measurementData.isSRText,\n        measurementId,\n        measurementNumber,\n        lesionNamingNumber,\n        toolType,\n        hasWarnings,\n        isReadOnly,\n        warningTitle,\n        warningList,\n        isSplitLesion: false, //TODO\n        data: getDataForEachMeasurementNumber(\n          measurementNumberList,\n          timepoints,\n          displayFunction\n        ),\n      };\n\n      // find the group object for the tool\n      const toolGroupMeasurements = tableMeasurements.find(group => {\n        return group.groupId === tool.toolGroup;\n      });\n      // inject the new measurement for this measurementNumer\n      toolGroupMeasurements.measurements.push(tableMeasurement);\n    });\n  });\n\n  // Sort measurements by lesion naming number\n  tableMeasurements.forEach(tm => {\n    tm.measurements.sort((m1, m2) =>\n      m1.lesionNamingNumber > m2.lesionNamingNumber ? 1 : -1\n    );\n  });\n\n  return tableMeasurements;\n}\n\n/**\n * Take a list of available timepoints and return a list header information for each timepoint\n *\n * @param {Array} timepoints - The list of available timepoints\n * @param {string} timepoints[].latestDate - The date of the last study taken on the timepoint\n * @returns {{label: string, key: string, date: string}[]}\n */\nfunction convertTimepointsToTableData(timepoints) {\n  if (!timepoints || !timepoints.length) {\n    return [];\n  }\n\n  return [\n    {\n      label: 'Study date:',\n      key: 'StudyDate',\n      date: moment(timepoints[0].latestDate).format('DD-MMM-YY'),\n    },\n  ];\n}\n\n/**\n *  Takes server type and return a function or undefined\n *\n * @param {string} serverType - The server type\n * @returns {undefined|Function}\n */\nfunction getSaveFunction(serverType) {\n  if (serverType === 'dicomWeb') {\n    return () => {\n      const measurementApi = OHIF.measurements.MeasurementApi.Instance;\n      const promise = measurementApi.storeMeasurements();\n      return promise;\n    };\n  }\n}\n\nconst mapStateToProps = state => {\n  const { timepointManager, servers } = state;\n  const { timepoints, measurements } = timepointManager;\n  const activeServer = servers.servers.find(a => a.active === true);\n  const saveFunction = getSaveFunction(activeServer.type);\n\n  return {\n    timepoints: convertTimepointsToTableData(timepoints),\n    measurementCollection: convertMeasurementsToTableData(\n      measurements,\n      timepoints\n    ),\n    timepointManager: state.timepointManager,\n    viewports: state.viewports,\n    saveFunction,\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    dispatchRelabel: (event, measurementData, viewportsState) => {\n      event.persist();\n\n      const activeViewportIndex =\n        (viewportsState && viewportsState.activeViewportIndex) || 0;\n\n      const enabledElements = cornerstone.getEnabledElements();\n      if (!enabledElements || enabledElements.length <= activeViewportIndex) {\n        OHIF.log.error('Failed to find the enabled element');\n        return;\n      }\n\n      const { toolType, measurementId } = measurementData;\n      const tool = MeasurementApi.Instance.tools[toolType].find(measurement => {\n        return measurement._id === measurementId;\n      });\n\n      // Clone the tool not to set empty location initially\n      const toolForLocation = Object.assign({}, tool, { location: null });\n\n      if (ownProps.onRelabel) {\n        ownProps.onRelabel(toolForLocation);\n      }\n    },\n    dispatchEditDescription: (event, measurementData, viewportsState) => {\n      event.persist();\n\n      const activeViewportIndex =\n        (viewportsState && viewportsState.activeViewportIndex) || 0;\n\n      const enabledElements = cornerstone.getEnabledElements();\n      if (!enabledElements || enabledElements.length <= activeViewportIndex) {\n        OHIF.log.error('Failed to find the enabled element');\n        return;\n      }\n\n      const { toolType, measurementId } = measurementData;\n      const tool = MeasurementApi.Instance.tools[toolType].find(measurement => {\n        return measurement._id === measurementId;\n      });\n\n      if (ownProps.onEditDescription) {\n        ownProps.onEditDescription(tool);\n      }\n    },\n    dispatchJumpToRowItem: (\n      measurementData,\n      viewportsState,\n      timepointManagerState,\n      options\n    ) => {\n      const actionData = jumpToRowItem(\n        measurementData,\n        viewportsState,\n        timepointManagerState,\n        dispatch,\n        options\n      );\n\n      actionData.viewportSpecificData.forEach(viewportSpecificData => {\n        const { viewportIndex, displaySet } = viewportSpecificData;\n\n        dispatch(setViewportSpecificData(viewportIndex, displaySet));\n      });\n\n      const { toolType, measurementNumber } = measurementData;\n      const measurementApi = MeasurementApi.Instance;\n\n      Object.keys(measurementApi.tools).forEach(toolType => {\n        const measurements = measurementApi.tools[toolType];\n\n        measurements.forEach(measurement => {\n          measurement.active = false;\n        });\n      });\n\n      const measurementsToActive = measurementApi.tools[toolType].filter(\n        measurement => {\n          return measurement.measurementNumber === measurementNumber;\n        }\n      );\n\n      measurementsToActive.forEach(measurementToActive => {\n        measurementToActive.active = true;\n      });\n\n      measurementApi.syncMeasurementsAndToolData();\n\n      cornerstone.getEnabledElements().forEach(enabledElement => {\n        if (enabledElement.image) {\n          cornerstone.updateImage(enabledElement.element);\n        }\n      });\n\n      // Needs to update viewports.layout state to set layout\n      //const layout = actionData.layout;\n      //dispatch(setLayout(layout))\n\n      // Needs to update viewports.activeViewportIndex to the first updated viewport\n      //const viewportIndex = actionData.viewportIndex;\n      //dispatch(setViewportActive(viewportIndex));\n\n      // Needs to update timepointsManager.measurements state to set active measurementId\n      // TODO: Not yet implemented\n      //dispatch(setActiveMeasurement(measurementData.measurementId))\n\n      // (later): Needs to set some property on state.extensions.cornerstone to synchronize viewport scrolling\n    },\n  };\n};\n\nconst mergeProps = (propsFromState, propsFromDispatch, ownProps) => {\n  const { timepoints, saveFunction, measurementCollection } = propsFromState;\n  const { onSaveComplete, selectedMeasurementNumber } = ownProps;\n\n  return {\n    timepoints,\n    saveFunction,\n    measurementCollection,\n    onSaveComplete,\n    selectedMeasurementNumber,\n    ...propsFromDispatch,\n    onItemClick: (event, measurementData) => {\n      // TODO: Add timepointId to .data for measurementData?\n      // TODO: Tooltype should be on the level below? This should\n      // provide the entire row item?\n\n      const viewportsState = propsFromState.viewports;\n      const timepointManagerState = propsFromState.timepointManager;\n\n      // TODO: invertViewportTimepointsOrder should be stored in / read from user preferences\n      // TODO: childToolKey should come from the measurement table when it supports child tools\n      const options = {\n        invertViewportTimepointsOrder: false,\n        childToolKey: null,\n      };\n\n      propsFromDispatch.dispatchJumpToRowItem(\n        measurementData,\n        viewportsState,\n        timepointManagerState,\n        options\n      );\n    },\n    onRelabelClick: (event, measurementData) => {\n      const viewportsState = propsFromState.viewports;\n      propsFromDispatch.dispatchRelabel(event, measurementData, viewportsState);\n    },\n    onEditDescriptionClick: (event, measurementData) => {\n      const viewportsState = propsFromState.viewports;\n      propsFromDispatch.dispatchEditDescription(\n        event,\n        measurementData,\n        viewportsState\n      );\n    },\n    onDeleteClick: (event, measurementData) => {\n      const { MeasurementHandlers } = OHIF.measurements;\n\n      MeasurementHandlers.onRemoved({\n        detail: {\n          toolType: measurementData.toolType,\n          measurementData: {\n            _id: measurementData.measurementId,\n            lesionNamingNumber: measurementData.lesionNamingNumber,\n            measurementNumber: measurementData.measurementNumber,\n          },\n        },\n      });\n    },\n  };\n};\n\nconst ConnectedMeasurementTable = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps\n)(MeasurementTable);\n\nexport default ConnectedMeasurementTable;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './LabellingTransition.css';\n\n// If these variables changes, CSS must be updated\nconst transitionDuration = 500;\nconst transitionClassName = 'labelling';\nconst transitionOnAppear = true;\n\nexport default class LabellingTransition extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    displayComponent: PropTypes.bool.isRequired,\n    onTransitionExit: PropTypes.func.isRequired,\n  };\n  render() {\n    return (\n      <CSSTransition\n        in={this.props.displayComponent}\n        appear={transitionOnAppear}\n        timeout={transitionDuration}\n        classNames={transitionClassName}\n        onExited={this.props.onTransitionExit}\n      >\n        {this.props.children}\n      </CSSTransition>\n    );\n  }\n}\n","const items = [\n  'Abdomen/Chest Wall',\n  'Adrenal',\n  'Bladder',\n  'Bone',\n  'Brain',\n  'Breast',\n  'Colon',\n  'Esophagus',\n  'Extremities',\n  'Gallbladder',\n  'Kidney',\n  'Liver',\n  'Lung',\n  'Lymph Node',\n  'Mediastinum/Hilum',\n  'Muscle',\n  'Neck',\n  'Other Soft Tissue',\n  'Ovary',\n  'Pancreas',\n  'Pelvis',\n  'Peritoneum/Omentum',\n  'Prostate',\n  'Retroperitoneum',\n  'Small Bowel',\n  'Spleen',\n  'Stomach',\n  'Subcutaneous',\n];\n\nconst OHIFLabellingData = items.map(item => {\n  return {\n    label: item,\n    value: item,\n  };\n});\n\nexport default OHIFLabellingData;\n","import { Component } from 'react';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './SimpleDialog.css';\n\nclass SimpleDialog extends Component {\n  static defaultProps = {\n    componentStyle: {},\n    rootClass: '',\n  };\n\n  render() {\n    return (\n      <div\n        className={`simpleDialog ${this.props.rootClass}`}\n        ref={this.props.componentRef}\n        style={this.props.componentStyle}\n      >\n        <form onSubmit={this.props.onConfirm}>\n          <div className=\"header\">\n            <span className=\"closeBtn\" onClick={this.props.onClose}>\n              <span className=\"closeIcon\">x</span>\n            </span>\n            <h4 className=\"title\">{this.props.headerTitle}</h4>\n          </div>\n          <div className=\"content\">{this.props.children}</div>\n          <div className=\"footer\">\n            <button\n              type=\"button\"\n              className=\"btn btn-cancel\"\n              onClick={this.props.onClose}\n            >\n              Cancel\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn btn-confirm\"\n              onClick={this.props.onConfirm}\n            >\n              Confirm\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nSimpleDialog.propTypes = {\n  headerTitle: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onConfirm: PropTypes.func.isRequired,\n};\n\nexport default SimpleDialog;\n","import { Component } from 'react';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport SimpleDialog from '../SimpleDialog/SimpleDialog.js';\nimport './EditDescriptionDialog.css';\n\nexport default class EditDescriptionDialog extends Component {\n  static propTypes = {\n    description: PropTypes.string,\n    measurementData: PropTypes.object.isRequired,\n    onCancel: PropTypes.func.isRequired,\n    onUpdate: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      description: props.measurementData.description || '',\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.description !== prevProps.description) {\n      this.setState({\n        description: this.props.description,\n      });\n    }\n  }\n\n  render() {\n    return (\n      <SimpleDialog\n        headerTitle=\"Edit Description\"\n        onClose={this.onClose}\n        onConfirm={this.onConfirm}\n        rootClass=\"editDescriptionDialog\"\n      >\n        <input\n          value={this.state.description}\n          className=\"simpleDialogInput\"\n          id=\"description\"\n          autoComplete=\"off\"\n          autoFocus\n          onChange={this.handleChange}\n        />\n      </SimpleDialog>\n    );\n  }\n\n  onClose = () => {\n    this.props.onCancel();\n  };\n\n  onConfirm = e => {\n    e.preventDefault();\n    this.props.onUpdate(this.state.description);\n  };\n\n  handleChange = event => {\n    this.setState({ description: event.target.value });\n  };\n}\n","import { Icon, SelectTree } from '@ohif/ui';\nimport React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport cloneDeep from 'lodash.clonedeep';\n\nimport LabellingTransition from './LabellingTransition.js';\nimport OHIFLabellingData from './OHIFLabellingData.js';\nimport EditDescriptionDialog from './../EditDescriptionDialog/EditDescriptionDialog.js';\nimport './LabellingFlow.css';\n\nconst LabellingFlow = ({\n  measurementData,\n  editLocation,\n  editDescription,\n  skipAddLabelButton,\n  updateLabelling,\n  labellingDoneCallback,\n  editDescriptionOnDialog,\n}) => {\n  const [fadeOutTimer, setFadeOutTimer] = useState();\n  const [showComponent, setShowComponent] = useState(true);\n  const descriptionInput = useRef();\n  const [state, setState] = useState({\n    measurementData,\n    editLocation,\n    editDescription,\n    skipAddLabelButton,\n  });\n\n  useEffect(() => {\n    const newMeasurementData = cloneDeep(measurementData);\n\n    if (editDescription) {\n      newMeasurementData.description = undefined;\n    }\n\n    if (editLocation) {\n      newMeasurementData.location = undefined;\n    }\n\n    let newEditLocation = editLocation;\n    if (!editDescription && !editLocation) {\n      newEditLocation = true;\n    }\n\n    setState(state => ({\n      ...state,\n      editLocation: newEditLocation,\n      measurementData: newMeasurementData,\n    }));\n  }, [editDescription, editLocation, measurementData]);\n\n  useEffect(() => {\n    if (descriptionInput.current) {\n      descriptionInput.current.focus();\n    }\n  }, [state]);\n\n  const relabel = event =>\n    setState(state => ({ ...state, editLocation: true }));\n\n  const setDescriptionUpdateMode = () => {\n    descriptionInput.current.focus();\n    setState(state => ({ ...state, editDescription: true }));\n  };\n\n  const descriptionCancel = () => {\n    const { description = '' } = cloneDeep(state);\n    descriptionInput.current.value = description;\n    setState(state => ({ ...state, editDescription: false }));\n  };\n\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      descriptionSave();\n    }\n  };\n\n  const descriptionSave = () => {\n    const description = descriptionInput.current.value;\n    updateLabelling({ description });\n\n    setState(state => ({\n      ...state,\n      description,\n      editDescription: false,\n    }));\n  };\n\n  const selectTreeSelectCallback = (event, itemSelected) => {\n    const location = itemSelected.value;\n    const locationLabel = itemSelected.label;\n    updateLabelling({ location });\n\n    setState(state => ({\n      ...state,\n      editLocation: false,\n      measurementData: {\n        ...state.measurementData,\n        location,\n        locationLabel,\n      },\n    }));\n  };\n\n  const showLabelling = () => {\n    setState(state => ({\n      ...state,\n      skipAddLabelButton: true,\n      editLocation: false,\n    }));\n  };\n\n  /*\n   * Waits for 1 sec to dismiss the labelling component.\n   *\n   */\n  const fadeOutAndLeave = () =>\n    setFadeOutTimer(setTimeout(fadeOutAndLeaveFast, 1000));\n\n  const fadeOutAndLeaveFast = () => setShowComponent(false);\n\n  const clearFadeOutTimer = () => {\n    if (fadeOutTimer) {\n      clearTimeout(fadeOutTimer);\n      setFadeOutTimer(null);\n    }\n  };\n\n  const descriptionDialogUpdate = description => {\n    updateLabelling({ description });\n    labellingDoneCallback();\n  };\n\n  const labellingStateFragment = () => {\n    const { skipAddLabelButton, editLocation, measurementData } = state;\n    const { description, locationLabel, location } = measurementData;\n\n    if (!skipAddLabelButton) {\n      return (\n        <button\n          type=\"button\"\n          className=\"addLabelButton\"\n          onClick={showLabelling}\n        >\n          {location ? 'Edit' : 'Add'} Label\n        </button>\n      );\n    } else {\n      if (editLocation) {\n        return (\n          <SelectTree\n            items={OHIFLabellingData}\n            columns={1}\n            onSelected={selectTreeSelectCallback}\n            selectTreeFirstTitle=\"Assign Label\"\n          />\n        );\n      } else {\n        return (\n          <>\n            <div className=\"checkIconWrapper\" onClick={fadeOutAndLeaveFast}>\n              <Icon name=\"check\" className=\"checkIcon\" />\n            </div>\n            <div className=\"locationDescriptionWrapper\">\n              <div className=\"location\">{locationLabel}</div>\n              <div className=\"description\">\n                <input\n                  id=\"descriptionInput\"\n                  ref={descriptionInput}\n                  defaultValue={description || ''}\n                  autoComplete=\"off\"\n                  onKeyPress={handleKeyPress}\n                />\n              </div>\n            </div>\n            <div className=\"commonButtons\">\n              <button\n                type=\"button\"\n                className=\"commonButton left\"\n                onClick={relabel}\n              >\n                Relabel\n              </button>\n              <button\n                type=\"button\"\n                className=\"commonButton right\"\n                onClick={setDescriptionUpdateMode}\n              >\n                {description ? 'Edit ' : 'Add '}\n                Description\n              </button>\n            </div>\n            <div className=\"editDescriptionButtons\">\n              <button\n                type=\"button\"\n                className=\"commonButton left\"\n                onClick={descriptionCancel}\n              >\n                Cancel\n              </button>\n              <button\n                type=\"button\"\n                className=\"commonButton right\"\n                onClick={descriptionSave}\n              >\n                Save\n              </button>\n            </div>\n          </>\n        );\n      }\n    }\n  };\n\n  if (editDescriptionOnDialog) {\n    return (\n      <EditDescriptionDialog\n        onCancel={labellingDoneCallback}\n        onUpdate={descriptionDialogUpdate}\n        measurementData={state.measurementData}\n      />\n    );\n  }\n\n  return (\n    <LabellingTransition\n      displayComponent={showComponent}\n      onTransitionExit={labellingDoneCallback}\n    >\n      <>\n        <div\n          className={`labellingComponent ${state.editDescription &&\n            'editDescription'}`}\n          onMouseLeave={fadeOutAndLeave}\n          onMouseEnter={clearFadeOutTimer}\n        >\n          {labellingStateFragment()}\n        </div>\n      </>\n    </LabellingTransition>\n  );\n};\n\nLabellingFlow.propTypes = {\n  measurementData: PropTypes.object.isRequired,\n  labellingDoneCallback: PropTypes.func.isRequired,\n  updateLabelling: PropTypes.func.isRequired,\n  initialTopDistance: PropTypes.number,\n  skipAddLabelButton: PropTypes.bool,\n  editLocation: PropTypes.bool,\n  editDescription: PropTypes.bool,\n  editDescriptionOnDialog: PropTypes.bool,\n};\n\nLabellingFlow.defaultProps = {\n  skipAddLabelButton: false,\n  editLocation: false,\n  editDescription: false,\n  editDescriptionOnDialog: false,\n};\n\nexport default LabellingFlow;\n","import { ContextMenu } from '@ohif/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { commandsManager } from './../App.js';\n\nconst toolTypes = [\n  'Angle',\n  'Bidirectional',\n  'Length',\n  'FreehandMouse',\n  'EllipticalRoi',\n  'CircleRoi',\n  'RectangleRoi',\n];\n\nconst ToolContextMenu = ({\n  onSetLabel,\n  onSetDescription,\n  isTouchEvent,\n  eventData,\n  onClose,\n  onDelete,\n}) => {\n  const defaultDropdownItems = [\n    {\n      label: 'Delete measurement',\n      actionType: 'Delete',\n      action: ({ nearbyToolData, eventData }) =>\n        onDelete(nearbyToolData, eventData),\n    },\n    {\n      label: 'Relabel',\n      actionType: 'setLabel',\n      action: ({ nearbyToolData, eventData }) => {\n        const { tool: measurementData } = nearbyToolData;\n        onSetLabel(eventData, measurementData);\n      },\n    },\n    {\n      actionType: 'setDescription',\n      action: ({ nearbyToolData, eventData }) => {\n        const { tool: measurementData } = nearbyToolData;\n        onSetDescription(eventData, measurementData);\n      },\n    },\n  ];\n\n  const getDropdownItems = (eventData, isTouchEvent = false) => {\n    const nearbyToolData = commandsManager.runCommand('getNearbyToolData', {\n      element: eventData.element,\n      canvasCoordinates: eventData.currentPoints.canvas,\n      availableToolTypes: toolTypes,\n    });\n\n    /*\n     * Annotate tools for touch events already have a press handle to edit it,\n     * has a better UX for deleting it.\n     */\n    if (\n      isTouchEvent &&\n      nearbyToolData &&\n      nearbyToolData.toolType === 'arrowAnnotate'\n    ) {\n      return;\n    }\n\n    let dropdownItems = [];\n    if (nearbyToolData) {\n      defaultDropdownItems.forEach(item => {\n        item.params = { eventData, nearbyToolData };\n\n        if (item.actionType === 'setDescription') {\n          item.label = `${\n            nearbyToolData.tool.description ? 'Edit' : 'Add'\n          } Description`;\n        }\n\n        dropdownItems.push(item);\n      });\n    }\n\n    return dropdownItems;\n  };\n\n  const onClickHandler = ({ action, params }) => {\n    action(params);\n    if (onClose) {\n      onClose();\n    }\n  };\n\n  const dropdownItems = getDropdownItems(eventData, isTouchEvent);\n\n  return (\n    <div className=\"ToolContextMenu\">\n      <ContextMenu items={dropdownItems} onClick={onClickHandler} />\n    </div>\n  );\n};\n\nToolContextMenu.propTypes = {\n  isTouchEvent: PropTypes.bool.isRequired,\n  eventData: PropTypes.object,\n  onClose: PropTypes.func,\n  onSetDescription: PropTypes.func,\n  onSetLabel: PropTypes.func,\n  onDelete: PropTypes.func,\n};\n\nToolContextMenu.defaultProps = {\n  isTouchEvent: false,\n};\n\nexport default ToolContextMenu;\n","import OHIF from '@ohif/core';\nimport cornerstone from 'cornerstone-core';\nimport csTools from 'cornerstone-tools';\nimport throttle from 'lodash.throttle';\n\nimport LabellingFlow from '../../components/Labelling/LabellingFlow';\nimport ToolContextMenu from '../../connectedComponents/ToolContextMenu';\n\nconst {\n  onAdded,\n  onRemoved,\n  onModified,\n} = OHIF.measurements.MeasurementHandlers;\n\nconst MEASUREMENT_ACTION_MAP = {\n  added: onAdded,\n  removed: onRemoved,\n  modified: throttle(event => {\n    return onModified(event);\n  }, 300),\n};\n\n/**\n *\n *\n * @export\n * @param {Object} servicesManager\n * @param {Object} configuration\n */\nexport default function init({\n  servicesManager,\n  commandsManager,\n  configuration,\n}) {\n  const { UIDialogService } = servicesManager.services;\n\n  // TODO: MEASUREMENT_COMPLETED (not present in initial implementation)\n  const onMeasurementsChanged = (action, event) => {\n    return MEASUREMENT_ACTION_MAP[action](event);\n  };\n  const onMeasurementAdded = onMeasurementsChanged.bind(this, 'added');\n  const onMeasurementRemoved = onMeasurementsChanged.bind(this, 'removed');\n  const onMeasurementModified = onMeasurementsChanged.bind(this, 'modified');\n  const onLabelmapModified = onMeasurementsChanged.bind(\n    this,\n    'labelmapModified'\n  );\n\n  const _getDefaultPosition = event => ({\n    x: (event && event.currentPoints.client.x) || 0,\n    y: (event && event.currentPoints.client.y) || 0,\n  });\n\n  const _updateLabellingHandler = (labellingData, measurementData) => {\n    const { location, description, response } = labellingData;\n\n    if (location) {\n      measurementData.location = location;\n    }\n\n    measurementData.description = description || '';\n\n    if (response) {\n      measurementData.response = response;\n    }\n\n    commandsManager.runCommand(\n      'updateTableWithNewMeasurementData',\n      measurementData\n    );\n  };\n\n  const showLabellingDialog = (props, contentProps, measurementData) => {\n    if (!UIDialogService) {\n      console.warn('Unable to show dialog; no UI Dialog Service available.');\n      return;\n    }\n\n    UIDialogService.create({\n      id: 'labelling',\n      isDraggable: false,\n      showOverlay: true,\n      centralize: true,\n      content: LabellingFlow,\n      contentProps: {\n        measurementData,\n        labellingDoneCallback: () =>\n          UIDialogService.dismiss({ id: 'labelling' }),\n        updateLabelling: labellingData =>\n          _updateLabellingHandler(labellingData, measurementData),\n        ...contentProps,\n      },\n      ...props,\n    });\n  };\n\n  const onRightClick = event => {\n    if (!UIDialogService) {\n      console.warn('Unable to show dialog; no UI Dialog Service available.');\n      return;\n    }\n\n    UIDialogService.dismiss({ id: 'context-menu' });\n    UIDialogService.create({\n      id: 'context-menu',\n      isDraggable: false,\n      preservePosition: false,\n      defaultPosition: _getDefaultPosition(event.detail),\n      content: ToolContextMenu,\n      contentProps: {\n        eventData: event.detail,\n        onDelete: (nearbyToolData, eventData) => {\n          const element = eventData.element;\n          commandsManager.runCommand('removeToolState', {\n            element,\n            toolType: nearbyToolData.toolType,\n            tool: nearbyToolData.tool,\n          });\n        },\n        onClose: () => UIDialogService.dismiss({ id: 'context-menu' }),\n        onSetLabel: (eventData, measurementData) => {\n          showLabellingDialog(\n            { centralize: true, isDraggable: false },\n            { skipAddLabelButton: true, editLocation: true },\n            measurementData\n          );\n        },\n        onSetDescription: (eventData, measurementData) => {\n          showLabellingDialog(\n            { defaultPosition: _getDefaultPosition(eventData) },\n            { editDescriptionOnDialog: true },\n            measurementData\n          );\n        },\n      },\n    });\n  };\n\n  const onTouchPress = event => {\n    if (!UIDialogService) {\n      console.warn('Unable to show dialog; no UI Dialog Service available.');\n      return;\n    }\n\n    UIDialogService.create({\n      eventData: event.detail,\n      content: ToolContextMenu,\n      contentProps: {\n        isTouchEvent: true,\n      },\n    });\n  };\n\n  const onTouchStart = () => resetLabelligAndContextMenu();\n\n  const onMouseClick = () => resetLabelligAndContextMenu();\n\n  const resetLabelligAndContextMenu = () => {\n    if (!UIDialogService) {\n      console.warn('Unable to show dialog; no UI Dialog Service available.');\n      return;\n    }\n\n    UIDialogService.dismiss({ id: 'context-menu' });\n    UIDialogService.dismiss({ id: 'labelling' });\n  };\n\n  // TODO: This makes scrolling painfully slow\n  // const onNewImage = ...\n\n  /*\n   * Because click gives us the native \"mouse up\", buttons will always be `0`\n   * Need to fallback to event.which;\n   *\n   */\n  const handleClick = cornerstoneMouseClickEvent => {\n    const mouseUpEvent = cornerstoneMouseClickEvent.detail.event;\n    const isRightClick = mouseUpEvent.which === 3;\n\n    if (isRightClick) {\n      onRightClick(cornerstoneMouseClickEvent);\n    } else {\n      onMouseClick(cornerstoneMouseClickEvent);\n    }\n  };\n\n  function elementEnabledHandler(evt) {\n    const element = evt.detail.element;\n\n    element.addEventListener(\n      csTools.EVENTS.MEASUREMENT_ADDED,\n      onMeasurementAdded\n    );\n    element.addEventListener(\n      csTools.EVENTS.MEASUREMENT_REMOVED,\n      onMeasurementRemoved\n    );\n    element.addEventListener(\n      csTools.EVENTS.MEASUREMENT_MODIFIED,\n      onMeasurementModified\n    );\n    element.addEventListener(\n      csTools.EVENTS.LABELMAP_MODIFIED,\n      onLabelmapModified\n    );\n\n    element.addEventListener(csTools.EVENTS.TOUCH_PRESS, onTouchPress);\n    element.addEventListener(csTools.EVENTS.MOUSE_CLICK, handleClick);\n    element.addEventListener(csTools.EVENTS.TOUCH_START, onTouchStart);\n\n    // TODO: This makes scrolling painfully slow\n    // element.addEventListener(cornerstone.EVENTS.NEW_IMAGE, onNewImage);\n  }\n\n  function elementDisabledHandler(evt) {\n    const element = evt.detail.element;\n\n    element.removeEventListener(\n      csTools.EVENTS.MEASUREMENT_ADDED,\n      onMeasurementAdded\n    );\n    element.removeEventListener(\n      csTools.EVENTS.MEASUREMENT_REMOVED,\n      onMeasurementRemoved\n    );\n    element.removeEventListener(\n      csTools.EVENTS.MEASUREMENT_MODIFIED,\n      onMeasurementModified\n    );\n    element.removeEventListener(\n      csTools.EVENTS.LABELMAP_MODIFIED,\n      onLabelmapModified\n    );\n\n    element.removeEventListener(csTools.EVENTS.TOUCH_PRESS, onTouchPress);\n    element.removeEventListener(csTools.EVENTS.MOUSE_CLICK, handleClick);\n    element.removeEventListener(csTools.EVENTS.TOUCH_START, onTouchStart);\n\n    // TODO: This makes scrolling painfully slow\n    // element.removeEventListener(cornerstone.EVENTS.NEW_IMAGE, onNewImage);\n  }\n\n  cornerstone.events.addEventListener(\n    cornerstone.EVENTS.ELEMENT_ENABLED,\n    elementEnabledHandler\n  );\n  cornerstone.events.addEventListener(\n    cornerstone.EVENTS.ELEMENT_DISABLED,\n    elementDisabledHandler\n  );\n}\n","import React from 'react';\nimport ConnectedMeasurementTable from './ConnectedMeasurementTable.js';\nimport init from './init.js';\n\nimport LabellingFlow from '../../components/Labelling/LabellingFlow';\n\nexport default {\n  /**\n   * Only required property. Should be a unique value across all extensions.\n   */\n  id: 'measurements-table',\n  get version() {\n    return window.version;\n  },\n\n  preRegistration({ servicesManager, commandsManager, configuration = {} }) {\n    init({ servicesManager, commandsManager, configuration });\n  },\n\n  getPanelModule({ servicesManager, commandsManager }) {\n    const { UINotificationService, UIDialogService } = servicesManager.services;\n\n    const showLabellingDialog = (props, measurementData) => {\n      if (!UIDialogService) {\n        console.warn('Unable to show dialog; no UI Dialog Service available.');\n        return;\n      }\n\n      UIDialogService.dismiss({ id: 'labelling' });\n      UIDialogService.create({\n        id: 'labelling',\n        centralize: true,\n        isDraggable: false,\n        showOverlay: true,\n        content: LabellingFlow,\n        contentProps: {\n          measurementData,\n          labellingDoneCallback: () =>\n            UIDialogService.dismiss({ id: 'labelling' }),\n          updateLabelling: ({ location, description, response }) => {\n            measurementData.location = location || measurementData.location;\n            measurementData.description = description || '';\n            measurementData.response = response || measurementData.response;\n\n            commandsManager.runCommand(\n              'updateTableWithNewMeasurementData',\n              measurementData\n            );\n          },\n          ...props,\n        },\n      });\n    };\n\n    const ExtendedConnectedMeasurementTable = () => (\n      <ConnectedMeasurementTable\n        onRelabel={tool =>\n          showLabellingDialog(\n            { editLocation: true, skipAddLabelButton: true },\n            tool\n          )\n        }\n        onEditDescription={tool =>\n          showLabellingDialog({ editDescriptionOnDialog: true }, tool)\n        }\n        onSaveComplete={message => {\n          if (UINotificationService) {\n            UINotificationService.show(message);\n          }\n        }}\n      />\n    );\n    return {\n      menuOptions: [\n        {\n          icon: 'list',\n          label: 'Measurements',\n          target: 'measurement-panel',\n        },\n      ],\n      components: [\n        {\n          id: 'measurement-panel',\n          component: ExtendedConnectedMeasurementTable,\n        },\n      ],\n      defaultContext: ['VIEWER'],\n    };\n  },\n};\n","import React from 'react';\n\nconst Bar = ({ progress, animationDuration }) => (\n  <div\n    style={{\n      background: '#29d',\n      height: 2,\n      left: 0,\n      marginLeft: `${(-1 + progress) * 100}%`,\n      position: 'fixed',\n      top: 0,\n      transition: `margin-left ${animationDuration}ms linear`,\n      width: '100%',\n      zIndex: 1031,\n    }}\n  >\n    <div\n      style={{\n        boxShadow: '0 0 10px #29d, 0 0 5px #29d',\n        display: 'block',\n        height: '100%',\n        opacity: 1,\n        position: 'absolute',\n        right: 0,\n        transform: 'rotate(3deg) translate(0px, -4px)',\n        width: 100,\n      }}\n    />\n  </div>\n);\n\nexport default Bar;\n","import React from 'react';\n\nconst Container = ({ children, isFinished, animationDuration }) => (\n  <div\n    style={{\n      opacity: isFinished ? 0 : 1,\n      pointerEvents: 'none',\n      transition: `opacity ${animationDuration}ms linear`,\n    }}\n  >\n    {children}\n  </div>\n);\n\nexport default Container;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter, matchPath } from 'react-router';\nimport { Route, Switch } from 'react-router-dom';\nimport { NProgress } from '@tanem/react-nprogress';\nimport { CSSTransition } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport { ViewerbaseDragDropContext, ErrorBoundary, asyncComponent, retryImport } from '@ohif/ui';\nimport { SignoutCallbackComponent } from 'redux-oidc';\nimport * as RoutesUtil from './routes/routesUtil';\n\nimport NotFound from './routes/NotFound.js';\nimport { Bar, Container } from './components/LoadingBar/';\nimport './OHIFStandaloneViewer.css';\nimport './variables.css';\nimport './theme-tide.css';\n// Contexts\nimport AppContext from './context/AppContext';\nconst CallbackPage = asyncComponent(() =>\n  retryImport(() => import(/* webpackChunkName: \"CallbackPage\" */ './routes/CallbackPage.js'))\n);\n\nclass OHIFStandaloneViewer extends Component {\n  static contextType = AppContext;\n  state = {\n    isLoading: false,\n  };\n\n  static propTypes = {\n    history: PropTypes.object.isRequired,\n    user: PropTypes.object,\n    setContext: PropTypes.func,\n    userManager: PropTypes.object,\n    location: PropTypes.object,\n  };\n\n  componentDidMount() {\n    this.unlisten = this.props.history.listen((location, action) => {\n      if (this.props.setContext) {\n        this.props.setContext(window.location.pathname);\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.unlisten();\n  }\n\n  render() {\n    const { user, userManager } = this.props;\n    const { appConfig = {} } = this.context;\n    const userNotLoggedIn = userManager && (!user || user.expired);\n    if (userNotLoggedIn) {\n      const { pathname, search } = this.props.location;\n\n      if (pathname !== '/callback') {\n        sessionStorage.setItem(\n          'ohif-redirect-to',\n          JSON.stringify({ pathname, search })\n        );\n      }\n\n      return (\n        <Switch>\n          <Route\n            exact\n            path=\"/silent-refresh.html\"\n            onEnter={RoutesUtil.reload}\n          />\n          <Route\n            exact\n            path=\"/logout-redirect\"\n            render={() => (\n              <SignoutCallbackComponent\n                userManager={userManager}\n                successCallback={() => console.log('Signout successful')}\n                errorCallback={error => {\n                  console.warn(error);\n                  console.warn('Signout failed');\n                }}\n              />\n            )}\n          />\n          <Route\n            path=\"/callback\"\n            render={() => <CallbackPage userManager={userManager} />}\n          />\n          <Route\n            path=\"/login\"\n            component={() => {\n              const queryParams = new URLSearchParams(\n                this.props.location.search\n              );\n              const iss = queryParams.get('iss');\n              const loginHint = queryParams.get('login_hint');\n              const targetLinkUri = queryParams.get('target_link_uri');\n              const oidcAuthority =\n                appConfig.oidc !== null && appConfig.oidc[0].authority;\n              if (iss !== oidcAuthority) {\n                console.error(\n                  'iss of /login does not match the oidc authority'\n                );\n                return null;\n              }\n\n              userManager.removeUser().then(() => {\n                if (targetLinkUri !== null) {\n                  const ohifRedirectTo = {\n                    pathname: new URL(targetLinkUri).pathname,\n                  };\n                  sessionStorage.setItem(\n                    'ohif-redirect-to',\n                    JSON.stringify(ohifRedirectTo)\n                  );\n                } else {\n                  const ohifRedirectTo = {\n                    pathname: '/',\n                  };\n                  sessionStorage.setItem(\n                    'ohif-redirect-to',\n                    JSON.stringify(ohifRedirectTo)\n                  );\n                }\n\n                if (loginHint !== null) {\n                  userManager.signinRedirect({ login_hint: loginHint });\n                } else {\n                  userManager.signinRedirect();\n                }\n              });\n\n              return null;\n            }}\n          />\n          <Route\n            component={() => {\n              userManager.getUser().then(user => {\n                if (user) {\n                  userManager.signinSilent();\n                } else {\n                  userManager.signinRedirect();\n                }\n              });\n\n              return null;\n            }}\n          />\n        </Switch>\n      );\n    }\n\n    /**\n     * Note: this approach for routing is caused by the conflict between\n     * react-transition-group and react-router's <Switch> component.\n     *\n     * See http://reactcommunity.org/react-transition-group/with-react-router/\n     */\n    const routes = RoutesUtil.getRoutes(appConfig);\n\n    const currentPath = this.props.location.pathname;\n    const noMatchingRoutes = !routes.find(r =>\n      matchPath(currentPath, {\n        path: r.path,\n        exact: true,\n      })\n    );\n\n    return (\n      <>\n        <NProgress isAnimating={this.state.isLoading}>\n          {({ isFinished, progress, animationDuration }) => (\n            <Container\n              isFinished={isFinished}\n              animationDuration={animationDuration}\n            >\n              <Bar progress={progress} animationDuration={animationDuration} />\n            </Container>\n          )}\n        </NProgress>\n        <Route exact path=\"/silent-refresh.html\" onEnter={RoutesUtil.reload} />\n        <Route exact path=\"/logout-redirect.html\" onEnter={RoutesUtil.reload} />\n        {!noMatchingRoutes &&\n          routes.map(({ path, Component }) => (\n            <Route key={path} exact path={path}>\n              {({ match }) => (\n                <CSSTransition\n                  in={match !== null}\n                  timeout={300}\n                  classNames=\"fade\"\n                  unmountOnExit\n                  onEnter={() => {\n                    this.setState({\n                      isLoading: true,\n                    });\n                  }}\n                  onEntered={() => {\n                    this.setState({\n                      isLoading: false,\n                    });\n                  }}\n                >\n                  {match === null ? (\n                    <></>\n                  ) : (\n                      <ErrorBoundary context={match.url}>\n                        <Component match={match} location={this.props.location} />\n                      </ErrorBoundary>\n                    )}\n                </CSSTransition>\n              )}\n            </Route>\n          ))}\n        {noMatchingRoutes && <NotFound />}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.oidc.user,\n  };\n};\n\nconst ConnectedOHIFStandaloneViewer = connect(\n  mapStateToProps,\n  null\n)(OHIFStandaloneViewer);\n\nexport default ViewerbaseDragDropContext(\n  withRouter(ConnectedOHIFStandaloneViewer)\n);\n","import React, { Component } from 'react';\nimport { OidcProvider } from 'redux-oidc';\nimport { I18nextProvider } from 'react-i18next';\nimport PropTypes from 'prop-types';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { hot } from 'react-hot-loader/root';\n\nimport OHIFCornerstoneExtension from '@ohif/extension-cornerstone';\n\nimport {\n  SnackbarProvider,\n  ModalProvider,\n  DialogProvider,\n  OHIFModal,\n  LoggerProvider,\n  ErrorBoundary,\n} from '@ohif/ui';\n\nimport {\n  CommandsManager,\n  ExtensionManager,\n  ServicesManager,\n  HotkeysManager,\n  UINotificationService,\n  UIModalService,\n  UIDialogService,\n  LoggerService,\n  MeasurementService,\n  utils,\n  redux as reduxOHIF,\n} from '@ohif/core';\n\nimport i18n from '@ohif/i18n';\n\n// TODO: This should not be here\n//import './config';\nimport { setConfiguration } from './config';\n\n/** Utils */\nimport {\n  getUserManagerForOpenIdConnectClient,\n  initWebWorkers,\n} from './utils/index.js';\n\n/** Extensions */\nimport { GenericViewerCommands, MeasurementsPanel } from './appExtensions';\n\n/** Viewer */\nimport OHIFStandaloneViewer from './OHIFStandaloneViewer';\n\n/** Store */\nimport { getActiveContexts } from './store/layout/selectors.js';\nimport store from './store';\n\n/** Contexts */\nimport WhiteLabelingContext from './context/WhiteLabelingContext';\nimport UserManagerContext from './context/UserManagerContext';\nimport { AppProvider, useAppContext, CONTEXTS } from './context/AppContext';\n\n/** ~~~~~~~~~~~~~ Application Setup */\nconst commandsManagerConfig = {\n  getAppState: () => store.getState(),\n  getActiveContexts: () => getActiveContexts(store.getState()),\n};\n\n/** Managers */\nconst commandsManager = new CommandsManager(commandsManagerConfig);\nconst servicesManager = new ServicesManager();\nconst hotkeysManager = new HotkeysManager(commandsManager, servicesManager);\nlet extensionManager;\n/** ~~~~~~~~~~~~~ End Application Setup */\n\n// TODO[react] Use a provider when the whole tree is React\nwindow.store = store;\n\nwindow.ohif = window.ohif || {};\nwindow.ohif.app = {\n  commandsManager,\n  hotkeysManager,\n  servicesManager,\n  extensionManager,\n};\n\nclass App extends Component {\n  static propTypes = {\n    config: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.shape({\n        routerBasename: PropTypes.string.isRequired,\n        oidc: PropTypes.array,\n        whiteLabeling: PropTypes.shape({\n          createLogoComponentFn: PropTypes.func,\n        }),\n        extensions: PropTypes.array,\n      }),\n    ]).isRequired,\n    defaultExtensions: PropTypes.array,\n  };\n\n  static defaultProps = {\n    config: {\n      showStudyList: true,\n      oidc: [],\n      extensions: [],\n    },\n    defaultExtensions: [],\n  };\n\n  _appConfig;\n  _userManager;\n\n  constructor(props) {\n    super(props);\n\n    const { config, defaultExtensions } = props;\n\n    const appDefaultConfig = {\n      showStudyList: true,\n      cornerstoneExtensionConfig: {},\n      extensions: [],\n      routerBasename: '/',\n    };\n\n    this._appConfig = {\n      ...appDefaultConfig,\n      ...(typeof config === 'function' ? config({ servicesManager }) : config),\n    };\n\n    const {\n      servers,\n      hotkeys: appConfigHotkeys,\n      cornerstoneExtensionConfig,\n      extensions,\n      oidc,\n    } = this._appConfig;\n\n    setConfiguration(this._appConfig);\n\n    this.initUserManager(oidc);\n    _initServices([\n      UINotificationService,\n      UIModalService,\n      UIDialogService,\n      MeasurementService,\n      LoggerService,\n    ]);\n    _initExtensions(\n      [...defaultExtensions, ...extensions],\n      cornerstoneExtensionConfig,\n      this._appConfig\n    );\n\n    /*\n     * Must run after extension commands are registered\n     * if there is no hotkeys from localStorage set up from config.\n     */\n    _initHotkeys(appConfigHotkeys);\n    _initServers(servers);\n    initWebWorkers();\n  }\n\n  render() {\n    const { whiteLabeling, routerBasename } = this._appConfig;\n    const {\n      UINotificationService,\n      UIDialogService,\n      UIModalService,\n      MeasurementService,\n      LoggerService,\n    } = servicesManager.services;\n\n    if (this._userManager) {\n      return (\n        <ErrorBoundary context=\"App\">\n          <Provider store={store}>\n            <AppProvider config={this._appConfig}>\n              <I18nextProvider i18n={i18n}>\n                <OidcProvider store={store} userManager={this._userManager}>\n                  <UserManagerContext.Provider value={this._userManager}>\n                    <Router basename={routerBasename}>\n                      <WhiteLabelingContext.Provider value={whiteLabeling}>\n                        <LoggerProvider service={LoggerService}>\n                          <SnackbarProvider service={UINotificationService}>\n                            <DialogProvider service={UIDialogService}>\n                              <ModalProvider\n                                modal={OHIFModal}\n                                service={UIModalService}\n                              >\n                                <OHIFStandaloneViewer\n                                  userManager={this._userManager}\n                                />\n                              </ModalProvider>\n                            </DialogProvider>\n                          </SnackbarProvider>\n                        </LoggerProvider>\n                      </WhiteLabelingContext.Provider>\n                    </Router>\n                  </UserManagerContext.Provider>\n                </OidcProvider>\n              </I18nextProvider>\n            </AppProvider>\n          </Provider>\n        </ErrorBoundary>\n      );\n    }\n\n    return (\n      <ErrorBoundary context=\"App\">\n        <Provider store={store}>\n          <AppProvider config={this._appConfig}>\n            <I18nextProvider i18n={i18n}>\n              <Router basename={routerBasename}>\n                <WhiteLabelingContext.Provider value={whiteLabeling}>\n                  <LoggerProvider service={LoggerService}>\n                    <SnackbarProvider service={UINotificationService}>\n                      <DialogProvider service={UIDialogService}>\n                        <ModalProvider\n                          modal={OHIFModal}\n                          service={UIModalService}\n                        >\n                          <OHIFStandaloneViewer />\n                        </ModalProvider>\n                      </DialogProvider>\n                    </SnackbarProvider>\n                  </LoggerProvider>\n                </WhiteLabelingContext.Provider>\n              </Router>\n            </I18nextProvider>\n          </AppProvider>\n        </Provider>\n      </ErrorBoundary>\n    );\n  }\n\n  initUserManager(oidc) {\n    if (oidc && !!oidc.length) {\n      const firstOpenIdClient = this._appConfig.oidc[0];\n\n      const { protocol, host } = window.location;\n      const { routerBasename } = this._appConfig;\n      const baseUri = `${protocol}//${host}${routerBasename}`;\n\n      const redirect_uri = firstOpenIdClient.redirect_uri || '/callback';\n      const silent_redirect_uri =\n        firstOpenIdClient.silent_redirect_uri || '/silent-refresh.html';\n      const post_logout_redirect_uri =\n        firstOpenIdClient.post_logout_redirect_uri || '/';\n\n      const openIdConnectConfiguration = Object.assign({}, firstOpenIdClient, {\n        redirect_uri: _makeAbsoluteIfNecessary(redirect_uri, baseUri),\n        silent_redirect_uri: _makeAbsoluteIfNecessary(\n          silent_redirect_uri,\n          baseUri\n        ),\n        post_logout_redirect_uri: _makeAbsoluteIfNecessary(\n          post_logout_redirect_uri,\n          baseUri\n        ),\n      });\n\n      this._userManager = getUserManagerForOpenIdConnectClient(\n        store,\n        openIdConnectConfiguration\n      );\n    }\n  }\n}\n\nfunction _initServices(services) {\n  servicesManager.registerServices(services);\n}\n\n/**\n * @param\n */\nfunction _initExtensions(extensions, cornerstoneExtensionConfig, appConfig) {\n  extensionManager = new ExtensionManager({\n    commandsManager,\n    servicesManager,\n    appConfig,\n    api: {\n      contexts: CONTEXTS,\n      hooks: {\n        useAppContext,\n      },\n    },\n  });\n\n  const requiredExtensions = [\n    GenericViewerCommands,\n    [OHIFCornerstoneExtension, cornerstoneExtensionConfig],\n  ];\n\n  if (appConfig.disableMeasurementPanel !== true) {\n    /* WARNING: MUST BE REGISTERED _AFTER_ OHIFCornerstoneExtension */\n    requiredExtensions.push(MeasurementsPanel);\n  }\n\n  const mergedExtensions = requiredExtensions.concat(extensions);\n  extensionManager.registerExtensions(mergedExtensions);\n}\n\n/**\n *\n * @param {Object} appConfigHotkeys - Default hotkeys, as defined by app config\n */\nfunction _initHotkeys(appConfigHotkeys) {\n  // TODO: Use something more resilient\n  // TODO: Mozilla has a special library for this\n  const userPreferredHotkeys = JSON.parse(\n    localStorage.getItem('hotkey-definitions') || '{}'\n  );\n\n  // TODO: hotkeysManager.isValidDefinitionObject(/* */)\n  const hasUserPreferences =\n    userPreferredHotkeys && Object.keys(userPreferredHotkeys).length > 0;\n  if (hasUserPreferences) {\n    hotkeysManager.setHotkeys(userPreferredHotkeys);\n  } else {\n    hotkeysManager.setHotkeys(appConfigHotkeys);\n  }\n\n  hotkeysManager.setDefaultHotKeys(appConfigHotkeys);\n}\n\nfunction _initServers(servers) {\n  if (servers) {\n    utils.addServers(servers, store);\n  }\n}\n\nfunction _isAbsoluteUrl(url) {\n  return url.includes('http://') || url.includes('https://');\n}\n\nfunction _makeAbsoluteIfNecessary(url, base_url) {\n  if (_isAbsoluteUrl(url)) {\n    return url;\n  }\n\n  /*\n   * Make sure base_url and url are not duplicating slashes.\n   */\n  if (base_url[base_url.length - 1] === '/') {\n    base_url = base_url.slice(0, base_url.length - 1);\n  }\n\n  return base_url + url;\n}\n\n/*\n * Only wrap/use hot if in dev.\n */\nconst ExportedApp = process.env.NODE_ENV === 'development' ? hot(App) : App;\n\nexport default ExportedApp;\nexport { commandsManager, extensionManager, hotkeysManager, servicesManager };\n","import OHIF from '@ohif/core';\nimport cornerstone from 'cornerstone-core';\nimport cornerstoneWADOImageLoader from 'cornerstone-wado-image-loader';\nimport dicomParser from 'dicom-parser';\nimport version from './version.js';\nimport AppContext from './context/AppContext';\n\nexport function setConfiguration(appConfig) {\n  let homepage;\n  const { process } = window;\n  if (process && process.env && process.env.PUBLIC_URL) {\n    homepage = process.env.PUBLIC_URL;\n  }\n\n  window.info = {\n    version,\n    homepage,\n  };\n\n  // For debugging\n  //if (process.env.node_env === 'development') {\n  window.cornerstone = cornerstone;\n  window.cornerstoneWADOImageLoader = cornerstoneWADOImageLoader;\n  //}\n\n  cornerstoneWADOImageLoader.external.cornerstone = cornerstone;\n  cornerstoneWADOImageLoader.external.dicomParser = dicomParser;\n\n  OHIF.user.getAccessToken = () => {\n    // TODO: Get the Redux store from somewhere else\n    const state = window.store.getState();\n    if (!state.oidc || !state.oidc.user) {\n      return;\n    }\n\n    return state.oidc.user.access_token;\n  };\n\n  OHIF.errorHandler.getHTTPErrorHandler = () => {\n    // const { appConfig = {} } = AppContext;\n\n    return appConfig.httpErrorHandler;\n  };\n\n  cornerstoneWADOImageLoader.configure({\n    beforeSend: function(xhr) {\n      const headers = OHIF.DICOMWeb.getAuthorizationHeader();\n\n      if (headers.Authorization) {\n        xhr.setRequestHeader('Authorization', headers.Authorization);\n      }\n    },\n    errorInterceptor: error => {\n      // const { appConfig = {} } = AppContext;\n\n      if (typeof appConfig.httpErrorHandler === 'function') {\n        appConfig.httpErrorHandler(error);\n      }\n    },\n  });\n}\n","import React from 'react';\nimport './NotFound.css';\nimport { Link } from 'react-router-dom';\nimport { useAppContext } from '../context/AppContext';\n\nexport default function NotFound({ message = 'Sorry, this page does not exist.', showGoBackButton = true }) {\n  \n  const context = useAppContext();\n  \n  return (\n    <div className={'not-found'}>\n      <div>\n        <h4>{message}</h4>\n        {showGoBackButton && context.appConfig.showStudyList && (\n          <h5>\n            <Link to={'/'}>Go back to the Study List</Link>\n          </h5>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Thumbnail } from './Thumbnail.js';\nimport './StudyBrowser.styl';\n\nfunction StudyBrowser(props) {\n  const {\n    studies,\n    onThumbnailClick,\n    onThumbnailDoubleClick,\n    supportsDrag,\n    showThumbnailProgressBar,\n  } = props;\n\n  return (\n    <div className=\"study-browser\">\n      <div className=\"scrollable-study-thumbnails\">\n        {studies\n          .map((study, studyIndex) => {\n            const { StudyInstanceUID } = study;\n            return study.thumbnails.map((thumb, thumbIndex) => {\n              // TODO: Thumb has more props than we care about?\n              const {\n                active,\n                altImageText,\n                displaySetInstanceUID,\n                imageId,\n                derivedDisplaySetsNumber,\n                numImageFrames,\n                SeriesDescription,\n                SeriesNumber,\n                hasWarnings,\n                hasDerivedDisplaySets,\n              } = thumb;\n\n              return (\n                <div\n                  key={thumb.displaySetInstanceUID}\n                  className=\"thumbnail-container\"\n                  data-cy=\"thumbnail-list\"\n                >\n                  <Thumbnail\n                    active={active}\n                    supportsDrag={supportsDrag}\n                    key={`${studyIndex}_${thumbIndex}`}\n                    id={`${studyIndex}_${thumbIndex}`} // Unused?\n                    // Study\n                    StudyInstanceUID={StudyInstanceUID} // used by drop\n                    // Thumb\n                    altImageText={altImageText}\n                    imageId={imageId}\n                    derivedDisplaySetsNumber={derivedDisplaySetsNumber}\n                    displaySetInstanceUID={displaySetInstanceUID} // used by drop\n                    numImageFrames={numImageFrames}\n                    SeriesDescription={SeriesDescription}\n                    SeriesNumber={SeriesNumber}\n                    hasWarnings={hasWarnings}\n                    hasDerivedDisplaySets={hasDerivedDisplaySets}\n                    // Events\n                    onClick={onThumbnailClick.bind(\n                      undefined,\n                      displaySetInstanceUID\n                    )}\n                    onDoubleClick={onThumbnailDoubleClick}\n                    showProgressBar={showThumbnailProgressBar}\n                  />\n                </div>\n              );\n            });\n          })\n          .flat()}\n      </div>\n    </div>\n  );\n}\n\nconst noop = () => {};\n\nStudyBrowser.propTypes = {\n  studies: PropTypes.arrayOf(\n    PropTypes.shape({\n      StudyInstanceUID: PropTypes.string.isRequired,\n      thumbnails: PropTypes.arrayOf(\n        PropTypes.shape({\n          altImageText: PropTypes.string,\n          displaySetInstanceUID: PropTypes.string.isRequired,\n          imageId: PropTypes.string,\n          derivedDisplaySetsNumber: PropTypes.number,\n          numImageFrames: PropTypes.number,\n          SeriesDescription: PropTypes.string,\n          SeriesNumber: PropTypes.number,\n          stackPercentComplete: PropTypes.number,\n        })\n      ),\n    })\n  ).isRequired,\n  supportsDrag: PropTypes.bool,\n  onThumbnailClick: PropTypes.func,\n  onThumbnailDoubleClick: PropTypes.func,\n  showThumbnailProgressBar: PropTypes.bool,\n};\n\nStudyBrowser.defaultProps = {\n  studies: [],\n  supportsDrag: true,\n  onThumbnailClick: noop,\n  onThumbnailDoubleClick: noop,\n  showThumbnailProgressBar: true,\n};\n\nexport { StudyBrowser };\n","const id = 'org.ohif.dicom-sr';\n\nexport default id;\n\nconst SOPClassHandlerName = 'dicom-sr';\nconst SOPClassHandlerId = `${id}.sopClassHandlerModule.${SOPClassHandlerName}`;\nexport { SOPClassHandlerName, SOPClassHandlerId };\n","import React from 'react';\n\nconst UserManagerContext = React.createContext();\n\nexport default UserManagerContext;\n","import './OHIFLogo.css';\n\nimport { Icon } from '@ohif/ui';\nimport React from 'react';\n\nfunction OHIFLogo() {\n  return (\n    <a\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      className=\"header-brand\"\n      href=\"http://ohif.org\"\n    >\n      <Icon name=\"ohif-logo\" className=\"header-logo-image\" />\n      {/* Logo text would fit smaller displays at two lines:\n       *\n       * Open Health\n       * Imaging Foundation\n       *\n       * Or as `OHIF` on really small displays\n       */}\n      <Icon name=\"ohif-text-logo\" className=\"header-logo-text\" />\n    </a>\n  );\n}\n\nexport default OHIFLogo;\n","export default {\n  COMMANDS: 'commandsModule',\n  PANEL: 'panelModule',\n  SOP_CLASS_HANDLER: 'sopClassHandlerModule',\n  TOOLBAR: 'toolbarModule',\n  VIEWPORT: 'viewportModule',\n};\n","import React, { useEffect, useCallback } from 'react';\nimport { View2D } from 'react-vtkjs-viewport';\nimport PropTypes from 'prop-types';\n\nimport './VTKViewport.css';\n\nconst VTKViewport = props => {\n  const style = { width: '100%', height: '100%', position: 'relative' };\n\n  const setViewportActiveHandler = useCallback(() => {\n    const { setViewportActive, viewportIndex, activeViewportIndex } = props;\n\n    if (viewportIndex !== activeViewportIndex) {\n      // set in Connected\n      setViewportActive();\n    }\n  });\n\n  useEffect(() => {\n    const handleScrollEvent = evt => {\n      const vtkViewportApiReference = props.onScroll(props.viewportIndex) || {};\n      const viewportUID = vtkViewportApiReference.uid;\n      const viewportWasScrolled = viewportUID === evt.detail.uid;\n\n      if (viewportWasScrolled) {\n        setViewportActiveHandler();\n      }\n    };\n\n    window.addEventListener('vtkscrollevent', handleScrollEvent);\n    return () =>\n      window.removeEventListener('vtkscrollevent', handleScrollEvent);\n  }, [props, props.onScroll, props.viewportIndex, setViewportActiveHandler]);\n\n  return (\n    <div\n      className=\"vtk-viewport-handler\"\n      style={style}\n      onClick={setViewportActiveHandler}\n    >\n      <View2D {...props} />\n    </div>\n  );\n};\n\nVTKViewport.propTypes = {\n  setViewportActive: PropTypes.func.isRequired,\n  viewportIndex: PropTypes.number.isRequired,\n  activeViewportIndex: PropTypes.number.isRequired,\n  /* Receives viewportIndex */\n  onScroll: PropTypes.func,\n};\n\nVTKViewport.defaultProps = {\n  onScroll: () => {},\n};\n\nexport default VTKViewport;\n","import OHIF from '@ohif/core';\nimport { connect } from 'react-redux';\nimport VTKViewport from './VTKViewport';\n\nconst { setViewportActive, setViewportSpecificData } = OHIF.redux.actions;\n\nconst mapStateToProps = (state, ownProps) => {\n  let dataFromStore;\n\n  if (state.extensions && state.extensions.vtk) {\n    dataFromStore = state.extensions.vtk;\n  }\n\n  // If this is the active viewport, enable prefetching.\n  const { viewportIndex } = ownProps;\n  const isActive = viewportIndex === state.viewports.activeViewportIndex;\n  const viewportLayout = state.viewports.layout.viewports[viewportIndex];\n  const pluginDetails = viewportLayout.vtk || {};\n\n  return {\n    activeViewportIndex: state.viewports.activeViewportIndex,\n    layout: state.viewports.layout,\n    isActive,\n    ...pluginDetails,\n    // Hopefully this doesn't break anything under the hood for this one\n    // activeTool: activeButton && activeButton.command,\n    ...dataFromStore,\n    enableStackPrefetch: isActive,\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  const { viewportIndex } = ownProps;\n\n  return {\n    setViewportActive: () => {\n      dispatch(setViewportActive(viewportIndex));\n    },\n\n    setViewportSpecificData: data => {\n      dispatch(setViewportSpecificData(viewportIndex, data));\n    },\n  };\n};\n\nconst mergeProps = (propsFromState, propsFromDispatch, ownProps) => {\n  const { afterCreation } = propsFromState;\n\n  const props = {\n    ...propsFromState,\n    ...propsFromDispatch,\n    ...ownProps,\n    /**\n     * Our component sets up the underlying dom element on \"componentDidMount\"\n     * for use with VTK.\n     *\n     * The onCreated prop passes back an Object containing many of the internal\n     * components of the VTK scene. We can grab a reference to these here, to\n     * make playing with VTK's native methods easier.\n     *\n     * A similar approach is taken with the Cornerstone extension.\n     */\n    onCreated: api => {\n      // Store the API details for later\n      //setViewportSpecificData({ vtkApi: api });\n\n      if (afterCreation && typeof afterCreation === 'function') {\n        afterCreation(api);\n      }\n    },\n  };\n  return props;\n};\n\nconst ConnectedVTKViewport = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps\n)(VTKViewport);\n\nexport default ConnectedVTKViewport;\n","import './LoadingIndicator.css';\n\nimport React, { PureComponent } from 'react';\nimport { withTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\n\nclass LoadingIndicator extends PureComponent {\n  static propTypes = {\n    percentComplete: PropTypes.number.isRequired,\n    error: PropTypes.object,\n  };\n\n  static defaultProps = {\n    percentComplete: 0,\n    error: null,\n  };\n\n  render() {\n    let percComplete;\n    if (this.props.percentComplete && this.props.percentComplete !== 100) {\n      percComplete = `${this.props.percentComplete}%`;\n    }\n\n    return (\n      <React.Fragment>\n        {this.props.error ? (\n          <div className=\"imageViewerErrorLoadingIndicator loadingIndicator\">\n            <div className=\"indicatorContents\">\n              <h4>Error Loading Image</h4>\n              <p className=\"description\">An error has occurred.</p>\n              <p className=\"details\">{this.props.error.message}</p>\n            </div>\n          </div>\n        ) : (\n          <div className=\"imageViewerLoadingIndicator loadingIndicator\">\n            <div className=\"indicatorContents\">\n              <p>\n                {this.props.t('Loading...')}\n                <i className=\"fa fa-spin fa-circle-o-notch fa-fw\" />\n                {percComplete}\n              </p>\n            </div>\n          </div>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withTranslation('Common')(LoadingIndicator);\n","import React, { Component } from 'react';\nimport { getImageData, loadImageData } from 'react-vtkjs-viewport';\nimport ConnectedVTKViewport from './ConnectedVTKViewport';\nimport LoadingIndicator from './LoadingIndicator.js';\nimport OHIF from '@ohif/core';\nimport PropTypes from 'prop-types';\nimport cornerstone from 'cornerstone-core';\nimport cornerstoneTools from 'cornerstone-tools';\nimport vtkDataArray from 'vtk.js/Sources/Common/Core/DataArray';\nimport vtkImageData from 'vtk.js/Sources/Common/DataModel/ImageData';\nimport vtkVolume from 'vtk.js/Sources/Rendering/Core/Volume';\nimport vtkVolumeMapper from 'vtk.js/Sources/Rendering/Core/VolumeMapper';\n\nconst segmentationModule = cornerstoneTools.getModule('segmentation');\n\nconst { StackManager } = OHIF.utils;\n\n// TODO: Figure out where we plan to put this long term\nconst volumeCache = {};\nconst labelmapCache = {};\n\n/**\n * Create a labelmap image with the same dimensions as our background volume.\n *\n * @param backgroundImageData vtkImageData\n */\n/* TODO: Not currently used until we have drawing tools in vtkjs.\nfunction createLabelMapImageData(backgroundImageData) {\n  // TODO => Need to do something like this if we start drawing a new segmentation\n  // On a vtkjs viewport.\n\n  const labelMapData = vtkImageData.newInstance(\n    backgroundImageData.get('spacing', 'origin', 'direction')\n  );\n  labelMapData.setDimensions(backgroundImageData.getDimensions());\n  labelMapData.computeTransforms();\n\n  const values = new Uint8Array(backgroundImageData.getNumberOfPoints());\n  const dataArray = vtkDataArray.newInstance({\n    numberOfComponents: 1, // labelmap with single component\n    values,\n  });\n  labelMapData.getPointData().setScalars(dataArray);\n\n  return labelMapData;\n} */\n\nclass OHIFVTKViewport extends Component {\n  state = {\n    volumes: null,\n    paintFilterLabelMapImageData: null,\n    paintFilterBackgroundImageData: null,\n    percentComplete: 0,\n    isLoaded: false,\n  };\n\n  static propTypes = {\n    viewportData: PropTypes.shape({\n      studies: PropTypes.array.isRequired,\n      displaySet: PropTypes.shape({\n        StudyInstanceUID: PropTypes.string.isRequired,\n        displaySetInstanceUID: PropTypes.string.isRequired,\n        sopClassUIDs: PropTypes.arrayOf(PropTypes.string),\n        SOPInstanceUID: PropTypes.string,\n        frameIndex: PropTypes.number,\n      }),\n    }),\n    viewportIndex: PropTypes.number.isRequired,\n    children: PropTypes.node,\n    onScroll: PropTypes.func,\n    servicesManager: PropTypes.object.isRequired,\n  };\n\n  static defaultProps = {\n    onScroll: () => { },\n  };\n\n  static id = 'OHIFVTKViewport';\n\n  static init() {\n    console.log('OHIFVTKViewport init()');\n  }\n\n  static destroy() {\n    console.log('OHIFVTKViewport destroy()');\n    StackManager.clearStacks();\n  }\n\n  static getCornerstoneStack(\n    studies,\n    StudyInstanceUID,\n    displaySetInstanceUID,\n    SOPInstanceUID,\n    frameIndex\n  ) {\n    // Create shortcut to displaySet\n    const study = studies.find(\n      study => study.StudyInstanceUID === StudyInstanceUID\n    );\n\n    const displaySet = study.displaySets.find(set => {\n      return set.displaySetInstanceUID === displaySetInstanceUID;\n    });\n\n    // Get stack from Stack Manager\n    const storedStack = StackManager.findOrCreateStack(study, displaySet);\n\n    // Clone the stack here so we don't mutate it\n    const stack = Object.assign({}, storedStack);\n\n    if (frameIndex !== undefined) {\n      stack.currentImageIdIndex = frameIndex;\n    } else if (SOPInstanceUID) {\n      const index = stack.imageIds.findIndex(imageId => {\n        const imageIdSOPInstanceUID = cornerstone.metaData.get(\n          'SOPInstanceUID',\n          imageId\n        );\n\n        return imageIdSOPInstanceUID === SOPInstanceUID;\n      });\n\n      if (index > -1) {\n        stack.currentImageIdIndex = index;\n      }\n    } else {\n      stack.currentImageIdIndex = 0;\n    }\n\n    return stack;\n  }\n\n  getViewportData = (\n    studies,\n    StudyInstanceUID,\n    displaySetInstanceUID,\n    SOPClassUID,\n    SOPInstanceUID,\n    frameIndex\n  ) => {\n    const { UINotificationService } = this.props.servicesManager.services;\n\n    const stack = OHIFVTKViewport.getCornerstoneStack(\n      studies,\n      StudyInstanceUID,\n      displaySetInstanceUID,\n      SOPClassUID,\n      SOPInstanceUID,\n      frameIndex\n    );\n\n    const imageDataObject = getImageData(stack.imageIds, displaySetInstanceUID);\n    let labelmapDataObject;\n    let labelmapColorLUT;\n\n    const firstImageId = stack.imageIds[0];\n    const { state } = segmentationModule;\n    const brushStackState = state.series[firstImageId];\n\n    if (brushStackState) {\n      const { activeLabelmapIndex } = brushStackState;\n      const labelmap3D = brushStackState.labelmaps3D[activeLabelmapIndex];\n\n      if (\n        brushStackState.labelmaps3D.length > 1 &&\n        this.props.viewportIndex === 0\n      ) {\n        UINotificationService.show({\n          title: 'Overlapping Segmentation Found',\n          message:\n            'Overlapping segmentations cannot be displayed when in MPR mode',\n          type: 'info',\n        });\n      }\n\n      this.segmentsDefaultProperties = labelmap3D.segmentsHidden.map(\n        isHidden => {\n          return { visible: !isHidden };\n        }\n      );\n\n      const vtkLabelmapID = `${firstImageId}_${activeLabelmapIndex}`;\n\n      if (labelmapCache[vtkLabelmapID]) {\n        labelmapDataObject = labelmapCache[vtkLabelmapID];\n      } else {\n        // TODO -> We need an imageId based getter in cornerstoneTools\n        const labelmapBuffer = labelmap3D.buffer;\n\n        // Create VTK Image Data with buffer as input\n        labelmapDataObject = vtkImageData.newInstance();\n\n        const dataArray = vtkDataArray.newInstance({\n          numberOfComponents: 1, // labelmap with single component\n          values: new Uint16Array(labelmapBuffer),\n        });\n\n        labelmapDataObject.getPointData().setScalars(dataArray);\n        labelmapDataObject.setDimensions(...imageDataObject.dimensions);\n        labelmapDataObject.setSpacing(\n          ...imageDataObject.vtkImageData.getSpacing()\n        );\n        labelmapDataObject.setOrigin(\n          ...imageDataObject.vtkImageData.getOrigin()\n        );\n        labelmapDataObject.setDirection(\n          ...imageDataObject.vtkImageData.getDirection()\n        );\n\n        // Cache the labelmap volume.\n        labelmapCache[vtkLabelmapID] = labelmapDataObject;\n      }\n\n      labelmapColorLUT = state.colorLutTables[labelmap3D.colorLUTIndex];\n    }\n\n    return {\n      imageDataObject,\n      labelmapDataObject,\n      labelmapColorLUT,\n    };\n  };\n\n  /**\n   *\n   *\n   * @param {object} imageDataObject\n   * @param {object} imageDataObject.vtkImageData\n   * @param {object} imageDataObject.imageMetaData0\n   * @param {number} [imageDataObject.imageMetaData0.WindowWidth] - The volume's initial WindowWidth\n   * @param {number} [imageDataObject.imageMetaData0.WindowCenter] - The volume's initial WindowCenter\n   * @param {string} imageDataObject.imageMetaData0.Modality - CT, MR, PT, etc\n   * @param {string} displaySetInstanceUID\n   * @returns vtkVolumeActor\n   * @memberof OHIFVTKViewport\n   */\n  getOrCreateVolume(imageDataObject, displaySetInstanceUID) {\n    if (volumeCache[displaySetInstanceUID]) {\n      return volumeCache[displaySetInstanceUID];\n    }\n\n    const { vtkImageData, imageMetaData0 } = imageDataObject;\n    // TODO -> Should update react-vtkjs-viewport and react-cornerstone-viewports\n    // internals to use naturalized DICOM JSON names.\n    const {\n      windowWidth: WindowWidth,\n      windowCenter: WindowCenter,\n      modality: Modality,\n    } = imageMetaData0;\n\n    const { lower, upper } = _getRangeFromWindowLevels(\n      WindowWidth,\n      WindowCenter,\n      Modality\n    );\n    const volumeActor = vtkVolume.newInstance();\n    const volumeMapper = vtkVolumeMapper.newInstance();\n\n    volumeActor.setMapper(volumeMapper);\n    volumeMapper.setInputData(vtkImageData);\n\n    volumeActor\n      .getProperty()\n      .getRGBTransferFunction(0)\n      .setRange(lower, upper);\n\n    const spacing = vtkImageData.getSpacing();\n    // Set the sample distance to half the mean length of one side. This is where the divide by 6 comes from.\n    // https://github.com/Kitware/VTK/blob/6b559c65bb90614fb02eb6d1b9e3f0fca3fe4b0b/Rendering/VolumeOpenGL2/vtkSmartVolumeMapper.cxx#L344\n    const sampleDistance = (spacing[0] + spacing[1] + spacing[2]) / 6;\n\n    volumeMapper.setSampleDistance(sampleDistance);\n\n    // Be generous to suppress warnings, as the logging really hurts performance.\n    // TODO: maybe we should auto adjust samples to 1000.\n    volumeMapper.setMaximumSamplesPerRay(4000);\n\n    volumeCache[displaySetInstanceUID] = volumeActor;\n\n    return volumeActor;\n  }\n\n  setStateFromProps() {\n    const { studies, displaySet } = this.props.viewportData;\n    const {\n      StudyInstanceUID,\n      displaySetInstanceUID,\n      sopClassUIDs,\n      SOPInstanceUID,\n      frameIndex,\n    } = displaySet;\n\n    if (sopClassUIDs.length > 1) {\n      console.warn(\n        'More than one SOPClassUID in the same series is not yet supported.'\n      );\n    }\n\n    const study = studies.find(\n      study => study.StudyInstanceUID === StudyInstanceUID\n    );\n\n    const dataDetails = {\n      studyDate: study.studyDate,\n      studyTime: study.studyTime,\n      studyDescription: study.studyDescription,\n      patientName: study.patientName,\n      patientId: study.patientId,\n      seriesNumber: String(displaySet.seriesNumber),\n      seriesDescription: displaySet.seriesDescription,\n    };\n\n    try {\n      const {\n        imageDataObject,\n        labelmapDataObject,\n        labelmapColorLUT,\n      } = this.getViewportData(\n        studies,\n        StudyInstanceUID,\n        displaySetInstanceUID,\n        SOPInstanceUID,\n        frameIndex\n      );\n\n      this.imageDataObject = imageDataObject;\n\n      /* TODO: Not currently used until we have drawing tools in vtkjs.\n      if (!labelmap) {\n        labelmap = createLabelMapImageData(data);\n      } */\n\n      const volumeActor = this.getOrCreateVolume(\n        imageDataObject,\n        displaySetInstanceUID\n      );\n\n      this.setState(\n        {\n          percentComplete: 0,\n          dataDetails,\n        },\n        () => {\n          this.loadProgressively(imageDataObject);\n\n          // TODO: There must be a better way to do this.\n          // We do this so that if all the data is available the react-vtkjs-viewport\n          // Will render _something_ before the volumes are set and the volume\n          // Construction that happens in react-vtkjs-viewport locks up the CPU.\n          setTimeout(() => {\n            this.setState({\n              volumes: [volumeActor],\n              paintFilterLabelMapImageData: labelmapDataObject,\n              paintFilterBackgroundImageData: imageDataObject.vtkImageData,\n              labelmapColorLUT,\n            });\n          }, 200);\n        }\n      );\n    } catch (error) {\n      const errorTitle = 'Failed to load 2D MPR';\n      console.error(errorTitle, error);\n      const {\n        UINotificationService,\n        LoggerService,\n      } = this.props.servicesManager.services;\n      if (this.props.viewportIndex === 0) {\n        const message = error.message.includes('buffer')\n          ? 'Dataset is too big to display in MPR'\n          : error.message;\n        LoggerService.error({ error, message });\n        UINotificationService.show({\n          title: errorTitle,\n          message,\n          type: 'error',\n          autoClose: false,\n          action: {\n            label: 'Exit 2D MPR',\n            onClick: ({ close }) => {\n              // context: 'ACTIVE_VIEWPORT::VTK',\n              close();\n              this.props.commandsManager.runCommand('setCornerstoneLayout');\n            },\n          },\n        });\n      }\n      this.setState({ isLoaded: true });\n    }\n  }\n\n  componentDidMount() {\n    this.setStateFromProps();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { displaySet } = this.props.viewportData;\n    const prevDisplaySet = prevProps.viewportData.displaySet;\n\n    if (\n      displaySet.displaySetInstanceUID !==\n      prevDisplaySet.displaySetInstanceUID ||\n      displaySet.SOPInstanceUID !== prevDisplaySet.SOPInstanceUID ||\n      displaySet.frameIndex !== prevDisplaySet.frameIndex\n    ) {\n      this.setStateFromProps();\n    }\n  }\n\n  loadProgressively(imageDataObject) {\n    loadImageData(imageDataObject);\n\n    const { isLoading, imageIds } = imageDataObject;\n\n    if (!isLoading) {\n      this.setState({ isLoaded: true });\n      return;\n    }\n\n    const NumberOfFrames = imageIds.length;\n\n    const onPixelDataInsertedCallback = numberProcessed => {\n      const percentComplete = Math.floor(\n        (numberProcessed * 100) / NumberOfFrames\n      );\n\n      if (percentComplete !== this.state.percentComplete) {\n        this.setState({\n          percentComplete,\n        });\n      }\n    };\n\n    const onPixelDataInsertedErrorCallback = error => {\n      const {\n        UINotificationService,\n        LoggerService,\n      } = this.props.servicesManager.services;\n\n      if (!this.hasError) {\n        if (this.props.viewportIndex === 0) {\n          // Only show the notification from one viewport 1 in MPR2D.\n          LoggerService.error({ error, message: error.message });\n          UINotificationService.show({\n            title: 'MPR Load Error',\n            message: error.message,\n            type: 'error',\n            autoClose: false,\n          });\n        }\n\n        this.hasError = true;\n      }\n    };\n\n    const onAllPixelDataInsertedCallback = () => {\n      this.setState({\n        isLoaded: true,\n      });\n    };\n\n    imageDataObject.onPixelDataInserted(onPixelDataInsertedCallback);\n    imageDataObject.onAllPixelDataInserted(onAllPixelDataInsertedCallback);\n    imageDataObject.onPixelDataInsertedError(onPixelDataInsertedErrorCallback);\n  }\n\n  render() {\n    let childrenWithProps = null;\n    const { configuration } = segmentationModule;\n\n    // TODO: Does it make more sense to use Context?\n    if (this.props.children && this.props.children.length) {\n      childrenWithProps = this.props.children.map((child, index) => {\n        return (\n          child &&\n          React.cloneElement(child, {\n            viewportIndex: this.props.viewportIndex,\n            key: index,\n          })\n        );\n      });\n    }\n\n    const style = { width: '100%', height: '100%', position: 'relative' };\n\n    return (\n      <>\n        <div style={style}>\n          {!this.state.isLoaded && (\n            <LoadingIndicator percentComplete={this.state.percentComplete} />\n          )}\n          {this.state.volumes && (\n            <ConnectedVTKViewport\n              volumes={this.state.volumes}\n              paintFilterLabelMapImageData={\n                this.state.paintFilterLabelMapImageData\n              }\n              paintFilterBackgroundImageData={\n                this.state.paintFilterBackgroundImageData\n              }\n              viewportIndex={this.props.viewportIndex}\n              dataDetails={this.state.dataDetails}\n              labelmapRenderingOptions={{\n                colorLUT: this.state.labelmapColorLUT,\n                globalOpacity: configuration.fillAlpha,\n                visible: configuration.renderFill,\n                outlineThickness: configuration.outlineWidth,\n                renderOutline: configuration.renderOutline,\n                segmentsDefaultProperties: this.segmentsDefaultProperties,\n                onNewSegmentationRequested: () => {\n                  this.setStateFromProps();\n                },\n              }}\n              onScroll={this.props.onScroll}\n            />\n          )}\n        </div>\n        )}\n        {childrenWithProps}\n      </>\n    );\n  }\n}\n\n/**\n * Takes window levels and converts them to a range (lower/upper)\n * for use with VTK RGBTransferFunction\n *\n * @private\n * @param {number} [width] - the width of our window\n * @param {number} [center] - the center of our window\n * @param {string} [Modality] - 'PT', 'CT', etc.\n * @returns { lower, upper } - range\n */\nfunction _getRangeFromWindowLevels(width, center, Modality = undefined) {\n  // For PET just set the range to 0-5 SUV\n  if (Modality === 'PT') {\n    return { lower: 0, upper: 5 };\n  }\n\n  const levelsAreNotNumbers = isNaN(center) || isNaN(width);\n\n  if (levelsAreNotNumbers) {\n    return { lower: 0, upper: 512 };\n  }\n\n  return {\n    lower: center - width / 2.0,\n    upper: center + width / 2.0,\n  };\n}\n\nexport default OHIFVTKViewport;\n","var map = {\n\t\"./af\": 297,\n\t\"./af.js\": 297,\n\t\"./ar\": 298,\n\t\"./ar-dz\": 299,\n\t\"./ar-dz.js\": 299,\n\t\"./ar-kw\": 300,\n\t\"./ar-kw.js\": 300,\n\t\"./ar-ly\": 301,\n\t\"./ar-ly.js\": 301,\n\t\"./ar-ma\": 302,\n\t\"./ar-ma.js\": 302,\n\t\"./ar-sa\": 303,\n\t\"./ar-sa.js\": 303,\n\t\"./ar-tn\": 304,\n\t\"./ar-tn.js\": 304,\n\t\"./ar.js\": 298,\n\t\"./az\": 305,\n\t\"./az.js\": 305,\n\t\"./be\": 306,\n\t\"./be.js\": 306,\n\t\"./bg\": 307,\n\t\"./bg.js\": 307,\n\t\"./bm\": 308,\n\t\"./bm.js\": 308,\n\t\"./bn\": 309,\n\t\"./bn.js\": 309,\n\t\"./bo\": 310,\n\t\"./bo.js\": 310,\n\t\"./br\": 311,\n\t\"./br.js\": 311,\n\t\"./bs\": 312,\n\t\"./bs.js\": 312,\n\t\"./ca\": 313,\n\t\"./ca.js\": 313,\n\t\"./cs\": 314,\n\t\"./cs.js\": 314,\n\t\"./cv\": 315,\n\t\"./cv.js\": 315,\n\t\"./cy\": 316,\n\t\"./cy.js\": 316,\n\t\"./da\": 317,\n\t\"./da.js\": 317,\n\t\"./de\": 318,\n\t\"./de-at\": 319,\n\t\"./de-at.js\": 319,\n\t\"./de-ch\": 320,\n\t\"./de-ch.js\": 320,\n\t\"./de.js\": 318,\n\t\"./dv\": 321,\n\t\"./dv.js\": 321,\n\t\"./el\": 322,\n\t\"./el.js\": 322,\n\t\"./en-SG\": 323,\n\t\"./en-SG.js\": 323,\n\t\"./en-au\": 324,\n\t\"./en-au.js\": 324,\n\t\"./en-ca\": 325,\n\t\"./en-ca.js\": 325,\n\t\"./en-gb\": 326,\n\t\"./en-gb.js\": 326,\n\t\"./en-ie\": 327,\n\t\"./en-ie.js\": 327,\n\t\"./en-il\": 328,\n\t\"./en-il.js\": 328,\n\t\"./en-nz\": 329,\n\t\"./en-nz.js\": 329,\n\t\"./eo\": 330,\n\t\"./eo.js\": 330,\n\t\"./es\": 331,\n\t\"./es-do\": 332,\n\t\"./es-do.js\": 332,\n\t\"./es-us\": 333,\n\t\"./es-us.js\": 333,\n\t\"./es.js\": 331,\n\t\"./et\": 334,\n\t\"./et.js\": 334,\n\t\"./eu\": 335,\n\t\"./eu.js\": 335,\n\t\"./fa\": 336,\n\t\"./fa.js\": 336,\n\t\"./fi\": 337,\n\t\"./fi.js\": 337,\n\t\"./fo\": 338,\n\t\"./fo.js\": 338,\n\t\"./fr\": 339,\n\t\"./fr-ca\": 340,\n\t\"./fr-ca.js\": 340,\n\t\"./fr-ch\": 341,\n\t\"./fr-ch.js\": 341,\n\t\"./fr.js\": 339,\n\t\"./fy\": 342,\n\t\"./fy.js\": 342,\n\t\"./ga\": 343,\n\t\"./ga.js\": 343,\n\t\"./gd\": 344,\n\t\"./gd.js\": 344,\n\t\"./gl\": 345,\n\t\"./gl.js\": 345,\n\t\"./gom-latn\": 346,\n\t\"./gom-latn.js\": 346,\n\t\"./gu\": 347,\n\t\"./gu.js\": 347,\n\t\"./he\": 348,\n\t\"./he.js\": 348,\n\t\"./hi\": 349,\n\t\"./hi.js\": 349,\n\t\"./hr\": 350,\n\t\"./hr.js\": 350,\n\t\"./hu\": 351,\n\t\"./hu.js\": 351,\n\t\"./hy-am\": 352,\n\t\"./hy-am.js\": 352,\n\t\"./id\": 353,\n\t\"./id.js\": 353,\n\t\"./is\": 354,\n\t\"./is.js\": 354,\n\t\"./it\": 355,\n\t\"./it-ch\": 356,\n\t\"./it-ch.js\": 356,\n\t\"./it.js\": 355,\n\t\"./ja\": 357,\n\t\"./ja.js\": 357,\n\t\"./jv\": 358,\n\t\"./jv.js\": 358,\n\t\"./ka\": 359,\n\t\"./ka.js\": 359,\n\t\"./kk\": 360,\n\t\"./kk.js\": 360,\n\t\"./km\": 361,\n\t\"./km.js\": 361,\n\t\"./kn\": 362,\n\t\"./kn.js\": 362,\n\t\"./ko\": 363,\n\t\"./ko.js\": 363,\n\t\"./ku\": 364,\n\t\"./ku.js\": 364,\n\t\"./ky\": 365,\n\t\"./ky.js\": 365,\n\t\"./lb\": 366,\n\t\"./lb.js\": 366,\n\t\"./lo\": 367,\n\t\"./lo.js\": 367,\n\t\"./lt\": 368,\n\t\"./lt.js\": 368,\n\t\"./lv\": 369,\n\t\"./lv.js\": 369,\n\t\"./me\": 370,\n\t\"./me.js\": 370,\n\t\"./mi\": 371,\n\t\"./mi.js\": 371,\n\t\"./mk\": 372,\n\t\"./mk.js\": 372,\n\t\"./ml\": 373,\n\t\"./ml.js\": 373,\n\t\"./mn\": 374,\n\t\"./mn.js\": 374,\n\t\"./mr\": 375,\n\t\"./mr.js\": 375,\n\t\"./ms\": 376,\n\t\"./ms-my\": 377,\n\t\"./ms-my.js\": 377,\n\t\"./ms.js\": 376,\n\t\"./mt\": 378,\n\t\"./mt.js\": 378,\n\t\"./my\": 379,\n\t\"./my.js\": 379,\n\t\"./nb\": 380,\n\t\"./nb.js\": 380,\n\t\"./ne\": 381,\n\t\"./ne.js\": 381,\n\t\"./nl\": 382,\n\t\"./nl-be\": 383,\n\t\"./nl-be.js\": 383,\n\t\"./nl.js\": 382,\n\t\"./nn\": 384,\n\t\"./nn.js\": 384,\n\t\"./pa-in\": 385,\n\t\"./pa-in.js\": 385,\n\t\"./pl\": 386,\n\t\"./pl.js\": 386,\n\t\"./pt\": 387,\n\t\"./pt-br\": 388,\n\t\"./pt-br.js\": 388,\n\t\"./pt.js\": 387,\n\t\"./ro\": 389,\n\t\"./ro.js\": 389,\n\t\"./ru\": 390,\n\t\"./ru.js\": 390,\n\t\"./sd\": 391,\n\t\"./sd.js\": 391,\n\t\"./se\": 392,\n\t\"./se.js\": 392,\n\t\"./si\": 393,\n\t\"./si.js\": 393,\n\t\"./sk\": 394,\n\t\"./sk.js\": 394,\n\t\"./sl\": 395,\n\t\"./sl.js\": 395,\n\t\"./sq\": 396,\n\t\"./sq.js\": 396,\n\t\"./sr\": 397,\n\t\"./sr-cyrl\": 398,\n\t\"./sr-cyrl.js\": 398,\n\t\"./sr.js\": 397,\n\t\"./ss\": 399,\n\t\"./ss.js\": 399,\n\t\"./sv\": 400,\n\t\"./sv.js\": 400,\n\t\"./sw\": 401,\n\t\"./sw.js\": 401,\n\t\"./ta\": 402,\n\t\"./ta.js\": 402,\n\t\"./te\": 403,\n\t\"./te.js\": 403,\n\t\"./tet\": 404,\n\t\"./tet.js\": 404,\n\t\"./tg\": 405,\n\t\"./tg.js\": 405,\n\t\"./th\": 406,\n\t\"./th.js\": 406,\n\t\"./tl-ph\": 407,\n\t\"./tl-ph.js\": 407,\n\t\"./tlh\": 408,\n\t\"./tlh.js\": 408,\n\t\"./tr\": 409,\n\t\"./tr.js\": 409,\n\t\"./tzl\": 410,\n\t\"./tzl.js\": 410,\n\t\"./tzm\": 411,\n\t\"./tzm-latn\": 412,\n\t\"./tzm-latn.js\": 412,\n\t\"./tzm.js\": 411,\n\t\"./ug-cn\": 413,\n\t\"./ug-cn.js\": 413,\n\t\"./uk\": 414,\n\t\"./uk.js\": 414,\n\t\"./ur\": 415,\n\t\"./ur.js\": 415,\n\t\"./uz\": 416,\n\t\"./uz-latn\": 417,\n\t\"./uz-latn.js\": 417,\n\t\"./uz.js\": 416,\n\t\"./vi\": 418,\n\t\"./vi.js\": 418,\n\t\"./x-pseudo\": 419,\n\t\"./x-pseudo.js\": 419,\n\t\"./yo\": 420,\n\t\"./yo.js\": 420,\n\t\"./zh-cn\": 421,\n\t\"./zh-cn.js\": 421,\n\t\"./zh-hk\": 422,\n\t\"./zh-hk.js\": 422,\n\t\"./zh-tw\": 423,\n\t\"./zh-tw.js\": 423\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 772;","import { redux } from '@ohif/core';\n\nconst { setViewportLayoutAndData } = redux.actions;\n\n// TODO: Should not be getting dispatch from the window, but I'm not sure how else to do it cleanly\nexport default function setLayoutAndViewportData(layout, viewportSpecificData) {\n  const action = setViewportLayoutAndData(layout, viewportSpecificData);\n\n  window.store.dispatch(action);\n}\n","import setLayoutAndViewportData from './setLayoutAndViewportData.js';\n\nexport default function setMPRLayout(\n  displaySet,\n  viewportPropsArray,\n  numRows = 1,\n  numColumns = 1\n) {\n  return new Promise((resolve, reject) => {\n    const viewports = [];\n    const numViewports = numRows * numColumns;\n\n    if (viewportPropsArray && viewportPropsArray.length !== numViewports) {\n      reject(\n        new Error(\n          'viewportProps is supplied but its length is not equal to numViewports'\n        )\n      );\n    }\n\n    const viewportSpecificData = {};\n\n    for (let i = 0; i < numViewports; i++) {\n      viewports.push({});\n      viewportSpecificData[i] = displaySet;\n      viewportSpecificData[i].plugin = 'vtk';\n    }\n\n    const apis = [];\n    viewports.forEach((viewport, index) => {\n      apis[index] = null;\n      const viewportProps = viewportPropsArray[index];\n      viewports[index] = Object.assign({}, viewports[index], {\n        vtk: {\n          mode: 'mpr', // TODO: not used\n          afterCreation: api => {\n            apis[index] = api;\n\n            if (apis.every(a => !!a)) {\n              resolve(apis);\n            }\n          },\n          ...viewportProps,\n        },\n      });\n    });\n\n    setLayoutAndViewportData(\n      {\n        numRows,\n        numColumns,\n        viewports,\n      },\n      viewportSpecificData\n    );\n  });\n}\n","import setLayoutAndViewportData from './setLayoutAndViewportData.js';\n\nexport default function setViewportToVTK(\n  displaySet,\n  viewportIndex,\n  numRows,\n  numColumns,\n  layout,\n  viewportSpecificData\n) {\n  return new Promise((resolve, reject) => {\n    /*const currentData = layout.viewports[viewportIndex];\n    if (currentData && currentData.plugin === 'vtk') {\n      reject(new Error('Should not have reached this point??'));\n    }*/\n\n    const viewports = layout.viewports.slice();\n\n    viewports[viewportIndex] = Object.assign({}, viewports[viewportIndex], {\n      // plugin: 'vtk',\n      vtk: {\n        mode: 'mpr', // TODO: not used\n        afterCreation: api => {\n          resolve(api);\n        },\n      },\n    });\n\n    const updatedViewportData = viewportSpecificData;\n\n    setLayoutAndViewportData(\n      {\n        numRows,\n        numColumns,\n        viewports,\n      },\n      updatedViewportData\n    );\n  });\n}\n","import throttle from 'lodash.throttle';\nimport {\n  vtkInteractorStyleMPRWindowLevel,\n  vtkInteractorStyleRotatableMPRCrosshairs,\n  vtkSVGRotatableCrosshairsWidget,\n  vtkInteractorStyleMPRRotate,\n} from 'react-vtkjs-viewport';\nimport { getImageData } from 'react-vtkjs-viewport';\nimport { vec3 } from 'gl-matrix';\nimport setMPRLayout from './utils/setMPRLayout.js';\nimport setViewportToVTK from './utils/setViewportToVTK.js';\nimport Constants from 'vtk.js/Sources/Rendering/Core/VolumeMapper/Constants.js';\nimport OHIFVTKViewport from './OHIFVTKViewport';\n\nconst { BlendMode } = Constants;\n\nconst commandsModule = ({ commandsManager, servicesManager }) => {\n  const { UINotificationService, LoggerService } = servicesManager.services;\n\n  // TODO: Put this somewhere else\n  let apis = {};\n  let defaultVOI;\n\n  async function _getActiveViewportVTKApi(viewports) {\n    const {\n      numRows,\n      numColumns,\n      layout,\n      viewportSpecificData,\n      activeViewportIndex,\n    } = viewports;\n\n    const currentData = layout.viewports[activeViewportIndex];\n    if (currentData && currentData.plugin === 'vtk') {\n      // TODO: I was storing/pulling this from Redux but ran into weird issues\n      if (apis[activeViewportIndex]) {\n        return apis[activeViewportIndex];\n      }\n    }\n\n    const displaySet = viewportSpecificData[activeViewportIndex];\n    let api;\n    if (!api) {\n      try {\n        api = await setViewportToVTK(\n          displaySet,\n          activeViewportIndex,\n          numRows,\n          numColumns,\n          layout,\n          viewportSpecificData\n        );\n      } catch (error) {\n        throw new Error(error);\n      }\n    }\n\n    return api;\n  }\n\n  function _setView(api, sliceNormal, viewUp) {\n    const renderWindow = api.genericRenderWindow.getRenderWindow();\n    const istyle = renderWindow.getInteractor().getInteractorStyle();\n    istyle.setSliceNormal(...sliceNormal);\n    istyle.setViewUp(...viewUp);\n\n    renderWindow.render();\n  }\n\n  function getVOIFromCornerstoneViewport() {\n    const dom = commandsManager.runCommand('getActiveViewportEnabledElement');\n    const cornerstoneElement = cornerstone.getEnabledElement(dom);\n\n    if (cornerstoneElement) {\n      const imageId = cornerstoneElement.image.imageId;\n\n      const Modality = cornerstone.metaData.get('Modality', imageId);\n\n      if (Modality !== 'PT') {\n        const { windowWidth, windowCenter } = cornerstoneElement.viewport.voi;\n\n        return {\n          windowWidth,\n          windowCenter,\n        };\n      }\n    }\n  }\n\n  function setVOI(voi) {\n    const { windowWidth, windowCenter } = voi;\n    const lower = windowCenter - windowWidth / 2.0;\n    const upper = windowCenter + windowWidth / 2.0;\n\n    const rgbTransferFunction = apis[0].volumes[0]\n      .getProperty()\n      .getRGBTransferFunction(0);\n\n    rgbTransferFunction.setRange(lower, upper);\n\n    apis.forEach(api => {\n      api.updateVOI(windowWidth, windowCenter);\n    });\n  }\n\n  const _convertModelToWorldSpace = (position, vtkImageData) => {\n    const indexToWorld = vtkImageData.getIndexToWorld();\n    const pos = vec3.create();\n\n    position[0] += 0.5; /* Move to the centre of the voxel. */\n    position[1] += 0.5; /* Move to the centre of the voxel. */\n    position[2] += 0.5; /* Move to the centre of the voxel. */\n\n    vec3.set(pos, position[0], position[1], position[2]);\n    vec3.transformMat4(pos, pos, indexToWorld);\n\n    return pos;\n  };\n\n  const actions = {\n    getVtkApis: ({ index }) => {\n      return apis[index];\n    },\n    resetMPRView() {\n      // Reset orientation\n      apis.forEach(api => api.resetOrientation());\n\n      // Reset VOI\n      if (defaultVOI) setVOI(defaultVOI);\n\n      // Reset the crosshairs\n      apis[0].svgWidgets.rotatableCrosshairsWidget.resetCrosshairs(apis, 0);\n    },\n    axial: async ({ viewports }) => {\n      const api = await _getActiveViewportVTKApi(viewports);\n\n      apis[viewports.activeViewportIndex] = api;\n\n      _setView(api, [0, 0, 1], [0, -1, 0]);\n    },\n    sagittal: async ({ viewports }) => {\n      const api = await _getActiveViewportVTKApi(viewports);\n\n      apis[viewports.activeViewportIndex] = api;\n\n      _setView(api, [1, 0, 0], [0, 0, 1]);\n    },\n    coronal: async ({ viewports }) => {\n      const api = await _getActiveViewportVTKApi(viewports);\n\n      apis[viewports.activeViewportIndex] = api;\n\n      _setView(api, [0, 1, 0], [0, 0, 1]);\n    },\n    requestNewSegmentation: async ({ viewports }) => {\n      const allViewports = Object.values(viewports.viewportSpecificData);\n      const promises = allViewports.map(async (viewport, viewportIndex) => {\n        let api = apis[viewportIndex];\n\n        if (!api) {\n          api = await _getActiveViewportVTKApi(viewports);\n          apis[viewportIndex] = api;\n        }\n\n        api.requestNewSegmentation();\n        api.updateImage();\n      });\n      await Promise.all(promises);\n    },\n    jumpToSlice: async ({\n      viewports,\n      studies,\n      StudyInstanceUID,\n      displaySetInstanceUID,\n      SOPClassUID,\n      SOPInstanceUID,\n      segmentNumber,\n      frameIndex,\n      frame,\n      done = () => {},\n    }) => {\n      let api = apis[viewports.activeViewportIndex];\n\n      if (!api) {\n        api = await _getActiveViewportVTKApi(viewports);\n        apis[viewports.activeViewportIndex] = api;\n      }\n\n      const stack = OHIFVTKViewport.getCornerstoneStack(\n        studies,\n        StudyInstanceUID,\n        displaySetInstanceUID,\n        SOPClassUID,\n        SOPInstanceUID,\n        frameIndex\n      );\n\n      const imageDataObject = getImageData(\n        stack.imageIds,\n        displaySetInstanceUID\n      );\n\n      let pixelIndex = 0;\n      let x = 0;\n      let y = 0;\n      let count = 0;\n\n      const rows = imageDataObject.dimensions[1];\n      const cols = imageDataObject.dimensions[0];\n\n      for (let j = 0; j < rows; j++) {\n        for (let i = 0; i < cols; i++) {\n          // [i, j] =\n          const pixel = frame.pixelData[pixelIndex];\n          if (pixel === segmentNumber) {\n            x += i;\n            y += j;\n            count++;\n          }\n          pixelIndex++;\n        }\n      }\n      x /= count;\n      y /= count;\n\n      const position = [x, y, frameIndex];\n      const worldPos = _convertModelToWorldSpace(\n        position,\n        imageDataObject.vtkImageData\n      );\n\n      api.svgWidgets.rotatableCrosshairsWidget.moveCrosshairs(worldPos, apis);\n      done();\n    },\n    setSegmentationConfiguration: async ({\n      viewports,\n      globalOpacity,\n      visible,\n      renderOutline,\n      outlineThickness,\n    }) => {\n      const allViewports = Object.values(viewports.viewportSpecificData);\n      const promises = allViewports.map(async (viewport, viewportIndex) => {\n        let api = apis[viewportIndex];\n\n        if (!api) {\n          api = await _getActiveViewportVTKApi(viewports);\n          apis[viewportIndex] = api;\n        }\n\n        api.setGlobalOpacity(globalOpacity);\n        api.setVisibility(visible);\n        api.setOutlineThickness(outlineThickness);\n        api.setOutlineRendering(renderOutline);\n        api.updateImage();\n      });\n      await Promise.all(promises);\n    },\n    setSegmentConfiguration: async ({ viewports, visible, segmentNumber }) => {\n      const allViewports = Object.values(viewports.viewportSpecificData);\n      const promises = allViewports.map(async (viewport, viewportIndex) => {\n        let api = apis[viewportIndex];\n\n        if (!api) {\n          api = await _getActiveViewportVTKApi(viewports);\n          apis[viewportIndex] = api;\n        }\n\n        api.setSegmentVisibility(segmentNumber, visible);\n        api.updateImage();\n      });\n      await Promise.all(promises);\n    },\n    enableRotateTool: () => {\n      apis.forEach((api, apiIndex) => {\n        const istyle = vtkInteractorStyleMPRRotate.newInstance();\n\n        api.setInteractorStyle({\n          istyle,\n          configuration: { apis, apiIndex, uid: api.uid },\n        });\n      });\n    },\n    enableCrosshairsTool: () => {\n      apis.forEach((api, apiIndex) => {\n        const istyle = vtkInteractorStyleRotatableMPRCrosshairs.newInstance();\n\n        api.setInteractorStyle({\n          istyle,\n          configuration: {\n            apis,\n            apiIndex,\n            uid: api.uid,\n          },\n        });\n      });\n\n      const rotatableCrosshairsWidget =\n        apis[0].svgWidgets.rotatableCrosshairsWidget;\n\n      const referenceLines = rotatableCrosshairsWidget.getReferenceLines();\n\n      // Initilise crosshairs if not initialised.\n      if (!referenceLines) {\n        rotatableCrosshairsWidget.resetCrosshairs(apis, 0);\n      }\n    },\n    enableLevelTool: () => {\n      function updateVOI(apis, windowWidth, windowCenter) {\n        apis.forEach(api => {\n          api.updateVOI(windowWidth, windowCenter);\n        });\n      }\n\n      const throttledUpdateVOIs = throttle(updateVOI, 16, { trailing: true }); // ~ 60 fps\n\n      const callbacks = {\n        setOnLevelsChanged: ({ windowCenter, windowWidth }) => {\n          apis.forEach(api => {\n            const renderWindow = api.genericRenderWindow.getRenderWindow();\n\n            renderWindow.render();\n          });\n\n          throttledUpdateVOIs(apis, windowWidth, windowCenter);\n        },\n      };\n\n      apis.forEach((api, apiIndex) => {\n        const istyle = vtkInteractorStyleMPRWindowLevel.newInstance();\n\n        api.setInteractorStyle({\n          istyle,\n          callbacks,\n          configuration: { apis, apiIndex, uid: api.uid },\n        });\n      });\n    },\n    setSlabThickness: ({ slabThickness }) => {\n      apis.forEach(api => {\n        api.setSlabThickness(slabThickness);\n      });\n    },\n    changeSlabThickness: ({ change }) => {\n      apis.forEach(api => {\n        const slabThickness = Math.max(api.getSlabThickness() + change, 0.1);\n\n        api.setSlabThickness(slabThickness);\n      });\n    },\n    setBlendModeToComposite: () => {\n      apis.forEach(api => {\n        const renderWindow = api.genericRenderWindow.getRenderWindow();\n        const istyle = renderWindow.getInteractor().getInteractorStyle();\n\n        const slabThickness = api.getSlabThickness();\n\n        const mapper = api.volumes[0].getMapper();\n        if (mapper.setBlendModeToComposite) {\n          mapper.setBlendModeToComposite();\n        }\n\n        if (istyle.setSlabThickness) {\n          istyle.setSlabThickness(slabThickness);\n        }\n        renderWindow.render();\n      });\n    },\n    setBlendModeToMaximumIntensity: () => {\n      apis.forEach(api => {\n        const renderWindow = api.genericRenderWindow.getRenderWindow();\n        const mapper = api.volumes[0].getMapper();\n        if (mapper.setBlendModeToMaximumIntensity) {\n          mapper.setBlendModeToMaximumIntensity();\n        }\n        renderWindow.render();\n      });\n    },\n    setBlendMode: ({ blendMode }) => {\n      apis.forEach(api => {\n        const renderWindow = api.genericRenderWindow.getRenderWindow();\n\n        api.volumes[0].getMapper().setBlendMode(blendMode);\n\n        renderWindow.render();\n      });\n    },\n    mpr2d: async ({ viewports }) => {\n      // TODO push a lot of this backdoor logic lower down to the library level.\n      const displaySet =\n        viewports.viewportSpecificData[viewports.activeViewportIndex];\n\n      // Get current VOI if cornerstone viewport.\n      const cornerstoneVOI = getVOIFromCornerstoneViewport();\n      defaultVOI = cornerstoneVOI;\n\n      const viewportProps = [\n        {\n          //Axial\n          orientation: {\n            sliceNormal: [0, 0, 1],\n            viewUp: [0, -1, 0],\n          },\n        },\n        {\n          // Sagittal\n          orientation: {\n            sliceNormal: [1, 0, 0],\n            viewUp: [0, 0, 1],\n          },\n        },\n        {\n          // Coronal\n          orientation: {\n            sliceNormal: [0, 1, 0],\n            viewUp: [0, 0, 1],\n          },\n        },\n      ];\n\n      try {\n        apis = await setMPRLayout(displaySet, viewportProps, 1, 3);\n      } catch (error) {\n        throw new Error(error);\n      }\n\n      if (cornerstoneVOI) {\n        setVOI(cornerstoneVOI);\n      }\n\n      // Add widgets and set default interactorStyle of each viewport.\n      apis.forEach((api, apiIndex) => {\n        api.addSVGWidget(\n          vtkSVGRotatableCrosshairsWidget.newInstance(),\n          'rotatableCrosshairsWidget'\n        );\n\n        const uid = api.uid;\n        const istyle = vtkInteractorStyleRotatableMPRCrosshairs.newInstance();\n\n        api.setInteractorStyle({\n          istyle,\n          configuration: { apis, apiIndex, uid },\n        });\n\n        api.svgWidgets.rotatableCrosshairsWidget.setApiIndex(apiIndex);\n        api.svgWidgets.rotatableCrosshairsWidget.setApis(apis);\n      });\n\n      const firstApi = apis[0];\n\n      // Initialise crosshairs\n      apis[0].svgWidgets.rotatableCrosshairsWidget.resetCrosshairs(apis, 0);\n\n      // Check if we have full WebGL 2 support\n      const openGLRenderWindow = apis[0].genericRenderWindow.getOpenGLRenderWindow();\n\n      if (!openGLRenderWindow.getWebgl2()) {\n        // Throw a warning if we don't have WebGL 2 support,\n        // And the volume is too big to fit in a 2D texture\n\n        const openGLContext = openGLRenderWindow.getContext();\n        const maxTextureSizeInBytes = openGLContext.getParameter(\n          openGLContext.MAX_TEXTURE_SIZE\n        );\n\n        const maxBufferLengthFloat32 =\n          (maxTextureSizeInBytes * maxTextureSizeInBytes) / 4;\n\n        const dimensions = firstApi.volumes[0]\n          .getMapper()\n          .getInputData()\n          .getDimensions();\n\n        const volumeLength = dimensions[0] * dimensions[1] * dimensions[2];\n\n        if (volumeLength > maxBufferLengthFloat32) {\n          const message =\n            'This volume is too large to fit in WebGL 1 textures and will display incorrectly. Please use a different browser to view this data';\n          LoggerService.error({ message });\n          UINotificationService.show({\n            title: 'Browser does not support WebGL 2',\n            message,\n            type: 'error',\n            autoClose: false,\n          });\n        }\n      }\n    },\n  };\n\n  window.vtkActions = actions;\n\n  const definitions = {\n    requestNewSegmentation: {\n      commandFn: actions.requestNewSegmentation,\n      storeContexts: ['viewports'],\n      options: {},\n    },\n    jumpToSlice: {\n      commandFn: actions.jumpToSlice,\n      storeContexts: ['viewports'],\n      options: {},\n    },\n    setSegmentationConfiguration: {\n      commandFn: actions.setSegmentationConfiguration,\n      storeContexts: ['viewports'],\n      options: {},\n    },\n    setSegmentConfiguration: {\n      commandFn: actions.setSegmentConfiguration,\n      storeContexts: ['viewports'],\n      options: {},\n    },\n    axial: {\n      commandFn: actions.axial,\n      storeContexts: ['viewports'],\n      options: {},\n    },\n    coronal: {\n      commandFn: actions.coronal,\n      storeContexts: ['viewports'],\n      options: {},\n    },\n    sagittal: {\n      commandFn: actions.sagittal,\n      storeContexts: ['viewports'],\n      options: {},\n    },\n    enableRotateTool: {\n      commandFn: actions.enableRotateTool,\n      options: {},\n    },\n    enableCrosshairsTool: {\n      commandFn: actions.enableCrosshairsTool,\n      options: {},\n    },\n    enableLevelTool: {\n      commandFn: actions.enableLevelTool,\n      options: {},\n    },\n    resetMPRView: {\n      commandFn: actions.resetMPRView,\n      options: {},\n    },\n    setBlendModeToComposite: {\n      commandFn: actions.setBlendModeToComposite,\n      options: { blendMode: BlendMode.COMPOSITE_BLEND },\n    },\n    setBlendModeToMaximumIntensity: {\n      commandFn: actions.setBlendModeToMaximumIntensity,\n      options: { blendMode: BlendMode.MAXIMUM_INTENSITY_BLEND },\n    },\n    setBlendModeToMinimumIntensity: {\n      commandFn: actions.setBlendMode,\n      options: { blendMode: BlendMode.MINIMUM_INTENSITY_BLEND },\n    },\n    setBlendModeToAverageIntensity: {\n      commandFn: actions.setBlendMode,\n      options: { blendMode: BlendMode.AVERAGE_INTENSITY_BLEND },\n    },\n    setSlabThickness: {\n      // TODO: How do we pass in a function argument?\n      commandFn: actions.setSlabThickness,\n      options: {},\n    },\n    increaseSlabThickness: {\n      commandFn: actions.changeSlabThickness,\n      options: {\n        change: 3,\n      },\n    },\n    decreaseSlabThickness: {\n      commandFn: actions.changeSlabThickness,\n      options: {\n        change: -3,\n      },\n    },\n    mpr2d: {\n      commandFn: actions.mpr2d,\n      storeContexts: ['viewports'],\n      options: {},\n      context: 'VIEWER',\n    },\n    getVtkApiForViewportIndex: {\n      commandFn: actions.getVtkApis,\n      context: 'VIEWER',\n    },\n  };\n\n  return {\n    definitions,\n    defaultContext: 'ACTIVE_VIEWPORT::VTK',\n  };\n};\n\nexport default commandsModule;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { Range, Checkbox, OldSelect } from '@ohif/ui';\n\nimport './slab-thickness-toolbar-button.styl';\n\nconst SLIDER = {\n  MIN: 0.1,\n  MAX: 1000,\n  STEP: 0.1,\n};\n\nconst ToolbarLabel = props => {\n  const { label } = props;\n  return <div className=\"toolbar-button-label\">{label}</div>;\n};\n\nToolbarLabel.propTypes = {\n  label: PropTypes.string.isRequired,\n};\n\nconst ToolbarSlider = props => {\n  const { value, min, max, onChange } = props;\n  return (\n    <div className=\"toolbar-slider-container\">\n      <label htmlFor=\"toolbar-slider\">{value}mm</label>\n      <Range\n        value={value}\n        min={min}\n        max={max}\n        step={SLIDER.STEP}\n        onChange={onChange}\n        id=\"toolbar-slider\"\n      />\n    </div>\n  );\n};\n\nToolbarSlider.propTypes = {\n  value: PropTypes.number.isRequired,\n  min: PropTypes.number.isRequired,\n  max: PropTypes.number.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst _getSelectOptions = button => {\n  return button.operationButtons.map(button => {\n    return {\n      key: button.label,\n      value: button.id,\n    };\n  });\n};\n\nconst _getClassNames = (isActive, className) => {\n  return classnames('toolbar-button', 'slab-thickness', className, {\n    active: isActive,\n  });\n};\n\nconst _applySlabThickness = (\n  value,\n  modeChecked,\n  toolbarClickCallback,\n  button\n) => {\n  if (!modeChecked || !toolbarClickCallback) {\n    return;\n  }\n\n  const { actionButton } = button;\n\n  const generateOperation = (operation, value) => {\n    // Combine slider value into slider operation\n    const generatedOperation = { ...operation };\n    generatedOperation.commandOptions = {\n      ...operation.commandOptions,\n      slabThickness: value,\n    };\n\n    return generatedOperation;\n  };\n\n  const operation = generateOperation(actionButton, value);\n  toolbarClickCallback(operation, event);\n};\n\nconst _applyModeOperation = (\n  operation,\n  modeChecked,\n  toolbarClickCallback,\n  button\n) => {\n  // in case modeChecked has not being triggered by user yet\n  if (typeof modeChecked !== 'boolean') {\n    return;\n  }\n\n  const { deactivateButton } = button;\n\n  const _operation = modeChecked ? operation : deactivateButton;\n  if (toolbarClickCallback && _operation) {\n    toolbarClickCallback(_operation);\n  }\n};\n\nconst _getInitialState = currentSelectedOption => {\n  return {\n    value: SLIDER.MIN,\n    sliderMin: SLIDER.MIN,\n    sliderMax: SLIDER.MAX,\n    modeChecked: undefined,\n    operation: currentSelectedOption,\n  };\n};\n\nconst INITIAL_OPTION_INDEX = 0;\nconst _getInitialtSelectedOption = (button = {}) => {\n  return (\n    button.operationButtons && button.operationButtons[INITIAL_OPTION_INDEX]\n  );\n};\n\nfunction SlabThicknessToolbarComponent({\n  parentContext,\n  toolbarClickCallback,\n  button,\n  activeButtons,\n  isActive,\n  className,\n}) {\n  const currentSelectedOption = _getInitialtSelectedOption(button);\n  const [state, setState] = useState(_getInitialState(currentSelectedOption));\n  const { label, operationButtons } = button;\n  const _className = _getClassNames(isActive, className);\n  const selectOptions = _getSelectOptions(button);\n  function onChangeSelect(selectedValue) {\n    // find select value\n    const operation = operationButtons.find(\n      button => button.id === selectedValue\n    );\n\n    if (operation === state.operation) {\n      return;\n    }\n\n    setState({ ...state, operation });\n  }\n\n  function onChangeCheckbox(checked) {\n    setState({ ...state, modeChecked: checked });\n  }\n\n  function onChangeSlider(event) {\n    const value = Number(event.target.value);\n\n    if (value !== state.value) {\n      setState({ ...state, value, modeChecked: true });\n    }\n  }\n\n  useEffect(() => {\n    _applyModeOperation(\n      state.operation,\n      state.modeChecked,\n      toolbarClickCallback,\n      button\n    );\n  }, [state.modeChecked, state.operation]);\n\n  useEffect(() => {\n    _applySlabThickness(\n      state.value,\n      state.modeChecked,\n      toolbarClickCallback,\n      button\n    );\n  }, [state.operation, state.modeChecked, state.value]);\n\n  return (\n    <div className={_className}>\n      <div className=\"container\">\n        <ToolbarSlider\n          value={state.value}\n          min={state.sliderMin}\n          max={state.sliderMax}\n          onChange={onChangeSlider}\n        />\n        <ToolbarLabel key=\"toolbar-label\" label={label} />\n      </div>\n      <div className=\"controller\">\n        <Checkbox\n          label=\"mode\"\n          checked={state.modeChecked}\n          onChange={onChangeCheckbox}\n        ></Checkbox>\n        <OldSelect\n          key=\"toolbar-select\"\n          options={selectOptions}\n          value={selectOptions[INITIAL_OPTION_INDEX].value}\n          onChange={onChangeSelect}\n        ></OldSelect>\n      </div>\n    </div>\n  );\n}\n\nSlabThicknessToolbarComponent.propTypes = {\n  parentContext: PropTypes.object.isRequired,\n  toolbarClickCallback: PropTypes.func.isRequired,\n  button: PropTypes.object.isRequired,\n  activeButtons: PropTypes.array.isRequired,\n  isActive: PropTypes.bool,\n  className: PropTypes.string,\n};\n\nexport default SlabThicknessToolbarComponent;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { ToolbarButton } from '@ohif/ui';\nimport { utils } from '@ohif/core';\n\nconst { studyMetadataManager } = utils;\n\nlet isVisible = true;\n\nconst _isDisplaySetReconstructable = (viewportSpecificData = {}, activeViewportIndex) => {\n  if (!viewportSpecificData[activeViewportIndex]) {\n    return false;\n  };\n\n  const { displaySetInstanceUID, StudyInstanceUID } = viewportSpecificData[\n    activeViewportIndex\n  ];\n\n  const studies = studyMetadataManager.all();\n\n  const study = studies.find(\n    study => study.studyInstanceUID === StudyInstanceUID\n  );\n\n  if (!study) {\n    return false;\n  }\n\n  const displaySet = study._displaySets.find(set => set.displaySetInstanceUID === displaySetInstanceUID);\n\n  if (!displaySet) {\n    return false;\n  };\n\n  return displaySet.isReconstructable;\n};\n\nfunction VTKMPRToolbarButton({\n  parentContext,\n  toolbarClickCallback,\n  button,\n  activeButtons,\n  isActive,\n  className,\n}) {\n  const { id, label, icon } = button;\n  const { viewportSpecificData, activeViewportIndex } = useSelector(state => {\n    const { viewports = {} } = state;\n    const { viewportSpecificData, activeViewportIndex } = viewports;\n\n    return {\n      viewportSpecificData,\n      activeViewportIndex,\n    }\n  });\n\n  isVisible = _isDisplaySetReconstructable(\n    viewportSpecificData,\n    activeViewportIndex,\n  );\n\n  return (\n    <React.Fragment>\n      {isVisible && (\n        <ToolbarButton\n          key={id}\n          label={label}\n          icon={icon}\n          onClick={evt => toolbarClickCallback(button, evt)}\n          isActive={isActive}\n        />\n      )}\n    </React.Fragment>\n  );\n}\n\nVTKMPRToolbarButton.propTypes = {\n  parentContext: PropTypes.object.isRequired,\n  toolbarClickCallback: PropTypes.func.isRequired,\n  button: PropTypes.object.isRequired,\n  activeButtons: PropTypes.array.isRequired,\n  isActive: PropTypes.bool,\n  className: PropTypes.string,\n};\n\nexport default VTKMPRToolbarButton;\n","import SlabThicknessToolbarComponent from './toolbarComponents/SlabThicknessToolbarComponent';\nimport VTKMPRToolbarButton from './toolbarComponents/VTKMPRToolbarButton';\n\nconst TOOLBAR_BUTTON_TYPES = {\n  COMMAND: 'command',\n  SET_TOOL_ACTIVE: 'setToolActive',\n};\n\nconst definitions = [\n  {\n    id: 'Crosshairs',\n    label: 'Crosshairs',\n    icon: 'crosshairs',\n    //\n    type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\n    commandName: 'enableCrosshairsTool',\n    commandOptions: {},\n  },\n  {\n    id: 'WWWC',\n    label: 'WWWC',\n    icon: 'level',\n    //\n    type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\n    commandName: 'enableLevelTool',\n    commandOptions: {},\n  },\n  {\n    id: 'Reset',\n    label: 'Reset',\n    icon: 'reset',\n    //\n    type: TOOLBAR_BUTTON_TYPES.COMMAND,\n    commandName: 'resetMPRView',\n    commandOptions: {},\n  },\n  /*\n  {\n    id: 'Rotate',\n    label: 'Rotate',\n    icon: '3d-rotate',\n    //\n    type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\n    commandName: 'enableRotateTool',\n    commandOptions: {},\n  },\n  */\n  /*\n  {\n    id: 'setBlendModeToComposite',\n    label: 'Disable MIP',\n    icon: 'times',\n    //\n    type: TOOLBAR_BUTTON_TYPES.COMMAND,\n    commandName: 'setBlendModeToComposite',\n    commandOptions: {},\n  },\n  {\n    id: 'setBlendModeToMaximumIntensity',\n    label: 'Enable MIP',\n    icon: 'soft-tissue',\n    //\n    type: TOOLBAR_BUTTON_TYPES.COMMAND,\n    commandName: 'setBlendModeToMaximumIntensity',\n    commandOptions: {},\n  },\n\n  {\n    id: 'increaseSlabThickness',\n    label: 'Increase Slab Thickness',\n    icon: 'caret-up',\n    //\n    type: TOOLBAR_BUTTON_TYPES.COMMAND,\n    commandName: 'increaseSlabThickness',\n    commandOptions: {},\n  },\n  {\n    id: 'decreaseSlabThickness',\n    label: 'Decrease Slab Thickness',\n    icon: 'caret-down',\n    //\n    type: TOOLBAR_BUTTON_TYPES.COMMAND,\n    commandName: 'decreaseSlabThickness',\n    commandOptions: {},\n  },\n  */\n  {\n    id: 'changeSlabThickness',\n    label: 'Slab Thickness',\n    icon: 'soft-tissue',\n    CustomComponent: SlabThicknessToolbarComponent,\n    commandName: 'setSlabThickness',\n    actionButton: {\n      id: 'setSlabThickness',\n      label: 'slider',\n      type: TOOLBAR_BUTTON_TYPES.COMMAND,\n      commandName: 'setSlabThickness',\n      commandOptions: {},\n    },\n    deactivateButton: {\n      id: 'setBlendModeToComposite',\n      type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\n      commandName: 'setBlendModeToComposite',\n      commandOptions: {},\n    },\n    operationButtons: [\n      {\n        id: 'setBlendModeToMaximumIntensity',\n        label: 'MIP',\n        type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\n        commandName: 'setBlendModeToMaximumIntensity',\n        commandOptions: {},\n      },\n      {\n        id: 'setBlendModeToMinimumIntensity',\n        label: 'MinIP',\n        type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\n        commandName: 'setBlendModeToMinimumIntensity',\n        commandOptions: {},\n      },\n      {\n        id: 'setBlendModeToAverageIntensity',\n        label: 'AvgIP',\n        type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\n        commandName: 'setBlendModeToAverageIntensity',\n        commandOptions: {},\n      },\n    ],\n  },\n  {\n    id: '2DMPR',\n    label: '2D MPR',\n    icon: 'cube',\n    //\n    CustomComponent: VTKMPRToolbarButton,\n    type: TOOLBAR_BUTTON_TYPES.COMMAND,\n    commandName: 'mpr2d',\n    context: 'ACTIVE_VIEWPORT::CORNERSTONE',\n  },\n];\n\nexport default {\n  definitions,\n  defaultContext: 'ACTIVE_VIEWPORT::VTK',\n};\n","import React from 'react';\n\nexport default function withCommandsManager(Component, commandsManager = {}) {\n  return class WithCommandsManager extends React.Component {\n    render() {\n      return (\n        <Component\n          {...this.props}\n          onScroll={viewportIndex =>\n            commandsManager.runCommand('getVtkApiForViewportIndex', {\n              index: viewportIndex,\n            })\n          }\n        />\n      );\n    }\n  };\n}\n","import React from 'react';\nimport { asyncComponent, retryImport } from '@ohif/ui';\n\nimport commandsModule from './commandsModule.js';\nimport toolbarModule from './toolbarModule.js';\nimport withCommandsManager from './withCommandsManager.js';\nimport { version } from '../package.json';\n// This feels weird\n// import loadLocales from './loadLocales';\n\nconst OHIFVTKViewport = asyncComponent(() =>\n  retryImport(() =>\n    import(/* webpackChunkName: \"OHIFVTKViewport\" */ './OHIFVTKViewport.js')\n  )\n);\n\nconst vtkExtension = {\n  /**\n   * Only required property. Should be a unique value across all extensions.\n   */\n  id: 'vtk',\n  version,\n\n  getViewportModule({ commandsManager, servicesManager }) {\n    const ExtendedVTKViewport = props => (\n      <OHIFVTKViewport\n        {...props}\n        servicesManager={servicesManager}\n        commandsManager={commandsManager}\n      />\n    );\n    return withCommandsManager(ExtendedVTKViewport, commandsManager);\n  },\n  getToolbarModule() {\n    return toolbarModule;\n  },\n  getCommandsModule({ commandsManager, servicesManager }) {\n    return commandsModule({ commandsManager, servicesManager });\n  },\n};\n\nexport default vtkExtension;\n\nexport { vtkExtension };\n\n// loadLocales();\n","import { MODULE_TYPES, utils, metadata } from '@ohif/core';\n\n// TODO: Should probably use dcmjs for this\nconst SOP_CLASS_UIDS = {\n  BASIC_TEXT_SR: '1.2.840.10008.5.1.4.1.1.88.11',\n  ENHANCED_SR: '1.2.840.10008.5.1.4.1.1.88.22',\n  COMPREHENSIVE_SR: '1.2.840.10008.5.1.4.1.1.88.33',\n  COMPREHENSIVE_3D_SR: '1.2.840.10008.5.1.4.1.1.88.34',\n  PROCEDURE_LOG_STORAGE: '1.2.840.10008.5.1.4.1.1.88.40',\n  MAMMOGRAPHY_CAD_SR: '1.2.840.10008.5.1.4.1.1.88.50',\n  CHEST_CAD_SR: '1.2.840.10008.5.1.4.1.1.88.65',\n  X_RAY_RADIATION_DOSE_SR: '1.2.840.10008.5.1.4.1.1.88.67',\n  ACQUISITION_CONTEXT_SR_STORAGE: '1.2.840.10008.5.1.4.1.1.88.71',\n};\n\nconst sopClassUIDs = Object.values(SOP_CLASS_UIDS);\n\n// TODO: Handle the case where there is more than one SOP Class Handler for the\n// same SOP Class\nconst OHIFDicomHtmlSopClassHandler = {\n  id: 'OHIFDicomHtmlSopClassHandler',\n  type: MODULE_TYPES.SOP_CLASS_HANDLER,\n  sopClassUIDs,\n  getDisplaySetFromSeries(series, study, dicomWebClient, authorizationHeaders) {\n    const instance = series.getFirstInstance();\n\n    const metadata = instance.getData().metadata;\n    const {\n      SeriesDescription,\n      SeriesNumber,\n      SeriesDate,\n      SeriesTime,\n    } = metadata;\n\n    const srDisplaySet = {\n      plugin: 'html',\n      Modality: 'SR',\n      displaySetInstanceUID: utils.guid(),\n      wadoRoot: study.getData().wadoRoot,\n      wadoUri: instance.getData().wadouri,\n      SOPInstanceUID: instance.getSOPInstanceUID(),\n      SeriesInstanceUID: series.getSeriesInstanceUID(),\n      StudyInstanceUID: study.getStudyInstanceUID(),\n      SeriesDescription,\n      metadata,\n      SeriesDate,\n      SeriesTime,\n      SeriesNumber,\n      authorizationHeaders,\n      sopClassUids: sopClassUIDs,\n      images: series._instances,\n      isDerived: true,\n      referencedDisplaySets: [],\n    };\n\n    srDisplaySet.getSourceDisplaySet = function() {\n      return srDisplaySet.referencedDisplaySets;\n    };\n\n    return srDisplaySet;\n  },\n};\n\nexport default OHIFDicomHtmlSopClassHandler;\n","import React from 'react';\nimport OHIFDicomHtmlSopClassHandler from './OHIFDicomHtmlSopClassHandler.js';\nimport { version } from '../package.json';\n\nconst Component = React.lazy(() => {\n  return import('./OHIFDicomHtmlViewport');\n});\n\nconst OHIFDicomHtmlViewport = props => {\n  return (\n    <React.Suspense fallback={<div>Loading...</div>}>\n      <Component {...props} />\n    </React.Suspense>\n  );\n};\n\nexport default {\n  /**\n   * Only required property. Should be a unique value across all extensions.\n   */\n  id: 'html',\n  version,\n\n  getViewportModule() {\n    return OHIFDicomHtmlViewport;\n  },\n  getSopClassHandlerModule() {\n    return OHIFDicomHtmlSopClassHandler;\n  },\n};\n","import cornerstone from 'cornerstone-core';\nimport cornerstoneTools from 'cornerstone-tools';\n\nconst { importInternal } = cornerstoneTools;\nconst draw = importInternal('drawing/draw');\nconst drawLine = importInternal('drawing/drawLine');\nconst getNewContext = importInternal('drawing/getNewContext');\n\nexport default function _drawCanvasCrosshairs(eventData, center, options) {\n  const context = getNewContext(eventData.canvasContext.canvas);\n  const { element } = eventData;\n\n  const centerCanvas = cornerstone.pixelToCanvas(element, center);\n\n  const { clientWidth: width, clientHeight: height } = element;\n\n  const offset = 10;\n\n  draw(context, context => {\n    drawLine(\n      context,\n      element,\n      { x: centerCanvas.x + offset, y: centerCanvas.y },\n      { x: width, y: centerCanvas.y },\n      options,\n      'canvas'\n    );\n\n    drawLine(\n      context,\n      element,\n      { x: centerCanvas.x - offset, y: centerCanvas.y },\n      { x: 0, y: centerCanvas.y },\n      options,\n      'canvas'\n    );\n\n    drawLine(\n      context,\n      element,\n      { x: centerCanvas.x, y: centerCanvas.y + offset },\n      { x: centerCanvas.x, y: height },\n      options,\n      'canvas'\n    );\n\n    drawLine(\n      context,\n      element,\n      { x: centerCanvas.x, y: centerCanvas.y - offset },\n      { x: centerCanvas.x, y: 0 },\n      options,\n      'canvas'\n    );\n  });\n}\n","import cornerstoneTools, {\n  importInternal,\n  getToolState,\n  toolColors,\n  getModule,\n  globalImageIdSpecificToolStateManager,\n} from 'cornerstone-tools';\nimport cornerstone from 'cornerstone-core';\nimport drawCanvasCrosshairs from '../utils/drawCanvasCrosshairs';\nimport TOOL_NAMES from './TOOL_NAMES';\n\nconst { DICOM_SEG_TEMP_CROSSHAIRS_TOOL } = TOOL_NAMES;\nconst { getters } = getModule('segmentation');\n\n// Cornerstone 3rd party dev kit imports\nconst BaseTool = importInternal('base/BaseTool');\n\n/**\n * @class RTStructDisplayTool - Renders RTSTRUCT data in a read only manner (i.e. as an overlay).\n * @extends cornerstoneTools.BaseTool\n */\nexport default class DICOMSegTempCrosshairsTool extends BaseTool {\n  constructor(props = {}) {\n    const defaultProps = {\n      mixins: ['enabledOrDisabledBinaryTool'],\n      name: DICOM_SEG_TEMP_CROSSHAIRS_TOOL,\n    };\n\n    const initialProps = Object.assign(defaultProps, props);\n\n    super(initialProps);\n\n    this._rtStructModule = cornerstoneTools.getModule('rtstruct');\n  }\n\n  renderToolData(evt) {\n    const eventData = evt.detail;\n    const { element } = eventData;\n    const toolState = getToolState(evt.currentTarget, this.name);\n\n    if (!toolState) {\n      return;\n    }\n\n    // We have tool data for this element - iterate over each one and draw it\n\n    for (let i = 0; i < toolState.data.length; i++) {\n      const data = toolState.data[i];\n      const crossHairCenter = data.center;\n\n      drawCanvasCrosshairs(eventData, crossHairCenter, {\n        color: toolColors.getActiveColor(),\n        lineWidth: 1,\n      });\n\n      // Remove the crosshairs, we only render them for one redraw.\n      toolState.data.pop();\n    }\n  }\n}\n\nDICOMSegTempCrosshairsTool.addCrosshair = (element, imageId, segmentNumber) => {\n  const labelmap3D = getters.labelmap3D(element);\n  const stackToolState = cornerstoneTools.getToolState(element, 'stack');\n  const enabledElement = cornerstone.getEnabledElement(element);\n\n  const { rows, columns } = enabledElement.image;\n\n  if (!stackToolState) {\n    return;\n  }\n\n  const imageIds = stackToolState.data[0].imageIds;\n  const imageIdIndex = imageIds.findIndex(imgId => imgId === imageId);\n\n  const labelmap2D = labelmap3D.labelmaps2D[imageIdIndex];\n  const { pixelData } = labelmap2D;\n\n  let xCenter = 0;\n  let yCenter = 0;\n\n  let count = 0;\n\n  for (let y = 0; y < rows; y++) {\n    for (let x = 0; x < columns; x++) {\n      if (pixelData[y * columns + x] === segmentNumber) {\n        count++;\n        xCenter += x + 0.5;\n        yCenter += y + 0.5;\n      }\n    }\n  }\n\n  xCenter /= count;\n  yCenter /= count;\n\n  const globalToolState = globalImageIdSpecificToolStateManager.saveToolState();\n\n  if (!globalToolState[imageId]) {\n    globalToolState[imageId] = {};\n  }\n\n  const imageIdSpecificToolState = globalToolState[imageId];\n\n  if (!imageIdSpecificToolState[DICOM_SEG_TEMP_CROSSHAIRS_TOOL]) {\n    imageIdSpecificToolState[DICOM_SEG_TEMP_CROSSHAIRS_TOOL] = { data: [] };\n  } else if (!imageIdSpecificToolState[DICOM_SEG_TEMP_CROSSHAIRS_TOOL].data) {\n    imageIdSpecificToolState[DICOM_SEG_TEMP_CROSSHAIRS_TOOL].data = [];\n  }\n\n  const toolSpecificData =\n    imageIdSpecificToolState[DICOM_SEG_TEMP_CROSSHAIRS_TOOL].data;\n\n  toolSpecificData.push({ center: { x: xCenter, y: yCenter }, segmentNumber });\n\n  // Enable the tool if not enabled for the element.\n\n  const tool = cornerstoneTools.getToolForElement(\n    element,\n    DICOM_SEG_TEMP_CROSSHAIRS_TOOL\n  );\n\n  if (tool.mode !== 'enabled') {\n    // If not already active or passive, set passive so contours render.\n    cornerstoneTools.setToolEnabled(DICOM_SEG_TEMP_CROSSHAIRS_TOOL);\n  }\n};\n","const TOOL_NAMES = {\n  DICOM_SEG_TEMP_CROSSHAIRS_TOOL: 'DICOMSegTempCrosshairsTool',\n};\n\nexport default TOOL_NAMES;\n","/* TODO: Creation tools (future release).\n\nconst TOOLBAR_BUTTON_TYPES = {\n  COMMAND: 'command',\n  SET_TOOL_ACTIVE: 'setToolActive',\n  BUILT_IN: 'builtIn',\n};\n\n*/\n\nconst definitions = []; /* TODO: Creation tools (future release). [\n  {\n    id: 'SegDropdown',\n    label: 'Segmentation',\n    icon: 'ellipse-circle',\n    buttons: [\n      {\n        id: 'Brush',\n        label: 'Brush',\n        icon: 'brush',\n        //\n        type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\n        commandName: 'setToolActive',\n        commandOptions: { toolName: 'Brush' },\n      },\n      {\n        id: 'SphericalBrush',\n        label: 'Spherical',\n        icon: 'sphere',\n        //\n        type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\n        commandName: 'setToolActive',\n        commandOptions: { toolName: 'SphericalBrush' },\n      },\n      {\n        id: 'CorrectionScissors',\n        label: 'Correction Scissors',\n        icon: 'scissors',\n        //\n        type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\n        commandName: 'setToolActive',\n        commandOptions: { toolName: 'CorrectionScissors' },\n      },\n      {\n        id: 'BrushEraser',\n        label: 'Eraser',\n        icon: 'trash',\n        //\n        type: TOOLBAR_BUTTON_TYPES.SET_TOOL_ACTIVE,\n        commandName: 'setToolActive',\n        commandOptions: { toolName: 'BrushEraser' },\n      },\n    ],\n  },\n]; */\n\nexport default {\n  definitions,\n  defaultContext: 'ACTIVE_VIEWPORT::CORNERSTONE',\n};\n","import dcmjs from 'dcmjs';\nimport cornerstone from 'cornerstone-core';\nimport cornerstoneTools from 'cornerstone-tools';\n\nexport default async function loadSegmentation(\n  imageIds,\n  segDisplaySet,\n  labelmapBuffer,\n  segMetadata,\n  segmentsOnFrame,\n  labelmapSegments\n) {\n  const { setters } = cornerstoneTools.getModule('segmentation');\n\n  // TODO: Could define a color LUT based on colors in the SEG.\n  const labelmapIndex = _getNextLabelmapIndex(imageIds[0]);\n  const colorLUTIndex = _makeColorLUTAndGetIndex(segMetadata);\n\n  setters.labelmap3DByFirstImageId(\n    imageIds[0],\n    labelmapBuffer,\n    labelmapIndex,\n    segMetadata,\n    imageIds.length,\n    segmentsOnFrame,\n    colorLUTIndex\n  );\n\n  if (!segDisplaySet.labelmapSegments) {\n    segDisplaySet.labelmapSegments = {};\n  }\n\n  /**\n   * Cache each labelmap segments.\n   * This data is used to determine the active label map when a given segment is activated/clicked.\n   */\n  segDisplaySet.labelmapSegments[labelmapIndex] = labelmapSegments.length\n    ? Array.from(\n        new Set(labelmapSegments.filter(a => !!a).reduce((a, b) => a.concat(b)))\n      )\n    : [];\n  segDisplaySet.labelmapIndex = labelmapIndex;\n\n  /*\n   * TODO: Improve the way we notify parts of the app that depends on segs to be loaded.\n   *\n   * Currently we are using a non-ideal implementation through a custom event to notify the segmentation panel\n   * or other components that could rely on loaded segmentations that\n   * the segments were loaded so that e.g. when the user opens the panel\n   * before the segments are fully loaded, the panel can subscribe to this custom event\n   * and update itself with the new segments.\n   *\n   * This limitation is due to the fact that the cs segmentation module is an object (which will be\n   * updated after the segments are loaded) that React its not aware of its changes\n   * because the module object its not passed in to the panel component as prop but accessed externally.\n   *\n   * Improving this event approach to something reactive that can be tracked inside the react lifecycle,\n   * allows us to easily watch the module or the segmentations loading process in any other component\n   * without subscribing to external events.\n   */\n  console.log('Segmentation loaded.');\n  const event = new CustomEvent('extensiondicomsegmentationsegloaded', {\n    detail: {\n      imageIds,\n      segDisplaySet,\n      labelmapBuffer,\n      segMetadata,\n      segmentsOnFrame,\n      labelmapSegments,\n    },\n  });\n  document.dispatchEvent(event);\n\n  return labelmapIndex;\n}\n\nfunction _getNextLabelmapIndex(firstImageId) {\n  const { state } = cornerstoneTools.getModule('segmentation');\n  const brushStackState = state.series[firstImageId];\n\n  let labelmapIndex = 0;\n\n  if (brushStackState) {\n    const { labelmaps3D } = brushStackState;\n    labelmapIndex = labelmaps3D.length;\n\n    for (let i = 0; i < labelmaps3D.length; i++) {\n      if (!labelmaps3D[i]) {\n        labelmapIndex = i;\n        break;\n      }\n    }\n  }\n\n  return labelmapIndex;\n}\n\nfunction _makeColorLUTAndGetIndex(segMetadata) {\n  const { setters, state } = cornerstoneTools.getModule('segmentation');\n  const { colorLutTables } = state;\n  const colorLUTIndex = _getNextColorLUTIndex();\n\n  const { data } = segMetadata;\n\n  if (\n    !data.some(\n      segment =>\n        segment &&\n        (segment.ROIDisplayColor || segment.RecommendedDisplayCIELabValue)\n    )\n  ) {\n    // Use default cornerstoneTools colorLUT.\n    return 0;\n  }\n\n  const colorLUT = [];\n\n  for (let i = 0; i < data.length; i++) {\n    const segment = data[i];\n    if (!segment) {\n      continue;\n    }\n\n    const { ROIDisplayColor, RecommendedDisplayCIELabValue } = segment;\n\n    if (RecommendedDisplayCIELabValue) {\n      const rgb = dcmjs.data.Colors.dicomlab2RGB(\n        RecommendedDisplayCIELabValue\n      ).map(x => Math.round(x * 255));\n\n      colorLUT[i] = [...rgb, 255];\n    } else if (ROIDisplayColor) {\n      colorLUT[i] = [...ROIDisplayColor, 255];\n    } else {\n      colorLUT[i] = [...colorLutTables[0][i]];\n    }\n  }\n\n  colorLUT.shift();\n  setters.colorLUT(colorLUTIndex, colorLUT);\n\n  return colorLUTIndex;\n}\n\nfunction _getNextColorLUTIndex() {\n  const { state } = cornerstoneTools.getModule('segmentation');\n  const { colorLutTables } = state;\n\n  let colorLUTIndex = colorLutTables.length;\n\n  for (let i = 0; i < colorLutTables.length; i++) {\n    if (!colorLutTables[i]) {\n      colorLUTIndex = i;\n      break;\n    }\n  }\n\n  return colorLUTIndex;\n}\n","export default function refreshViewports() {\n  cornerstone.getEnabledElements().forEach(enabledElement => {\n    cornerstone.updateImage(enabledElement.element);\n  });\n}\n","import { utils, log } from '@ohif/core';\nimport cornerstoneTools from 'cornerstone-tools';\nimport refreshViewports from './refreshViewports';\n\nconst { studyMetadataManager } = utils;\n\n/**\n *\n *\n * @param {*} viewportSpecificData\n * @param {*} studies\n * @param {*} displaySet\n * @param {*} firstImageId\n * @param {*} activeLabelmapIndex\n * @returns\n */\nexport default async function setActiveLabelmap(\n  referencedDisplaySet,\n  studies,\n  displaySet,\n  callback = () => {},\n  onDisplaySetLoadFailure = err => {\n    console.error(err.message);\n  }\n) {\n  const studyMetadata = studyMetadataManager.get(\n    referencedDisplaySet.StudyInstanceUID\n  );\n  const firstImageId = studyMetadata.getFirstImageId(\n    referencedDisplaySet.displaySetInstanceUID\n  );\n\n  let { state } = cornerstoneTools.getModule('segmentation');\n\n  let brushStackState = state.series[firstImageId];\n  const activeLabelmapIndex = brushStackState\n    ? brushStackState.activeLabelmapIndex\n    : undefined;\n\n  let labelmapIndex =\n    displaySet.hasOverlapping === true\n      ? displaySet.originLabelMapIndex\n      : displaySet.labelmapIndex;\n\n  if (labelmapIndex === activeLabelmapIndex) {\n    log.warn(`${activeLabelmapIndex} is already the active labelmap`);\n    return labelmapIndex;\n  }\n\n  if (!displaySet.isLoaded && !displaySet.loadError) {\n    try {\n      await displaySet.load(referencedDisplaySet, studies);\n    } catch (error) {\n      displaySet.isLoaded = false;\n      displaySet.loadError = true;\n      displaySet.segLoadErrorMessagge = error.message;\n      onDisplaySetLoadFailure(error);\n\n      /*\n       * TODO: Improve the way we notify parts of the app\n       * that depends on derived display sets to be loaded.\n       * (Implement pubsub for better tracking of derived display sets)\n       */\n      const event = new CustomEvent('segmentationLoadingError');\n      document.dispatchEvent(event);\n\n      return -1;\n    }\n  }\n\n  labelmapIndex =\n    displaySet.hasOverlapping === true\n      ? displaySet.originLabelMapIndex\n      : displaySet.labelmapIndex;\n\n  // This might have just been created, so need to use the non-cached value.\n  state = cornerstoneTools.getModule('segmentation').state;\n\n  brushStackState = state.series[firstImageId];\n  if (brushStackState) {\n    brushStackState.activeLabelmapIndex = labelmapIndex;\n  }\n\n  refreshViewports();\n  callback();\n\n  return labelmapIndex;\n}\n","import setActiveLabelmap from './utils/setActiveLabelMap';\nimport { metadata } from '@ohif/core';\n\nexport default function getSourceDisplaySet(studies, segDisplaySet, activateLabelMap = true, onDisplaySetLoadFailureHandler) {\n  const referencedDisplaySet = metadata.StudyMetadata.getReferencedDisplaySet(segDisplaySet, studies);\n\n  let activatedLabelmapPromise;\n  if (activateLabelMap) {\n    activatedLabelmapPromise = setActiveLabelmap(referencedDisplaySet, studies, segDisplaySet, undefined, onDisplaySetLoadFailureHandler);\n  }\n\n  return {\n    referencedDisplaySet : referencedDisplaySet,\n    activatedLabelmapPromise : activatedLabelmapPromise\n  }\n}\n","import { MODULE_TYPES, utils } from '@ohif/core';\nimport loadSegmentation from './loadSegmentation';\nimport getSourceDisplaySet from './getSourceDisplaySet';\nimport OHIF from '@ohif/core';\nimport dcmjs from 'dcmjs';\n\nconst { DicomLoaderService } = OHIF.utils;\nconst { DicomMessage, DicomMetaDictionary } = dcmjs.data;\n\n// TODO: Should probably use dcmjs for this\nconst SOP_CLASS_UIDS = {\n  DICOM_SEG: '1.2.840.10008.5.1.4.1.1.66.4',\n};\n\nconst sopClassUIDs = Object.values(SOP_CLASS_UIDS);\n\nexport default function getSopClassHandlerModule({ servicesManager }) {\n  // TODO: Handle the case where there is more than one SOP Class Handler for the\n  // same SOP Class.\n  return {\n    id: 'OHIFDicomSegSopClassHandler',\n    type: MODULE_TYPES.SOP_CLASS_HANDLER,\n    sopClassUIDs,\n    getDisplaySetFromSeries: function(\n      series,\n      study,\n      dicomWebClient,\n      authorizationHeaders\n    ) {\n      const instance = series.getFirstInstance();\n      const metadata = instance.getData().metadata;\n\n      const {\n        SeriesDate,\n        SeriesTime,\n        SeriesDescription,\n        FrameOfReferenceUID,\n        SOPInstanceUID,\n        SeriesInstanceUID,\n        StudyInstanceUID,\n        SeriesNumber,\n      } = metadata;\n\n      const segDisplaySet = {\n        Modality: 'SEG',\n        displaySetInstanceUID: utils.guid(),\n        wadoRoot: study.getData().wadoRoot,\n        wadoUri: instance.getData().wadouri,\n        SOPInstanceUID,\n        SeriesInstanceUID,\n        StudyInstanceUID,\n        FrameOfReferenceUID,\n        authorizationHeaders,\n        isDerived: true,\n        referencedDisplaySetUID: null, // Assigned when loaded.\n        labelmapIndex: null, // Assigned when loaded.\n        isLoaded: false,\n        loadError: false,\n        hasOverlapping: false,\n        SeriesDate,\n        SeriesTime,\n        SeriesNumber,\n        SeriesDescription,\n        metadata,\n        tolerance: 1e-2,\n      };\n\n      segDisplaySet.getSourceDisplaySet = function(\n        studies,\n        activateLabelMap = true,\n        onDisplaySetLoadFailureHandler\n      ) {\n        return getSourceDisplaySet(\n          studies,\n          segDisplaySet,\n          activateLabelMap,\n          onDisplaySetLoadFailureHandler\n        );\n      };\n\n      segDisplaySet.load = async function(referencedDisplaySet, studies) {\n        segDisplaySet.isLoaded = true;\n        const { StudyInstanceUID } = referencedDisplaySet;\n        const segArrayBuffer = await DicomLoaderService.findDicomDataPromise(\n          segDisplaySet,\n          studies\n        );\n        const dicomData = DicomMessage.readFile(segArrayBuffer);\n        const dataset = DicomMetaDictionary.naturalizeDataset(dicomData.dict);\n        dataset._meta = DicomMetaDictionary.namifyDataset(dicomData.meta);\n        const imageIds = _getImageIdsForDisplaySet(\n          studies,\n          StudyInstanceUID,\n          referencedDisplaySet.SeriesInstanceUID\n        );\n\n        const results = await _parseSeg(segArrayBuffer, imageIds, segDisplaySet.tolerance);\n        if (results === undefined) {\n          return;\n        }\n        const {\n          labelmapBufferArray,\n          segMetadata,\n          segmentsOnFrame,\n          segmentsOnFrameArray,\n        } = results;\n        let labelmapIndex;\n        if (labelmapBufferArray.length > 1) {\n          let labelmapIndexes = [];\n          for (let i = 0; i < labelmapBufferArray.length; ++i) {\n            segMetadata.segmentationSeriesInstanceUID =\n              segDisplaySet.SeriesInstanceUID;\n            segMetadata.hasOverlapping = true;\n            labelmapIndexes.push(\n              await loadSegmentation(\n                imageIds,\n                segDisplaySet,\n                labelmapBufferArray[i],\n                segMetadata,\n                segmentsOnFrame,\n                segmentsOnFrameArray[i]\n              )\n            );\n          }\n          /**\n           * Since overlapping segments have virtual labelmaps,\n           * originLabelMapIndex is used in the panel to select the correct dropdown value.\n           */\n          segDisplaySet.hasOverlapping = true;\n          segDisplaySet.originLabelMapIndex = labelmapIndexes[0];\n          labelmapIndex = labelmapIndexes[0];\n          console.warn('Overlapping segments!');\n        } else {\n          segMetadata.segmentationSeriesInstanceUID =\n            segDisplaySet.SeriesInstanceUID;\n          segMetadata.hasOverlapping = false;\n          labelmapIndex = await loadSegmentation(\n            imageIds,\n            segDisplaySet,\n            labelmapBufferArray[0],\n            segMetadata,\n            segmentsOnFrame,\n            []\n          );\n        }\n      };\n\n      return segDisplaySet;\n    },\n  };\n}\n\nfunction _parseSeg(\n  arrayBuffer,\n  imageIds,\n  tolerance = 1e-2,\n  skipOverlapping = false,\n  cornerstoneToolsVersion = 4\n) {\n  return dcmjs.adapters.Cornerstone.Segmentation.generateToolState(\n    imageIds,\n    arrayBuffer,\n    cornerstone.metaData,\n    skipOverlapping,\n    tolerance,\n    cornerstoneToolsVersion\n  );\n}\n\nfunction _getImageIdsForDisplaySet(\n  studies,\n  StudyInstanceUID,\n  SeriesInstanceUID\n) {\n  const study = studies.find(\n    study => study.StudyInstanceUID === StudyInstanceUID\n  );\n\n  const displaySets = study.displaySets.filter(displaySet => {\n    return displaySet.SeriesInstanceUID === SeriesInstanceUID;\n  });\n\n  if (displaySets.length > 1) {\n    console.warn(\n      'More than one display set with the same SeriesInstanceUID. This is not supported yet...'\n    );\n    // TODO -> We could make check the instance list and see if any match?\n    // Do we split the segmentation into two cornerstoneTools segmentations if there are images in both series?\n    // ^ Will that even happen?\n  }\n\n  const referencedDisplaySet = displaySets[0];\n\n  return referencedDisplaySet.images.map(image => image.getImageId());\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './BrushColorSelector.css';\n\nconst BrushColorSelector = ({ defaultColor, index, onNext, onPrev }) => (\n  <div className=\"dcmseg-brush-color-selector\">\n    <div\n      className=\"selector-active-segment\"\n      style={{ backgroundColor: defaultColor }}\n    >\n      {index}\n    </div>\n    <div className=\"selector-buttons\">\n      <button onClick={onPrev}>\n        Previous\n      </button>\n      <button onClick={onNext}>\n        Next\n      </button>\n    </div>\n  </div>\n);\n\nBrushColorSelector.propTypes = {\n  defaultColor: PropTypes.string.isRequired,\n  index: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  onNext: PropTypes.func.isRequired,\n  onPrev: PropTypes.func.isRequired,\n};\n\nexport default BrushColorSelector;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Range } from '@ohif/ui';\n\nimport './BrushRadius.css';\n\nconst BrushRadius = ({ value, onChange, min, max, step }) => (\n  <div className=\"dcmseg-brush-radius\">\n    <label htmlFor=\"dcmseg-brush-radius\">Brush Radius</label>\n    <Range\n      value={value}\n      min={min}\n      max={max}\n      step={step}\n      onChange={onChange}\n      id=\"dcmseg-brush-radius\"\n    />\n  </div>\n);\n\nBrushRadius.propTypes = {\n  value: PropTypes.number.isRequired,\n  onChange: PropTypes.number,\n  min: PropTypes.number,\n  max: PropTypes.number,\n  step: PropTypes.number,\n};\n\nBrushRadius.defaultProps = {\n  onChange: () => { },\n  min: 1,\n  max: 50,\n  step: 1,\n};\n\nexport default BrushRadius;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './SegmentationItem.css';\n\nconst SegmentationItem = ({ onClick, title, description }) => {\n  return (\n    <li className=\"dcmseg-segmentation-item\" onClick={onClick}>\n      <div className=\"segmentation-meta\">\n        <div className=\"segmentation-meta-title\">{title}</div>\n        <div className=\"segmentation-meta-description\">{description}</div>\n      </div>\n    </li>\n  );\n};\n\nSegmentationItem.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n};\n\nSegmentationItem.defaultProps = {\n  description: ''\n};\n\nexport default SegmentationItem;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Range } from '@ohif/ui';\n\nimport './SegmentationSettings.css';\n\nconst SegmentationSettings = ({ configuration, onBack, onChange, servicesManager, disabledFields = [] }) => {\n  const [state, setState] = useState({\n    renderFill: configuration.renderFill,\n    renderOutline: configuration.renderOutline,\n    shouldRenderInactiveLabelmaps: configuration.shouldRenderInactiveLabelmaps,\n    fillAlpha: configuration.fillAlpha,\n    outlineAlpha: configuration.outlineAlpha,\n    outlineWidth: configuration.outlineWidth,\n    fillAlphaInactive: configuration.fillAlphaInactive,\n    outlineAlphaInactive: configuration.outlineAlphaInactive,\n    segsTolerance: configuration.segsTolerance,\n  });\n\n  useEffect(() => {\n    onChange(state);\n  }, [state]);\n\n  const check = field => {\n    setState(state => ({ ...state, [field]: !state[field] }));\n  };\n\n  const save = (field, value) => {\n    setState(state => ({ ...state, [field]: value }));\n  };\n\n  const toFloat = value => parseFloat(value / 100).toFixed(2);\n\n  return (\n    <div className=\"dcmseg-segmentation-settings\">\n      <div className=\"settings-title\">\n        <h3>Segmentations Settings</h3>\n        <button className=\"return-button\" onClick={onBack}>\n          Back\n        </button>\n      </div>\n      <div\n        className=\"settings-group\"\n        style={{ marginBottom: state.renderFill ? 15 : 0 }}\n      >\n        <CustomCheck\n          label=\"Segment Fill\"\n          checked={state.renderFill}\n          onChange={() => check('renderFill')}\n        />\n        {state.renderFill && (\n          <CustomRange\n            label=\"Opacity\"\n            step={1}\n            min={0}\n            max={100}\n            value={state.fillAlpha * 100}\n            onChange={event => save('fillAlpha', toFloat(event.target.value))}\n            showPercentage\n          />\n        )}\n      </div>\n      <div\n        className=\"settings-group\"\n        style={{ marginBottom: state.renderOutline ? 15 : 0 }}\n      >\n        <CustomCheck\n          label=\"Segment Outline\"\n          checked={state.renderOutline}\n          onChange={() => check('renderOutline')}\n        />\n        {state.renderOutline && (\n          <>\n            {!disabledFields.includes('outlineAlpha') && (\n              <CustomRange\n                value={state.outlineAlpha * 100}\n                label=\"Opacity\"\n                showPercentage\n                step={1}\n                min={0}\n                max={100}\n                onChange={event => save('outlineAlpha', toFloat(event.target.value))}\n              />\n            )}\n            {!disabledFields.includes('outlineWidth') && (\n              <CustomRange\n                value={state.outlineWidth}\n                label=\"Width\"\n                showValue\n                step={1}\n                min={0}\n                max={5}\n                onChange={event => save('outlineWidth', parseInt(event.target.value))}\n              />\n            )}\n          </>\n        )}\n      </div>\n      {(state.renderFill || state.renderOutline) && !disabledFields.includes('shouldRenderInactiveLabelmaps') && (\n        <div\n          className=\"settings-group\"\n          style={{ marginBottom: state.shouldRenderInactiveLabelmaps ? 15 : 0 }}\n        >\n          <CustomCheck\n            label=\"Render inactive segmentations\"\n            checked={state.shouldRenderInactiveLabelmaps}\n            onChange={() => check('shouldRenderInactiveLabelmaps')}\n          />\n          {state.shouldRenderInactiveLabelmaps && (\n            <>\n              {state.renderFill && !disabledFields.includes('fillAlphaInactive') && (\n                <CustomRange\n                  label=\"Fill Opacity\"\n                  showPercentage\n                  step={1}\n                  min={0}\n                  max={100}\n                  value={state.fillAlphaInactive * 100}\n                  onChange={event => save('fillAlphaInactive', toFloat(event.target.value))}\n                />\n              )}\n              {state.renderOutline && !disabledFields.includes('outlineAlphaInactive') && (\n                <CustomRange\n                  label=\"Outline Opacity\"\n                  showPercentage\n                  step={1}\n                  min={0}\n                  max={100}\n                  value={state.outlineAlphaInactive * 100}\n                  onChange={event => save('outlineAlphaInactive', toFloat(event.target.value))}\n                />\n              )}\n            </>\n          )}\n        </div>\n      )}\n      <div className=\"settings-group\" style={{ marginBottom: 15 }}>\n        <label style={{ margin: '0 15px' }}>\n          Tolerance:\n          <input\n            style={{ margin: '0 15px' }}\n            label=\"Tolerance\"\n            onKeyPress={event => {\n              const validate = string => {\n                let rgx = /[^-.e0-9]+/g;\n                return string.match(rgx);\n              };\n\n              if (validate(event.key)) {\n                event.preventDefault();\n              }\n            }}\n            onChange={event => {\n              save('segsTolerance', event.target.value);\n\n              const { UINotificationService, LoggerService } = servicesManager.services;\n              const error = new Error('Segmentation loader tolerance changed. This operation can potentially generate errors in the Segmentation parsing.');\n              LoggerService.error({ error, message: error.message });\n              UINotificationService.show({\n                title: 'Segmentation panel',\n                message: error.message,\n                type: 'warning',\n                autoClose: true,\n              });\n              }\n            }\n            value={state.segsTolerance}\n          />\n        </label>\n      </div>\n    </div>\n  );\n};\n\nconst CustomCheck = ({ label, checked, onChange }) => {\n  return (\n    <div className=\"custom-check\">\n      <label>\n        <span>{label}</span>\n        <input type=\"checkbox\" checked={checked} onChange={onChange} />\n      </label>\n    </div>\n  );\n};\n\nconst CustomRange = props => {\n  const { label, onChange } = props;\n  return (\n    <div className=\"range\">\n      <label htmlFor=\"range\">{label}</label>\n      <Range\n        {...props}\n        onChange={event => {\n          event.persist();\n          onChange(event);\n        }}\n      />\n    </div>\n  );\n};\n\nSegmentationSettings.propTypes = {\n  configuration: PropTypes.shape({\n    renderFill: PropTypes.bool.isRequired,\n    renderOutline: PropTypes.bool.isRequired,\n    shouldRenderInactiveLabelmaps: PropTypes.bool.isRequired,\n    fillAlpha: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n    outlineAlpha: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n    outlineWidth: PropTypes.number.isRequired,\n    fillAlphaInactive: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n    outlineAlphaInactive: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n    segsTolerance: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  }).isRequired,\n  onBack: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default SegmentationSettings;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { TableListItem, Icon } from '@ohif/ui';\nimport ReactTooltip from 'react-tooltip';\n\nimport './SegmentItem.css';\n\nconst ColoredCircle = ({ color }) => {\n  return (\n    <div\n      className=\"segment-color\"\n      style={{ backgroundColor: `rgba(${color.join(',')})` }}\n    ></div>\n  );\n};\n\nColoredCircle.propTypes = {\n  color: PropTypes.array.isRequired,\n};\n\nconst SegmentItem = ({\n  index,\n  label,\n  onClick,\n  itemClass,\n  color,\n  labelmap3D,\n  visible,\n  onVisibilityChange,\n}) => {\n  const [isVisible, setIsVisible] = useState(visible);\n\n  useEffect(() => {\n    setIsVisible(visible);\n  }, [visible]);\n\n  const onClickHandler = () => onClick(index);\n\n  const onVisibilityChangeHandler = event => {\n    event.stopPropagation();\n    const newVisibility = !isVisible;\n    setIsVisible(newVisibility);\n    onVisibilityChange(newVisibility, index, labelmap3D);\n  };\n\n  return (\n    <div className=\"dcmseg-segment-item\">\n      <TableListItem\n        key={index}\n        itemKey={index}\n        itemIndex={index}\n        itemClass={itemClass}\n        itemMeta={<ColoredCircle color={color} />}\n        itemMetaClass=\"segment-color-section\"\n        onItemClick={onClickHandler}\n      >\n        <div>\n          <div className=\"segment-label\" style={{ marginBottom: 4 }}>\n            <a data-tip data-for={`SegmentHover${index}`}>\n              <span>{label}</span>\n            </a>\n            <ReactTooltip\n              id={`SegmentHover${index}`}\n              delayShow={250}\n              place=\"right\"\n              border={true}\n              type=\"light\"\n            >\n              <span>{label}</span>\n            </ReactTooltip>\n            <Icon\n              className={`eye-icon ${isVisible && '--visible'}`}\n              name={isVisible ? 'eye' : 'eye-closed'}\n              width=\"20px\"\n              height=\"20px\"\n              onClick={onVisibilityChangeHandler}\n            />\n          </div>\n          {false && <div className=\"segment-info\">{'...'}</div>}\n          {false && (\n            <div className=\"segment-actions\">\n              <button\n                className=\"btnAction\"\n                onClick={() => console.log('Relabelling...')}\n              >\n                <span style={{ marginRight: '4px' }}>\n                  <Icon name=\"edit\" width=\"14px\" height=\"14px\" />\n                </span>\n                Relabel\n              </button>\n              <button\n                className=\"btnAction\"\n                onClick={() => console.log('Editing description...')}\n              >\n                <span style={{ marginRight: '4px' }}>\n                  <Icon name=\"edit\" width=\"14px\" height=\"14px\" />\n                </span>\n                Description\n              </button>\n            </div>\n          )}\n        </div>\n      </TableListItem>\n    </div>\n  );\n};\n\nSegmentItem.propTypes = {\n  index: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  label: PropTypes.string.isRequired,\n  onClick: PropTypes.func,\n  itemClass: PropTypes.string,\n  color: PropTypes.array.isRequired,\n};\n\nSegmentItem.defaultProps = {\n  itemClass: '',\n  onClick: () => {},\n};\n\nexport default SegmentItem;\n","import React from 'react';\nimport Select from 'react-select';\n\nconst SegmentationSelect = ({ value, formatOptionLabel, options }) => (\n  <Select\n    value={value === undefined ? null : value}\n    formatOptionLabel={formatOptionLabel}\n    styles={segmentationSelectStyles}\n    options={options}\n  />\n);\n\nconst computedstyle = getComputedStyle(document.body);\nconst uiGrayDarker = computedstyle.getPropertyValue('--ui-gray-darker');\nconst activeColor = computedstyle.getPropertyValue('--active-color');\nconst defaultColor = computedstyle.getPropertyValue('--default-color');\nconst uiGrayDark = computedstyle.getPropertyValue('--ui-gray-dark');\n\nconst segmentationSelectStyles = {\n  singleValue: (base, state) => ({\n    ...base,\n    width: '100%'\n  }),\n  control: (base, state) => ({\n    ...base,\n    cursor: 'pointer',\n    background: uiGrayDarker,\n    borderRadius: state.isFocused ? '5px 5px 5px 5px' : 5,\n    borderColor: state.isFocused ? activeColor : defaultColor,\n    boxShadow: state.isFocused ? null : null,\n    minHeight: '50px',\n    '&:hover': {\n      borderColor: activeColor,\n    },\n  }),\n  menu: base => ({\n    ...base,\n    borderRadius: 5,\n    background: uiGrayDarker,\n  }),\n  option: (base, state) => ({\n    ...base,\n    cursor: 'pointer',\n    '&:first-of-type': {\n      borderTopLeftRadius: 5,\n      borderTopRightRadius: 5,\n    },\n    '&:last-of-type': {\n      borderBottomLeftRadius: 5,\n      borderBottomRightRadius: 5,\n    },\n    background: state.isSelected ? uiGrayDark : uiGrayDarker,\n    '&:hover': {\n      background: uiGrayDark,\n    },\n  }),\n};\n\nexport default SegmentationSelect;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport cornerstoneTools from 'cornerstone-tools';\nimport cornerstone from 'cornerstone-core';\nimport moment from 'moment';\nimport classNames from 'classnames';\nimport { utils, log } from '@ohif/core';\nimport { ScrollableArea, TableList, Icon } from '@ohif/ui';\nimport DICOMSegTempCrosshairsTool from '../../tools/DICOMSegTempCrosshairsTool';\n\nimport setActiveLabelmap from '../../utils/setActiveLabelMap';\nimport refreshViewports from '../../utils/refreshViewports';\n\nimport {\n  BrushColorSelector,\n  BrushRadius,\n  SegmentationItem,\n  SegmentItem,\n  SegmentationSelect,\n} from '../index';\n\nimport './SegmentationPanel.css';\nimport SegmentationSettings from '../SegmentationSettings/SegmentationSettings';\n\nconst { studyMetadataManager } = utils;\n\n/**\n * SegmentationPanel component\n *\n * @param {Array} props.studies - Studies data\n * @param {Array} props.viewports - Viewports data (viewportSpecificData)\n * @param {number} props.activeIndex - Active viewport index\n * @param {boolean} props.isOpen - Boolean that indicates if the panel is expanded\n * @param {Function} props.onSegmentItemClick - Segment click handler\n * @param {Function} props.onSegmentVisibilityChange - Segment visibiliy change handler\n * @param {Function} props.onConfigurationChange - Configuration change handler\n * @param {Function} props.activeContexts - List of active application contexts\n * @param {Function} props.contexts - List of available application contexts\n * @param {Function} props.servicesManager - Services manager\n * @returns component\n */\nconst SegmentationPanel = ({\n  studies,\n  viewports,\n  activeIndex,\n  isOpen,\n  onSegmentItemClick,\n  onSegmentVisibilityChange,\n  onConfigurationChange,\n  onDisplaySetLoadFailure,\n  onSelectedSegmentationChange,\n  activeContexts = [],\n  contexts = {},\n  servicesManager,\n}) => {\n  const isVTK = () => activeContexts.includes(contexts.VTK);\n  const isCornerstone = () => activeContexts.includes(contexts.CORNERSTONE);\n\n  /*\n   * TODO: wrap get/set interactions with the cornerstoneTools\n   * store with context to make these kind of things less blurry.\n   */\n  const { configuration } = cornerstoneTools.getModule('segmentation');\n  if (configuration.segsTolerance === undefined) {\n    configuration.segsTolerance = 1e-2;\n  }\n  const DEFAULT_BRUSH_RADIUS = configuration.radius || 10;\n\n  /*\n   * TODO: We shouldn't hardcode brushColor color, in the future\n   * the SEG may set the colorLUT to whatever it wants.\n   */\n  const [state, setState] = useState({\n    brushRadius: DEFAULT_BRUSH_RADIUS,\n    brushColor: 'rgba(221, 85, 85, 1)',\n    selectedSegment: 0,\n    selectedSegmentation: 0,\n    showSettings: false,\n    labelMapList: [],\n    segmentList: [],\n    segmentsHidden: [],\n    segmentNumbers: [],\n    isLoading: false,\n    isDisabled: true,\n  });\n\n  const getActiveViewport = () => viewports[activeIndex];\n\n  const getFirstImageId = () => {\n    const { StudyInstanceUID, displaySetInstanceUID } = getActiveViewport();\n    const studyMetadata = studyMetadataManager.get(StudyInstanceUID);\n    return studyMetadata.getFirstImageId(displaySetInstanceUID);\n  };\n\n  const getAllSegDisplaySets = () => {\n    const { StudyInstanceUID } = getActiveViewport();\n    const studyMetadata = studyMetadataManager.get(StudyInstanceUID);\n    return studyMetadata.getDerivedDatasets({\n      Modality: 'SEG',\n    });\n  };\n\n  const updateSegDisplaySetsTolerance = tolerance => {\n    const segDisplaySets = getAllSegDisplaySets();\n    segDisplaySets.forEach(segDisplaySet => {\n      // update tol value\n      segDisplaySet.tolerance = tolerance;\n      // reset load flags for allowing retry for seg parsing.\n      segDisplaySet.isLoaded = false;\n      segDisplaySet.loadError = false;\n    });\n  };\n\n  const getActiveLabelMaps3D = () => {\n    const { labelmaps3D, activeLabelmapIndex } = getBrushStackState();\n    return labelmaps3D[activeLabelmapIndex];\n  };\n\n  const getActiveLabelMapIndex = () => {\n    const { activeLabelmapIndex } = getBrushStackState();\n    return activeLabelmapIndex;\n  };\n\n  const getActiveSegmentIndex = () => {\n    const { activeSegmentIndex } = getActiveLabelMaps3D();\n    return activeSegmentIndex;\n  };\n\n  const getActiveLabelMaps2D = () => {\n    const { labelmaps2D } = getActiveLabelMaps3D();\n    return labelmaps2D;\n  };\n\n  const getCurrentDisplaySet = () => {\n    const { StudyInstanceUID, displaySetInstanceUID } = getActiveViewport();\n    const studyMetadata = studyMetadataManager.get(StudyInstanceUID);\n    const allDisplaySets = studyMetadata.getDisplaySets();\n    return allDisplaySets.find(\n      ds => ds.displaySetInstanceUID === displaySetInstanceUID\n    );\n  };\n\n  const setActiveSegment = segmentIndex => {\n    const activeSegmentIndex = getActiveSegmentIndex();\n    const activeViewport = getActiveViewport();\n\n    if (segmentIndex === activeSegmentIndex) {\n      log.info(`${activeSegmentIndex} is already the active segment`);\n      return;\n    }\n\n    const labelmap3D = getActiveLabelMaps3D();\n    labelmap3D.activeSegmentIndex = segmentIndex;\n\n    /**\n     * Activates the correct label map if clicked segment\n     * does not belong to the active labelmap\n     */\n    const { StudyInstanceUID } = activeViewport;\n    const studyMetadata = studyMetadataManager.get(StudyInstanceUID);\n    const allDisplaySets = studyMetadata.getDisplaySets();\n    let selectedSegmentation;\n    let newLabelmapIndex = getActiveLabelMapIndex();\n    allDisplaySets.forEach(displaySet => {\n      if (displaySet.labelmapSegments) {\n        Object.keys(displaySet.labelmapSegments).forEach(labelmapIndex => {\n          if (\n            displaySet.labelmapSegments[labelmapIndex].includes(segmentIndex)\n          ) {\n            newLabelmapIndex = labelmapIndex;\n            selectedSegmentation =\n              displaySet.hasOverlapping === true\n                ? displaySet.originLabelMapIndex\n                : labelmapIndex;\n          }\n        });\n      }\n    });\n\n    const brushStackState = getBrushStackState();\n    brushStackState.activeLabelmapIndex = newLabelmapIndex;\n    if (selectedSegmentation) {\n      setState(state => ({ ...state, selectedSegmentation }));\n    }\n\n    refreshViewports();\n\n    return segmentIndex;\n  };\n\n  useEffect(() => {\n    const labelmapModifiedHandler = event => {\n      log.warn('Segmentation Panel: labelmap modified', event);\n      refreshSegmentations();\n    };\n\n    /*\n     * TODO: Improve the way we notify parts of the app that depends on segs to be loaded.\n     *\n     * Currently we are using a non-ideal implementation through a custom event to notify the segmentation panel\n     * or other components that could rely on loaded segmentations that\n     * the segments were loaded so that e.g. when the user opens the panel\n     * before the segments are fully loaded, the panel can subscribe to this custom event\n     * and update itself with the new segments.\n     *\n     * This limitation is due to the fact that the cs segmentation module is an object (which will be\n     * updated after the segments are loaded) that React its not aware of its changes\n     * because the module object its not passed in to the panel component as prop but accessed externally.\n     *\n     * Improving this event approach to something reactive that can be tracked inside the react lifecycle,\n     * allows us to easily watch the module or the segmentations loading process in any other component\n     * without subscribing to external events.\n     */\n    document.addEventListener(\n      'extensiondicomsegmentationsegloaded',\n      refreshSegmentations\n    );\n    document.addEventListener(\n      'extensiondicomsegmentationsegselected',\n      updateSegmentationComboBox\n    );\n\n    /*\n     * These are specific to each element;\n     * Need to iterate cornerstone-tools tracked enabled elements?\n     * Then only care about the one tied to active viewport?\n     */\n    cornerstoneTools.store.state.enabledElements.forEach(enabledElement =>\n      enabledElement.addEventListener(\n        'cornerstonetoolslabelmapmodified',\n        labelmapModifiedHandler\n      )\n    );\n\n    return () => {\n      document.removeEventListener(\n        'extensiondicomsegmentationsegloaded',\n        refreshSegmentations\n      );\n      document.removeEventListener(\n        'extensiondicomsegmentationsegselected',\n        updateSegmentationComboBox\n      );\n      cornerstoneTools.store.state.enabledElements.forEach(enabledElement =>\n        enabledElement.removeEventListener(\n          'cornerstonetoolslabelmapmodified',\n          labelmapModifiedHandler\n        )\n      );\n    };\n  }, [activeIndex, viewports]);\n\n  const updateSegmentationComboBox = e => {\n    const index = e.detail.activatedLabelmapIndex;\n    if (index !== -1) {\n      setState(state => ({ ...state, selectedSegmentation: index }));\n    }\n  };\n\n  const refreshSegmentations = () => {\n    const activeViewport = getActiveViewport();\n    const isDisabled = !activeViewport || !activeViewport.StudyInstanceUID;\n    if (!isDisabled) {\n      const brushStackState = getBrushStackState();\n      if (brushStackState) {\n        const labelMapList = getLabelMapList();\n        const {\n          items: segmentList,\n          numbers: segmentNumbers,\n          segmentsHidden,\n        } = getSegmentList();\n        setState(state => ({\n          ...state,\n          segmentsHidden,\n          segmentNumbers,\n          labelMapList,\n          segmentList,\n          isDisabled,\n        }));\n      } else {\n        setState(state => ({\n          ...state,\n          segmentsHidden: [],\n          segmentNumbers: [],\n          labelMapList: [],\n          segmentList: [],\n          isDisabled,\n        }));\n      }\n    }\n  };\n\n  useEffect(() => {\n    refreshSegmentations();\n  }, [\n    viewports,\n    activeIndex,\n    isOpen,\n    state.selectedSegmentation,\n    activeContexts,\n    state.isLoading,\n  ]);\n\n  /* Handle open/closed panel behaviour */\n  useEffect(() => {\n    setState(state => ({\n      ...state,\n      showSettings: state.showSettings && !isOpen,\n    }));\n  }, [isOpen]);\n\n  const getLabelMapList = () => {\n    const activeViewport = getActiveViewport();\n\n    /* Get list of SEG labelmaps specific to active viewport (reference series) */\n    const referencedSegDisplaysets = _getReferencedSegDisplaysets(\n      activeViewport.StudyInstanceUID,\n      activeViewport.SeriesInstanceUID\n    );\n\n    const filteredReferencedSegDisplaysets = referencedSegDisplaysets.filter(\n      segDisplay => segDisplay.loadError !== true\n    );\n\n    return filteredReferencedSegDisplaysets.map((displaySet, index) => {\n      const {\n        labelmapIndex,\n        originLabelMapIndex,\n        hasOverlapping,\n        SeriesDate,\n        SeriesTime,\n      } = displaySet;\n\n      /* Map to display representation */\n      const dateStr = `${SeriesDate}:${SeriesTime}`.split('.')[0];\n      const date = moment(dateStr, 'YYYYMMDD:HHmmss');\n      const displayDate = date.format('ddd, MMM Do YYYY, h:mm:ss a');\n      const displayDescription = displaySet.SeriesDescription;\n\n      return {\n        value: hasOverlapping === true ? originLabelMapIndex : labelmapIndex,\n        title: displayDescription,\n        description: displayDate,\n        onClick: async () => {\n          const activatedLabelmapIndex = await setActiveLabelmap(\n            activeViewport,\n            studies,\n            displaySet,\n            onSelectedSegmentationChange,\n            onDisplaySetLoadFailure\n          );\n          setState(state => ({\n            ...state,\n            selectedSegmentation: activatedLabelmapIndex,\n          }));\n        },\n      };\n    });\n  };\n\n  const setCurrentSelectedSegment = segmentNumber => {\n    setActiveSegment(segmentNumber);\n\n    const sameSegment = state.selectedSegment === segmentNumber;\n    if (!sameSegment) {\n      setState(state => ({ ...state, selectedSegment: segmentNumber }));\n    }\n\n    const validIndexList = [];\n    getActiveLabelMaps2D().forEach((labelMap2D, index) => {\n      if (labelMap2D.segmentsOnLabelmap.includes(segmentNumber)) {\n        validIndexList.push(index);\n      }\n    });\n\n    const avg = array => array.reduce((a, b) => a + b) / array.length;\n    const average = avg(validIndexList);\n    const closest = validIndexList.reduce((prev, curr) => {\n      return Math.abs(curr - average) < Math.abs(prev - average) ? curr : prev;\n    });\n\n    if (isCornerstone()) {\n      const element = getEnabledElement();\n      const toolState = cornerstoneTools.getToolState(element, 'stack');\n\n      if (!toolState) return;\n\n      const imageIds = toolState.data[0].imageIds;\n      const imageId = imageIds[closest];\n      const frameIndex = imageIds.indexOf(imageId);\n\n      const SOPInstanceUID = cornerstone.metaData.get(\n        'SOPInstanceUID',\n        imageId\n      );\n      const StudyInstanceUID = cornerstone.metaData.get(\n        'StudyInstanceUID',\n        imageId\n      );\n\n      DICOMSegTempCrosshairsTool.addCrosshair(element, imageId, segmentNumber);\n\n      onSegmentItemClick({\n        StudyInstanceUID,\n        SOPInstanceUID,\n        frameIndex,\n        activeViewportIndex: activeIndex,\n      });\n    }\n\n    if (isVTK()) {\n      const labelMaps3D = getActiveLabelMaps3D();\n      const currentDisplaySet = getCurrentDisplaySet();\n      const frame = labelMaps3D.labelmaps2D[closest];\n\n      onSegmentItemClick({\n        studies,\n        StudyInstanceUID: currentDisplaySet.StudyInstanceUID,\n        displaySetInstanceUID: currentDisplaySet.displaySetInstanceUID,\n        SOPClassUID: getActiveViewport().sopClassUIDs[0],\n        SOPInstanceUID: currentDisplaySet.SOPInstanceUID,\n        segmentNumber,\n        frameIndex: closest,\n        frame,\n      });\n    }\n  };\n\n  const getColorLUTTable = () => {\n    const { state } = cornerstoneTools.getModule('segmentation');\n    const { colorLUTIndex } = getActiveLabelMaps3D();\n    return state.colorLutTables[colorLUTIndex];\n  };\n\n  const getEnabledElement = () => {\n    const enabledElements = cornerstone.getEnabledElements();\n    return enabledElements[activeIndex].element;\n  };\n\n  const onSegmentVisibilityChangeHandler = (\n    isVisible,\n    segmentNumber,\n    labelmap3D\n  ) => {\n    let segmentsHidden = [];\n    if (labelmap3D.metadata.hasOverlapping) {\n      /** Get all labelmaps with this segmentNumber and that\n       * are from the same series (overlapping segments) */\n      const { labelmaps3D } = getBrushStackState();\n\n      const sameSeriesLabelMaps3D = labelmaps3D.filter(({ metadata }) => {\n        return (\n          labelmap3D.metadata.segmentationSeriesInstanceUID ===\n          metadata.segmentationSeriesInstanceUID\n        );\n      });\n\n      const possibleLabelMaps3D = sameSeriesLabelMaps3D.filter(\n        ({ labelmaps2D }) => {\n          return labelmaps2D.some(({ segmentsOnLabelmap }) =>\n            segmentsOnLabelmap.includes(segmentNumber)\n          );\n        }\n      );\n\n      possibleLabelMaps3D.forEach(labelmap3D => {\n        labelmap3D.segmentsHidden[segmentNumber] = !isVisible;\n\n        segmentsHidden = [\n          ...new Set([...segmentsHidden, ...labelmap3D.segmentsHidden]),\n        ];\n      });\n    } else {\n      labelmap3D.segmentsHidden[segmentNumber] = !isVisible;\n      segmentsHidden = [...labelmap3D.segmentsHidden];\n    }\n\n    setState(state => ({ ...state, segmentsHidden }));\n\n    refreshSegmentations();\n    refreshViewports();\n\n    if (isVTK()) {\n      onSegmentVisibilityChange(segmentNumber, isVisible);\n    }\n  };\n\n  const getSegmentList = () => {\n    /*\n     * Newly created segments have no `meta`\n     * So we instead build a list of all segment indexes in use\n     * Then find any associated metadata\n     */\n    const uniqueSegmentIndexes = getActiveLabelMaps2D()\n      .reduce((acc, labelmap2D) => {\n        if (labelmap2D) {\n          const segmentIndexes = labelmap2D.segmentsOnLabelmap;\n\n          for (let i = 0; i < segmentIndexes.length; i++) {\n            if (!acc.includes(segmentIndexes[i]) && segmentIndexes[i] !== 0) {\n              acc.push(segmentIndexes[i]);\n            }\n          }\n        }\n\n        return acc;\n      }, [])\n      .sort((a, b) => a - b);\n\n    const labelmap3D = getActiveLabelMaps3D();\n    const colorLutTable = getColorLUTTable();\n    const hasLabelmapMeta = labelmap3D.metadata && labelmap3D.metadata.data;\n\n    const segmentList = [];\n    const segmentNumbers = [];\n    for (let i = 0; i < uniqueSegmentIndexes.length; i++) {\n      const segmentIndex = uniqueSegmentIndexes[i];\n\n      const color = colorLutTable[segmentIndex];\n      let segmentLabel = '(unlabeled)';\n      let segmentNumber = segmentIndex;\n\n      /* Meta */\n      if (hasLabelmapMeta) {\n        const segmentMeta = labelmap3D.metadata.data[segmentIndex];\n        if (segmentMeta) {\n          segmentNumber = segmentMeta.SegmentNumber;\n          segmentLabel = segmentMeta.SegmentLabel;\n        }\n      }\n\n      const sameSegment = state.selectedSegment === segmentNumber;\n\n      segmentNumbers.push(segmentNumber);\n      segmentList.push(\n        <SegmentItem\n          key={segmentNumber}\n          itemClass={`segment-item ${sameSegment && 'selected'}`}\n          onClick={setCurrentSelectedSegment}\n          label={segmentLabel}\n          index={segmentNumber}\n          color={color}\n          labelmap3D={labelmap3D}\n          visible={!labelmap3D.segmentsHidden[segmentIndex]}\n          onVisibilityChange={onSegmentVisibilityChangeHandler}\n        />\n      );\n    }\n\n    return {\n      items: segmentList,\n      numbers: segmentNumbers,\n      segmentsHidden: labelmap3D.segmentsHidden,\n    };\n\n    /*\n     * Let's iterate over segmentIndexes ^ above\n     * If meta has a match, use it to show info\n     * If now, add \"no-meta\" class\n     * Show default name\n     */\n  };\n\n  const updateBrushSize = evt => {\n    const updatedRadius = Number(evt.target.value);\n\n    if (updatedRadius !== brushRadius) {\n      setState(state => ({ ...state, brushRadius: updatedRadius }));\n      const module = cornerstoneTools.getModule('segmentation');\n      module.setters.radius(updatedRadius);\n    }\n  };\n\n  const decrementSegment = event => {\n    const activeSegmentIndex = getActiveSegmentIndex();\n    event.preventDefault();\n    if (activeSegmentIndex > 1) {\n      activeSegmentIndex--;\n    }\n    setState(state => ({ ...state, selectedSegment: activeSegmentIndex }));\n    updateActiveSegmentColor();\n  };\n\n  const incrementSegment = event => {\n    const activeSegmentIndex = getActiveSegmentIndex();\n    event.preventDefault();\n    activeSegmentIndex++;\n    setState(state => ({ ...state, selectedSegment: activeSegmentIndex }));\n    updateActiveSegmentColor();\n  };\n\n  const updateActiveSegmentColor = () => {\n    const color = getActiveSegmentColor();\n    setState(state => ({ ...state, brushColor: color }));\n  };\n\n  const getBrushStackState = () => {\n    const module = cornerstoneTools.getModule('segmentation');\n    const firstImageId = getFirstImageId();\n    const brushStackState = module.state.series[firstImageId];\n    return brushStackState;\n  };\n\n  const getActiveSegmentColor = () => {\n    const brushStackState = getBrushStackState();\n    if (!brushStackState) {\n      return 'rgba(255, 255, 255, 1)';\n    }\n\n    const colorLutTable = getColorLUTTable();\n    const color = colorLutTable[labelmap3D.activeSegmentIndex];\n    return `rgba(${color.join(',')})`;\n  };\n\n  const updateConfiguration = newConfiguration => {\n    configuration.renderFill = newConfiguration.renderFill;\n    configuration.renderOutline = newConfiguration.renderOutline;\n    configuration.shouldRenderInactiveLabelmaps =\n      newConfiguration.shouldRenderInactiveLabelmaps;\n    configuration.fillAlpha = newConfiguration.fillAlpha;\n    configuration.outlineAlpha = newConfiguration.outlineAlpha;\n    configuration.outlineWidth = newConfiguration.outlineWidth;\n    configuration.fillAlphaInactive = newConfiguration.fillAlphaInactive;\n    configuration.outlineAlphaInactive = newConfiguration.outlineAlphaInactive;\n    configuration.segsTolerance = newConfiguration.segsTolerance;\n    onConfigurationChange(newConfiguration);\n    updateSegDisplaySetsTolerance(configuration.segsTolerance);\n    refreshViewports();\n  };\n\n  const onVisibilityChangeHandler = isVisible => {\n    let segmentsHidden = [];\n    state.segmentNumbers.forEach(segmentNumber => {\n      if (isVTK()) {\n        onSegmentVisibilityChange(segmentNumber, isVisible);\n      }\n\n      /** Get all labelmaps with this segmentNumber (overlapping segments) */\n      const { labelmaps3D } = getBrushStackState();\n      const possibleLabelMaps3D = labelmaps3D.filter(({ labelmaps2D }) => {\n        return labelmaps2D.some(({ segmentsOnLabelmap }) =>\n          segmentsOnLabelmap.includes(segmentNumber)\n        );\n      });\n\n      possibleLabelMaps3D.forEach(labelmap3D => {\n        labelmap3D.segmentsHidden[segmentNumber] = !isVisible;\n        segmentsHidden = [\n          ...new Set([...segmentsHidden, ...labelmap3D.segmentsHidden]),\n        ];\n      });\n    });\n\n    setState(state => ({ ...state, segmentsHidden }));\n\n    refreshSegmentations();\n    refreshViewports();\n  };\n\n  const disabledConfigurationFields = [\n    'outlineAlpha',\n    'shouldRenderInactiveLabelmaps',\n  ];\n\n  const selectedSegmentationOption = state.labelMapList.find(\n    i => i.value === state.selectedSegmentation\n  );\n\n  if (state.showSettings) {\n    return (\n      <SegmentationSettings\n        disabledFields={isVTK() ? disabledConfigurationFields : []}\n        configuration={configuration}\n        onBack={() => setState(state => ({ ...state, showSettings: false }))}\n        onChange={updateConfiguration}\n        servicesManager={servicesManager}\n      />\n    );\n  } else {\n    return (\n      <div\n        className={classNames('dcmseg-segmentation-panel', {\n          disabled: state.isDisabled,\n        })}\n      >\n        {false && (\n          <form className=\"selector-form\">\n            <BrushColorSelector\n              defaultColor={state.brushColor}\n              index={state.selectedSegment}\n              onNext={incrementSegment}\n              onPrev={decrementSegment}\n            />\n            <BrushRadius\n              value={state.brushRadius}\n              onChange={updateBrushSize}\n              min={configuration.minRadius}\n              max={configuration.maxRadius}\n            />\n          </form>\n        )}\n        <Icon\n          className=\"cog-icon\"\n          name=\"cog\"\n          width=\"25px\"\n          height=\"25px\"\n          onClick={() => setState(state => ({ ...state, showSettings: true }))}\n        />\n        <h3>Segmentations</h3>\n        <div className=\"segmentations\">\n          <SegmentationSelect\n            value={selectedSegmentationOption}\n            formatOptionLabel={SegmentationItem}\n            options={state.labelMapList}\n          />\n        </div>\n        <SegmentsSection\n          count={state.segmentList.length}\n          isVisible={\n            state.segmentsHidden.filter(isHidden => isHidden === true).length <\n              state.segmentNumbers.length && state.segmentNumbers.length > 0\n          }\n          onVisibilityChange={onVisibilityChangeHandler}\n        >\n          <ScrollableArea>\n            <TableList headless>{state.segmentList}</TableList>\n          </ScrollableArea>\n        </SegmentsSection>\n      </div>\n    );\n  }\n};\n\nSegmentationPanel.propTypes = {\n  /*\n   * An object, with int index keys?\n   * Maps to: state.viewports.viewportSpecificData, in `viewer`\n   * Passed in MODULE_TYPES.PANEL when specifying component in viewer\n   */\n  viewports: PropTypes.shape({\n    displaySetInstanceUID: PropTypes.string,\n    frameRate: PropTypes.any,\n    InstanceNumber: PropTypes.number,\n    isMultiFrame: PropTypes.bool,\n    isReconstructable: PropTypes.bool,\n    Modality: PropTypes.string,\n    plugin: PropTypes.string,\n    SeriesDate: PropTypes.string,\n    SeriesDescription: PropTypes.string,\n    SeriesInstanceUID: PropTypes.string,\n    SeriesNumber: PropTypes.any,\n    SeriesTime: PropTypes.string,\n    sopClassUIDs: PropTypes.arrayOf(PropTypes.string),\n    StudyInstanceUID: PropTypes.string,\n  }),\n  activeIndex: PropTypes.number.isRequired,\n  studies: PropTypes.array.isRequired,\n  isOpen: PropTypes.bool.isRequired,\n};\nSegmentationPanel.defaultProps = {};\n\n/**\n * Returns SEG DisplaySets that reference the target series, sorted by dateTime\n *\n * @param {string} StudyInstanceUID\n * @param {string} SeriesInstanceUID\n * @returns Array\n */\nconst _getReferencedSegDisplaysets = (StudyInstanceUID, SeriesInstanceUID) => {\n  /* Referenced DisplaySets */\n  const studyMetadata = studyMetadataManager.get(StudyInstanceUID);\n  const referencedDisplaysets = studyMetadata.getDerivedDatasets({\n    referencedSeriesInstanceUID: SeriesInstanceUID,\n    Modality: 'SEG',\n  });\n\n  /* Sort */\n  referencedDisplaysets.sort((a, b) => {\n    const aNumber = Number(`${a.SeriesDate}${a.SeriesTime}`);\n    const bNumber = Number(`${b.SeriesDate}${b.SeriesTime}`);\n    return bNumber - aNumber;\n  });\n\n  return referencedDisplaysets;\n};\n\nconst SegmentsSection = ({\n  count,\n  children,\n  isVisible: defaultVisibility,\n  onVisibilityChange,\n}) => {\n  const [isVisible, setIsVisible] = useState(defaultVisibility);\n\n  const onVisibilityChangeHandler = () => {\n    const newVisibility = !isVisible;\n    setIsVisible(newVisibility);\n    onVisibilityChange(newVisibility);\n  };\n\n  useEffect(() => {\n    setIsVisible(defaultVisibility);\n  }, [defaultVisibility]);\n\n  return (\n    <div className=\"SegmentsSection\">\n      <div className=\"header\">\n        <div>Segments</div>\n        <div className=\"icons\">\n          <Icon\n            className={`eye-icon ${isVisible && 'expanded'}`}\n            name={isVisible ? 'eye' : 'eye-closed'}\n            width=\"20px\"\n            height=\"20px\"\n            onClick={onVisibilityChangeHandler}\n          />\n          <div className=\"count\">{count}</div>\n        </div>\n      </div>\n      {children}\n    </div>\n  );\n};\n\nconst noop = () => {};\n\nSegmentsSection.defaultProps = {\n  onVisibilityChange: noop,\n};\n\nexport default SegmentationPanel;\n","import React from 'react';\nimport OHIF from '@ohif/core';\n\nimport init from './init.js';\nimport toolbarModule from './toolbarModule.js';\nimport getSopClassHandlerModule from './getOHIFDicomSegSopClassHandler.js';\nimport SegmentationPanel from './components/SegmentationPanel/SegmentationPanel.js';\nimport { version } from '../package.json';\nconst { studyMetadataManager } = OHIF.utils;\n\nexport default {\n  /**\n   * Only required property. Should be a unique value across all extensions.\n   */\n  id: 'com.ohif.dicom-segmentation',\n  version,\n\n  /**\n   *\n   *\n   * @param {object} [configuration={}]\n   * @param {object|array} [configuration.csToolsConfig] - Passed directly to `initCornerstoneTools`\n   */\n  preRegistration({ servicesManager, configuration = {} }) {\n    init({ servicesManager, configuration });\n  },\n  getToolbarModule({ servicesManager }) {\n    return toolbarModule;\n  },\n  getPanelModule({ commandsManager, api, servicesManager }) {\n    const { UINotificationService, LoggerService } = servicesManager.services;\n\n    const ExtendedSegmentationPanel = props => {\n      const { activeContexts } = api.hooks.useAppContext();\n      const onDisplaySetLoadFailureHandler = error => {\n        LoggerService.error({ error, message: error.message });\n        UINotificationService.show({\n          title: 'DICOM Segmentation Loader',\n          message: error.message,\n          type: 'error',\n          autoClose: false,\n        });\n      };\n\n      const segmentItemClickHandler = data => {\n        commandsManager.runCommand('jumpToImage', data);\n        commandsManager.runCommand('jumpToSlice', data);\n      };\n\n      const onSegmentVisibilityChangeHandler = (segmentNumber, visible) => {\n        commandsManager.runCommand('setSegmentConfiguration', {\n          segmentNumber,\n          visible,\n        });\n      };\n\n      const onConfigurationChangeHandler = configuration => {\n        commandsManager.runCommand('setSegmentationConfiguration', {\n          globalOpacity: configuration.fillAlpha,\n          outlineThickness: configuration.outlineWidth,\n          renderOutline: configuration.renderOutline,\n          visible: configuration.renderFill,\n        });\n      };\n\n      const onSelectedSegmentationChangeHandler = () => {\n        commandsManager.runCommand('requestNewSegmentation');\n      };\n\n      return (\n        <SegmentationPanel\n          {...props}\n          activeContexts={activeContexts}\n          contexts={api.contexts}\n          onSegmentItemClick={segmentItemClickHandler}\n          onSegmentVisibilityChange={onSegmentVisibilityChangeHandler}\n          onConfigurationChange={onConfigurationChangeHandler}\n          onSelectedSegmentationChange={onSelectedSegmentationChangeHandler}\n          onDisplaySetLoadFailure={onDisplaySetLoadFailureHandler}\n          servicesManager={servicesManager}\n        />\n      );\n    };\n\n    const SegmentationPanelTabUpdatedEvent = 'segmentation-panel-tab-updated';\n\n    /**\n     * Trigger's an event to update the state of the panel's RoundedButtonGroup.\n     *\n     * This is required to avoid extension state\n     * coupling with the viewer's ToolbarRow component.\n     *\n     * @param {object} data\n     */\n    const triggerSegmentationPanelTabUpdatedEvent = data => {\n      const event = new CustomEvent(SegmentationPanelTabUpdatedEvent, {\n        detail: data,\n      });\n      document.dispatchEvent(event);\n    };\n\n    const onSegmentationsLoaded = ({ detail }) => {\n      const { segDisplaySet, segMetadata } = detail;\n      const studyMetadata = studyMetadataManager.get(\n        segDisplaySet.StudyInstanceUID\n      );\n      const referencedDisplaysets = studyMetadata.getDerivedDatasets({\n        referencedSeriesInstanceUID: segMetadata.seriesInstanceUid,\n        Modality: 'SEG',\n      });\n      triggerSegmentationPanelTabUpdatedEvent({\n        badgeNumber: referencedDisplaysets.length,\n        target: 'segmentation-panel',\n      });\n    };\n\n    document.addEventListener(\n      'extensiondicomsegmentationsegloaded',\n      onSegmentationsLoaded\n    );\n\n    return {\n      menuOptions: [\n        {\n          icon: 'list',\n          label: 'Segmentations',\n          target: 'segmentation-panel',\n          stateEvent: SegmentationPanelTabUpdatedEvent,\n          isDisabled: (studies, activeViewport) => {\n            if (!studies) {\n              return true;\n            }\n\n            for (let i = 0; i < studies.length; i++) {\n              const study = studies[i];\n\n              if (study && study.series) {\n                for (let j = 0; j < study.series.length; j++) {\n                  const series = study.series[j];\n\n                  if (series.Modality === 'SEG') {\n                    if (activeViewport) {\n                      const studyMetadata = studyMetadataManager.get(\n                        activeViewport.StudyInstanceUID\n                      );\n                      if (!studyMetadata) {\n                        return;\n                      }\n                      const referencedDS = studyMetadata.getDerivedDatasets({\n                        referencedSeriesInstanceUID:\n                          activeViewport.SeriesInstanceUID,\n                        Modality: 'SEG',\n                      });\n                      triggerSegmentationPanelTabUpdatedEvent({\n                        badgeNumber: referencedDS.length,\n                        target: 'segmentation-panel',\n                      });\n                    }\n                    return false;\n                  }\n                }\n              }\n            }\n\n            return true;\n          },\n        },\n      ],\n      components: [\n        {\n          id: 'segmentation-panel',\n          component: ExtendedSegmentationPanel,\n        },\n      ],\n      defaultContext: ['VIEWER'],\n    };\n  },\n  getSopClassHandlerModule,\n};\n","import csTools from 'cornerstone-tools';\nimport DICOMSegTempCrosshairsTool from './tools/DICOMSegTempCrosshairsTool';\n\n/**\n *\n * @param {object} configuration\n * @param {Object|Array} configuration.csToolsConfig\n */\nexport default function init({ servicesManager, configuration = {} }) {\n  const { BrushTool, SphericalBrushTool, CorrectionScissorsTool } = csTools;\n  const tools = [BrushTool, SphericalBrushTool, CorrectionScissorsTool];\n\n  tools.forEach(tool => csTools.addTool(tool));\n\n  csTools.addTool(BrushTool, {\n    name: 'BrushEraser',\n    configuration: {\n      alwaysEraseOnClick: true,\n    },\n  });\n\n  csTools.addTool(DICOMSegTempCrosshairsTool);\n}\n","const TOOL_NAMES = {\n  RTSTRUCT_DISPLAY_TOOL: 'RTStructDisplayTool',\n};\n\nexport default TOOL_NAMES;\n","import cornerstone from 'cornerstone-core';\nimport cornerstoneTools from 'cornerstone-tools';\n\nconst { importInternal } = cornerstoneTools;\nconst draw = importInternal('drawing/draw');\nconst drawLine = importInternal('drawing/drawLine');\nconst getNewContext = importInternal('drawing/getNewContext');\n\nexport default function _drawCanvasCrosshairs(eventData, center, options) {\n  const context = getNewContext(eventData.canvasContext.canvas);\n  const { element } = eventData;\n\n  const centerCanvas = cornerstone.pixelToCanvas(element, center);\n\n  const { clientWidth: width, clientHeight: height } = element;\n\n  const offset = 10;\n\n  draw(context, context => {\n    drawLine(\n      context,\n      element,\n      { x: centerCanvas.x + offset, y: centerCanvas.y },\n      { x: width, y: centerCanvas.y },\n      options,\n      'canvas'\n    );\n\n    drawLine(\n      context,\n      element,\n      { x: centerCanvas.x - offset, y: centerCanvas.y },\n      { x: 0, y: centerCanvas.y },\n      options,\n      'canvas'\n    );\n\n    drawLine(\n      context,\n      element,\n      { x: centerCanvas.x, y: centerCanvas.y + offset },\n      { x: centerCanvas.x, y: height },\n      options,\n      'canvas'\n    );\n\n    drawLine(\n      context,\n      element,\n      { x: centerCanvas.x, y: centerCanvas.y - offset },\n      { x: centerCanvas.x, y: 0 },\n      options,\n      'canvas'\n    );\n  });\n}\n","import { importInternal, getToolState, toolColors } from 'cornerstone-tools';\nimport TOOL_NAMES from '../utils/toolNames';\nimport drawCanvasCrosshairs from '../utils/drawCanvasCrosshairs';\n\n// Cornerstone 3rd party dev kit imports\nconst draw = importInternal('drawing/draw');\nconst drawCircle = importInternal('drawing/drawCircle');\nconst drawJoinedLines = importInternal('drawing/drawJoinedLines');\nconst getNewContext = importInternal('drawing/getNewContext');\nconst BaseTool = importInternal('base/BaseTool');\n\n/**\n * @class RTStructDisplayTool - Renders RTSTRUCT data in a read only manner (i.e. as an overlay).\n * @extends cornerstoneTools.BaseTool\n */\nexport default class RTStructDisplayTool extends BaseTool {\n  constructor(props = {}) {\n    const defaultProps = {\n      mixins: ['enabledOrDisabledBinaryTool'],\n      name: TOOL_NAMES.RTSTRUCT_DISPLAY_TOOL,\n    };\n\n    const initialProps = Object.assign(defaultProps, props);\n\n    super(initialProps);\n\n    this._rtStructModule = cornerstoneTools.getModule('rtstruct');\n  }\n\n  renderToolData(evt) {\n    const eventData = evt.detail;\n    const rtstructModule = this._rtStructModule;\n\n    const toolState = getToolState(evt.currentTarget, this.name);\n\n    if (!toolState) {\n      return;\n    }\n\n    const {\n      lineWidth,\n      opacity,\n      highlightOpacity,\n    } = rtstructModule.configuration;\n\n    // We have tool data for this element - iterate over each one and draw it\n    const context = getNewContext(eventData.canvasContext.canvas);\n\n    let crossHairCenter;\n\n    for (let i = 0; i < toolState.data.length; i++) {\n      const data = toolState.data[i];\n\n      const structureSet = rtstructModule.getters.structureSet(\n        data.structureSetSeriesInstanceUid\n      );\n\n      // Don't render if entire StructureSet is hidden.\n      if (structureSet.visible === false) {\n        continue;\n      }\n\n      const ROIContourData = rtstructModule.getters.ROIContour(\n        data.structureSetSeriesInstanceUid,\n        data.ROINumber\n      );\n\n      // Don't render if ROIContour is hidden.\n      if (ROIContourData.visible === false) {\n        continue;\n      }\n\n      const points = data.handles.points;\n\n      if (!points.length) {\n        continue;\n      }\n\n      const colorArray = ROIContourData.colorArray;\n      const color = `rgba(${colorArray[0]},${colorArray[1]},${\n        colorArray[2]\n      },${opacity})`;\n\n      let highlight = data.highlight;\n      const options = { color, lineWidth };\n\n      if (highlight) {\n        crossHairCenter = { x: 0, y: 0 };\n\n        points.forEach(point => {\n          crossHairCenter.x += point.x;\n          crossHairCenter.y += point.y;\n        });\n\n        crossHairCenter.x /= points.length;\n        crossHairCenter.y /= points.length;\n\n        // TODO: Disabling hightlight for now, it'd be good to bring it back\n        // when we have a good way of doing this for SEG.\n\n        // options.fillStyle = color = `rgba(${colorArray[0]},${colorArray[1]},${\n        //   colorArray[2]\n        // },${highlightOpacity})`;\n\n        // Draw highlight lines.\n\n        delete data.highlight; // Don't highlight on next render.\n      }\n\n      switch (data.type) {\n        case 'CLOSED_PLANAR':\n          this._renderClosedPlanar(context, eventData.element, points, options);\n          break;\n        case 'POINT':\n          this._renderPoint(context, eventData.element, points, options);\n          break;\n        case 'OPEN_PLANAR':\n          this._renderOpenPlanar(context, eventData.element, points, options);\n          break;\n      }\n    }\n\n    if (crossHairCenter) {\n      drawCanvasCrosshairs(eventData, crossHairCenter, {\n        color: toolColors.getActiveColor(),\n        lineWidth: 1,\n      });\n    }\n  }\n\n  _renderClosedPlanar(context, element, points, options) {\n    draw(context, context => {\n      drawJoinedLines(\n        context,\n        element,\n        points[points.length - 1],\n        points,\n        options\n      );\n    });\n  }\n\n  _renderPoint(context, element, points, options) {\n    draw(context, context => {\n      drawCircle(context, element, points[0], 3, options);\n    });\n  }\n\n  _renderOpenPlanar(context, element, points, options) {\n    draw(context, context => {\n      drawJoinedLines(context, element, points[0], points, options);\n    });\n  }\n}\n","import cornerstoneTools from 'cornerstone-tools';\nimport TOOL_NAMES from '../../../utils/toolNames';\n\nconst globalImageIdSpecificToolStateManager =\n  cornerstoneTools.globalImageIdSpecificToolStateManager;\n\n/**\n * getImageIdOfCenterFrameOfROIContour - Returns the imageId nearest to the center of the\n * volumes extent in the stack's Z direction which contains one of the ROIContour's Contours.\n * @param {string} structureSetSeriesInstanceUid The SeriesInstanceUID of the structure set.\n * @param {number} ROINumber The ROINumber of the region.\n * @param {string} imageIdsInStack The stack of imageIds.\n *\n * @returns The imageId\n */\nexport default function getImageIdOfCenterFrameOfROIContour(\n  structureSetSeriesInstanceUid,\n  ROINumber,\n  imageIdsInStack\n) {\n  const rtStructDisplayToolName = TOOL_NAMES.RTSTRUCT_DISPLAY_TOOL;\n  const toolState = globalImageIdSpecificToolStateManager.saveToolState();\n  const imageIdIndicies = [];\n\n  for (let i = 0; i < imageIdsInStack.length; i++) {\n    const imageId = imageIdsInStack[i];\n\n    const imageIdSpecificToolState = toolState[imageId];\n\n    if (\n      !imageIdSpecificToolState ||\n      !imageIdSpecificToolState[rtStructDisplayToolName] ||\n      !imageIdSpecificToolState[rtStructDisplayToolName].data\n    ) {\n      continue;\n    }\n\n    const toolData = imageIdSpecificToolState[rtStructDisplayToolName].data;\n\n    if (\n      _toolDataContainsROIContour(\n        toolData,\n        structureSetSeriesInstanceUid,\n        ROINumber\n      )\n    ) {\n      imageIdIndicies.push(i);\n    }\n  }\n\n  const centerImageIdIndex =\n    imageIdIndicies[Math.floor(imageIdIndicies.length / 2)];\n\n  return imageIdsInStack[centerImageIdIndex];\n}\n\nfunction _toolDataContainsROIContour(\n  toolData,\n  structureSetSeriesInstanceUid,\n  ROINumber\n) {\n  return !!toolData.some(\n    toolDataI =>\n      toolDataI.structureSetSeriesInstanceUid ===\n        structureSetSeriesInstanceUid && toolDataI.ROINumber === ROINumber\n  );\n}\n","import cornerstone from 'cornerstone-core';\nimport getImageIdOfCenterFrameOfROIContour from './lib/getImageIdOfCenterFrameOfROIContour';\nimport structureSetReferencesSeriesInstanceUid from './lib/structureSetReferencesSeriesInstanceUid';\n\n// We should put this as a helper somewhere as we are using it in mutliple places.\nfunction refreshViewport() {\n  cornerstone.getEnabledElements().forEach(enabledElement => {\n    if (enabledElement.image) {\n      cornerstone.updateImage(enabledElement.element);\n    }\n  });\n}\n\nconst configuration = {\n  lineWidth: 3,\n  opacity: 0.75,\n  highlightOpacity: 0.5,\n};\n\nconst state = {\n  StructureSets: [],\n};\n\n/**\n * Adds a structure set to the module.\n * @param {Object} structureSetData The structure set data.\n */\nfunction setStructureSet(structureSetData) {\n  state.StructureSets.push(structureSetData);\n}\n\n/**\n * Returns the StructureSet with the given SeriesInstanceUID.\n * @param {string} SeriesInstanceUID The SeriesInstanceUID of the StructureSet.\n *\n * @returns {Object} The StructureSet.\n */\nfunction getStructureSet(SeriesInstanceUID) {\n  return state.StructureSets.find(\n    structureSet => structureSet.SeriesInstanceUID === SeriesInstanceUID\n  );\n}\n\n/**\n * Returns the ROI Contour with the given ROINumber on the StructureSet defined by the given\n * SeriesInstanceUID.\n * @param {string} SeriesInstanceUID The SeriesInstanceUID of the StructureSet.\n * @param {number} ROINumber The ROINUmber of the ROIContour to fetch.\n */\nfunction getROIContour(SeriesInstanceUID, ROINumber) {\n  const structureSet = getStructureSet(SeriesInstanceUID);\n\n  if (!structureSet) {\n    return;\n  }\n\n  return structureSet.ROIContours.find(\n    ROIContour => ROIContour.ROINumber === ROINumber\n  );\n}\n\n/**\n * Hides the StructureSet.\n * @param {string} SeriesInstanceUID The SeriesInstanceUID of the StructureSet.\n */\nfunction setHideStructureSet(SeriesInstanceUID) {\n  _setStructureSetVisible(SeriesInstanceUID, false);\n}\n\n/**\n * Shows the StructureSet.\n * @param {string} SeriesInstanceUID The SeriesInstanceUID of the StructureSet.\n */\nfunction setShowStructureSet(SeriesInstanceUID) {\n  _setStructureSetVisible(SeriesInstanceUID, true);\n}\n\n/**\n * Sets the visibility of the StructureSet.\n * @param {string} SeriesInstanceUID The SeriesInstanceUID of the StructureSet.\n * @param {boolean} visible Whether the StructureSet should visible or not.\n */\nfunction _setStructureSetVisible(SeriesInstanceUID, visible = true) {\n  const StructureSet = getStructureSet(SeriesInstanceUID);\n\n  if (StructureSet) {\n    StructureSet.ROIContours.forEach(ROIContour => {\n      ROIContour.visible = visible;\n    });\n\n    refreshViewport();\n  }\n}\n\n/**\n * Toggles the visibility of the StructureSet.\n * @param {string} SeriesInstanceUID The SeriesInstanceUID of the StructureSet.\n */\nfunction setToggleStructureSet(SeriesInstanceUID) {\n  const StructureSet = getStructureSet(SeriesInstanceUID);\n\n  if (StructureSet) {\n    StructureSet.visible = !StructureSet.visible;\n\n    refreshViewport();\n  }\n}\n\n/**\n * Hides the ROIContour.\n * @param {string} SeriesInstanceUID The SeriesInstanceUID of the StructureSet.\n * @param {number} ROINumber The ROINUmber of the ROIContour.\n */\nfunction setHideROIContour(SeriesInstanceUID, ROINumber) {\n  _setROIContourVisible(SeriesInstanceUID, ROINumber, false);\n}\n\n/**\n * Shows the ROIContour.\n * @param {string} SeriesInstanceUID The SeriesInstanceUID of the StructureSet.\n * @param {number} ROINumber The ROINUmber of the ROIContour.\n */\nfunction setShowROIContour(SeriesInstanceUID, ROINumber) {\n  _setROIContourVisible(SeriesInstanceUID, ROINumber, true);\n}\n\n/**\n * Sets the visibility of the ROIContour.\n * @param {string} SeriesInstanceUID The SeriesInstanceUID of the StructureSet.\n * @param {number} ROINumber The ROINUmber of the ROIContour.\n * @param {boolean} visible Whether the StructureSet should visible or not.\n */\nfunction _setROIContourVisible(SeriesInstanceUID, ROINumber, visible = true) {\n  const ROIContour = getROIContour(SeriesInstanceUID, ROINumber);\n\n  if (ROIContour) {\n    ROIContour.visible = visible;\n\n    refreshViewport();\n  }\n}\n\n/**\n * Toggles the visibility of the ROIContour.\n * @param {string} SeriesInstanceUID The SeriesInstanceUID of the StructureSet.\n * @param {number} ROINumber The ROINUmber of the ROIContour.\n */\nfunction setToggleROIContour(SeriesInstanceUID, ROINumber) {\n  const ROIContour = getROIContour(SeriesInstanceUID, ROINumber);\n\n  if (ROIContour) {\n    ROIContour.visible = !ROIContour.visible;\n\n    refreshViewport();\n  }\n}\n\n/**\n * Returns an array of StructureSets which reference the given SeriesInstanceUID.\n * @param {string} SeriesInstanceUID The SeriesInstanceUID to check.\n */\nfunction getStructuresSetsWhichReferenceSeriesInstanceUid(SeriesInstanceUID) {\n  const { StructureSets } = state;\n  return StructureSets.filter(StructureSet =>\n    structureSetReferencesSeriesInstanceUid(StructureSet, SeriesInstanceUID)\n  );\n}\n\nexport default {\n  getters: {\n    structureSet: getStructureSet,\n    ROIContour: getROIContour,\n    structuresSetsWhichReferenceSeriesInstanceUid: getStructuresSetsWhichReferenceSeriesInstanceUid,\n    imageIdOfCenterFrameOfROIContour: getImageIdOfCenterFrameOfROIContour,\n  },\n  setters: {\n    structureSet: setStructureSet,\n    hideROIContour: setHideROIContour,\n    showROIContour: setShowROIContour,\n    toggleROIContour: setToggleROIContour,\n    hideStructureSet: setHideStructureSet,\n    showStructureSet: setShowStructureSet,\n    toggleStructureSet: setToggleStructureSet,\n  },\n  state,\n  configuration,\n};\n","/**\n * structureSetReferencesSeriesInstanceUid - Returns true if the structure set\n * references the given SeriesInstanceUID.\n * @param {*} StructureSet\n * @param {*} SeriesInstanceUID\n */\nexport default function structureSetReferencesSeriesInstanceUid(\n  StructureSet,\n  SeriesInstanceUID\n) {\n  const { referencedSeriesSequence } = StructureSet;\n  return referencedSeriesSequence.some(\n    referencedSeries =>\n      referencedSeries.SeriesInstanceUID ===\n      SeriesInstanceUID\n  );\n}\n","import cornerstoneTools from 'cornerstone-tools';\nimport RTStructDisplayTool from './tools/RTStructDisplayTool';\nimport rtStructModule from './tools/modules/rtStructModule';\n\nimport TOOL_NAMES from './utils/toolNames';\n\nconst defaultConfig = {\n  TOOL_NAMES: {\n    RT_STRUCT_DISPLAY_TOOL: 'RTStructDisplayTool',\n  },\n};\n\n/**\n *\n * @param {object} configuration\n * @param {Object|Array} configuration.csToolsConfig\n */\nexport default function init({ servicesManager, configuration = {} }) {\n  const conifg = Object.assign({}, defaultConfig, configuration);\n\n  TOOL_NAMES.RT_STRUCT_DISPLAY_TOOL = conifg.TOOL_NAMES.RT_STRUCT_DISPLAY_TOOL;\n\n  cornerstoneTools.register('module', 'rtstruct', rtStructModule);\n  cornerstoneTools.addTool(RTStructDisplayTool);\n}\n","export default function transformPointsToImagePlane(points, imagePlane) {\n  // See Equation C.7.6.2.1-1 of the DICOM standard\n\n  const {\n    rowCosines,\n    columnCosines,\n    rowPixelSpacing: deltaI,\n    columnPixelSpacing: deltaJ,\n    imagePositionPatient,\n  } = imagePlane;\n\n  const X = [rowCosines[0], rowCosines[1], rowCosines[2]];\n  const Y = [columnCosines[0], columnCosines[1], columnCosines[2]];\n  const S = [\n    imagePositionPatient[0],\n    imagePositionPatient[1],\n    imagePositionPatient[2],\n  ];\n\n  // 9 sets of simulataneous equations to choose from, choose which set to solve\n  // Based on the largest component of each direction cosine.\n  // This avoids NaNs or floating point errors caused by dividing by very small numbers and ensures a safe mapping\n  // when mapping between planes that are close to orthogonal.\n\n  let ix = 0;\n  let iy = 0;\n  let largestDirectionCosineMagnitude = {\n    x: 0,\n    y: 0,\n  };\n\n  // Find the element with the largest magnitude in each direction cosine vector.\n  for (let i = 0; i < X.length; i++) {\n    if (Math.abs(X[i]) > largestDirectionCosineMagnitude.x) {\n      ix = i;\n      largestDirectionCosineMagnitude.x = Math.abs(X[i]);\n    }\n    if (Math.abs(Y[i]) > largestDirectionCosineMagnitude.y) {\n      iy = i;\n      largestDirectionCosineMagnitude.y = Math.abs(Y[i]);\n    }\n  }\n\n  const ci = {\n    // Index of max elements in X and Y\n    ix,\n    iy,\n  };\n\n  // Sanity Check\n  const directionCosineMagnitude = {\n    x: Math.pow(X[0], 2) + Math.pow(X[1], 2) + Math.pow(X[2], 2),\n    y: Math.pow(Y[0], 2) + Math.pow(Y[1], 2) + Math.pow(Y[2], 2),\n  };\n\n  if (directionCosineMagnitude.x < 0.99 || directionCosineMagnitude.y < 0.99) {\n    throw Error(\n      `Direction cosines do not sum to 1 in quadrature. There is likely a mistake in the DICOM metadata.` +\n        `directionCosineMagnitudes: ${directionCosineMagnitude.x}, ${directionCosineMagnitude.y}`\n    );\n  }\n\n  // Fill in elements that won't change between points\n  const c = [undefined, Y[ci.ix], X[ci.ix], undefined, X[ci.iy], Y[ci.iy]];\n\n  for (let pointI = 0; pointI < points.length; pointI++) {\n    // Subtract imagePositionPatient from the coordinate\n    const r = [\n      points[pointI].x - S[0],\n      points[pointI].y - S[1],\n      points[pointI].z - S[2],\n    ];\n\n    // Set the variable terms in c.\n    c[0] = r[ci.ix];\n    c[3] = r[ci.iy];\n\n    // General case: Solves the two choosen simulataneous equations to go from the patient coordinate system to the imagePlane.\n    const i =\n      (c[0] - (c[1] * c[3]) / c[5]) /\n      (c[2] * deltaI * (1 - (c[1] * c[4]) / (c[2] * c[5])));\n    const j = (c[3] - c[4] * i * deltaI) / (c[5] * deltaJ);\n\n    // NOTE: Add (0.5, 0.5) to the coordinate, as PCS reference frame is with respect to the centre of the first pixel.\n    points[pointI].x = i + 0.5;\n    points[pointI].y = j + 0.5;\n    delete points[pointI].z;\n  }\n\n  return;\n}\n","import OHIF from '@ohif/core';\nimport dcmjs from 'dcmjs';\nimport cornerstone from 'cornerstone-core';\nimport cornerstoneTools from 'cornerstone-tools';\nimport transformPointsToImagePlane from './utils/transformPointsToImagePlane';\nimport TOOL_NAMES from './utils/toolNames';\nimport { vec3 } from 'gl-matrix';\n\nconst dicomlab2RGB = dcmjs.data.Colors.dicomlab2RGB;\nconst globalImageIdSpecificToolStateManager =\n  cornerstoneTools.globalImageIdSpecificToolStateManager;\nconst { DicomLoaderService } = OHIF.utils;\n\nexport default async function loadRTStruct(\n  rtStructDisplaySet,\n  referencedDisplaySet,\n  studies\n) {\n  const rtStructModule = cornerstoneTools.getModule('rtstruct');\n  // Set here is loading is asynchronous.\n  // If this function throws its set back to false.\n  rtStructDisplaySet.isLoaded = true;\n\n  const { StudyInstanceUID, SeriesInstanceUID } = referencedDisplaySet;\n\n  const segArrayBuffer = await DicomLoaderService.findDicomDataPromise(\n    rtStructDisplaySet,\n    studies\n  );\n\n  const dicomData = dcmjs.data.DicomMessage.readFile(segArrayBuffer);\n  const rtStructDataset = dcmjs.data.DicomMetaDictionary.naturalizeDataset(\n    dicomData.dict\n  );\n\n  rtStructDataset._meta = dcmjs.data.DicomMetaDictionary.namifyDataset(\n    dicomData.meta\n  );\n\n  // global cornerstone tools state to attach measurements to.\n  const toolState = globalImageIdSpecificToolStateManager.saveToolState();\n\n  const {\n    StructureSetROISequence,\n    ROIContourSequence,\n    RTROIObservationsSequence,\n    StructureSetLabel,\n  } = rtStructDataset;\n\n  // Define our structure set entry and add it to the rtstruct module state.\n  const structureSet = {\n    StructureSetLabel,\n    SeriesInstanceUID: rtStructDataset.SeriesInstanceUID,\n    ROIContours: [],\n    referencedSeriesSequence:\n      rtStructDisplaySet.metadata.ReferencedSeriesSequence,\n    visible: true,\n  };\n\n  rtStructModule.setters.structureSet(structureSet);\n\n  const imageIdSopInstanceUidPairs = _getImageIdSopInstanceUidPairsForDisplaySet(\n    studies,\n    StudyInstanceUID,\n    SeriesInstanceUID\n  );\n\n  const rtStructDisplayToolName = TOOL_NAMES.RTSTRUCT_DISPLAY_TOOL;\n\n  for (let i = 0; i < ROIContourSequence.length; i++) {\n    const ROIContour = ROIContourSequence[i];\n    const { ReferencedROINumber, ContourSequence } = ROIContour;\n\n    if (!ContourSequence) {\n      continue;\n    }\n\n    const isSupported = false;\n\n    const ContourSequenceArray = _toArray(ContourSequence);\n\n    for (let c = 0; c < ContourSequenceArray.length; c++) {\n      const {\n        ContourImageSequence,\n        ContourData,\n        NumberOfContourPoints,\n        ContourGeometricType,\n      } = ContourSequenceArray[c];\n\n      const sopInstanceUID = ContourImageSequence\n        ? ContourImageSequence.ReferencedSOPInstanceUID\n        : _getClosestSOPInstanceUID(\n            ContourData,\n            ContourGeometricType,\n            NumberOfContourPoints,\n            imageIdSopInstanceUidPairs\n          );\n      const imageId = _getImageId(imageIdSopInstanceUidPairs, sopInstanceUID);\n\n      if (!imageId) {\n        continue;\n      }\n\n      const imageIdSpecificToolData = _getOrCreateImageIdSpecificToolData(\n        toolState,\n        imageId,\n        rtStructDisplayToolName\n      );\n\n      const imagePlane = cornerstone.metaData.get('imagePlaneModule', imageId);\n      const points = [];\n      let measurementData;\n\n      switch (ContourGeometricType) {\n        case 'CLOSED_PLANAR':\n        case 'OPEN_PLANAR':\n        case 'POINT':\n          isSupported = true;\n\n          for (let p = 0; p < NumberOfContourPoints * 3; p += 3) {\n            points.push({\n              x: ContourData[p],\n              y: ContourData[p + 1],\n              z: ContourData[p + 2],\n            });\n          }\n\n          transformPointsToImagePlane(points, imagePlane);\n\n          measurementData = {\n            handles: {\n              points,\n            },\n            type: ContourGeometricType,\n            structureSetSeriesInstanceUid: rtStructDataset.SeriesInstanceUID,\n            ROINumber: ReferencedROINumber,\n          };\n\n          imageIdSpecificToolData.push(measurementData);\n          break;\n        default:\n          continue;\n      }\n    }\n\n    _setROIContourMetadata(\n      structureSet,\n      StructureSetROISequence,\n      RTROIObservationsSequence,\n      ROIContour,\n      isSupported\n    );\n  }\n\n  _setToolEnabledIfNotEnabled(rtStructDisplayToolName);\n\n  /*\n   * TODO: Improve the way we notify parts of the app that depends on rts to be loaded.\n   *\n   * Currently we are using a non-ideal implementation through a custom event to notify the rtstruct panel\n   * or other components that could rely on loaded rtstructs that\n   * the first batch of structs were loaded so that e.g. when the user opens the panel\n   * before the structs are fully loaded, the panel can subscribe to this custom event\n   * and update itself with the new structs.\n   *\n   * This limitation is due to the fact that the rtmodule is an object (which will be\n   * updated after the structs are loaded) that React its not aware of its changes\n   * because the module object its not passed in to the panel component as prop but accessed externally.\n   *\n   * Improving this event approach to something reactive that can be tracked inside the react lifecycle,\n   * allows us to easily watch the module or the rtstruct loading process in any other component\n   * without subscribing to external events.\n   */\n  const event = new CustomEvent('extensiondicomrtrtloaded', {\n    detail: {\n      rtStructDisplaySet,\n      referencedDisplaySet,\n      studies,\n    },\n  });\n  document.dispatchEvent(event);\n}\n\nfunction _setROIContourMetadata(\n  structureSet,\n  StructureSetROISequence,\n  RTROIObservationsSequence,\n  ROIContour,\n  isSupported\n) {\n  const StructureSetROI = StructureSetROISequence.find(\n    structureSetROI =>\n      structureSetROI.ROINumber === ROIContour.ReferencedROINumber\n  );\n\n  const ROIContourData = {\n    ROINumber: StructureSetROI.ROINumber,\n    ROIName: StructureSetROI.ROIName,\n    ROIGenerationAlgorithm: StructureSetROI.ROIGenerationAlgorithm,\n    ROIDescription: StructureSetROI.ROIDescription,\n    isSupported,\n    visible: true,\n  };\n\n  _setROIContourDataColor(ROIContour, ROIContourData);\n\n  if (RTROIObservationsSequence) {\n    // If present, add additional RTROIObservations metadata.\n    _setROIContourRTROIObservations(\n      ROIContourData,\n      RTROIObservationsSequence,\n      ROIContour.ReferencedROINumber\n    );\n  }\n\n  structureSet.ROIContours.push(ROIContourData);\n}\n\nfunction _setROIContourDataColor(ROIContour, ROIContourData) {\n  let { ROIDisplayColor, RecommendedDisplayCIELabValue } = ROIContour;\n\n  if (!ROIDisplayColor && RecommendedDisplayCIELabValue) {\n    // If ROIDisplayColor is absent, try using the RecommendedDisplayCIELabValue color.\n    ROIDisplayColor = dicomlab2RGB(RecommendedDisplayCIELabValue);\n  }\n\n  if (ROIDisplayColor) {\n    ROIContourData.colorArray = [...ROIDisplayColor];\n  } else {\n    //Choose a color from the cornerstoneTools colorLUT\n    // We sample from the default color LUT here (i.e. 0), as we have nothing else to go on.\n    const { getters } = cornerstoneTools.getModule('segmentation');\n    const color = getters.colorForSegmentIndexColorLUT(\n      0,\n      ROIContourData.ROINumber\n    );\n\n    ROIContourData.colorArray = [...color];\n  }\n}\n\nfunction _setROIContourRTROIObservations(\n  ROIContourData,\n  RTROIObservationsSequence,\n  ROINumber\n) {\n  const RTROIObservations = RTROIObservationsSequence.find(\n    RTROIObservations => RTROIObservations.ReferencedROINumber === ROINumber\n  );\n\n  if (RTROIObservations) {\n    // Deep copy so we don't keep the reference to the dcmjs dataset entry.\n    const {\n      ObservationNumber,\n      ROIObservationDescription,\n      RTROIInterpretedType,\n      ROIInterpreter,\n    } = RTROIObservations;\n\n    ROIContourData.RTROIObservations = {\n      ObservationNumber,\n      ROIObservationDescription,\n      RTROIInterpretedType,\n      ROIInterpreter,\n    };\n  }\n}\n\nfunction _setToolEnabledIfNotEnabled(toolName) {\n  cornerstone.getEnabledElements().forEach(enabledElement => {\n    const { element, image } = enabledElement;\n    const tool = cornerstoneTools.getToolForElement(element, toolName);\n\n    if (tool.mode !== 'enabled') {\n      // If not already active or passive, set passive so contours render.\n      cornerstoneTools.setToolEnabled(toolName);\n    }\n\n    if (image) {\n      cornerstone.updateImage(element);\n    }\n  });\n}\n\nfunction _getOrCreateImageIdSpecificToolData(toolState, imageId, toolName) {\n  if (toolState.hasOwnProperty(imageId) === false) {\n    toolState[imageId] = {};\n  }\n\n  const imageIdToolState = toolState[imageId];\n\n  // If we don't have tool state for this type of tool, add an empty object\n  if (imageIdToolState.hasOwnProperty(toolName) === false) {\n    imageIdToolState[toolName] = {\n      data: [],\n    };\n  }\n\n  return imageIdToolState[toolName].data;\n}\n\nconst _getImageId = (imageIdSopInstanceUidPairs, sopInstanceUID) => {\n  const imageIdSopInstanceUidPairsEntry = imageIdSopInstanceUidPairs.find(\n    imageIdSopInstanceUidPairsEntry =>\n      imageIdSopInstanceUidPairsEntry.sopInstanceUID === sopInstanceUID\n  );\n\n  return imageIdSopInstanceUidPairsEntry\n    ? imageIdSopInstanceUidPairsEntry.imageId\n    : null;\n};\n\nfunction _getImageIdSopInstanceUidPairsForDisplaySet(\n  studies,\n  StudyInstanceUID,\n  SeriesInstanceUID\n) {\n  const study = studies.find(\n    study => study.StudyInstanceUID === StudyInstanceUID\n  );\n\n  const displaySets = study.displaySets.filter(set => {\n    return set.SeriesInstanceUID === SeriesInstanceUID;\n  });\n\n  if (displaySets.length > 1) {\n    console.warn(\n      'More than one display set with the same SeriesInstanceUID. This is not supported yet...'\n    );\n    // TODO -> We could make check the instance list and see if any match?\n    // Do we split the segmentation into two cornerstoneTools segmentations if there are images in both series?\n    // ^ Will that even happen?\n  }\n\n  const referencedDisplaySet = displaySets[0];\n\n  return referencedDisplaySet.images.map(image => {\n    return {\n      imageId: image.getImageId(),\n      sopInstanceUID: image.getSOPInstanceUID(),\n    };\n  });\n}\n\nfunction _toArray(objOrArray) {\n  return Array.isArray(objOrArray) ? objOrArray : [objOrArray];\n}\n\nfunction _getClosestSOPInstanceUID(\n  ContourData,\n  ContourGeometricType,\n  NumberOfContourPoints,\n  imageIdSopInstanceUidPairs\n) {\n  const closest = {\n    distance: Infinity,\n    sopInstanceUID: null,\n  };\n\n  let point;\n\n  switch (ContourGeometricType) {\n    case 'POINT':\n      point = ContourData;\n      break;\n    case 'CLOSED_PLANAR':\n    case 'OPEN_PLANAR':\n      // These are defined as planar, so get the of the region to get the\n      // Best mapping to a plane even if its potentially off center.\n\n      point = [0, 0, 0];\n      for (let p = 0; p < NumberOfContourPoints * 3; p += 3) {\n        point[0] += ContourData[p];\n        point[1] += ContourData[p + 1];\n        point[2] += ContourData[p + 2];\n      }\n\n      point[0] /= NumberOfContourPoints;\n      point[1] /= NumberOfContourPoints;\n      point[2] /= NumberOfContourPoints;\n  }\n\n  imageIdSopInstanceUidPairs.forEach(pair => {\n    const { imageId } = pair;\n\n    const imagePlaneModule = cornerstone.metaData.get(\n      'imagePlaneModule',\n      imageId\n    );\n\n    const distance = distanceFromPointToPlane(point, imagePlaneModule);\n\n    if (distance < closest.distance) {\n      closest.distance = distance;\n      closest.sopInstanceUID = pair.sopInstanceUID;\n    }\n  });\n\n  return closest.sopInstanceUID;\n}\n\n/**\n *\n * @param {number[3]} P - The point\n * @param {object} imagePlaneModule The cornerstone metadata object for the imagePlane\n */\nfunction distanceFromPointToPlane(P, imagePlaneModule) {\n  const {\n    rowCosines,\n    columnCosines,\n    imagePositionPatient: Q,\n  } = imagePlaneModule;\n\n  let N = [];\n  vec3.cross(N, rowCosines, columnCosines);\n\n  const [A, B, C] = N;\n\n  const D = -A * Q[0] - B * Q[1] - C * Q[2];\n\n  return Math.abs(A * P[0] + B * P[1] + C * P[2] + D); // Denominator is sqrt(A**2 + B**2 + C**2) which is 1 as its a normal vector\n}\n","import { metadata } from '@ohif/core';\n\nexport default function getSourceDisplaySet(studies, rtStructDisplaySet, activateLabelMap = true) {\n  const referencedDisplaySet = metadata.StudyMetadata.getReferencedDisplaySet(\n    rtStructDisplaySet,\n    studies\n  );\n\n  if (activateLabelMap) {\n    rtStructDisplaySet.load(referencedDisplaySet, studies);\n  }\n\n  return referencedDisplaySet;\n}\n","import { MODULE_TYPES, utils, DICOMWeb } from '@ohif/core';\nimport loadRTStruct from './loadRTStruct';\nimport getSourceDisplaySet from './getSourceDisplaySet';\n\nimport id from './id';\n\n// TODO: Should probably use dcmjs for this\nconst SOP_CLASS_UIDS = {\n  DICOM_RT_STRUCT: '1.2.840.10008.5.1.4.1.1.481.3',\n};\n\nconst sopClassUIDs = Object.values(SOP_CLASS_UIDS);\n\nconst OHIFDicomRTStructSopClassHandler = {\n  id: 'OHIFDicomRTStructSopClassHandler',\n  type: MODULE_TYPES.SOP_CLASS_HANDLER,\n  sopClassUIDs,\n  getDisplaySetFromSeries: function (\n    series,\n    study,\n    dicomWebClient,\n    authorizationHeaders\n  ) {\n    const instance = series.getFirstInstance();\n\n    const metadata = instance.getData().metadata;\n    const {\n      SeriesDate,\n      SeriesTime,\n      SeriesNumber,\n      SeriesDescription,\n      FrameOfReferenceUID,\n      SOPInstanceUID,\n      SeriesInstanceUID,\n      StudyInstanceUID,\n    } = metadata;\n\n    // TODO -> GET REFERENCED FRAME OF REFERENCE SEQUENCE.\n\n    const rtStructDisplaySet = {\n      Modality: 'RTSTRUCT',\n      displaySetInstanceUID: utils.guid(),\n      wadoRoot: study.getData().wadoRoot,\n      wadoUri: instance.getData().wadouri,\n      SOPInstanceUID,\n      SeriesInstanceUID,\n      StudyInstanceUID,\n      FrameOfReferenceUID,\n      authorizationHeaders,\n      metadata,\n      isDerived: true,\n      referencedDisplaySetUID: null, // Assigned when loaded.\n      labelmapIndex: null, // Assigned when loaded.\n      isLoaded: false,\n      SeriesDate,\n      SeriesTime,\n      SeriesNumber,\n      SeriesDescription,\n      metadata,\n    };\n\n    if (!metadata.ReferencedSeriesSequence) {\n      const ReferencedFrameOfReferenceSequence =\n        metadata.ReferencedFrameOfReferenceSequence;\n\n      if (ReferencedFrameOfReferenceSequence) {\n        // TODO -> @dannyrb Do we augment metadata or add a (potentially large? fallback list in filterDerivedDisplaySets )\n        metadata.ReferencedSeriesSequence = _deriveReferencedSeriesSequenceFromFrameOfReferenceSequence(\n          ReferencedFrameOfReferenceSequence\n        );\n      }\n    }\n\n    rtStructDisplaySet.getSourceDisplaySet = function (studies, activateLabelMap = true) {\n      return getSourceDisplaySet(studies, rtStructDisplaySet, activateLabelMap);\n    };\n\n    rtStructDisplaySet.load = function (referencedDisplaySet, studies) {\n      return loadRTStruct(\n        rtStructDisplaySet,\n        referencedDisplaySet,\n        studies\n      ).catch(error => {\n        rtStructDisplaySet.isLoaded = false;\n        rtStructDisplaySet.loadError = true;\n        throw new Error(error);\n      });\n    };\n\n    return rtStructDisplaySet;\n  },\n};\n\nfunction _deriveReferencedSeriesSequenceFromFrameOfReferenceSequence(\n  ReferencedFrameOfReferenceSequence\n) {\n  const ReferencedSeriesSequence = [];\n\n  _getSequenceAsArray(ReferencedFrameOfReferenceSequence).forEach(\n    referencedFrameOfReference => {\n      const { RTReferencedStudySequence } = referencedFrameOfReference;\n\n      _getSequenceAsArray(RTReferencedStudySequence).forEach(\n        rtReferencedStudy => {\n          const { RTReferencedSeriesSequence } = rtReferencedStudy;\n\n          _getSequenceAsArray(RTReferencedSeriesSequence).forEach(\n            rtReferencedSeries => {\n              const ReferencedInstanceSequence = [];\n              const {\n                ContourImageSequence,\n                SeriesInstanceUID,\n              } = rtReferencedSeries;\n\n              _getSequenceAsArray(ContourImageSequence).forEach(\n                contourImage => {\n                  ReferencedInstanceSequence.push({\n                    ReferencedSOPInstanceUID:\n                      contourImage.ReferencedSOPInstanceUID,\n                    ReferencedSOPClassUID: contourImage.ReferencedSOPClassUID,\n                  });\n                }\n              );\n\n              const referencedSeries = {\n                SeriesInstanceUID,\n                ReferencedInstanceSequence,\n              };\n\n              ReferencedSeriesSequence.push(referencedSeries);\n            }\n          );\n        }\n      );\n    }\n  );\n\n  return ReferencedSeriesSequence;\n}\n\nfunction _getSequenceAsArray(sequence) {\n  return Array.isArray(sequence) ? sequence : [sequence];\n}\n\nfunction _getReferencedFrameOfReferenceSequence(instance) {\n  const referencedFrameOfReferenceSequenceRaw = instance['30060010'];\n\n  const referencedFrameOfReferenceSequence = [];\n\n  if (\n    !referencedFrameOfReferenceSequenceRaw ||\n    !referencedFrameOfReferenceSequenceRaw.Value\n  ) {\n    return undefined;\n  }\n\n  referencedFrameOfReferenceSequenceRaw.Value.forEach(\n    referencedFrameOfReferenceRaw => {\n      const frameOfReferenceUID = DICOMWeb.getString(\n        referencedFrameOfReferenceRaw['00200052']\n      );\n\n      const referencedFrameOfReference = { frameOfReferenceUID };\n      const RTReferencedStudySequenceRaw =\n        referencedFrameOfReferenceRaw['30060012'];\n\n      referencedFrameOfReferenceSequence.push(referencedFrameOfReference);\n\n      if (RTReferencedStudySequenceRaw && RTReferencedStudySequenceRaw.Value) {\n        referencedFrameOfReference.rtReferencedStudySequence = [];\n\n        const { rtReferencedStudySequence } = referencedFrameOfReference;\n\n        RTReferencedStudySequenceRaw.Value.forEach(rtReferencedStudyRaw => {\n          const referencedSopClassUID = DICOMWeb.getString(\n            rtReferencedStudyRaw['00081150']\n          );\n\n          const referencedSOPInstanceUID = DICOMWeb.getString(\n            rtReferencedStudyRaw['00081155']\n          );\n\n          const rtReferencedStudy = {\n            referencedSopClassUID,\n            referencedSOPInstanceUID,\n            rtReferencedSeriesSequence: [],\n          };\n\n          rtReferencedStudySequence.push(rtReferencedStudy);\n\n          const { rtReferencedSeriesSequence } = rtReferencedStudy;\n\n          const rtReferencedSeriesSequenceRaw =\n            rtReferencedStudyRaw['30060014'];\n\n          rtReferencedSeriesSequenceRaw.Value.forEach(rtReferencedSeriesRaw => {\n            const seriesInstanceUID = DICOMWeb.getString(\n              rtReferencedSeriesRaw['0020000E']\n            );\n\n            const rtReferencedSeries = {\n              seriesInstanceUID,\n              contourImageSequence: [],\n            };\n\n            rtReferencedSeriesSequence.push(rtReferencedSeries);\n\n            const { contourImageSequence } = rtReferencedSeries;\n\n            const contourImageSequenceRaw = rtReferencedSeriesRaw['30060016'];\n\n            contourImageSequenceRaw.Value.forEach(contourImageRaw => {\n              const referencedSOPClassUID = DICOMWeb.getString(\n                contourImageRaw['00081150']\n              );\n\n              const referencedSOPInstanceUID = DICOMWeb.getString(\n                contourImageRaw['00081155']\n              );\n\n              const referencedFrameNumber = DICOMWeb.getString(\n                contourImageRaw['00081160']\n              );\n              const referencedSegmentNumber = DICOMWeb.getString(\n                contourImageRaw['0062000B']\n              );\n\n              const contourImage = {\n                referencedSOPClassUID,\n                referencedSOPInstanceUID,\n                referencedFrameNumber,\n                referencedSegmentNumber,\n              };\n\n              contourImageSequence.push(contourImage);\n            });\n          });\n        });\n      }\n    }\n  );\n\n  return referencedFrameOfReferenceSequence;\n}\n\nexport default OHIFDicomRTStructSopClassHandler;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { TableListItem, Icon, Tooltip, OverlayTrigger } from '@ohif/ui';\nimport ReactTooltip from 'react-tooltip';\n\nimport './StructureSetItem.css';\n\nconst ColoredCircle = ({ color }) => {\n  return (\n    <div\n      className=\"item-color\"\n      style={{ backgroundColor: `rgba(${color.join(',')})` }}\n    ></div>\n  );\n};\n\nColoredCircle.propTypes = {\n  color: PropTypes.array.isRequired,\n};\n\nconst StructureSetItem = ({\n  index,\n  label,\n  isDisabled,\n  onClick,\n  itemClass,\n  color,\n  visible = true,\n  onVisibilityChange,\n  selected = false,\n}) => {\n  const [isVisible, setIsVisible] = useState(visible);\n\n  useEffect(() => {\n    setIsVisible(visible);\n  }, [visible]);\n\n  let dcmrtClassNames = `dcmrt-structure-set-item`;\n\n  if (selected) {\n    dcmrtClassNames += ' selected';\n  }\n\n  if (isDisabled) {\n    dcmrtClassNames += ' isDisabled';\n  }\n\n  const warningIcon = (\n    <span>\n      <Icon name=\"exclamation-triangle\" />\n    </span>\n  );\n\n  const tableListItem = (\n    <TableListItem\n      key={index}\n      itemKey={index}\n      itemIndex={index}\n      itemClass={itemClass}\n      itemMeta={isDisabled ? warningIcon : <ColoredCircle color={color} />}\n      itemMetaClass=\"item-color-section\"\n      onItemClick={() => {\n        if (isDisabled) {\n          return;\n        }\n\n        onClick();\n      }}\n    >\n      <div>\n        <div className=\"item-label\" style={{ marginBottom: 4 }}>\n          <a data-tip data-for={`StructureHover${index}`}>\n            <span>{label}</span>\n          </a>\n          <ReactTooltip\n            id={`StructureHover${index}`}\n            delayShow={250}\n            place=\"right\"\n            border={true}\n            type=\"light\"\n          >\n            <span>{label}</span>\n          </ReactTooltip>\n          {!isDisabled && (\n            <Icon\n              className={`eye-icon ${isVisible && '--visible'}`}\n              name={isVisible ? 'eye' : 'eye-closed'}\n              width=\"20px\"\n              height=\"20px\"\n              onClick={event => {\n                event.stopPropagation();\n\n                if (isDisabled) {\n                  return;\n                }\n\n                const newVisibility = !isVisible;\n                setIsVisible(newVisibility);\n                onVisibilityChange(newVisibility);\n              }}\n            />\n          )}\n        </div>\n\n        {false && <div className=\"item-info\">{'...'}</div>}\n        {false && (\n          <div className=\"item-actions\">\n            <button\n              className=\"btnAction\"\n              onClick={() => console.log('Relabelling...')}\n            >\n              <span style={{ marginRight: '4px' }}>\n                <Icon name=\"edit\" width=\"14px\" height=\"14px\" />\n              </span>\n              Relabel\n            </button>\n            <button\n              className=\"btnAction\"\n              onClick={() => console.log('Editing description...')}\n            >\n              <span style={{ marginRight: '4px' }}>\n                <Icon name=\"edit\" width=\"14px\" height=\"14px\" />\n              </span>\n              Description\n            </button>\n          </div>\n        )}\n      </div>\n    </TableListItem>\n  );\n\n  return (\n    <div className={dcmrtClassNames}>\n      <React.Fragment>\n        {isDisabled ? (\n          <OverlayTrigger\n            key={index}\n            placement=\"left\"\n            overlay={\n              <Tooltip\n                placement=\"left\"\n                className=\"in tooltip-warning\"\n                id=\"tooltip-left\"\n              >\n                <div className=\"warningTitle\">Unsupported Region</div>\n                <div className=\"warningContent\">\n                  Contour type currently unsupported.\n                </div>\n              </Tooltip>\n            }\n          >\n            <div>{tableListItem}</div>\n          </OverlayTrigger>\n        ) : (\n          <React.Fragment>{tableListItem} </React.Fragment>\n        )}\n      </React.Fragment>\n    </div>\n  );\n};\n\nStructureSetItem.propTypes = {\n  index: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  label: PropTypes.string.isRequired,\n  onClick: PropTypes.func,\n  itemClass: PropTypes.string,\n  color: PropTypes.array.isRequired,\n};\n\nStructureSetItem.defaultProps = {\n  itemClass: '',\n  onClick: () => {},\n};\n\nexport default StructureSetItem;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Range } from '@ohif/ui';\n\nimport './RTSettings.css';\n\nconst RTSettings = ({ configuration, onBack, onChange }) => {\n  const toFloat = value => parseFloat(value / 100).toFixed(2);\n\n  const save = (field, value) => {\n    onChange({ ...configuration, [field]: value });\n  };\n\n  const SettingsSection = ({ title, children }) => {\n    return (\n      <div className=\"settings-section\">\n        <div className=\"header\">{title}</div>\n        <div className=\"content\">\n          {children}\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"dcmrt-settings\">\n      <div className=\"settings-title\">\n        <h3>RT Structure Set Settings</h3>\n        <button className=\"return-button\" onClick={onBack}>\n          Back\n        </button>\n      </div>\n\n      <SettingsSection title=\"Segment Outline\">\n        <div className=\"range\">\n          <label htmlFor=\"range\">Opacity</label>\n          <Range\n            showPercentage\n            step={1}\n            min={0}\n            max={100}\n            value={configuration.opacity * 100}\n            onChange={event => save('opacity', toFloat(event.target.value))}\n          />\n        </div>\n        <div className=\"range\">\n          <label htmlFor=\"range\">Width</label>\n          <Range\n            showValue\n            step={1}\n            min={1}\n            max={5}\n            value={configuration.lineWidth}\n            onChange={event => save('lineWidth', parseInt(event.target.value))}\n          />\n        </div>\n      </SettingsSection>\n    </div>\n  );\n};\n\nRTSettings.propTypes = {\n  configuration: PropTypes.shape({\n    lineWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n    opacity: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  }).isRequired,\n  onBack: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default RTSettings;\n","import React from 'react';\n\nconst LoadingIndicator = ({ height = \"200px\", width = \"200px\", expand = false }) => {\n  return (\n    <div style={expand ? { height: \"100%\", width: \"100%\" } : {}}>\n      <svg style={{ margin: 'auto', background: 'none', display: 'block', shapeRendering: 'auto' }} width={width} height={height} viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n        <g transform=\"rotate(0 50 50)\">\n          <rect x=\"49\" y=\"24\" rx=\"0\" ry=\"0\" width=\"2\" height=\"12\" fill=\"#20a5d6\">\n            <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"-0.9166666666666666s\" repeatCount=\"indefinite\"></animate>\n          </rect>\n        </g><g transform=\"rotate(30 50 50)\">\n          <rect x=\"49\" y=\"24\" rx=\"0\" ry=\"0\" width=\"2\" height=\"12\" fill=\"#20a5d6\">\n            <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"-0.8333333333333334s\" repeatCount=\"indefinite\"></animate>\n          </rect>\n        </g><g transform=\"rotate(60 50 50)\">\n          <rect x=\"49\" y=\"24\" rx=\"0\" ry=\"0\" width=\"2\" height=\"12\" fill=\"#20a5d6\">\n            <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"-0.75s\" repeatCount=\"indefinite\"></animate>\n          </rect>\n        </g><g transform=\"rotate(90 50 50)\">\n          <rect x=\"49\" y=\"24\" rx=\"0\" ry=\"0\" width=\"2\" height=\"12\" fill=\"#20a5d6\">\n            <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"-0.6666666666666666s\" repeatCount=\"indefinite\"></animate>\n          </rect>\n        </g><g transform=\"rotate(120 50 50)\">\n          <rect x=\"49\" y=\"24\" rx=\"0\" ry=\"0\" width=\"2\" height=\"12\" fill=\"#20a5d6\">\n            <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"-0.5833333333333334s\" repeatCount=\"indefinite\"></animate>\n          </rect>\n        </g><g transform=\"rotate(150 50 50)\">\n          <rect x=\"49\" y=\"24\" rx=\"0\" ry=\"0\" width=\"2\" height=\"12\" fill=\"#20a5d6\">\n            <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"-0.5s\" repeatCount=\"indefinite\"></animate>\n          </rect>\n        </g><g transform=\"rotate(180 50 50)\">\n          <rect x=\"49\" y=\"24\" rx=\"0\" ry=\"0\" width=\"2\" height=\"12\" fill=\"#20a5d6\">\n            <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"-0.4166666666666667s\" repeatCount=\"indefinite\"></animate>\n          </rect>\n        </g><g transform=\"rotate(210 50 50)\">\n          <rect x=\"49\" y=\"24\" rx=\"0\" ry=\"0\" width=\"2\" height=\"12\" fill=\"#20a5d6\">\n            <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"-0.3333333333333333s\" repeatCount=\"indefinite\"></animate>\n          </rect>\n        </g><g transform=\"rotate(240 50 50)\">\n          <rect x=\"49\" y=\"24\" rx=\"0\" ry=\"0\" width=\"2\" height=\"12\" fill=\"#20a5d6\">\n            <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"-0.25s\" repeatCount=\"indefinite\"></animate>\n          </rect>\n        </g><g transform=\"rotate(270 50 50)\">\n          <rect x=\"49\" y=\"24\" rx=\"0\" ry=\"0\" width=\"2\" height=\"12\" fill=\"#20a5d6\">\n            <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"-0.16666666666666666s\" repeatCount=\"indefinite\"></animate>\n          </rect>\n        </g><g transform=\"rotate(300 50 50)\">\n          <rect x=\"49\" y=\"24\" rx=\"0\" ry=\"0\" width=\"2\" height=\"12\" fill=\"#20a5d6\">\n            <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"-0.08333333333333333s\" repeatCount=\"indefinite\"></animate>\n          </rect>\n        </g><g transform=\"rotate(330 50 50)\">\n          <rect x=\"49\" y=\"24\" rx=\"0\" ry=\"0\" width=\"2\" height=\"12\" fill=\"#20a5d6\">\n            <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"0s\" repeatCount=\"indefinite\"></animate>\n          </rect>\n        </g>\n      </svg>\n    </div>\n  );\n};\n\nexport default LoadingIndicator;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from '@ohif/ui';\n\nimport './PanelSection.css';\nimport LoadingIndicator from '../LoadingIndicator/LoadingIndicator';\n\nconst PanelSection = ({\n  title,\n  children,\n  visible = false,\n  expanded = false,\n  loading = false,\n  hideVisibleButton = false,\n  onVisibilityChange = () => { },\n  onExpandChange = () => { }\n}) => {\n  const [isExpanded, setIsExpanded] = useState(expanded);\n  const [isVisible, setIsVisible] = useState(visible);\n\n  useEffect(() => {\n    setIsVisible(visible);\n  }, [visible]);\n\n  return (\n    <div\n      className=\"dcmrt-panel-section\"\n      style={{\n        marginBottom: isExpanded ? 0 : 2,\n        height: isExpanded ? '100%' : 'unset'\n      }}\n    >\n      <div className=\"header\">\n        <div>{title}</div>\n        <div className=\"icons\">\n          {!hideVisibleButton && (\n            <Icon\n              className={`eye-icon ${isVisible && 'expanded'}`}\n              name={isVisible ? \"eye\" : \"eye-closed\"}\n              width=\"20px\"\n              height=\"20px\"\n              onClick={() => {\n                const newVisibility = !isVisible;\n                setIsVisible(newVisibility);\n                onVisibilityChange(newVisibility);\n              }}\n            />\n          )}\n          <Icon\n            className={`angle-double-${isExpanded ? 'down' : 'up'} ${isExpanded && 'expanded'}`}\n            name={`angle-double-${isExpanded ? 'down' : 'up'}`}\n            width=\"20px\"\n            height=\"20px\"\n            onClick={() => {\n              const newExpandValue = !isExpanded;\n              setIsExpanded(newExpandValue);\n              onExpandChange(newExpandValue);\n            }}\n          />\n        </div>\n      </div>\n      {loading && isExpanded && <LoadingIndicator expand height=\"70px\" width=\"70px\" />}\n      {children}\n    </div>\n  );\n};\n\nPanelSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired,\n  visible: PropTypes.bool,\n  expanded: PropTypes.bool,\n  onVisibilityChange: PropTypes.func\n};\n\nPanelSection.defaultProps = {\n  visible: false,\n  expanded: false,\n  onVisibilityChange: () => { }\n};\n\nexport default PanelSection;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport cornerstoneTools from 'cornerstone-tools';\nimport cornerstone from 'cornerstone-core';\n\nimport { ScrollableArea, TableList, Icon } from '@ohif/ui';\n\nimport { utils } from '@ohif/core';\n\nimport './RTPanel.css';\nimport StructureSetItem from '../StructureSetItem/StructureSetItem';\nimport RTPanelSettings from '../RTSettings/RTSettings';\nimport PanelSection from '../PanelSection/PanelSection';\nimport LoadingIndicator from '../LoadingIndicator/LoadingIndicator';\nimport TOOL_NAMES from '../../utils/toolNames';\n\nconst { RTSTRUCT_DISPLAY_TOOL } = TOOL_NAMES;\n\nconst { studyMetadataManager } = utils;\n\nconst refreshViewport = () => {\n  cornerstone.getEnabledElements().forEach(enabledElement => {\n    if (enabledElement.image) {\n      cornerstone.updateImage(enabledElement.element);\n    }\n  });\n};\n\n/**\n * RTPanel component\n *\n * @param {Object} props\n * @param {Array} props.studies\n * @param {Array} props.getActiveViewport - get active viewport data\n * @param {number} props.activeIndex - activeViewportIndex\n * @param {number} props.isOpen - isOpen\n * @returns component\n */\nconst RTPanel = ({\n  studies,\n  activeIndex,\n  isOpen,\n  onContourItemClick,\n  activeContexts = [],\n  contexts = {},\n  activeViewport,\n  getActiveViewport,\n}) => {\n  const isVTK = () => activeContexts.includes(contexts.VTK);\n  const isCornerstone = () => activeContexts.includes(contexts.CORNERSTONE);\n\n  const [selectedContour, setSelectedContour] = useState();\n  const DEFAULT_SET_INDEX = 0;\n  const DEFAULT_STATE = {\n    referencedDisplaysets: [],\n    sets: [],\n    selectedSet: null,\n    isLocked: false,\n  };\n\n  const [state, setState] = useState(DEFAULT_STATE);\n  const [showSettings, setShowSettings] = useState(false);\n\n  /*\n   * TODO: Improve the way we notify parts of the app that depends on rts to be loaded.\n   *\n   * Currently we are using a non-ideal implementation through a custom event to notify the rtstruct panel\n   * or other components that could rely on loaded rtstructs that\n   * the first batch of structs were loaded so that e.g. when the user opens the panel\n   * before the structs are fully loaded, the panel can subscribe to this custom event\n   * and update itself with the new structs.\n   *\n   * This limitation is due to the fact that the rtmodule is an object (which will be\n   * updated after the structs are loaded) that React its not aware of its changes\n   * because the module object its not passed in to the panel component as prop but accessed externally.\n   *\n   * Improving this event approach to something reactive that can be tracked inside the react lifecycle,\n   * allows us to easily watch the module or the rtstruct loading process in any other component\n   * without subscribing to external events.\n   */\n  useEffect(() => {\n    updateStructureSets();\n\n    document.addEventListener('rt-panel-tab-updated', updateStructureSets);\n\n    return () => {\n      document.removeEventListener('rt-panel-tab-updated', updateStructureSets);\n    };\n  }, []);\n\n  useEffect(() => {\n    const studyMetadata = studyMetadataManager.get(\n      activeViewport.StudyInstanceUID\n    );\n    const referencedDisplaysets = studyMetadata.getDerivedDatasets({\n      referencedSeriesInstanceUID: activeViewport.SeriesInstanceUID,\n      Modality: 'RTSTRUCT',\n    });\n    setState(state => ({ ...state, isLocked: !referencedDisplaysets.length }));\n  }, [activeViewport]);\n\n  const updateStructureSets = () => {\n    const viewport = getActiveViewport();\n    const module = cornerstoneTools.getModule('rtstruct');\n    const StructureSets = module.state.StructureSets;\n\n    if (StructureSets && StructureSets.length) {\n      const viewportSets = module.getters.structuresSetsWhichReferenceSeriesInstanceUid(\n        viewport.SeriesInstanceUID\n      );\n\n      const studyMetadata = studyMetadataManager.get(viewport.StudyInstanceUID);\n      const referencedDisplaysets = studyMetadata.getDerivedDatasets({\n        referencedSeriesInstanceUID: viewport.SeriesInstanceUID,\n        Modality: 'RTSTRUCT',\n      });\n\n      if (viewportSets.length) {\n        const defaultSet = viewportSets[DEFAULT_SET_INDEX];\n        setState({\n          referencedDisplaysets,\n          selectedSet: defaultSet,\n          sets: viewportSets,\n        });\n      } else {\n        setState(DEFAULT_STATE);\n      }\n    }\n  };\n\n  useEffect(() => {\n    setShowSettings(showSettings && !isOpen);\n  }, [isOpen]);\n\n  const toContourItem = (\n    { ROINumber, ROIName, RTROIObservations, colorArray, visible, isSupported },\n    loadedSet\n  ) => {\n    let interpretedType = '';\n    if (RTROIObservations && RTROIObservations.RTROIInterpretedType) {\n      interpretedType = `(${RTROIObservations.RTROIInterpretedType})`;\n    }\n\n    const isSameContour = selectedContour && selectedContour === ROINumber;\n    return (\n      <StructureSetItem\n        key={ROINumber}\n        selected={isSameContour}\n        isDisabled={!isSupported}\n        onClick={() => {\n          setSelectedContour(isSameContour ? null : ROINumber);\n\n          if (isCornerstone()) {\n            const enabledElements = cornerstone.getEnabledElements();\n            const element = enabledElements[activeIndex].element;\n            const stackToolState = cornerstoneTools.getToolState(\n              element,\n              'stack'\n            );\n\n            if (!stackToolState) {\n              return;\n            }\n\n            const imageIds = stackToolState.data[0].imageIds;\n\n            const module = cornerstoneTools.getModule('rtstruct');\n            const imageId = module.getters.imageIdOfCenterFrameOfROIContour(\n              state.selectedSet.SeriesInstanceUID,\n              ROINumber,\n              imageIds\n            );\n\n            const toolState = cornerstoneTools.globalImageIdSpecificToolStateManager.saveToolState();\n            const imageIdSpecificToolState = toolState[imageId];\n\n            const rtstructData =\n              imageIdSpecificToolState[RTSTRUCT_DISPLAY_TOOL];\n\n            const specificData = rtstructData.data.find(\n              rtData => rtData.ROINumber === ROINumber\n            );\n\n            specificData.highlight = true;\n\n            const frameIndex = imageIds.indexOf(imageId);\n            const SOPInstanceUID = cornerstone.metaData.get(\n              'SOPInstanceUID',\n              imageId\n            );\n            const StudyInstanceUID = cornerstone.metaData.get(\n              'StudyInstanceUID',\n              imageId\n            );\n\n            onContourItemClick({\n              StudyInstanceUID,\n              SOPInstanceUID,\n              frameIndex,\n              activeViewportIndex: activeIndex,\n            });\n          }\n        }}\n        label={`${ROIName} ${interpretedType}`}\n        index={ROINumber}\n        color={colorArray}\n        visible={visible}\n        onVisibilityChange={() => {\n          const module = cornerstoneTools.getModule('rtstruct');\n          module.setters.toggleROIContour(\n            state.selectedSet.SeriesInstanceUID,\n            ROINumber\n          );\n        }}\n      />\n    );\n  };\n\n  const configurationChangeHandler = newConfiguration => {\n    const module = cornerstoneTools.getModule('rtstruct');\n    module.configuration.lineWidth = newConfiguration.lineWidth;\n    module.configuration.opacity = newConfiguration.opacity;\n    refreshViewport();\n  };\n\n  if (showSettings) {\n    const module = cornerstoneTools.getModule('rtstruct');\n    return (\n      <RTPanelSettings\n        configuration={module.configuration}\n        onBack={() => setShowSettings(false)}\n        onChange={configurationChangeHandler}\n      />\n    );\n  }\n\n  return (\n    <div className=\"dcmrt-panel\">\n      <div className=\"dcmrt-panel-header\">\n        {' '}\n        {!state.isLocked && (\n          <Icon\n            className=\"cog-icon\"\n            name=\"cog\"\n            width=\"25px\"\n            height=\"25px\"\n            onClick={() => setShowSettings(true)}\n          />\n        )}\n        <h3>RT Structure Sets</h3>\n      </div>\n      {!state.isLocked && !state.referencedDisplaysets.length && (\n        <LoadingIndicator expand height=\"70px\" width=\"70px\" />\n      )}\n      {state.sets &&\n        state.referencedDisplaysets.map(displaySet => {\n          const { SeriesInstanceUID, metadata, isLoaded } = displaySet;\n\n          const module = cornerstoneTools.getModule('rtstruct');\n          const sets = module.getters.structuresSetsWhichReferenceSeriesInstanceUid(\n            activeViewport.SeriesInstanceUID\n          );\n\n          const loadedSet = sets.find(\n            set => set.SeriesInstanceUID === SeriesInstanceUID\n          );\n\n          if (!loadedSet) return null;\n\n          return (\n            <PanelSection\n              key={SeriesInstanceUID}\n              title={metadata.StructureSetLabel}\n              loading={!isLoaded || !loadedSet}\n              visible={isLoaded && loadedSet && loadedSet.visible}\n              hideVisibleButton={!isLoaded}\n              expanded={\n                isLoaded &&\n                loadedSet.SeriesInstanceUID ===\n                  state.selectedSet.SeriesInstanceUID\n              }\n              onVisibilityChange={newVisibility => {\n                const module = cornerstoneTools.getModule('rtstruct');\n\n                if (newVisibility) {\n                  module.setters.showStructureSet(loadedSet.SeriesInstanceUID);\n                } else {\n                  module.setters.hideStructureSet(loadedSet.SeriesInstanceUID);\n                }\n                const sets = module.getters.structuresSetsWhichReferenceSeriesInstanceUid(\n                  activeViewport.SeriesInstanceUID\n                );\n                setState(state => ({ ...state, sets }));\n                refreshViewport();\n              }}\n              onExpandChange={async () => {\n                if (!isLoaded) {\n                  await displaySet.load(activeViewport, studies);\n                  const module = cornerstoneTools.getModule('rtstruct');\n                  const sets = module.getters.structuresSetsWhichReferenceSeriesInstanceUid(\n                    activeViewport.SeriesInstanceUID\n                  );\n                  const selectedSet = sets.find(\n                    set => set.SeriesInstanceUID === SeriesInstanceUID\n                  );\n                  setState(state => ({ ...state, selectedSet, sets }));\n                }\n              }}\n            >\n              <ScrollableArea>\n                <TableList headless>\n                  {isLoaded &&\n                    loadedSet.ROIContours.map(c => toContourItem(c, loadedSet))}\n                </TableList>\n              </ScrollableArea>\n            </PanelSection>\n          );\n        })}\n    </div>\n  );\n};\n\nRTPanel.propTypes = {\n  viewports: PropTypes.shape({\n    displaySetInstanceUID: PropTypes.string,\n    frameRate: PropTypes.any,\n    InstanceNumber: PropTypes.number,\n    isMultiFrame: PropTypes.bool,\n    isReconstructable: PropTypes.bool,\n    Modality: PropTypes.string,\n    plugin: PropTypes.string,\n    SeriesDate: PropTypes.string,\n    SeriesDescription: PropTypes.string,\n    SeriesInstanceUID: PropTypes.string,\n    SeriesNumber: PropTypes.any,\n    SeriesTime: PropTypes.string,\n    sopClassUIDs: PropTypes.arrayOf(PropTypes.string),\n    StudyInstanceUID: PropTypes.string,\n  }),\n  activeIndex: PropTypes.number.isRequired,\n  studies: PropTypes.array.isRequired,\n  isOpen: PropTypes.bool.isRequired,\n};\n\nRTPanel.defaultProps = {};\n\nexport default RTPanel;\n","import React from 'react';\nimport { utils } from '@ohif/core';\n\nimport init from './init.js';\nimport sopClassHandlerModule from './OHIFDicomRTStructSopClassHandler';\nimport id from './id.js';\nimport RTPanel from './components/RTPanel/RTPanel';\nimport { version } from '../package.json';\n\nconst { studyMetadataManager } = utils;\n\nexport default {\n  /**\n   * Only required property. Should be a unique value across all extensions.\n   */\n  id,\n  version,\n\n  /**\n   *\n   *\n   * @param {object} [configuration={}]\n   * @param {object|array} [configuration.csToolsConfig] - Passed directly to `initCornerstoneTools`\n   */\n  preRegistration({ servicesManager, configuration = {} }) {\n    init({ servicesManager, configuration });\n  },\n  getPanelModule({ commandsManager, servicesManager, api }) {\n    const ExtendedRTPanel = props => {\n      const { activeContexts } = api.hooks.useAppContext();\n\n      const contourItemClickHandler = contourData => {\n        commandsManager.runCommand('jumpToImage', contourData);\n      };\n\n      return (\n        <RTPanel\n          {...props}\n          onContourItemClick={contourItemClickHandler}\n          activeContexts={activeContexts}\n          contexts={api.contexts}\n        />\n      );\n    };\n\n    const RTPanelTabChangedEvent = 'rt-panel-tab-updated';\n\n    /**\n     * Trigger's an event to update the state of the panel's RoundedButtonGroup.\n     *\n     * This is required to avoid extension state\n     * coupling with the viewer's ToolbarRow component.\n     *\n     * @param {object} data\n     */\n    const triggerRTPanelUpdatedEvent = data => {\n      const event = new CustomEvent(RTPanelTabChangedEvent, {\n        detail: data,\n      });\n      document.dispatchEvent(event);\n    };\n\n    const onRTStructsLoaded = ({ detail }) => {\n      const { rtStructDisplaySet, referencedDisplaySet } = detail;\n\n      const studyMetadata = studyMetadataManager.get(\n        rtStructDisplaySet.StudyInstanceUID\n      );\n      const referencedDisplaysets = studyMetadata.getDerivedDatasets({\n        referencedSeriesInstanceUID: referencedDisplaySet.SeriesInstanceUID,\n        Modality: 'RTSTRUCT',\n      });\n      triggerRTPanelUpdatedEvent({\n        badgeNumber: referencedDisplaysets.length,\n        target: 'rt-panel',\n      });\n    };\n\n    document.addEventListener('extensiondicomrtrtloaded', onRTStructsLoaded);\n\n    return {\n      menuOptions: [\n        {\n          icon: 'list',\n          label: 'RTSTRUCT',\n          target: 'rt-panel',\n          stateEvent: RTPanelTabChangedEvent,\n          isDisabled: (studies, activeViewport) => {\n            if (!studies) {\n              return true;\n            }\n\n            if (activeViewport) {\n              const studyMetadata = studyMetadataManager.get(\n                activeViewport.StudyInstanceUID\n              );\n              if (!studyMetadata) {\n                return;\n              }\n              const referencedDisplaySets = studyMetadata.getDerivedDatasets({\n                referencedSeriesInstanceUID: activeViewport.SeriesInstanceUID,\n                Modality: 'RTSTRUCT',\n              });\n              if (\n                referencedDisplaySets &&\n                referencedDisplaySets.some(ds =>\n                  ['RTSTRUCT'].includes(ds.Modality)\n                )\n              ) {\n                triggerRTPanelUpdatedEvent({\n                  badgeNumber: referencedDisplaySets.length,\n                  target: 'rt-panel',\n                });\n                return false;\n              }\n            }\n\n            return true;\n          },\n        },\n      ],\n      components: [\n        {\n          id: 'rt-panel',\n          component: ExtendedRTPanel,\n        },\n      ],\n      defaultContext: ['VIEWER'],\n    };\n  },\n  getSopClassHandlerModule({ servicesManager }) {\n    return sopClassHandlerModule;\n  },\n};\n","const id = 'rt';\n\nexport default id;\n","import OHIF from '@ohif/core';\n\nconst { utils } = OHIF;\n\nconst SOP_CLASS_UIDS = {\n  VL_WHOLE_SLIDE_MICROSCOPY_IMAGE_STORAGE: '1.2.840.10008.5.1.4.1.1.77.1.6',\n};\n\nconst DicomMicroscopySopClassHandler = {\n  id: 'DicomMicroscopySopClassHandlerPlugin',\n  sopClassUIDs: [SOP_CLASS_UIDS.VL_WHOLE_SLIDE_MICROSCOPY_IMAGE_STORAGE],\n  getDisplaySetFromSeries(series, study, dicomWebClient) {\n    const instance = series.getFirstInstance();\n\n    const metadata = instance.getData().metadata;\n    const {\n      SeriesDescription,\n      SeriesNumber,\n      ContentDate,\n      ContentTime,\n    } = metadata;\n\n    // Note: We are passing the dicomweb client into each viewport!\n\n    return {\n      plugin: 'microscopy',\n      Modality: 'SM',\n      displaySetInstanceUID: utils.guid(),\n      dicomWebClient,\n      SOPInstanceUID: instance.getSOPInstanceUID(),\n      SeriesInstanceUID: series.getSeriesInstanceUID(),\n      StudyInstanceUID: study.getStudyInstanceUID(),\n      SeriesDescription,\n      SeriesDate: ContentDate, // Map ContentDate/Time to SeriesTime for series list sorting.\n      SeriesTime: ContentTime,\n      SeriesNumber,\n      metadata,\n    };\n  },\n};\n\nexport default DicomMicroscopySopClassHandler;\n","import React from 'react';\nimport DicomMicroscopySopClassHandler from './DicomMicroscopySopClassHandler.js';\nimport { version } from '../package.json';\n\nconst Component = React.lazy(() => {\n  return import('./DicomMicroscopyViewport');\n});\n\nexport default {\n  /**\n   * Only required property. Should be a unique value across all extensions.\n   */\n  id: 'microscopy',\n  version,\n\n  getViewportModule({ servicesManager }) {\n    return props => {\n      return (\n        <React.Suspense fallback={<div>Loading...</div>}>\n          <Component {...props} servicesManager={servicesManager} />\n        </React.Suspense>\n      );\n    };\n  },\n  getSopClassHandlerModule() {\n    return DicomMicroscopySopClassHandler;\n  },\n};\n","import { MODULE_TYPES, utils } from '@ohif/core';\n\n// TODO: Should probably use dcmjs for this\nconst SOP_CLASS_UIDS = {\n  ENCAPSULATED_PDF: '1.2.840.10008.5.1.4.1.1.104.1',\n};\n\nconst OHIFDicomPDFSopClassHandler = {\n  id: 'OHIFDicomPDFSopClassHandlerPlugin',\n  type: MODULE_TYPES.SOP_CLASS_HANDLER,\n  sopClassUIDs: [SOP_CLASS_UIDS.ENCAPSULATED_PDF],\n  getDisplaySetFromSeries(series, study, dicomWebClient, authorizationHeaders) {\n    const instance = series.getFirstInstance();\n\n    const metadata = instance.getData().metadata;\n    const {\n      ContentDate,\n      ContentTime,\n      SeriesDescription,\n      SeriesNumber,\n    } = metadata;\n\n    return {\n      plugin: 'pdf',\n      Modality: 'DOC',\n      displaySetInstanceUID: utils.guid(),\n      wadoRoot: study.getData().wadoRoot,\n      wadoUri: instance.getData().wadouri,\n      SOPInstanceUID: instance.getSOPInstanceUID(),\n      SeriesInstanceUID: series.getSeriesInstanceUID(),\n      StudyInstanceUID: study.getStudyInstanceUID(),\n      SeriesDescription,\n      SeriesDate: ContentDate, // Map ContentDate/Time to SeriesTime for series list sorting.\n      SeriesTime: ContentTime,\n      SeriesNumber,\n      metadata,\n      authorizationHeaders: authorizationHeaders,\n    };\n  },\n};\n\nexport default OHIFDicomPDFSopClassHandler;\n","import React from 'react';\nimport OHIFDicomPDFSopClassHandler from './OHIFDicomPDFSopClassHandler.js';\nimport { version } from '../package.json';\n\nconst Component = React.lazy(() => {\n  return import('./ConnectedOHIFDicomPDFViewer');\n});\n\nconst ConnectedOHIFDicomPDFViewer = props => {\n  return (\n    <React.Suspense fallback={<div>Loading...</div>}>\n      <Component {...props} />\n    </React.Suspense>\n  );\n};\n\nexport default {\n  /**\n   * Only required property. Should be a unique value across all extensions.\n   */\n  id: 'pdf',\n  version,\n  getViewportModule() {\n    return ConnectedOHIFDicomPDFViewer;\n  },\n  getSopClassHandlerModule() {\n    return OHIFDicomPDFSopClassHandler;\n  },\n};\n","/**\n * Entry point for development and production PWA builds.\n * Packaged (NPM) builds go through `index-umd.js`\n */\n\nimport 'regenerator-runtime/runtime';\n\nimport App from './App.js';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n// test\n\n/**\n * EXTENSIONS\n * =================\n *\n * Importing and modifying the extensions our app uses HERE allows us to leverage\n * tree shaking and a few other niceties. However, by including them here they become\n * \"baked in\" to the published application.\n *\n * Depending on your use case/needs, you may want to consider not adding any extensions\n * by default HERE, and instead provide them via the extensions configuration key or\n * by using the exported `App` component, and passing in your extensions as props using\n * the defaultExtensions property.\n */\nimport OHIFVTKExtension from '@ohif/extension-vtk';\nimport OHIFDicomHtmlExtension from '@ohif/extension-dicom-html';\nimport OHIFDicomSegmentationExtension from '@ohif/extension-dicom-segmentation';\nimport OHIFDicomRtExtension from '@ohif/extension-dicom-rt';\nimport OHIFDicomMicroscopyExtension from '@ohif/extension-dicom-microscopy';\nimport OHIFDicomPDFExtension from '@ohif/extension-dicom-pdf';\n//import OHIFDicomTagBrowserExtension from '@ohif/extension-dicom-tag-browser';\n// Add this for Debugging purposes:\n//import OHIFDebuggingExtension from '@ohif/extension-debugging';\nimport { version } from '../package.json';\n\n/*\n * Default Settings\n */\nlet config = {};\n\nif (window) {\n  config = window.config || {};\n  window.version = version;\n}\n\nconst appProps = {\n  config,\n  defaultExtensions: [\n    OHIFVTKExtension,\n    OHIFDicomHtmlExtension,\n    OHIFDicomMicroscopyExtension,\n    OHIFDicomPDFExtension,\n    OHIFDicomSegmentationExtension,\n    OHIFDicomRtExtension,\n    //OHIFDebuggingExtension,\n    //OHIFDicomTagBrowserExtension,\n  ],\n};\n\n/** Create App */\nconst app = React.createElement(App, appProps, null);\n\n/** Render */\nReactDOM.render(app, document.getElementById('root'));\n","import MODULE_TYPES from './MODULE_TYPES.js';\nimport log from './../log.js';\n\nexport default class ExtensionManager {\n  constructor({ commandsManager, servicesManager, api, appConfig = {} }) {\n    this.modules = {};\n    this.registeredExtensionIds = [];\n    this.registeredExtensionVesions = {};\n    this.moduleTypeNames = Object.values(MODULE_TYPES);\n    //\n    this._commandsManager = commandsManager;\n    this._servicesManager = servicesManager;\n    this._appConfig = appConfig;\n    this._api = api;\n\n    this.moduleTypeNames.forEach(moduleType => {\n      this.modules[moduleType] = [];\n    });\n  }\n\n  /**\n   * An array of extensions, or an array of arrays that contains extension\n   * configuration pairs.\n   *\n   * @param {Object[]} extensions - Array of extensions\n   */\n  registerExtensions(extensions) {\n    extensions.forEach(extension => {\n      const hasConfiguration = Array.isArray(extension);\n\n      if (hasConfiguration) {\n        const [ohifExtension, configuration] = extension;\n        this.registerExtension(ohifExtension, configuration);\n      } else {\n        this.registerExtension(extension);\n      }\n    });\n  }\n\n  /**\n   *\n   * TODO: Id Management: SopClassHandlers currently refer to viewport module by id; setting the extension id as viewport module id is a workaround for now\n   * @param {Object} extension\n   * @param {Object} configuration\n   */\n  registerExtension(extension, configuration = {}) {\n    if (!extension) {\n      log.warn(\n        'Attempting to register a null/undefined extension. Exiting early.'\n      );\n      return;\n    }\n\n    let extensionId = extension.id;\n    const version = extension.version;\n\n    if (!extensionId) {\n      extensionId = Math.random()\n        .toString(36)\n        .substr(2, 5);\n\n      log.warn(`Extension ID not set. Using random string ID: ${extensionId}`);\n    }\n\n    if (this.registeredExtensionIds.includes(extensionId)) {\n      log.warn(\n        `Extension ID ${extensionId} has already been registered. Exiting before duplicating modules.`\n      );\n      return;\n    }\n\n    // preRegistrationHook\n    if (extension.preRegistration) {\n      extension.preRegistration({\n        servicesManager: this._servicesManager,\n        commandsManager: this._commandsManager,\n        appConfig: this._appConfig,\n        configuration,\n      });\n    }\n\n    // Register Modules\n    this.moduleTypeNames.forEach(moduleType => {\n      const extensionModule = this._getExtensionModule(\n        moduleType,\n        extension,\n        extensionId,\n        configuration\n      );\n\n      if (extensionModule) {\n        this._initSpecialModuleTypes(moduleType, extensionModule);\n\n        this.modules[moduleType].push({\n          extensionId,\n          module: extensionModule,\n        });\n      }\n    });\n\n    // Track extension registration\n    this.registeredExtensionIds.push(extensionId);\n\n    this.registeredExtensionVesions[extensionId] = version;\n  }\n\n  /**\n   * @private\n   * @param {string} moduleType\n   * @param {Object} extension\n   * @param {string} extensionId - Used for logging warnings\n   */\n  _getExtensionModule(moduleType, extension, extensionId, configuration) {\n    const getModuleFnName = 'get' + _capitalizeFirstCharacter(moduleType);\n    const getModuleFn = extension[getModuleFnName];\n\n    if (!getModuleFn) {\n      return;\n    }\n\n    try {\n      const extensionModule = getModuleFn({\n        servicesManager: this._servicesManager,\n        commandsManager: this._commandsManager,\n        appConfig: this._appConfig,\n        configuration,\n        api: this._api,\n        extensionManager: this,\n      });\n\n      if (!extensionModule) {\n        log.warn(\n          `Null or undefined returned when registering the ${getModuleFnName} module for the ${extensionId} extension`\n        );\n      }\n\n      return extensionModule;\n    } catch (ex) {\n      log.error(\n        `Exception thrown while trying to call ${getModuleFnName} for the ${extensionId} extension`\n      );\n    }\n  }\n\n  _initSpecialModuleTypes(moduleType, extensionModule) {\n    switch (moduleType) {\n      case 'commandsModule': {\n        const { definitions, defaultContext } = extensionModule;\n        if (!definitions || Object.keys(definitions).length === 0) {\n          log.warn('Commands Module contains no command definitions');\n          return;\n        }\n        this._initCommandsModule(definitions, defaultContext);\n        break;\n      }\n      default:\n      // code block\n    }\n  }\n\n  /**\n   *\n   * @private\n   * @param {Object[]} commandDefinitions\n   */\n  _initCommandsModule(commandDefinitions, defaultContext = 'VIEWER') {\n    if (!this._commandsManager.getContext(defaultContext)) {\n      this._commandsManager.createContext(defaultContext);\n    }\n\n    Object.keys(commandDefinitions).forEach(commandName => {\n      const commandDefinition = commandDefinitions[commandName];\n      const commandHasContextThatDoesNotExist =\n        commandDefinition.context &&\n        !this._commandsManager.getContext(commandDefinition.context);\n\n      if (commandHasContextThatDoesNotExist) {\n        this._commandsManager.createContext(commandDefinition.context);\n      }\n\n      this._commandsManager.registerCommand(\n        commandDefinition.context || defaultContext,\n        commandName,\n        commandDefinition\n      );\n    });\n  }\n}\n\n/**\n * @private\n * @param {string} lower\n */\nfunction _capitalizeFirstCharacter(lower) {\n  return lower.charAt(0).toUpperCase() + lower.substr(1);\n}\n","import log from './../log.js';\n\nexport default class ServicesManager {\n  constructor() {\n    this.services = {};\n    this.registeredServiceNames = [];\n  }\n\n  /**\n   * Registers a new service.\n   *\n   * @param {Object} service\n   * @param {Object} configuration\n   */\n  registerService(service, configuration = {}) {\n    if (!service) {\n      log.warn(\n        'Attempting to register a null/undefined service. Exiting early.'\n      );\n      return;\n    }\n\n    if (!service.name) {\n      log.warn(`Service name not set. Exiting early.`);\n      return;\n    }\n\n    if (this.registeredServiceNames.includes(service.name)) {\n      log.warn(\n        `Service name ${service.name} has already been registered. Exiting before duplicating services.`\n      );\n      return;\n    }\n\n    if (service.create) {\n      this.services[service.name] = service.create({\n        configuration,\n      });\n    } else {\n      log.warn(`Service create factory function not defined. Exiting early.`);\n      return;\n    }\n\n    /* Track service registration */\n    this.registeredServiceNames.push(service.name);\n  }\n\n  /**\n   * An array of services, or an array of arrays that contains service\n   * configuration pairs.\n   *\n   * @param {Object[]} services - Array of services\n   */\n  registerServices(services) {\n    services.forEach(service => {\n      const hasConfiguration = Array.isArray(service);\n\n      if (hasConfiguration) {\n        const [ohifService, configuration] = service;\n        this.registerService(ohifService, configuration);\n      } else {\n        this.registerService(service);\n      }\n    });\n  }\n}\n","/**\n * A UI Notification\n *\n * @typedef {Object} Notification\n * @property {string} title -\n * @property {string} message -\n * @property {number} [duration=5000] - in ms\n * @property {string} [position=\"bottomRight\"] -\"topLeft\" | \"topCenter | \"topRight\" | \"bottomLeft\" | \"bottomCenter\" | \"bottomRight\"\n * @property {string} [type=\"info\"] - \"info\" | \"error\" | \"warning\" | \"success\"\n * @property {boolean} [autoClose=true]\n * @property {object} [action=null]\n */\n\nconst name = 'UINotificationService';\n\nconst serviceShowRequestQueue = [];\n\nconst publicAPI = {\n  name,\n  hide: _hide,\n  show: _show,\n  setServiceImplementation,\n};\n\nconst serviceImplementation = {\n  _hide: () => console.warn('hide() NOT IMPLEMENTED'),\n  _show: showArguments => {\n    serviceShowRequestQueue.push(showArguments);\n\n    console.warn('show() NOT IMPLEMENTED');\n  },\n};\n\n/**\n * Create and show a new UI notification; returns the\n * ID of the created notification.\n *\n * @param {Notification} notification { title, message, duration, position, type, autoClose, action}\n * @returns {number} id\n */\nfunction _show({\n  title,\n  message,\n  duration = 5000,\n  position = 'bottomRight',\n  type = 'info',\n  autoClose = true,\n  action = null,\n}) {\n  return serviceImplementation._show({\n    title,\n    message,\n    duration,\n    position,\n    type,\n    autoClose,\n    action,\n  });\n}\n\n/**\n * Hides/dismisses the notification, if currently shown\n *\n * @param {number} id - id of the notification to hide/dismiss\n * @returns undefined\n */\nfunction _hide(id) {\n  return serviceImplementation._hide({ id });\n}\n\n/**\n *\n *\n * @param {*} {\n *   hide: hideImplementation,\n *   show: showImplementation,\n * }\n */\nfunction setServiceImplementation({\n  hide: hideImplementation,\n  show: showImplementation,\n}) {\n  if (hideImplementation) {\n    serviceImplementation._hide = hideImplementation;\n  }\n  if (showImplementation) {\n    serviceImplementation._show = showImplementation;\n\n    while (serviceShowRequestQueue.length > 0) {\n      const showArguments = serviceShowRequestQueue.pop();\n      serviceImplementation._show(showArguments);\n    }\n  }\n}\n\nexport default {\n  name,\n  create: ({ configuration = {} }) => {\n    return publicAPI;\n  },\n};\n","/**\n * UI Modal\n *\n * @typedef {Object} ModalProps\n * @property {ReactElement|HTMLElement} [content=null] Modal content.\n * @property {Object} [contentProps=null] Modal content props.\n * @property {boolean} [shouldCloseOnEsc=false] Modal is dismissible via the esc key.\n * @property {boolean} [isOpen=true] Make the Modal visible or hidden.\n * @property {boolean} [closeButton=true] Should the modal body render the close button.\n * @property {string} [title=null] Should the modal render the title independently of the body content.\n * @property {string} [customClassName=null] The custom class to style the modal.\n * @property {boolean} [showScrollbar=false] Show or hide scrollbar.\n * @property {boolean} [noScroll=false] Disable or not the scrollbar.\n */\n\nconst name = 'UIModalService';\n\nconst publicAPI = {\n  name,\n  hide: _hide,\n  show: _show,\n  setServiceImplementation,\n};\n\nconst serviceImplementation = {\n  _hide: () => console.warn('hide() NOT IMPLEMENTED'),\n  _show: () => console.warn('show() NOT IMPLEMENTED'),\n};\n\n/**\n * Show a new UI modal;\n *\n * @param {ModalProps} props { content, contentProps, shouldCloseOnEsc, isOpen, onClose, closeButton, title, customClassName, showScrollbar, noScroll }\n */\nfunction _show({\n  content = null,\n  contentProps = null,\n  shouldCloseOnEsc = false,\n  isOpen = true,\n  onClose = null,\n  closeButton = true,\n  title = null,\n  fullscreen = false,\n  customClassName = null,\n  showScrollbar = false,\n  noScroll = false,\n}) {\n  return serviceImplementation._show({\n    content,\n    contentProps,\n    shouldCloseOnEsc,\n    isOpen,\n    onClose,\n    closeButton,\n    title,\n    fullscreen,\n    customClassName,\n    showScrollbar,\n    noScroll,\n  });\n}\n\n/**\n * Hides/dismisses the modal, if currently shown\n *\n * @returns void\n */\nfunction _hide() {\n  return serviceImplementation._hide();\n}\n\n/**\n *\n *\n * @param {*} {\n *   hide: hideImplementation,\n *   show: showImplementation,\n * }\n */\nfunction setServiceImplementation({\n  hide: hideImplementation,\n  show: showImplementation,\n}) {\n  if (hideImplementation) {\n    serviceImplementation._hide = hideImplementation;\n  }\n  if (showImplementation) {\n    serviceImplementation._show = showImplementation;\n  }\n}\n\nexport default {\n  name,\n  create: ({ configuration = {} }) => {\n    return publicAPI;\n  },\n};\n","/**\n * A UI Element Position\n *\n * @typedef {Object} ElementPosition\n * @property {number} top -\n * @property {number} left -\n * @property {number} right -\n * @property {number} bottom -\n */\n\n/**\n * UI Dialog\n *\n * @typedef {Object} DialogProps\n * @property {string} id The dialog id.\n * @property {ReactElement|HTMLElement} content The dialog content.\n * @property {Object} contentProps The dialog content props.\n * @property {boolean} [isDraggable=true] Controls if dialog content is draggable or not.\n * @property {boolean} [showOverlay=false] Controls dialog overlay.\n * @property {boolean} [centralize=false] Center the dialog on the screen.\n * @property {boolean} [preservePosition=true] Use last position instead of default.\n * @property {ElementPosition} defaultPosition Specifies the `x` and `y` that the dragged item should start at.\n * @property {Function} onStart Called when dragging starts. If `false` is returned any handler, the action will cancel.\n * @property {Function} onStop Called when dragging stops.\n * @property {Function} onDrag Called while dragging.\n */\n\nconst name = 'UIDialogService';\n\nconst publicAPI = {\n  name,\n  dismiss: _dismiss,\n  dismissAll: _dismissAll,\n  create: _create,\n  setServiceImplementation,\n};\n\nconst serviceImplementation = {\n  _dismiss: () => console.warn('dismiss() NOT IMPLEMENTED'),\n  _dismissAll: () => console.warn('dismissAll() NOT IMPLEMENTED'),\n  _create: () => console.warn('create() NOT IMPLEMENTED'),\n};\n\n/**\n * Show a new UI dialog;\n *\n * @param {DialogProps} props { id, content, contentProps, onStart, onDrag, onStop, centralize, isDraggable, showOverlay, preservePosition, defaultPosition }\n */\nfunction _create({\n  id,\n  content,\n  contentProps,\n  onStart,\n  onDrag,\n  onStop,\n  centralize = false,\n  preservePosition = true,\n  isDraggable = true,\n  showOverlay = false,\n  defaultPosition,\n}) {\n  return serviceImplementation._create({\n    id,\n    content,\n    contentProps,\n    onStart,\n    onDrag,\n    onStop,\n    centralize,\n    preservePosition,\n    isDraggable,\n    showOverlay,\n    defaultPosition,\n  });\n}\n\n/**\n * Destroys all dialogs, if any\n *\n * @returns void\n */\nfunction _dismissAll() {\n  return serviceImplementation._dismissAll();\n}\n\n/**\n * Destroy the dialog, if currently created\n *\n * @returns void\n */\nfunction _dismiss({ id }) {\n  return serviceImplementation._dismiss({ id });\n}\n\n/**\n *\n *\n * @param {*} {\n *   dismiss: dismissImplementation,\n *   dismissAll: dismissAllImplementation,\n *   create: createImplementation,\n * }\n */\nfunction setServiceImplementation({\n  dismiss: dismissImplementation,\n  dismissAll: dismissAllImplementation,\n  create: createImplementation,\n}) {\n  if (dismissImplementation) {\n    serviceImplementation._dismiss = dismissImplementation;\n  }\n  if (dismissAllImplementation) {\n    serviceImplementation._dismissAll = dismissAllImplementation;\n  }\n  if (createImplementation) {\n    serviceImplementation._create = createImplementation;\n  }\n}\n\nexport default {\n  name,\n  create: ({ configuration = {} }) => {\n    return publicAPI;\n  },\n};\n","const name = 'LoggerService';\n\nconst publicAPI = {\n  name,\n  info: _info,\n  error: _error,\n  setServiceImplementation,\n};\n\nconst serviceImplementation = {\n  _info: () => console.warn('info() NOT IMPLEMENTED'),\n  _error: () => console.warn('error() NOT IMPLEMENTED'),\n};\n\n/**\n * Logs an info\n *\n * @param {object} props { message, displayOnConsole }\n */\nfunction _info({ message, displayOnConsole }) {\n  return serviceImplementation._info({\n    message,\n    displayOnConsole,\n  });\n}\n\n/**\n * Logs an error\n *\n * @param {object} props { error, stack, message, displayOnConsole }\n * @returns void\n */\nfunction _error({ error, stack, message, displayOnConsole }) {\n  return serviceImplementation._error({\n    error,\n    stack,\n    message,\n    displayOnConsole,\n  });\n}\n\n/**\n *\n *\n * @param {*} {\n *   info: infoImplementation,\n *   error: errorImplementation,\n * }\n */\nfunction setServiceImplementation({\n  info: infoImplementation,\n  error: errorImplementation,\n}) {\n  if (infoImplementation) {\n    serviceImplementation._info = infoImplementation;\n  }\n  if (errorImplementation) {\n    serviceImplementation._error = errorImplementation;\n  }\n}\n\nexport default {\n  name,\n  create: ({ configuration = {} }) => {\n    return publicAPI;\n  },\n};\n","import guid from '../../utils/guid';\n\n/**\n * Consumer must implement:\n * this.listeners = {}\n * this.EVENTS = { \"EVENT_KEY\": \"EVENT_VALUE\" }\n */\nexport default {\n  subscribe,\n  publish,\n  _unsubscribe,\n  _isValidEvent,\n};\n\n/**\n * Subscribe to updates.\n *\n * @param {string} eventName The name of the event\n * @param {Function} callback Events callback\n * @return {Object} Observable object with actions\n */\nfunction subscribe(eventName, callback) {\n  if (this._isValidEvent(eventName)) {\n    const listenerId = guid();\n    const subscription = { id: listenerId, callback };\n\n    console.info(`Subscribing to '${eventName}'.`);\n    if (Array.isArray(this.listeners[eventName])) {\n      this.listeners[eventName].push(subscription);\n    } else {\n      this.listeners[eventName] = [subscription];\n    }\n\n    return {\n      unsubscribe: () => this._unsubscribe(eventName, listenerId),\n    };\n  } else {\n    throw new Error(`Event ${eventName} not supported.`);\n  }\n}\n\n/**\n * Unsubscribe to measurement updates.\n *\n * @param {string} eventName The name of the event\n * @param {string} listenerId The listeners id\n * @return void\n */\nfunction _unsubscribe(eventName, listenerId) {\n  if (!this.listeners[eventName]) {\n    return;\n  }\n\n  const listeners = this.listeners[eventName];\n  if (Array.isArray(listeners)) {\n    this.listeners[eventName] = listeners.filter(({ id }) => id !== listenerId);\n  } else {\n    this.listeners[eventName] = undefined;\n  }\n}\n\n/**\n * Check if a given event is valid.\n *\n * @param {string} eventName The name of the event\n * @return {boolean} Event name validation\n */\nfunction _isValidEvent(eventName) {\n  return Object.values(this.EVENTS).includes(eventName);\n}\n\n/**\n * Broadcasts changes.\n *\n * @param {string} eventName - The event name\n * @param {func} callbackProps - Properties to pass callback\n * @return void\n */\nfunction publish(eventName, callbackProps) {\n  const hasListeners = Object.keys(this.listeners).length > 0;\n  const hasCallbacks = Array.isArray(this.listeners[eventName]);\n\n  if (hasListeners && hasCallbacks) {\n    this.listeners[eventName].forEach(listener => {\n      listener.callback(callbackProps);\n    });\n  }\n}\n","/** Internal imports */\nimport log from '../../log';\nimport guid from '../../utils/guid';\nimport pubSubServiceInterface from '../_shared/pubSubServiceInterface';\n\n/**\n * Measurement source schema\n *\n * @typedef {Object} MeasurementSource\n * @property {number} id -\n * @property {string} name -\n * @property {string} version -\n */\n\n/**\n * Measurement schema\n *\n * @typedef {Object} Measurement\n * @property {number} id -\n * @property {string} SOPInstanceUID -\n * @property {string} FrameOfReferenceUID -\n * @property {string} referenceSeriesUID -\n * @property {string} label -\n * @property {string} description -\n * @property {string} type -\n * @property {string} unit -\n * @property {number} area -\n * @property {Array} points -\n * @property {MeasurementSource} source -\n */\n\n/* Measurement schema keys for object validation. */\nconst MEASUREMENT_SCHEMA_KEYS = [\n  'id',\n  'SOPInstanceUID',\n  'FrameOfReferenceUID',\n  'referenceStudyUID',\n  'referenceSeriesUID',\n  'label',\n  'description',\n  'type',\n  'unit',\n  'area', // TODO: Add concept names instead (descriptor)\n  'mean',\n  'stdDev',\n  'length',\n  'shortestDiameter',\n  'longestDiameter',\n  'text', // NOTE: There is nothing like this in SR.\n  'points',\n  'source',\n];\n\nconst EVENTS = {\n  MEASUREMENT_UPDATED: 'event::measurement_updated',\n  INTERNAL_MEASUREMENT_UPDATED: 'event:internal_measurement_updated',\n  MEASUREMENT_ADDED: 'event::measurement_added',\n  RAW_MEASUREMENT_ADDED: 'event::raw_measurement_added',\n  MEASUREMENT_REMOVED: 'event::measurement_removed',\n  MEASUREMENTS_CLEARED: 'event::measurements_cleared',\n  JUMP_TO_MEASUREMENT: 'event:jump_to_measurement',\n};\n\nconst VALUE_TYPES = {\n  POLYLINE: 'value_type::polyline',\n  POINT: 'value_type::point',\n  BIDIRECTIONAL: 'value_type::shortAxisLongAxis', // TODO -> Discuss with Danny. => just using SCOORD values isn't enough here.\n  ELLIPSE: 'value_type::ellipse',\n  MULTIPOINT: 'value_type::multipoint',\n  CIRCLE: 'value_type::circle',\n};\n\nclass MeasurementService {\n  constructor() {\n    this.sources = {};\n    this.mappings = {};\n    this.measurements = {};\n    this.listeners = {};\n    this._jumpToMeasurementCache = {};\n    Object.defineProperty(this, 'EVENTS', {\n      value: EVENTS,\n      writable: false,\n      enumerable: true,\n      configurable: false,\n    });\n    Object.defineProperty(this, 'VALUE_TYPES', {\n      value: VALUE_TYPES,\n      writable: false,\n      enumerable: true,\n      configurable: false,\n    });\n\n    Object.assign(this, pubSubServiceInterface);\n  }\n\n  /**\n   * Get all measurements.\n   *\n   * @return {Measurement[]} Array of measurements\n   */\n  getMeasurements() {\n    const measurements = this._arrayOfObjects(this.measurements);\n    return (\n      measurements &&\n      measurements.map(m => this.measurements[Object.keys(m)[0]])\n    );\n  }\n\n  /**\n   * Get specific measurement by its id.\n   *\n   * @param {string} id Id of the measurement\n   * @return {Measurement} Measurement instance\n   */\n  getMeasurement(id) {\n    let measurement = null;\n    const measurements = this.measurements[id];\n\n    if (measurements && Object.keys(measurements).length > 0) {\n      measurement = this.measurements[id];\n    }\n\n    return measurement;\n  }\n\n  /**\n   * Create a new source.\n   *\n   * @param {string} name Name of the source\n   * @param {string} version Source name\n   * @return {MeasurementSource} Measurement source instance\n   */\n  createSource(name, version) {\n    if (!name) {\n      throw new Error('Source name not provided.');\n    }\n\n    if (!version) {\n      throw new Error('Source version not provided.');\n    }\n\n    const id = guid();\n    const source = {\n      id,\n      name,\n      version,\n    };\n    source.addOrUpdate = (definition, measurement) => {\n      return this.addOrUpdate(source, definition, measurement);\n    };\n    source.remove = id => {\n      return this.remove(id, source);\n    };\n    source.getAnnotation = (definition, measurementId) => {\n      return this.getAnnotation(source, definition, measurementId);\n    };\n\n    log.info(`New '${name}@${version}' source added.`);\n    this.sources[id] = source;\n\n    return source;\n  }\n\n  getSource(name, version) {\n    const { sources } = this;\n    const id = this._getSourceId(name, version);\n\n    return sources[id];\n  }\n\n  getSourceMappings(name, version) {\n    const { mappings } = this;\n    const id = this._getSourceId(name, version);\n\n    return mappings[id];\n  }\n\n  _getSourceId(name, version) {\n    const { sources } = this;\n\n    const sourceId = Object.keys(sources).find(sourceId => {\n      const source = sources[sourceId];\n\n      return source.name === name && source.version === version;\n    });\n\n    return sourceId;\n  }\n\n  /**\n   * Add a new measurement matching criteria along with mapping functions.\n   *\n   * @param {MeasurementSource} source Measurement source instance\n   * @param {string} definition Definition of the measurement (Annotation Type)\n   * @param {MatchingCriteria} matchingCriteria The matching criteria\n   * @param {Function} toSourceSchema Mapping function to source schema\n   * @param {Function} toMeasurementSchema Mapping function to measurement schema\n   * @return void\n   */\n  addMapping(\n    source,\n    definition,\n    matchingCriteria,\n    toSourceSchema,\n    toMeasurementSchema\n  ) {\n    if (!this._isValidSource(source)) {\n      throw new Error('Invalid source.');\n    }\n\n    if (!matchingCriteria) {\n      throw new Error('Matching criteria not provided.');\n    }\n\n    if (!definition) {\n      throw new Error('Definition not provided.');\n    }\n\n    if (!toSourceSchema) {\n      throw new Error('Mapping function to source schema not provided.');\n    }\n\n    if (!toMeasurementSchema) {\n      throw new Error('Measurement mapping function not provided.');\n    }\n\n    const mapping = {\n      matchingCriteria,\n      definition,\n      toSourceSchema,\n      toMeasurementSchema,\n    };\n\n    if (Array.isArray(this.mappings[source.id])) {\n      this.mappings[source.id].push(mapping);\n    } else {\n      this.mappings[source.id] = [mapping];\n    }\n\n    log.info(\n      `New measurement mapping added to source '${this._getSourceInfo(\n        source\n      )}'.`\n    );\n  }\n\n  /**\n   * Get annotation for specific source.\n   *\n   * @param {MeasurementSource} source Measurement source instance\n   * @param {string} definition The source definition\n   * @param {string} measurementId The measurement service measurement id\n   * @return {Object} Source measurement schema\n   */\n  getAnnotation(source, definition, measurementId) {\n    if (!this._isValidSource(source)) {\n      log.warn('Invalid source. Exiting early.');\n      return;\n    }\n\n    if (!definition) {\n      log.warn('No source definition provided. Exiting early.');\n      return;\n    }\n\n    const mapping = this._getMappingByMeasurementSource(\n      measurementId,\n      definition\n    );\n    const measurement = this.getMeasurement(measurementId);\n    if (mapping) return mapping.toSourceSchema(measurement, definition);\n\n    const matchingMapping = this._getMatchingMapping(\n      source,\n      definition,\n      measurement\n    );\n\n    if (matchingMapping) {\n      log.info('Matching mapping found:', matchingMapping);\n      const { toSourceSchema, definition } = matchingMapping;\n      return toSourceSchema(measurement, definition);\n    }\n  }\n\n  update(id, measurement, notYetUpdatedAtSource = false) {\n    if (this.measurements[id]) {\n      const updatedMeasurement = {\n        ...measurement,\n        modifiedTimestamp: Math.floor(Date.now() / 1000),\n      };\n\n      log.info(\n        `Updating internal measurement representation...`,\n        updatedMeasurement\n      );\n\n      this.measurements[id] = updatedMeasurement;\n\n      this.publish(\n        // Add an internal flag to say the measurement has not yet been updated at source.\n        this.EVENTS.MEASUREMENT_UPDATED,\n        {\n          source: measurement.source,\n          measurement: updatedMeasurement,\n          notYetUpdatedAtSource,\n        }\n      );\n\n      return updatedMeasurement.id;\n    }\n  }\n\n  /**\n   * Add a raw measurement into a source so that it may be\n   * Converted to/from annotation in the same way. E.g. import serialized data\n   * Of the same form as the measurement source.\n   * @param {MeasurementSource} source The measurement source instance.\n   * @param {string} definition The source definition you want to add the measurement to.\n   * @param {object} data The data you wish to add to the source.\n   * @param {function} toMeasurementSchema A function to get the `data` into the same shape as the source definition.\n   */\n  addRawMeasurement(\n    source,\n    definition,\n    data,\n    toMeasurementSchema,\n    dataSource = {}\n  ) {\n    if (!this._isValidSource(source)) {\n      log.warn('Invalid source. Exiting early.');\n      return;\n    }\n\n    const sourceInfo = this._getSourceInfo(source);\n\n    if (!definition) {\n      log.warn('No source definition provided. Exiting early.');\n      return;\n    }\n\n    if (!this._sourceHasMappings(source)) {\n      log.warn(\n        `No measurement mappings found for '${sourceInfo}' source. Exiting early.`\n      );\n      return;\n    }\n\n    let measurement = {};\n    try {\n      /* Convert measurement */\n      measurement = toMeasurementSchema(data);\n      /* Assign measurement source instance */\n      measurement.source = source;\n    } catch (error) {\n      log.warn(\n        `Failed to map '${sourceInfo}' measurement for definition ${definition}:`,\n        error.message\n      );\n      return;\n    }\n\n    if (!this._isValidMeasurement(measurement)) {\n      log.warn(\n        `Attempting to add or update a invalid measurement provided by '${sourceInfo}'. Exiting early.`\n      );\n      return;\n    }\n\n    let internalId = data.id;\n    if (!internalId) {\n      internalId = guid();\n      log.warn(`Measurement ID not found. Generating UID: ${internalId}`);\n    }\n\n    const newMeasurement = {\n      ...measurement,\n      modifiedTimestamp: Math.floor(Date.now() / 1000),\n      id: internalId,\n    };\n\n    if (this.measurements[internalId]) {\n      log.info(\n        `Measurement already defined. Updating measurement.`,\n        newMeasurement\n      );\n      this.measurements[internalId] = newMeasurement;\n      this.publish(this.EVENTS.MEASUREMENT_UPDATED, {\n        source,\n        measurement: newMeasurement,\n      });\n    } else {\n      log.info(`Measurement added.`, newMeasurement);\n      this.measurements[internalId] = newMeasurement;\n      this.publish(this.EVENTS.RAW_MEASUREMENT_ADDED, {\n        source,\n        measurement: newMeasurement,\n        data,\n        dataSource,\n      });\n    }\n\n    return newMeasurement.id;\n  }\n\n  /**\n   * Adds or update persisted measurements.\n   *\n   * @param {MeasurementSource} source The measurement source instance\n   * @param {string} definition The source definition\n   * @param {Measurement} measurement The source measurement\n   * @return {string} A measurement id\n   */\n  addOrUpdate(source, definition, sourceMeasurement) {\n    if (!this._isValidSource(source)) {\n      throw new Error('Invalid source.');\n    }\n\n    if (!definition) {\n      throw new Error('No source definition provided.');\n    }\n\n    if (definition == 'stack' || definition == 'stackPrefetch') {\n      return;\n    }\n\n    const sourceInfo = this._getSourceInfo(source);\n\n    if (!this._sourceHasMappings(source)) {\n      throw new Error(\n        `No measurement mappings found for '${sourceInfo}' source. Exiting early.`\n      );\n    }\n\n    let measurement = {};\n    try {\n      const sourceMappings = this.mappings[source.id];\n      const { toMeasurementSchema } = sourceMappings.find(\n        mapping => mapping.definition === definition\n      );\n\n      /* Convert measurement */\n      measurement = toMeasurementSchema(sourceMeasurement);\n\n      /* Assign measurement source instance */\n      measurement.source = source;\n    } catch (error) {\n      throw new Error(\n        `Failed to map '${sourceInfo}' measurement for definition ${definition}:`,\n        error.message\n      );\n    }\n\n    if (!this._isValidMeasurement(measurement)) {\n      throw new Error(\n        `Attempting to add or update a invalid measurement provided by '${sourceInfo}'. Exiting early.`\n      );\n    }\n\n    let internalId = sourceMeasurement.id;\n    if (!internalId) {\n      internalId = guid();\n      log.info(`Measurement ID not found. Generating UID: ${internalId}`);\n    }\n\n    const newMeasurement = {\n      ...measurement,\n      modifiedTimestamp: Math.floor(Date.now() / 1000),\n      id: internalId,\n    };\n\n    if (this.measurements[internalId]) {\n      log.info(\n        `Measurement already defined. Updating measurement.`,\n        newMeasurement\n      );\n      this.measurements[internalId] = newMeasurement;\n      this.publish(this.EVENTS.MEASUREMENT_UPDATED, {\n        source,\n        measurement: newMeasurement,\n        notYetUpdatedAtSource: false,\n      });\n    } else {\n      log.info('Measurement added.', newMeasurement);\n      this.measurements[internalId] = newMeasurement;\n      this.publish(this.EVENTS.MEASUREMENT_ADDED, {\n        source,\n        measurement: newMeasurement,\n      });\n    }\n\n    return newMeasurement.id;\n  }\n\n  /**\n   * Removes a measurement and broadcasts the removed event.\n   *\n   * @param {string} id The measurement id\n   * @param {MeasurementSource} source The measurement source instance\n   * @return {string} The removed measurement id\n   */\n  remove(id, source) {\n    if (!id || !this.measurements[id]) {\n      log.warn(`No id provided, or unable to find measurement by id.`);\n      return;\n    }\n\n    delete this.measurements[id];\n    this.publish(this.EVENTS.MEASUREMENT_REMOVED, {\n      source,\n      measurement: id, // This is weird :shrug:\n    });\n  }\n\n  clearMeasurements() {\n    this.measurements = {};\n    this._jumpToMeasurementCache = {};\n    this.publish(this.EVENTS.MEASUREMENTS_CLEARED);\n  }\n\n  jumpToMeasurement(viewportIndex, id) {\n    const measurement = this.measurements[id];\n\n    if (!measurement) {\n      log.warn(`No id provided, or unable to find measurement by id.`);\n      return;\n    }\n\n    this._addJumpToMeasurement(viewportIndex, id);\n\n    const eventName = this.EVENTS.JUMP_TO_MEASUREMENT;\n\n    const hasListeners = Object.keys(this.listeners).length > 0;\n    const hasCallbacks = Array.isArray(this.listeners[eventName]);\n\n    if (hasListeners && hasCallbacks) {\n      this.listeners[eventName].forEach(listener => {\n        listener.callback({ viewportIndex, measurement });\n      });\n    }\n  }\n\n  _addJumpToMeasurement(viewportIndex, id) {\n    this._jumpToMeasurementCache[viewportIndex] = id;\n  }\n\n  getJumpToMeasurement(viewportIndex) {\n    return this._jumpToMeasurementCache[viewportIndex];\n  }\n\n  removeJumpToMeasurement(viewportIndex) {\n    delete this._jumpToMeasurementCache[viewportIndex];\n  }\n\n  _getMappingByMeasurementSource(measurementId, definition) {\n    const measurement = this.getMeasurement(measurementId);\n    if (this._isValidSource(measurement.source)) {\n      return this.mappings[measurement.source.id].find(\n        m => m.definition === definition\n      );\n    }\n  }\n\n  /**\n   * Clear all measurements and broadcasts cleared event.\n   */\n  clear() {\n    this.measurements = {};\n    this.publish(this.EVENTS.MEASUREMENTS_CLEARED);\n  }\n\n  /**\n   * Get measurement mapping function if matching criteria.\n   *\n   * @param {MeasurementSource} source Measurement source instance\n   * @param {string} definition The source definition\n   * @param {Measurement} measurement The measurement service measurement\n   * @return {Object} The mapping based on matched criteria\n   */\n  _getMatchingMapping(source, definition, measurement) {\n    const sourceMappings = this.mappings[source.id];\n\n    const sourceMappingsByDefinition = sourceMappings.filter(\n      mapping => mapping.definition === definition\n    );\n\n    /* Criteria Matching */\n    return sourceMappingsByDefinition.find(({ matchingCriteria }) => {\n      if (matchingCriteria.type !== measurement.type) {\n        return false;\n      }\n\n      if (\n        matchingCriteria.properties &&\n        matchingCriteria.properties.every(name =>\n          measurement.hasOwnProperty(name)\n        )\n      ) {\n        return true;\n      }\n\n      if (\n        measurement.points &&\n        measurement.points.length === matchingCriteria.points\n      ) {\n        return true;\n      }\n\n      return false;\n    });\n  }\n\n  /**\n   * Returns formatted string with source info.\n   *\n   * @param {MeasurementSource} source Measurement source\n   * @return {string} Source information\n   */\n  _getSourceInfo(source) {\n    return `${source.name}@${source.version}`;\n  }\n\n  /**\n   * Checks if given source is valid.\n   *\n   * @param {MeasurementSource} source Measurement source\n   * @return {boolean} Measurement source validation\n   */\n  _isValidSource(source) {\n    return source && this.sources[source.id];\n  }\n\n  /**\n   * Checks if a given source has mappings.\n   *\n   * @param {MeasurementSource} source The measurement source\n   * @return {boolean} Validation if source has mappings\n   */\n  _sourceHasMappings(source) {\n    return (\n      Array.isArray(this.mappings[source.id]) && this.mappings[source.id].length\n    );\n  }\n\n  /**\n   * Check if a given measurement data is valid.\n   *\n   * @param {Measurement} measurementData Measurement data\n   * @return {boolean} Measurement validation\n   */\n  _isValidMeasurement(measurementData) {\n    Object.keys(measurementData).forEach(key => {\n      if (!MEASUREMENT_SCHEMA_KEYS.includes(key)) {\n        log.warn(`Invalid measurement key: ${key}`);\n        return false;\n      }\n    });\n\n    return true;\n  }\n\n  /**\n   * Check if a given measurement service event is valid.\n   *\n   * @param {string} eventName The name of the event\n   * @return {boolean} Event name validation\n  //  */\n  // _isValidEvent(eventName) {\n  //   return Object.values(this.EVENTS).includes(eventName);\n  // }\n\n  /**\n   * Converts object of objects to array.\n   *\n   * @return {Array} Array of objects\n   */\n  _arrayOfObjects = obj => {\n    return Object.entries(obj).map(e => ({ [e[0]]: e[1] }));\n  };\n}\n\nexport default MeasurementService;\nexport { EVENTS, VALUE_TYPES };\n","import MeasurementService from './MeasurementService';\n\nexport default {\n  name: 'MeasurementService',\n  create: ({ configuration = {} }) => {\n    return new MeasurementService();\n  },\n};\n"],"sourceRoot":""}